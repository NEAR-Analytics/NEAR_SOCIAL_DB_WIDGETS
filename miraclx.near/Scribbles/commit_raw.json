{"tx_hash": "3D3eAFAAZpTMBGdyxK7ULqfBCagX9fG86URoYnD8cXZW", "action_id_social": "F3yn5iTMaEdZ1NJweBFUogeCJ5779uXAJcmFNvm6aQWE-0-widget", "block_id": 80965355, "block_timestamp": "2022-12-19 00:28:22.880", "signer_id": "miraclx.near", "widget_name": "Scribbles", "source_code": "const scope = props.scope ?? context.scope;\n\nState.init({\n  path: \"**\",\n  pathModTime: Date.now(),\n  isTreeView: true,\n  newQuery: !true,\n  trie: {},\n  rawData: {},\n});\n\nfunction switchTab(newView) {\n  if (!state.isTreeView && newView == \"tree\") {\n    State.update({ isTreeView: true });\n  } else if (state.isTreeView && newView == \"raw\") {\n    State.update({ isTreeView: false });\n  }\n}\n\nfunction handleQuery(path) {\n  State.update({ path, newQuery: true });\n  if (state.isTreeView) {\n    Social.keys(state.path, \"final\");\n  } else {\n    // Social.keys(state.path, \"final\");\n  }\n  // console.log(state.path);\n  // // while (!(keys && Object.keys(keys).length)) {\n  // //   console.log(keys);\n  // // }\n  // console.log(keys);\n  // State.update({ loading: false });\n  // return true;\n}\n\nfunction treeView() {\n  console.log(\"new tree\");\n  if (state.newQuery) {\n    State.update({ newQuery: false });\n  }\n  return (\n    <>\n      {state.path}\n\n      {state.isTreeView}\n    </>\n  );\n}\n\nfunction rawView() {\n  console.log(\"new raw\");\n  if (state.newQuery) {\n    State.update({ newQuery: false });\n  }\n  let text = \"Hellur World\";\n  return (\n    <>\n      <Markdown\n        text={`\\`\\`\\`json\n${text}\n\\`\\`\\``}\n      />\n    </>\n  );\n}\n\nlet Styles = styled.span``;\n\nfunction after(cond, els) {\n  if (cond) return els();\n  return (\n    <div class=\"d-flex justify-content-center\">\n      <div class=\"spinner-border\" role=\"status\"></div>\n    </div>\n  );\n}\n\nreturn (\n  <>\n    <div class=\"input-group\">\n      <input\n        type=\"text\"\n        value={state.path}\n        onChange={(e) => {\n          handleQuery(e.target.value);\n        }}\n      />\n      <button class=\"btn btn-outline-secondary\" title=\"Copy Permalink\">\n        \ud83d\udd17\n      </button>\n    </div>\n\n    <hr />\n\n    {after(!state.newQuery, () => (\n      <>\n        <ul\n          class=\"nav nav-tabs justify-content-center\"\n          id=\"myTab\"\n          role=\"tablist\"\n        >\n          <li class=\"nav-item\" role=\"presentation\">\n            <button\n              class=\"nav-link text-dark active\"\n              id=\"tree-tab\"\n              data-bs-toggle=\"tab\"\n              data-bs-target=\"#tree\"\n              type=\"button\"\n              role=\"tab\"\n              aria-controls=\"tree\"\n              aria-selected={state.isTreeView}\n              onClick={() => switchTab(\"tree\")}\n            >\n              Tree\n            </button>\n          </li>\n          <li class=\"nav-item\" role=\"presentation\">\n            <button\n              class=\"nav-link text-dark\"\n              id=\"raw-tab\"\n              data-bs-toggle=\"tab\"\n              data-bs-target=\"#raw\"\n              type=\"button\"\n              role=\"tab\"\n              aria-controls=\"raw\"\n              aria-selected={!state.isTreeView}\n              onClick={() => switchTab(\"raw\")}\n            >\n              Raw\n            </button>\n          </li>\n        </ul>\n        <div class=\"tab-content\" id=\"myTabContent\">\n          <div\n            class=\"tab-pane fade show active\"\n            id=\"tree\"\n            role=\"tabpanel\"\n            aria-labelledby=\"tree-tab\"\n          >\n            {state.isTreeView ? treeView() : <></>}\n          </div>\n          <div\n            class=\"tab-pane fade\"\n            id=\"raw\"\n            role=\"tabpanel\"\n            aria-labelledby=\"raw-tab\"\n          >\n            {!state.isTreeView ? rawView() : <></>}\n          </div>\n        </div>\n      </>\n    ))}\n  </>\n);\n\n// {state.loading ? (\n//   <div class=\"d-flex justify-content-center\">\n//     <div class=\"spinner-border\" role=\"status\"></div>\n//   </div>\n// ) : }\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/miraclx.near/widget/Scribbles"}