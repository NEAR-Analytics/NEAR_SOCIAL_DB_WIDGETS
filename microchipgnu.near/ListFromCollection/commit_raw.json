{"tx_hash": "DzJv2kKom4HWyJTowpZXEmHiYGKLzw5H6uWgK9qKCQie", "action_id_social": "BLcm4qUKW4yARumaryTvcRoStLWmznvuj3xVTEQj6TnN-0-widget", "block_id": 85232823, "block_timestamp": "2023-02-14 19:30:02.725", "signer_id": "microchipgnu.near", "widget_name": "ListFromCollection", "source_code": "const accountId = context?.accountId;\nconst marketAddress = \"simple.market.mintbase1.near\";\n\nconst LISTING_DEPOSIT_IN_NEAR_PER_TOKEN = 10000000000000000000000;\nconst size = \"5em\";\n\nState.init({\n  tokens: {},\n  price: 0,\n});\n\nconst _data = fetch(\"https://graph.mintbase.xyz\", {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"omni-site\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n        query MyQuery ($accountId: String){\n            mb_views_nft_owned_tokens(limit: 100, where: {listing_kind: {_is_null: true}, owner: {_eq: $accountId}}) {\n                token_id\n                nft_contract_id\n            }\n        }\n`,\n    variables: {\n      accountId: accountId,\n    },\n  }),\n});\n\nconst data = _data.body.data.mb_views_nft_owned_tokens;\n\nconst addToListCart = (token_id, nft_contract_id) => {\n  const key = `${token_id}::${nft_contract_id}`;\n\n  const _tokens = {\n    ...state.tokens,\n    [key]: {\n      tokenId: token_id,\n      nftContractId: nft_contract_id,\n    },\n  };\n\n  State.update({\n    tokens: _tokens,\n  });\n};\n\nconst removeFromCart = (token_id, nft_contract_id) => {\n  const key = `${token_id}::${nft_contract_id}`;\n\n  delete state.tokens[key];\n\n  State.update({\n    tokens: state.tokens,\n  });\n};\n\nconst numTokensSelected = Object.keys(state.tokens).length;\n\nconst YoctoToNear = (amountYocto) =>\n  new Big(amountYocto).div(new Big(10).pow(24)).toString();\n\nconst listMarket = () => {\n  const gas = 200000000000000;\n\n  const storageDeposit = new Big(\n    LISTING_DEPOSIT_IN_NEAR_PER_TOKEN * numTokensSelected\n  ).toFixed(0);\n\n  const _price = Number(\n    Number(new Big(state.price).mul(new Big(10).pow(24)).toString())\n  )\n    .toLocaleString()\n    .replace(/,/g, \"\");\n\n  const approvals = Object.values(state.tokens).map((token) => {\n    return {\n      methodName: \"nft_approve\",\n      contractName: token.nftContractId,\n      gas: gas,\n      args: {\n        token_id: token.tokenId,\n        account_id: marketAddress,\n        msg: JSON.stringify({\n          price: _price,\n        }),\n      },\n      deposit: 800000000000000000000,\n    };\n  });\n\n  Near.call([\n    {\n      contractName: marketAddress,\n      methodName: \"deposit_storage\",\n      args: {},\n      gas: gas,\n      deposit: storageDeposit,\n    },\n    ...approvals,\n  ]);\n};\n\nreturn (\n  <div class=\"d-flex flex-column gap-2\">\n    <h4>Multi-listing tool</h4>\n\n    <div class=\"w-100\">\n      <div>\n        <p>Selected {numTokensSelected} tokens</p>\n        <p>Price: {state.price}N</p>\n      </div>\n      <div class=\"d-flex gap-2\">\n        <input type=\"text\" value={state.price}></input>\n        <button\n          onClick={() => {\n            listMarket();\n          }}\n        >\n          List\n        </button>\n      </div>\n    </div>\n    {data.map(({ token_id, nft_contract_id }) => {\n      const key = `${token_id}::${nft_contract_id}`;\n      const addedToken = !!state.tokens[key];\n\n      return (\n        <button\n          class={`p-2 ${\n            addedToken ? \"bg-primary\" : \"bg-black\"\n          } text-white d-flex gap-2 rounded`}\n          key={key}\n          onClick={() => {\n            if (!addedToken) {\n              addToListCart(token_id, nft_contract_id);\n            } else {\n              removeFromCart(token_id, nft_contract_id);\n            }\n          }}\n        >\n          <Widget\n            src=\"mob.near/widget/NftImage\"\n            props={{\n              nft: {\n                tokenId: token_id,\n                contractId: nft_contract_id,\n              },\n              style: {\n                width: size,\n                height: size,\n                objectFit: \"cover\",\n                minWidth: size,\n                minHeight: size,\n                maxWidth: size,\n                maxHeight: size,\n                overflowWrap: \"break-word\",\n              },\n              thumbnail: \"thumbnail\",\n              className: \"\",\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n            }}\n          />\n          <div>\n            <p>{token_id}</p>\n            <p>{nft_contract_id}</p>\n          </div>\n        </button>\n      );\n    })}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/microchipgnu.near/widget/ListFromCollection"}