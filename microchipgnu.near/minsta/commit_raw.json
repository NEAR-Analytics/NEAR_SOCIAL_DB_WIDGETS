{"tx_hash": "F9BQqVy1LuYdtzgxxBYncWS4oF7y2MpgjSQHJCF88Mbx", "action_id_social": "NzyY3L3bwCJG2jMHUntcW1qLsA4VJSfVmbiKNLPCvJQ-0-widget", "block_id": 87421758, "block_timestamp": "2023-03-16 11:58:35.695", "signer_id": "microchipgnu.near", "widget_name": "minsta", "source_code": "const accountId = context?.accountId;\n\nconst proxyMinter = \"proxy2.minsta.near\";\nconst nftContractId = \"minsta.mintbase1.near\";\nconst mbGraphEndpoint = \"https://graph.mintbase.xyz\";\n\nconst ipfsUrl = (cid) => `https://ipfs.near.social/ipfs/${cid}`;\n\nlet posts = [];\n\nconst data = fetch(mbGraphEndpoint, {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"omni-site\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n  query FetchFeedMintedThings {\n  nft_activities(where: {kind: {_eq: \"mint\"}, nft_contract_id: {_eq: \"minsta.mintbase1.near\"}}, limit: 10, order_by: {timestamp: desc}) {\n      nft_contract_id\n      action_receiver\n      token_id\n      memo\n      timestamp\n    }\n  }\n`,\n  }),\n});\n\nconst handleImageUpload = (files) => {\n  if (files?.length > 0) {\n    State.update({\n      img: {\n        uploading: true,\n        cid: null,\n      },\n    });\n    const body = files[0];\n    asyncFetch(\"https://ipfs.near.social/add\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body,\n    }).then((res) => {\n      const cid = res.body.cid;\n\n      State.update({\n        img: {\n          cid,\n        },\n      });\n\n      handleMint(cid);\n    });\n  } else {\n    State.update({\n      img: null,\n    });\n  }\n};\n\nconst handleMint = (cid) => {\n  const gas = 200000000000000;\n  const deposit = 0;\n\n  Near.call([\n    {\n      contractName: proxyMinter,\n      methodName: \"mint\",\n      args: {\n        owner_id: accountId,\n        metadata: {\n          media: ipfsUrl(cid),\n        },\n        num_to_mint: 1,\n        royalty_args: {\n          split_between: {\n            [accountId]: 10000,\n          },\n          percentage: 1000,\n        },\n        split_owners: null,\n        nft_contract_id: nftContractId,\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\n\nif (data?.body?.data?.nft_activities) {\n  posts = data?.body?.data?.nft_activities;\n}\n\nconst size = \"8em\";\n\nreturn (\n  <div class=\"text-black p-2 container-fluid d-flex flex-column w-100 text-center justify-content-center align-items-center\">\n    <div class=\"flex justify-content-between\">\n      <div>\n        <a\n          href={`https://shard.dog/go?url=https://near.social/#${context.widgetSrc}`}\n        >\n          Create account\n        </a>\n      </div>\n      <div class=\"flex gap-8\">\n        <a\n          href=\"https://blog.mintbase.xyz/ethdenver-photo-book-mints-on-near-social-minsta-and-mintbase-baec3f49bd4c\"\n          target=\"_blank\"\n        >\n          Learn more\n        </a>\n        |\n        <a href=\"https://ethdenver2023.minsta.me/\" target=\"_blank\">\n          Minsta\n        </a>\n        |\n        <a href=\"https://ethdenver2023.minsta.me/leaderboard\" target=\"_blank\">\n          Leaderboard\n        </a>\n      </div>\n    </div>\n\n    <div class=\"container-fluid text-center d-flex flex-column justify-content-center align-items-center\">\n      <Files\n        multiple={false}\n        accepts={[\"image/*\"]}\n        minFileSize={1}\n        clickable\n        onChange={handleImageUpload}\n        style={{\n          cursor: \"pointer\",\n        }}\n        class=\"text-center d-flex justify-content-center align-items-center\"\n      >\n        <div class=\"d-flex m-4 px-4 py-3 rounded bg-black text-white justify-content-center align-items-center\">\n          {state.img?.uploading ? (\n            <>...</>\n          ) : state.img?.cid ? (\n            \"Replace\"\n          ) : (\n            \"Take photo\"\n          )}\n        </div>\n      </Files>\n      <div class=\"d-flex flex-column gap-2\">\n        {posts.map((post) => {\n          const memo = JSON.parse(post.memo);\n          const split_between = memo.royalty.split_between;\n          const sender = Object.keys(split_between)[0];\n\n          return (\n            <div>\n              <Widget\n                src=\"mob.near/widget/ProfileLine\"\n                props={{\n                  accountId: sender,\n                  hideName: true,\n                  hideAccountId: true,\n                  tooltip: true,\n                }}\n              />\n              <span role=\"img\" aria-label=\"poked\" title=\"poked\">\n                \ud83d\udcf8\n              </span>\n              <a\n                href={`https://mintbase.xyz/contract/${post.nft_contract_id}/token/${post.token_id}`}\n              >\n                <Widget\n                  src=\"mob.near/widget/NftImage\"\n                  props={{\n                    nft: {\n                      tokenId: post.token_id,\n                      contractId: post.nft_contract_id,\n                    },\n                    style: {\n                      width: size,\n                      height: size,\n                      objectFit: \"cover\",\n                      minWidth: size,\n                      minHeight: size,\n                      maxWidth: size,\n                      maxHeight: size,\n                      overflowWrap: \"break-word\",\n                    },\n                    thumbnail: \"thumbnail\",\n                    className: \"\",\n                    fallbackUrl:\n                      \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n                  }}\n                />\n              </a>\n              <span role=\"img\" aria-label=\"poked\" title=\"poked\">\n                \u27a1\ufe0f\n              </span>\n              <Widget\n                src=\"mob.near/widget/ProfileLine\"\n                props={{\n                  accountId: post.action_receiver,\n                  hideName: true,\n                  hideAccountId: true,\n                  tooltip: true,\n                }}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/microchipgnu.near/widget/minsta", "metadata.image.ipfs_cid": NaN}