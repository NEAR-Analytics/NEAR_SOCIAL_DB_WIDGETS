{"tx_hash": "3rkPGb2VDdXeMrHthFEEAb4EonVDWBerx9vWp85o1eGj", "action_id_social": "3PD4jiT4geT6jGXswrLuyHrDo4ah4FGfaCQ89Byi5ssj-0-widget", "block_id": 91694935, "block_timestamp": "2023-05-12T16:20:00.937Z", "signer_id": "microchipgnu.near", "widget_name": "AccountAvailability", "source_code": "const accountId = params.accountId || \"near\";\n\nState.init({ isAvailable: false, isLoading: true });\n\nfunction checkAccountAvailability() {\n  asyncFetch(\"https://rpc.mainnet.near.org/\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: accountId,\n      },\n    }),\n  }).then((res) => {\n    if (res.body.error) {\n      State.update({ isAvailable: true, isLoading: false });\n    } else {\n      State.update({ isAvailable: false, isLoading: false });\n    }\n  });\n}\n\nconst AccountContainer = () => {\n  return (\n    <div class=\"d-flex flex-row gap-2\">\n      <div>{accountId}</div>\n      <div>\n        {state.isLoading ? (\n          <div>Loading...</div>\n        ) : state.isAvailable ? (\n          <div class=\"text-success\">Available</div>\n        ) : (\n          <div class=\"text-danger\">Not Available</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ncheckAccountAvailability();\n\nreturn <AccountContainer />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/microchipgnu.near/widget/AccountAvailability", "__row_index": 1}