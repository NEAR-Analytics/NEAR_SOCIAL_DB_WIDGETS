{"tx_hash": "FjhuKT1A5hcHwHUFN6esRkSjxGM95nzLcjGESgUcEgUM", "action_id_social": "HgNvKPj1tBCKXzWdLHXyzbs3Xmvw2LkJi2Dg33DHAU72-0-widget", "block_id": 84288824, "block_timestamp": "2023-02-01 15:45:01.569", "signer_id": "ciocan.near", "widget_name": "burrow-deposit", "source_code": "let BURROW_CONTRACT = \"contract.main.burrow.near\";\nlet accountId = context.accountId;\n\nconst { selectedTokenId, amount, hasError, assets, rewards } = state;\n\nconst hasData = assets.length > 0 && rewards.length > 0;\n\nconst onLoad = (data) => {\n  State.update(data);\n};\n\nconst shrinkToken = (value, decimals) => {\n  return new Big(value).div(new Big(10).pow(decimals));\n};\n\nconst expandToken = (value, decimals) => {\n  return new Big(value).mul(new Big(10).pow(decimals));\n};\n\nconst formatToken = (v) => Math.floor(v * 10_000) / 10_000;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\n\nconsole.log(\"INIT...\", state);\n\nconst account = fetch(\"https://rpc.mainnet.near.org\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    jsonrpc: \"2.0\",\n    id: \"dontcare\",\n    method: \"query\",\n    params: {\n      request_type: \"view_account\",\n      finality: \"final\",\n      account_id: accountId,\n    },\n  }),\n});\n\nif (!account) return <div>loading...</div>;\n\nconst nearBalance = shrinkToken(account.body.result.amount, 24).toFixed(2);\n\nconst listAssets =\n  assets &&\n  assets\n    ?.filter((a) => a.accountBalance > 0)\n    ?.map((asset) => {\n      const { token_id, accountBalance, metadata } = asset;\n      const balance = formatToken(\n        shrinkToken(accountBalance, metadata.decimals).toFixed()\n      );\n\n      return (\n        <option value={token_id}>\n          {metadata.symbol} - {balance}\n        </option>\n      );\n    });\n\nconst storageBurrow = Near.view(BURROW_CONTRACT, \"storage_balance_of\", {\n  account_id: accountId,\n});\n\nconst storageToken = selectedTokenId\n  ? Near.view(selectedTokenId, \"storage_balance_of\", {\n      account_id: accountId,\n    })\n  : null;\n\nconst handleSelect = (e) => {\n  State.update({\n    selectedTokenId: e.target.value,\n    amount: \"\",\n    hasError: false,\n  });\n};\n\nconst handleAmount = (e) => {\n  State.update({\n    amount: Number(e.target.value),\n    selectedTokenId,\n    hasError: false,\n  });\n};\n\nconst handleDeposit = () => {\n  console.log(\n    \"handleDeposit\",\n    assets,\n    state,\n    selectedTokenId,\n    amount,\n    hasError\n  );\n  if (!selectedTokenId || !amount || hasError) return;\n\n  if (selectedTokenId === \"NEAR\") {\n    handleDepositNear(amount);\n    return;\n  }\n\n  const asset = assets.find((a) => a.token_id === selectedTokenId);\n  const { token_id, accountBalance, metadata, config } = asset;\n  console.log(\"asset\", asset);\n  console.log(\"metadata\", metadata);\n  console.log(\"config\", config);\n\n  const balance = formatToken(\n    shrinkToken(accountBalance, metadata.decimals).toFixed()\n  );\n\n  console.log(\"balance\", balance);\n\n  if (amount > balance) {\n    State.update({ selectedTokenId, amount, hasError: true });\n    return;\n  }\n\n  const expandedAmount = expandToken(amount, metadata.decimals).toFixed();\n  const collateralAmount = expandToken(\n    amount,\n    metadata.decimals + config.extra_decimals\n  ).toFixed();\n\n  const collateralMsg = config.can_use_as_collateral\n    ? `{\"Execute\":{\"actions\":[{\"IncreaseCollateral\":{\"token_id\": \"${token_id}\",\"max_amount\":\"${collateralAmount}\"}}]}}`\n    : \"\";\n\n  const transactions = [];\n\n  const depositTransaction = {\n    contractName: token_id,\n    methodName: \"ft_transfer_call\",\n    deposit: new Big(\"1\").toFixed(),\n    gas: expandToken(300, 12),\n    args: {\n      receiver_id: BURROW_CONTRACT,\n      amount: expandedAmount,\n      msg: collateralMsg,\n    },\n  };\n\n  if (storageToken?.available === \"0\" || !storageToken?.available) {\n    transactions.push({\n      contractName: token_id,\n      methodName: \"storage_deposit\",\n      deposit: expandToken(0.25, 24).toFixed(),\n    });\n  }\n\n  if (storageBurrow?.available === \"0\" || !storageBurrow?.available) {\n    transactions.push({\n      contractName: BURROW_CONTRACT,\n      methodName: \"storage_deposit\",\n      deposit: expandToken(0.25, 24).toFixed(),\n      gas: expandToken(140, 12),\n    });\n  }\n\n  transactions.push(depositTransaction);\n\n  console.log(\"storageBurrow\", storageBurrow);\n  console.log(\"storageToken\", storageToken);\n  console.log(\"transactions\", transactions);\n\n  Near.call(transactions);\n};\n\nconst handleDepositNear = (amount) => {\n  const amountDecimal = expandToken(amount, 24).toFixed();\n  console.log(\"handleDepositNear\", amount, amountDecimal);\n  Near.call([\n    {\n      contractName: \"wrap.near\",\n      methodName: \"near_deposit\",\n      deposit: amountDecimal,\n      gas: expandToken(300, 12),\n    },\n    {\n      contractName: \"wrap.near\",\n      methodName: \"ft_transfer_call\",\n      deposit: new Big(\"1\").toFixed(),\n      gas: expandToken(300, 12),\n      args: {\n        receiver_id: BURROW_CONTRACT,\n        amount: amountDecimal,\n        msg: `{\"Execute\":{\"actions\":[{\"IncreaseCollateral\":{\"token_id\":\"wrap.near\",\"max_amount\":\"${amountDecimal}\"}}]}}`,\n      },\n    },\n  ]);\n};\n\nreturn (\n  <div class=\"card\" style={{ maxWidth: \"300px\" }}>\n    {!hasData && (\n      <Widget src=\"ciocan.near/widget/Burrow.Data\" props={{ onLoad }} />\n    )}\n    <div class=\"card-body d-grid gap-3\">\n      <select onChange={handleSelect}>\n        <option value=\"\">Deposit an asset</option>\n        <option value=\"NEAR\">NEAR - {nearBalance}</option>\n        {listAssets}\n      </select>\n      <input type=\"number\" value={amount} onChange={handleAmount} />\n      {hasError && (\n        <p class=\"alert alert-danger\" role=\"alert\">\n          Amount greater than balance\n        </p>\n      )}\n      <button onClick={handleDeposit}>Deposit</button>\n    </div>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/burrow-deposit", "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.burrow": NaN, "metadata.tags.widget": NaN}