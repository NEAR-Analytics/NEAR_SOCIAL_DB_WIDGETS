{"tx_hash": "ALYu8Ugsxtoekguj7REEnd4Zzp39q5wBqNU3wBpfaW9y", "action_id_social": "3KytcaNpU1fr6Rvm6xjywsQJfcRFFiiu5izm7aN9WVJu-0-widget", "block_id": 90341084, "block_timestamp": "2023-04-24 18:40:45.725", "signer_id": "ciocan.near", "widget_name": "bridge-ui", "source_code": "/*\n// the shape of props data\n{\n  \"isLoading\": true,\n  \"log\": \"The TX hash is: 0x2c5d223e47ecd9ac68fbdcd3eeb2bc4615ce6f7209d295104131c1440056497e Etherscan\",\n  \"explorerLink\": \"https://etherscan.io/tx/123\",\n  \"title\": \"zkBridge\",\n  \"from\": {\n    \"network\": {\n      \"id\": \"eth-testnet\",\n      \"value\": \"Ethereum Goerli\"\n    },\n    \"assets\": [\n      {\n        \"id\": \"eth\",\n        \"value\": \"ETH\",\n        \"balance\": \"123.22\"\n      },\n      {\n        \"id\": \"usdc\",\n        \"value\": \"USDC\",\n        \"selected\": true,\n        \"balance\": \"42.00\"\n      }\n    ]\n  },\n  \"to\": {\n    \"network\": {\n      \"id\": \"zksync-testnet\",\n      \"value\": \"zkSync Era Testnet\"\n    },\n    \"assets\": [\n      {\n        \"id\": \"eth\",\n        \"value\": \"ETH\",\n        \"balance\": \"0.123\"\n      },\n      {\n        \"id\": \"usdc\",\n        \"value\": \"USDC\",\n        \"selected\": true,\n        \"balance\": \"0.42\"\n      }\n    ]\n  },\n  \"amount\": \"0.1\"\n}\n*/\n\nconst { from, to, onTabChange, onAction, title, isLoading, log, explorerLink } =\n  props;\nconst { action, amount, selectedAsset, selectedAssetBalanceTo } = state;\nconst { assets } = from;\n\nconst isDeposit = !action || action === \"deposit\";\nconst actionTitle = isDeposit ? \"Deposit\" : \"Withdraw\";\n\nif (assets && !selectedAsset) {\n  initState({\n    selectedAsset: assets.find((a) => a.selected) || assets?.[0],\n  });\n}\n\nconst selectedAssetTo = selectedAsset\n  ? to?.assets?.find((a) => a.id === selectedAsset.id)\n  : undefined;\n\nconst handleAction = () => {\n  if (onAction)\n    onAction({\n      networkId: from.network.id,\n      amount,\n      assetId: selectedAsset.id,\n      action: isDeposit ? \"deposit\" : \"withdraw\",\n    });\n};\n\nconst handleMax = () => {\n  State.update({ amount: selectedAsset.balance });\n};\n\nconst handleAmountChange = (e) => {\n  State.update({ amount: e.target.value });\n};\n\nconst handleAssetChange = (e) => {\n  State.update({ selectedAsset: assets?.find((a) => a.id === e.target.value) });\n};\n\nconst handleTabChange = (tab) => {\n  if (isDeposit && tab === \"deposit\") return;\n  if (!isDeposit && tab === \"withdraw\") return;\n  State.update({ action: tab, amount: 0 });\n  if (onTabChange) onTabChange(tab);\n};\n\nconst Container = styled.div`\n    max-width: 400px;\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    border: 1px solid gray;\n    padding-top: 1rem;\n    border-radius: 0.5rem;\n    margin-top: 1rem;\n\n    * {\n        font-family: 'Inter custom',sans-serif;\n    }\n\n    background: white;\n    color: black;\n\n    .title {\n      margin-top: 8px;\n    }\n\n    .actionTabs {\n      border: 1px solid black;\n      height: 38px;\n      label {\n        color: gray;\n\n        &:hover {\n          color: black;\n        }\n      }\n    }\n\n    .action {\n      background: black;\n      color: white;\n    }\n\n    .balance {\n      input {\n        height: 38px;\n        background: #f5f6fd;\n        color: black;\n        border: 1px solid black;\n      }\n      button {\n        height: 38px;\n        background: #f5f6fd;\n        color: black;\n      }\n    }\n\n    .assets {\n      select {\n        background: #f5f6fd;\n        color: black;\n      }\n    }\n`;\n\nreturn (\n  <Container>\n    <div className=\"d-flex gap-4 align-items-center mb-3 justify-content-center\">\n      <h5 className=\"title\">{title || \"Bridge\"}</h5>\n      <div className=\"actionTabs btn-group\" role=\"group\" aria-label=\"Deposit\">\n        <input\n          id=\"deposit\"\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnradioaction\"\n          autocomplete=\"off\"\n          checked={isDeposit}\n          onClick={() => handleTabChange(\"deposit\")}\n        />\n        <label className=\"btn btn-outline-primary\" for=\"deposit\">\n          Deposit\n        </label>\n        <input\n          id=\"withdraw\"\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnradioaction\"\n          autocomplete=\"off\"\n          checked={!isDeposit}\n          onClick={() => handleTabChange(\"withdraw\")}\n        />\n        <label className=\"btn btn-outline-primary\" for=\"withdraw\">\n          Withdraw\n        </label>\n      </div>\n    </div>\n    <div className=\"border border-secondary border-bottom-0 border-light\" />\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"assets d-flex flex-column gap-2\">\n          <span>{from.network.value}</span>\n          <select\n            className=\"form-select\"\n            aria-label=\"select asset\"\n            onChange={handleAssetChange}\n          >\n            {assets &&\n              assets.map((asset) => (\n                <option value={asset.id} selected={asset.selected}>\n                  {asset.value}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div className=\"d-flex flex-column gap-2\">\n          <div className=\"d-flex justify-content-between\">\n            <span>Balance: {selectedAsset.balance}</span>\n          </div>\n          <div className=\"balance input-group\">\n            <input\n              style={{ maxWidth: \"120px\" }}\n              type=\"number\"\n              min=\"0\"\n              step=\"0.1\"\n              defaultValue={props.amount}\n              value={amount}\n              placeholder=\"0.00\"\n              onChange={handleAmountChange}\n            />\n            <button className=\"btn btn-light btn-sm\" onClick={handleMax}>\n              max\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"border border-secondary border-bottom-0 border-light\" />\n    <div className=\"p-4 d-flex justify-content-between\">\n      <div>{to.network.value}</div>\n      <div>Balance: {selectedAssetTo.balance}</div>\n    </div>\n    <div className=\"border border-secondary border-bottom-0 border-light\" />\n    <div className=\"p-4 d-grid gap-3\">\n      <button\n        className=\"action btn btn-primary\"\n        onClick={handleAction}\n        disabled={isLoading}\n      >\n        {isLoading ? \"Loading...\" : actionTitle}\n      </button>\n      {log && (\n        <div className=\"alert alert-success\" role=\"alert\">\n          <div className=\"text-truncate\" style={{ maxWidth: 300 }}>\n            {log}\n          </div>\n          <a href={explorerLink} className=\"alert-link\" target=\"_blank\">\n            Etherscan\n          </a>\n        </div>\n      )}\n    </div>\n  </Container>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/bridge-ui", "metadata.name": NaN, "metadata.tags.ethdenver2023": NaN, "metadata": NaN}