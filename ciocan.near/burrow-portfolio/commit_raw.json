{"tx_hash": "eDouyXzprjgcbUxdJSkKngQcPM6u82GuAt8MSvJ7ESs", "action_id_social": "7wAB5nXgNs5n5ozdocqgpRf6MJhtz9LcFwHf68ebwDAV-0-widget", "block_id": 85583783, "block_timestamp": "2023-02-19 15:32:26.048", "signer_id": "ciocan.near", "widget_name": "burrow-portfolio", "source_code": "let accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\n\nconst toAPY = (v) => Math.round(v * 100) / 100;\n\nconst shrinkToken = (value, decimals, fixed) => {\n  return new Big(value).div(new Big(10).pow(decimals)).toFixed(fixed);\n};\n\nconst { assets, rewards, account } = state;\n\nconst hasData = assets.length > 0 && rewards.length > 0 && account;\n\nconst onLoad = (data) => {\n  State.update(data);\n};\n\nconst depositedAssets = hasData\n  ? new Set([\n      ...account.supplied.map((a) => a.token_id),\n      ...account.collateral.map((a) => a.token_id),\n    ])\n  : new Set();\n\n// get portfolio deposited assets\nconst suppliedAssets = hasData\n  ? [...depositedAssets].map((depositedTokenId) => {\n      const asset = assets.find((a) => a.token_id === depositedTokenId);\n\n      const r = rewards.find((a) => a.token_id === asset.token_id);\n      const totalApy = r.apyBase + r.apyRewardTvl + r.apyReward;\n\n      const decimals = asset.metadata.decimals + asset.config.extra_decimals;\n\n      const supplied = account.supplied.find(\n        (s) => s.token_id === depositedTokenId\n      );\n\n      const depositedBalance = supplied\n        ? Number(shrinkToken(supplied.balance, decimals))\n        : 0;\n\n      const collateral = account.collateral.find(\n        (c) => c.token_id === depositedTokenId\n      );\n\n      const collateralBalance = collateral\n        ? Number(shrinkToken(collateral.balance, decimals))\n        : 0;\n\n      const totalBalance = depositedBalance + collateralBalance;\n      const usd = totalBalance * asset.price.usd;\n\n      return (\n        <tr>\n          <td>{asset.metadata.symbol}</td>\n          <td class=\"text-end\">{toAPY(totalApy)}%</td>\n          <td class=\"text-end\">{totalBalance.toFixed(4)}</td>\n          <td class=\"text-end\">${usd.toFixed(2)}</td>\n        </tr>\n      );\n    })\n  : undefined;\n\n// get portfolio borrowed assets\nconst borrowedAssets = hasData\n  ? account.borrowed.map((borrowedAsset) => {\n      const asset = assets.find((a) => a.token_id === borrowedAsset.token_id);\n      const r = rewards.find((a) => a.token_id === asset.token_id);\n      const totalApy = r.apyBaseBorrow;\n\n      const decimals = asset.metadata.decimals + asset.config.extra_decimals;\n      const borrowed = Number(shrinkToken(borrowedAsset.balance, decimals));\n      const usd = borrowed * asset.price.usd;\n\n      // if (usd < 0.01) return null;\n\n      return (\n        <tr>\n          <td>{asset.metadata.symbol}</td>\n          <td class=\"text-end\">{toAPY(totalApy)}%</td>\n          <td class=\"text-end\">{borrowed.toFixed(4)}</td>\n          <td class=\"text-end\">${usd.toFixed(2)}</td>\n        </tr>\n      );\n    })\n  : undefined;\n\nreturn (\n  <div>\n    {!hasData && (\n      <Widget src=\"ciocan.near/widget/burrow-data\" props={{ onLoad }} />\n    )}\n    <table class=\"table\">\n      <thead>\n        <tr\n          style={{\n            color: \"rgba(0, 0, 0, 0.4)\",\n          }}\n        >\n          <th scope=\"col\">Deposited Assets</th>\n          <th scope=\"col\" class=\"text-end\">\n            APY\n          </th>\n          <th scope=\"col\" class=\"text-end\">\n            Deposited\n          </th>\n          <th scope=\"col\" class=\"text-end\">\n            $\n          </th>\n        </tr>\n      </thead>\n      <tbody>{suppliedAssets}</tbody>\n    </table>\n\n    <table class=\"table\">\n      <thead>\n        <tr\n          style={{\n            color: \"rgba(0, 0, 0, 0.4)\",\n          }}\n        >\n          <th scope=\"col\">Borrowed Assets</th>\n          <th scope=\"col\" class=\"text-end\">\n            APY\n          </th>\n          <th scope=\"col\" class=\"text-end\">\n            Borrowed\n          </th>\n          <th scope=\"col\" class=\"text-end\">\n            $\n          </th>\n        </tr>\n      </thead>\n      <tbody>{borrowedAssets}</tbody>\n    </table>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/burrow-portfolio", "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN}