{"tx_hash": "HkhRFuQfeQFx1WLujiCTtSrbN82NAFQgddhS9cjRCTdT", "action_id_social": "CCPqMKzWudrPqSWMC31jZVoGNtmmuPYv2UhLgb5vNMaa-0-widget", "block_id": 93283167, "block_timestamp": "2023-06-02T12:15:47.925Z", "signer_id": "ciocan.near", "widget_name": "zkevm-bridge", "source_code": "const BRIDGE_CONTRACT_ADDRESS = \"0xF6BEEeBB578e214CA9E23B0e9683454Ff88Ed2A7\";\n\nconst provider = Ethers.provider();\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst bridgeAbi = [\n  {\n    inputs: [\n      { internalType: \"uint32\", name: \"destinationNetwork\", type: \"uint32\" },\n      { internalType: \"address\", name: \"destinationAddress\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"bool\", name: \"forceUpdateGlobalExitRoot\", type: \"bool\" },\n      { internalType: \"bytes\", name: \"permitData\", type: \"bytes\" },\n    ],\n    name: \"bridgeAsset\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nif (sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      State.update({ chainId });\n    });\n}\n\nconsole.log(\"state\", state);\n\nconst bridgeIface = new ethers.utils.Interface(bridgeAbi);\n\nconst handleBridge = (networkId, amount, token) => {\n  console.log(\"handleBridge\", networkId, amount);\n\n  const amountBig = ethers.utils.parseUnits(amount, token.decimals);\n  const permitData = \"0x\";\n\n  const encodedData = bridgeIface.encodeFunctionData(\n    \"bridgeAsset(uint32,address,uint256,address,bool,bytes)\",\n    [networkId, sender, amountBig, token.address, true, permitData]\n  );\n\n  Ethers.provider()\n    .getSigner()\n    .sendTransaction({\n      to: BRIDGE_CONTRACT_ADDRESS,\n      data: encodedData,\n      value: amountBig,\n      gasLimit: ethers.BigNumber.from(\"500000\"),\n    })\n    .then((tx) => {\n      consle.log(\"tx:\", tx);\n    })\n    .catch((e) => {\n      console.log(\"error:\", e);\n    });\n\n  //   const bridgeContract = new ethers.Contract(\n  //     BRIDGE_CONTRACT_ADDRESS,\n  //     bridgeAbi,\n  //     Ethers.provider().getSigner()\n  //   );\n\n  //   bridgeContract.estimateGas\n  //     .bridgeAsset(5, sender, 0, token, true, permitData)\n  //     .then((tx) => {\n  //       console.log(tx);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n\n  //   bridgeContract\n  //     .bridgeAsset(5, sender, amountBig, token, true, permitData)\n  //     .then((tx) => {\n  //       console.log(tx);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"!!!!\", err);\n  //     });\n};\n\nconst onConfirm = (props) => {\n  console.log(props);\n  const { amount, token, network } = props;\n  const networkId = network === \"ethereum\" ? 0 : 1;\n  handleBridge(networkId, amount, token);\n};\n\nreturn (\n  <div>\n    <Widget src=\"ciocan.near/widget/zkevm-bridge-ui\" props={{ onConfirm }} />\n  </div>\n);\n", "metadata": {"tags": {"ethdenver2023": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/zkevm-bridge", "__row_index": 0}