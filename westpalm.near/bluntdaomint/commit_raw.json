{"tx_hash": "8bZzc7xrLpESzZSBBcwJvak9gwrTg69bJ1fWYasAqErC", "action_id_social": "Cu5oQFz6whY8wWjDLUgGNTLhqeSJJ8Z87e2H1B5XQ7U2-1-widget", "block_id": 86620231, "block_timestamp": "2023-03-05 15:07:45.363", "signer_id": "westpalm.near", "widget_name": "bluntdaomint", "source_code": "// const [tokenId, setTokenId] = useState(null);\nconst erc721Abi = fetch(\n  \"https://raw.githubusercontent.com/codingshot/bluntdao-app/main/abi.json?token=GHSAT0AAAAAABZHZUKMD57MZSSRML3DBHRUZAEUA2Q\"\n);\ninitState({\n  value: 0.01,\n  tokenId: \"\",\n});\nconst setTokenId = (tokenId) => {\n  State.update({ tokenId });\n  getTokenDecimals();\n};\nasync function mintToken() {\n  try {\n    // await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractAddress = \"0x5F976CF990819AB495C999e139d620B4655ae727\"; // replace with the actual contract address\n    const contract = new ethers.Contract(\n      contractAddress,\n      erc721Abi.abi,\n      signer\n    );\n    const result = await contract.mint(signer.getAddress());\n    setTokenId(result.hash);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nreturn (\n  <div>\n    <button onClick={mintToken}>Mint NFT on Polygon</button>\n    {tokenId && <p>New token ID: {tokenId}</p>}\n  </div>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/westpalm.near/widget/bluntdaomint", "metadata.tags.ethdenver2023": ""}