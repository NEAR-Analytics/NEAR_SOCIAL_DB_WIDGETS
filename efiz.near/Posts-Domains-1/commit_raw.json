{"tx_hash": "73iQdS36ACyEKxea8xW7xDy4RyS8mffkcz3WGtfdgeof", "action_id_social": "EpisCnb9bBLxgVu1yybQmurpHxGpM6zmWXUj3NbnJVcr-0-widget", "block_id": 89524068, "block_timestamp": "2023-04-13 23:54:36.312", "signer_id": "efiz.near", "widget_name": "Posts-Domains-1", "source_code": "State.init({\n  selectedTab: Storage.privateGet(\"selectedTab\") || \"all\",\n});\n\nconst domains = [\n  \"apple123456\",\n  \"banana123456\",\n  \"cherry123456\",\n  \"durian123456\",\n  \"elderberry123456\",\n];\n\nconst hashtags = [\"nearsocial\", \"dev\"];\n\nconst previousSelectedTab = Storage.privateGet(\"selectedTab\");\n\nif (previousSelectedTab && previousSelectedTab !== state.selectedTab) {\n  State.update({\n    selectedTab: previousSelectedTab,\n  });\n}\n\nlet accounts = undefined;\n\nif (state.selectedTab === \"following\" && context.accountId) {\n  const graph = Social.keys(`${context.accountId}/graph/follow/*`, \"final\");\n  if (graph !== null) {\n    accounts = Object.keys(graph[context.accountId].graph.follow || {});\n    accounts.push(context.accountId);\n  } else {\n    accounts = [];\n  }\n} else {\n  accounts = undefined;\n}\n\nfunction selectTab(selectedTab) {\n  Storage.privateSet(\"selectedTab\", selectedTab);\n  State.update({ selectedTab });\n}\n\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181c;\n  margin: 0 0 24px;\n  padding: 0 24px;\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst Content = styled.div`\n  @media (max-width: 1200px) {\n    > div:first-child {\n      border-top: none;\n    }\n  }\n`;\n\nconst ComposeWrapper = styled.div`\n  border-top: 1px solid #eceef0;\n`;\n\nconst FilterWrapper = styled.div`\n  border-top: 1px solid #eceef0;\n  padding: 24px 24px 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media (max-width: 1200px) {\n    padding: 12px;\n  }\n`;\n\nconst PillSelect = styled.div`\n  display: inline-flex;\n  align-items: center;\n\n  @media (max-width: 600px) {\n    width: 100%;\n\n    button {\n      flex: 1;\n    }\n  }\n`;\n\nconst PillSelectButton = styled.button`\n  display: block;\n  position: relative;\n  border: 1px solid #e6e8eb;\n  border-right: none;\n  padding: 3px 24px;\n  border-radius: 0;\n  font-size: 12px;\n  line-height: 18px;\n  color: ${(p) => (p.selected ? \"#fff\" : \"#687076\")};\n  background: ${(p) => (p.selected ? \"#006ADC !important\" : \"#FBFCFD\")};\n  font-weight: 600;\n  transition: all 200ms;\n\n  &:hover {\n    background: #ecedee;\n    text-decoration: none;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: #006adc !important;\n    box-shadow: 0 0 0 1px #006adc;\n    z-index: 5;\n  }\n\n  &:first-child {\n    border-radius: 6px 0 0 6px;\n  }\n  &:last-child {\n    border-radius: 0 6px 6px 0;\n    border-right: 1px solid #e6e8eb;\n  }\n`;\n\nconst FeedWrapper = styled.div`\n  .post {\n    padding-left: 24px;\n    padding-right: 24px;\n\n    @media (max-width: 1200px) {\n      padding-left: 12px;\n      padding-right: 12px;\n    }\n  }\n`;\n\nreturn (\n  <>\n    <div class=\"alert alert-primary\" role=\"alert\">\n      <p>This example treats indexes as \"domains\".</p>\n      <p>\n        Currently, a post created on the main page will be indexed into a\n        sort-of catch-all \"post\" bucket. Every \"post\" feed reads from this\n        index.\n      </p>\n      <p>\n        Alternatively in this example, if domains have been provided, then we\n        create an index under that \"domain\" and do not post into the catch-all\n        \"post\" index.\n      </p>\n      <p>\n        This has some advantages because now a user can be selective with what\n        feed their post will or will not appear up on, and it's also easy to\n        merge domains together in the feed.\n      </p>\n      <p>\n        However, this also has some disadvantages; domains could proliferate out\n        of control and since there is no \"registar\", developers could be unaware\n        that they are sharing a domain. A possible solution could be that\n        domains are .near accounts and permissions are put in place that only\n        authorized users can post to a domain (i.e. exclusive communities).\n      </p>\n      <p>Hashtag filter works, but not along with the domain filter.</p>\n    </div>\n\n    <Content>\n      {context.accountId && (\n        <>\n          <ComposeWrapper>\n            <Widget\n              src=\"efiz.near/widget/Posts.Compose-Domains-1\"\n              props={{ domains }}\n            />\n          </ComposeWrapper>\n\n          <FilterWrapper>\n            <PillSelect>\n              <PillSelectButton\n                type=\"button\"\n                onClick={() => selectTab(\"all\")}\n                selected={state.selectedTab === \"all\"}\n              >\n                All\n              </PillSelectButton>\n\n              <PillSelectButton\n                type=\"button\"\n                onClick={() => selectTab(\"following\")}\n                selected={state.selectedTab === \"following\"}\n              >\n                Following\n              </PillSelectButton>\n            </PillSelect>\n            <div className=\"d-inline-flex gap-2\">\n              <Typeahead\n                options={hashtags}\n                multiple\n                onChange={(value) => {\n                  State.update({ hashtags: value });\n                }}\n                placeholder=\"Hashtag filter\"\n              />\n              <Typeahead\n                options={domains}\n                multiple\n                onChange={(value) => {\n                  State.update({ choose: value });\n                }}\n                placeholder=\"Domain filter\"\n              />\n            </div>\n          </FilterWrapper>\n        </>\n      )}\n\n      <FeedWrapper>\n        <Widget\n          src=\"efiz.near/widget/Posts.Feed-Domains-1\"\n          props={{ accounts, domains: state.choose, hashtags: state.hashtags }}\n        />\n      </FeedWrapper>\n    </Content>\n  </>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Posts-Domains-1", "branch.draft.": NaN, "branch.draft.metadata": NaN}