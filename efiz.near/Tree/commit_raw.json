{"tx_hash": "DaUun4HSVqK3L24aW7YMsuG3RrEvndcrTcwr6pdih4bj", "action_id_social": "EWu2nmqQAAqfz6CpmuoRrdumfHh9XvtzTUspceBSqQhL-0-widget", "block_id": 91923481, "block_timestamp": "2023-05-15T15:46:32.964Z", "signer_id": "efiz.near", "widget_name": "Tree", "source_code": "/**\n * Takes in a rootPath and rootType\n */\nconst rootPath = props.rootPath || context.accountId || \"evrything.near\";\nconst rootType = props.rootType || \"account\";\nconst rootNode = props.rootNode || {};\n\nState.init({\n  path: rootPath,\n  type: rootType,\n  history: [rootPath],\n});\n\nfunction setPath(path) {\n  State.update({ path });\n}\n\nfunction setHistory(history) {\n  State.update({ history });\n}\n\nfunction setType(type) {\n  State.update({ type });\n}\n\nfunction setRoot(newPath, newType) {\n  State.update({\n    path: newPath,\n    type: newType,\n  });\n}\n\n// WHEN A NEW ROOT IS SET //\n// GET DATA AT THIS PATH //\nfunction getNode(path, type) {\n  const parts = path.split(\"/\");\n  let value = {};\n\n  // ACCOUNT //\n  if (type === \"account\") {\n    if (parts.length > 1) {\n      // GRAPH // FOLLOW // BACK TO ACCOUNT : WORKING\n      setRoot(parts[3], \"account\");\n    } else {\n      if (parts[0] !== \"*\") {\n        parts.push(\"**\");\n      }\n      value = Social.get(parts.join(\"/\"), \"final\");\n      return value;\n    }\n    // THING //\n  } else if (type === \"thing\") {\n    // path: \"everything\"\n    // type: \"thing\"\n    return rootNode;\n    // PROFILE //\n  } else if (type === \"profile\") {\n    value = Social.get(parts.join(\"/\"), \"final\");\n    // POST : WIP //\n  } else if (type === \"post\") {\n    value = path;\n    // NAMETAG : WIP //\n  } else if (type === \"nametag\") {\n    if (parts.length > 2) {\n      if (parts.length === 3) {\n        // BACK TO ACCOUNT\n        setRoot(parts[3], \"account\");\n      } else if (parts.length === 4) {\n        // ALL TAGS BY ACCOUNT\n        value = Social.keys(`${parts[0]}/profile/tags/*`, \"final\");\n      } else {\n        // THIS TAG\n        value = parts[5];\n      }\n    }\n  } else {\n    parts.push(\"**\");\n    value = Social.get(parts.join(\"/\"), \"final\");\n    return value;\n  }\n}\n\nconst node = getNode(state.path, state.type);\n\nreturn (\n  <Widget\n    src=\"efiz.near/widget/Node\"\n    props={{\n      label: state.path,\n      node,\n      type: state.type,\n      path: state.path,\n      setPath: setPath,\n      history: state.history,\n      setHistory: setHistory,\n      setType: setType,\n      isRoot: true,\n      styles: {\n        subject: {\n          fontFamily: \"Times New Roman\",\n          fontSize: \"4em\",\n          lineHeight: \"1.25\",\n          fontWeight: 400,\n          cursor: \"pointer\",\n        },\n      },\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Tree", "__row_index": 31}