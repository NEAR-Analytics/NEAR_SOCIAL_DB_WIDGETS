{"tx_hash": "9KmJrPAG997b2V2zf8ehx1ca5oDmsQuZUuqjuiTkRNft", "action_id_social": "2AEfgiwXjQXtnjfjhoytwe1FCb5U61Hm4vEsghXRnjzj-0-widget", "block_id": 93145101, "block_timestamp": "2023-05-31T16:26:21.968Z", "signer_id": "efiz.near", "widget_name": "Every.Post", "source_code": "let index = [];\nconst typeWhitelist = JSON.parse(props.typeWhitelist || \"null\") || [\n  \"efiz.near/type/paragraph\",\n  \"efiz.near/type/Image\",\n  \"efiz.near/type/document\",\n];\nconst accountFilter =\n  (props.accountFilter && [props.accountFilter]) || undefined;\nconst hashtagFilter = JSON.parse(props.hashtagFilter || \"null\") || [];\nconst domainFilter = JSON.parse(props.domainFilter || \"null\") || [\"post\"];\nconst key = props.key || \"main\";\n\nif (hashtagFilter.length) {\n  index = hashtagFilter.map((it) => ({\n    action: \"hashtag\",\n    key: it.toLowerCase(),\n    options: {\n      limit: 10,\n      order: \"desc\",\n      accountId: accountFilter,\n    },\n  }));\n} else {\n  index = domainFilter.map((it) => ({\n    action: it,\n    key, // what should this be used for...\n    options: {\n      limit: 10,\n      order: \"desc\",\n      accountId: accountFilter,\n    },\n  }));\n}\n\nconst Post = styled.div`\n  border-bottom: 1px solid #eceef0;\n  padding: 24px 0 12px;\n\n  @media (max-width: 1200px) {\n    padding: 12px 0 0;\n  }\n`;\n\nconst renderItem = (a) => {\n  let type = a.value.type;\n  // return <p>{JSON.stringify(a)}</p>;\n\n  // PATH NORMALIZATION\n  const path = a.value.path;\n  const domain = \"post\";\n  if (path === undefined) {\n    // we need to construct paths from hashtags\n    domain = a.action;\n    path = `${a.accountId}/post/${a.key}`;\n  } else {\n    // different domains still save to post... that's probably dumb\n    const parts = path.split(\"/\");\n    if (parts[1] !== \"thing\") {\n      domain = parts[1];\n      parts[1] = \"post\";\n      path = parts.join(\"/\");\n    }\n  }\n  if (typeWhitelist.includes(type) && domainFilter.includes(domain)) {\n    return (\n      <Post className=\"post\" key={JSON.stringify(a)}>\n        <Widget\n          src=\"efiz.near/widget/Every.Post.View\"\n          props={{\n            path,\n            blockHeight: a.blockHeight,\n          }}\n        />\n      </Post>\n    );\n  }\n};\n\nreturn (\n  <Widget src=\"mob.near/widget/MergedIndexFeed\" props={{ index, renderItem }} />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Every.Post", "__row_index": 12}