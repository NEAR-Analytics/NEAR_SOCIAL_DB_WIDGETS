{"tx_hash": "6kcmmQxd9zpYUZH2rKH1jJ7YVEas8NYrJtjHkP4V89sf", "action_id_social": "HbjeWkqiKaGVyJDGE4VHXHSvEEFu9Lej7yCfzuekTp6V-0-widget", "block_id": 87181408, "block_timestamp": "2023-03-13 06:00:57.917", "signer_id": "efiz.near", "widget_name": "Create", "source_code": "/*\n---props---\n\nprops.widgetPath?: string,\n\n*/\n\n// How can I access the widget path dynamically?\nconst initWidgetPath = \"efiz.near/widget/Create\";\n\nState.init({\n  widgetPath: initWidgetPath,\n  color: \"\",\n  brand: \"\",\n  size: \"\",\n  material: \"\",\n  img: null,\n  message: \"\",\n});\n\n// START GET THE WIDGET COMMIT\nconst historyBlocksRequest = Social.keys(`${initWidgetPath}`, \"final\", {\n  return_type: \"History\",\n});\n\nif (historyBlocksRequest === null) return \"loading...\";\n\nconst [widgetAccountId, _, widgetName] = initWidgetPath.split(\"/\");\n\nlet blocksChanges =\n  historyBlocksRequest[widgetAccountId]?.[\"widget\"]?.[widgetName];\n\n// Latest commit sits at blocksChanges[0]\n// How do we know this is the one they are using though?\n// END GET THE WIDGET COMMIT\n\nconst composeData = () => {\n  const data = {\n    thing: {\n      main: JSON.stringify({\n        color: state.color,\n        brand: state.brand,\n        size: state.size,\n        material: state.material,\n        commit: blocksChanges[0],\n        img: state.img\n          ? `https://ipfs.near.social/ipfs/${state.img.cid}`\n          : null,\n      }),\n    },\n    index: {\n      thing: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: \"thing\",\n        },\n      }),\n    },\n  };\n\n  return data;\n};\n\nconst handleImageUpload = (files) => {\n  if (files?.length > 0) {\n    State.update({\n      img: {\n        uploading: true,\n        cid: null,\n      },\n    });\n    const body = files[0];\n    State.update({\n      img: body,\n    });\n    asyncFetch(\"https://ipfs.near.social/add\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body,\n    }).then((res) => {\n      const cid = res.body.cid;\n\n      State.update({\n        img: {\n          cid,\n        },\n      });\n    });\n  } else {\n    State.update({\n      img: null,\n    });\n  }\n};\n\nconst createThing = () => {\n  asyncFetch(\"https://monkfish-app-ginhc.ondigitalocean.app/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `\n      mutation {\n        things {\n          create(type: { name: { is: \"Idea\"} }) {\n            message\n          }\n        }\n      }\n  `,\n    }),\n  }).then((res) => {\n    const message = res.body?.message || res.body?.errors[0]?.message;\n\n    State.update({\n      message,\n    });\n  });\n};\n\nreturn (\n  <div>\n    <h1 class=\"text-center\">Thing</h1>\n    {state.img ? (\n      <img\n        class=\"rounded w-100 h-100\"\n        style={{ objectFit: \"cover\" }}\n        src={`https://ipfs.near.social/ipfs/${state.img.cid}`}\n        alt=\"upload preview\"\n      />\n    ) : null}\n    <Files\n      multiple={false}\n      accepts={[\"image/*\"]}\n      minFileSize={1}\n      clickable\n      onChange={handleImageUpload}\n      style={{\n        cursor: \"pointer\",\n      }}\n      class=\"text-center d-flex justify-content-center align-items-center\"\n    >\n      <div class=\"d-flex m-4 px-2 py-1 rounded bg-black text-white justify-content-center align-items-center\">\n        {state.img?.uploading ? (\n          <>...</>\n        ) : state.img?.cid ? (\n          \"Replace\"\n        ) : (\n          \"Take photo\"\n        )}\n      </div>\n    </Files>\n    <div class=\"input-group mb-3\">\n      <input\n        class=\"form-control\"\n        placeholder={\"color\"}\n        onChange={({ target }) => State.update({ color: target.value })}\n      />\n      <input\n        class=\"form-control\"\n        placeholder={\"brand\"}\n        onChange={({ target }) => State.update({ brand: target.value })}\n      />\n      <input\n        class=\"form-control\"\n        placeholder={\"size\"}\n        onChange={({ target }) => State.update({ size: target.value })}\n      />\n      <input\n        class=\"form-control\"\n        placeholder={\"material\"}\n        onChange={({ target }) => State.update({ material: target.value })}\n      />\n    </div>\n    <div>\n      <div className={\"list-group-item list-group-item-action \"}>\n        #{blocksChanges[0]}\n      </div>\n      <div className={\"list-group-item list-group-item-action \"}>\n        {state.color}\n      </div>\n      <div className={\"list-group-item list-group-item-action \"}>\n        {state.brand}\n      </div>\n      <div className={\"list-group-item list-group-item-action \"}>\n        {state.size}\n      </div>\n      <div className={\"list-group-item list-group-item-action \"}>\n        {state.material}\n      </div>\n    </div>\n    {state.message}\n    <button onClick={createThing}>Create</button>\n    {/* <CommitButton\n      disabled={false}\n      force\n      className=\"btn btn-dark rounded-3\"\n      data={composeData}\n    >\n      Create\n    </CommitButton> */}\n  </div>\n);\n", "metadata": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Create", "branch.draft.": NaN, "branch.draft.metadata": NaN, "branch": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.action": NaN}