{"tx_hash": "3429n3EoEGCp4krv8BwvVxPHutt8kofpUji5rJdCF3ph", "action_id_social": "GdERJu9R4zhcYca1fko7s7EDTEv68d2sAwAzaqpYxk1N-0-widget", "block_id": 91853001, "block_timestamp": "2023-05-14T17:48:04.500Z", "signer_id": "efiz.near", "widget_name": "Node", "source_code": "const key = props.key;\nconst label = props.label;\nconst node = props.node;\nconst type = props.type;\nconst path = props.path;\nconst setPath = props.setPath;\nconst history = props.history;\nconst setHistory = props.setHistory;\nconst setType = props.setType;\nconst isRoot = props.isRoot;\n\nState.init({\n  expanded: false,\n});\n\nfunction handleExpand() {\n  State.update({ expanded: !state.expanded });\n}\n\nfunction handleInto() {\n  setPath(path);\n  setHistory([...history, path]);\n  setType(type);\n}\n\nfunction handleBack() {\n  const newPath = history[history.length - 2] || \"\";\n  setPath(newPath);\n  setHistory(history.slice(0, -1));\n}\n\nconst Button = styled.button`\n  text-transform: lowercase !important;\n`;\n\nconst ChildNode = styled.div`\n  margin-left: ${path.split(\"/\").length * 4}px\n`;\n\nfunction renderView() {\n  return <Widget src=\"efiz.near/widget/View\" props={{ path, type }} />;\n}\n\nfunction getType() {\n  const parts = path.split(\"/\");\n  if (parts.length === 1) {\n    return \"account\";\n  } else if (parts.length === 2) {\n    return parts[1];\n  } else {\n    const standard = parts[1];\n    if (standard === \"thing\") {\n      // We're gonna grab the type from the thing itself\n    }\n    return standard;\n  }\n}\n\nreturn (\n  <div>\n    <div>\n      {history.length > 1 && isRoot && (\n        <Button onClick={handleBack}>back</Button>\n      )}\n      {isRoot ? (\n        <div style={props.styles?.subject}>{label}</div>\n      ) : (\n        <Button onClick={handleInto}>{label}</Button>\n      )}\n      <Button onClick={handleExpand}>{state.expanded ? \"-\" : \"+\"}</Button>\n    </div>\n    {state.expanded && (\n      <div>\n        {node && typeof node === \"object\" ? (\n          Object.entries(node).map(([key, val]) => (\n            <ChildNode>\n              <Widget\n                src=\"efiz.near/widget/Node\"\n                props={{\n                  key,\n                  label: key,\n                  node: val,\n                  type: getType(),\n                  path: `${path}/${key}`,\n                  setPath: setPath,\n                  history,\n                  setHistory: setHistory,\n                  isRoot: false,\n                }}\n              />\n            </ChildNode>\n          ))\n        ) : (\n          <div>{renderView()}</div>\n        )}\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Node", "__row_index": 86}