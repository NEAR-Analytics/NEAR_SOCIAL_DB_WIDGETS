{"tx_hash": "2ePDXXd2NZfTZ7wSPSmbEvY2VWbDQRQsy1HMRK8uMtfS", "action_id_social": "GiyiXivWczfZvtmWPTaiga7aFtFitfuFZXEy5tKC3kqk-0-widget", "block_id": 92024067, "block_timestamp": "2023-05-16T23:09:10.871Z", "signer_id": "efiz.near", "widget_name": "Node", "source_code": "const key = props.key;\nconst label = props.label;\nconst node = props.node;\nconst type = props.type;\nconst path = props.path;\nconst setPath = props.setPath;\nconst history = props.history;\nconst setHistory = props.setHistory;\nconst setType = props.setType;\nconst isRoot = props.isRoot;\nconst styles = props.styles;\n\nState.init({\n  expanded: false,\n});\n\nfunction handleExpand() {\n  State.update({ expanded: !state.expanded });\n}\n\nfunction handleInto() {\n  setPath(path);\n  setHistory([...history, path]);\n  setType(type);\n}\n\nfunction handleBack() {\n  const newPath = history[history.length - 2] || \"\";\n  setPath(newPath);\n  setHistory(history.slice(0, -1));\n}\n\n// Basic Button Style\nconst Button = styled.button`\n  text-transform: lowercase !important;\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  border: 2px outset #333;\n  background-color: #f5f5f5;\n  cursor: pointer;\n  color: #333;\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 4px;\n`;\n\nconst ChildNode = styled.div`\n  margin-left: ${path.split(\"/\").length * 4}px\n`;\n\nfunction renderView() {\n  // Root vs Leaf?\n  return <Widget src=\"efiz.near/widget/View\" props={{ path, type }} />;\n}\n\nfunction getType() {\n  const parts = path.split(\"/\");\n  if (parts.length === 1) {\n    return \"account\";\n  } else if (parts.length === 2) {\n    return parts[1];\n  } else {\n    const standard = parts[1];\n    if (standard === \"thing\") {\n      // We're gonna grab the type from the thing itself\n    }\n    return standard;\n  }\n}\n\nreturn (\n  <div>\n    <div>\n      {/** CONTROLLER */}\n      {history.length > 1 && isRoot && (\n        <Button onClick={handleBack}>back</Button>\n      )}\n      {isRoot ? (\n        <div style={styles?.subject}>{label}</div>\n      ) : (\n        <Button onClick={handleInto}>{label}</Button>\n      )}\n      <Button onClick={handleExpand}>{state.expanded ? \"-\" : \"+\"}</Button>\n    </div>\n    {state.expanded && (\n      <div>\n        {/** EDGES */}\n        <ButtonRow>\n          {node && typeof node === \"object\"\n            ? Object.entries(node).map(([key, val]) => (\n                <Widget\n                  src=\"efiz.near/widget/Node\"\n                  props={{\n                    key,\n                    label: key,\n                    node: val,\n                    type: getType(),\n                    path: `${path}/${key}`,\n                    setPath: setPath,\n                    history,\n                    setHistory: setHistory,\n                    isRoot: false,\n                  }}\n                />\n              ))\n            : null}\n        </ButtonRow>\n        <div>{renderView()}</div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Node", "__row_index": 63}