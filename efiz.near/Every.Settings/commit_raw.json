{"tx_hash": "GgSCLnBF4XiZfYZdSur2vpmwWUgUSQer49i6yEBxYFkc", "action_id_social": "AaLur9uxWWYYm8yrbh2KoN4yMGym7U1KfDk6bezRZKUo-0-widget", "block_id": 92327978, "block_timestamp": "2023-05-20T22:22:05.867Z", "signer_id": "efiz.near", "widget_name": "Every.Settings", "source_code": "const accountId = props.accountId || context.accountId;\nconst blockHeight = props.blockHeight || \"final\";\nconst thingId = props.thingId || \"**\";\n\nconst value = Social.get(`${accountId}/settings/**`, blockHeight);\n\nconst FormContainer = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 24px;\n  margin-top: 20px;\n`;\n\nconst SectionContainer = styled.div`\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 18px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n`;\n\nconst Button = styled.button`\n  margin-left: 5px;\n`;\n\nState.init({\n  formData: value,\n});\n\nconst handleInputChange = (section, key, index, value) => {\n  const updatedData = { ...state.formData };\n  if (Array.isArray(JSON.parse(updatedData[section][key]))) {\n    try {\n      const inputs = JSON.parse(updatedData[section][key]);\n      inputs[index].src = value;\n      updatedData[section][key] = JSON.stringify(inputs);\n      State.update({ formData: updatedData });\n    } catch (error) {\n      console.log(\n        `Error updating input value for ${section}/${key}/${index}:`,\n        error\n      );\n    }\n  } else {\n    updatedData[section][key] = value;\n    State.update({ formData: updatedData });\n  }\n};\n\nconst moveInputUp = (section, key, index) => {\n  const updatedData = { ...state.formData };\n\n  try {\n    const inputs = JSON.parse(updatedData[section][key]);\n\n    if (index > 0) {\n      const temp = inputs[index];\n      inputs[index] = inputs[index - 1];\n      inputs[index - 1] = temp;\n      updatedData[section][key] = JSON.stringify(inputs);\n      State.update({ formData: updatedData });\n    }\n  } catch (error) {\n    console.log(`Error moving input up for ${section}/${key}/${index}:`, error);\n  }\n};\n\nconst moveInputDown = (section, key, index) => {\n  const updatedData = { ...state.formData };\n\n  try {\n    const inputs = JSON.parse(updatedData[section][key]);\n\n    if (index < inputs.length - 1) {\n      const temp = inputs[index];\n      inputs[index] = inputs[index + 1];\n      inputs[index + 1] = temp;\n      updatedData[section][key] = JSON.stringify(inputs);\n      State.update({ formData: updatedData });\n    }\n  } catch (error) {\n    console.log(\n      `Error moving input down for ${section}/${key}/${index}:`,\n      error\n    );\n  }\n};\nreturn (\n  <FormContainer>\n    <h1>Settings</h1>\n    {Object.entries(state.formData).map(([section, values]) => (\n      <SectionContainer key={section}>\n        <SectionTitle>{section}</SectionTitle>\n        {Object.entries(values).map(([key, input]) => {\n          let parsedInput = JSON.parse(input);\n          if (parsedInput === null) {\n            parsedInput = input;\n          }\n          return (\n            <FormGroup key={key}>\n              <Label>{key}</Label>\n              {Array.isArray(parsedInput) ? (\n                parsedInput.map((item, index) => (\n                  <InputContainer key={index}>\n                    <Input\n                      type=\"text\"\n                      value={item.src}\n                      onChange={(e) =>\n                        handleInputChange(section, key, index, e.target.value)\n                      }\n                    />\n                    <Button\n                      onClick={() => moveInputUp(section, key, index)}\n                      disabled={index === 0}\n                    >\n                      &uarr;\n                    </Button>\n                    <Button\n                      onClick={() => moveInputDown(section, key, index)}\n                      disabled={index === parsedInput.length - 1}\n                    >\n                      &darr;\n                    </Button>\n                  </InputContainer>\n                ))\n              ) : (\n                <InputContainer>\n                  <Input\n                    type=\"text\"\n                    value={parsedInput}\n                    onChange={(e) =>\n                      handleInputChange(section, key, 0, e.target.value)\n                    }\n                  />\n                </InputContainer>\n              )}\n            </FormGroup>\n          );\n        })}\n      </SectionContainer>\n    ))}\n  </FormContainer>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Every.Settings", "__row_index": 0}