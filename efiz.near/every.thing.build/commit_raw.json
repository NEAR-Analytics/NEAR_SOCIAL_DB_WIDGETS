{"tx_hash": "9J7L8XhvgevAFUDcwwAgJGcyyWQALWPuFGP4mMeACErs", "action_id_social": "7QUrBW3UxteinGNs984rpFLAivJcQL3UEECDxdBiKQ9s-0-widget", "block_id": 95181379, "block_timestamp": "2023-06-27T22:14:41.526Z", "signer_id": "efiz.near", "widget_name": "every.thing.build", "source_code": "const path = props.path;\nconst blockHeight = props.blockHeight;\n\nconst thing = JSON.parse(Social.get(path, blockHeight) || \"null\");\nconst type = thing.type;\nconst typeObj = JSON.parse(Social.get(thing.type, blockHeight) || \"null\");\n\nconst accountId = context.accountId;\n\nif (accountId === null) {\n  return \"please login to a near account\";\n}\n\nconst Button = styled.button`\n  margin-left: 5px;\n`;\n\nState.init({\n  components: [],\n});\n\nfunction handleTypeClick(type) {\n  State.update({ components: [...state.components, { type }] });\n}\n\nfunction handleDeleteClick(index) {\n  const updatedComponents = [...state.components];\n  updatedComponents.splice(index, 1);\n  State.update({ components: updatedComponents });\n}\n\nfunction handleMoveUpClick(index) {\n  if (index > 0) {\n    const updatedComponents = [...state.components];\n    const component = updatedComponents[index];\n    updatedComponents.splice(index, 1);\n    updatedComponents.splice(index - 1, 0, component);\n    State.update({ components: updatedComponents });\n  }\n}\n\nfunction handleMoveDownClick(index) {\n  if (index < state.components.length - 1) {\n    const updatedComponents = [...state.components];\n    const component = updatedComponents[index];\n    updatedComponents.splice(index, 1);\n    updatedComponents.splice(index + 1, 0, component);\n    State.update({ components: updatedComponents });\n  }\n}\n\nfunction RenderComponent({ component, index }) {\n  const isTop = index === 0;\n  const isBottom = index === state.components.length - 1;\n  let widgetSrc;\n  if (component.type === \"embed\") {\n    widgetSrc = \"efiz.near/widget/Every.Thing.Embed\";\n  } else {\n    // const type = JSON.parse(Social.get(component.type, \"final\") || \"null\");\n    widgetSrc = \"efiz.near/widget/creator\";\n  }\n\n  const handleComponentChange = (value) => {\n    const updatedComponents = [...state.components];\n    updatedComponents[index] = {\n      ...updatedComponents[index],\n      value,\n    };\n    State.update({ components: updatedComponents });\n  };\n\n  function buildEdges(newPath, newType) {\n    const edges = [];\n    edges.push({\n      key: path,\n      value: {\n        type: newType,\n        path: newPath,\n      },\n    });\n    edges.push({\n      key: newPath,\n      value: {\n        type: type,\n        path: path,\n      },\n    });\n    return edges;\n  }\n\n  return (\n    <div>\n      <Widget\n        src={widgetSrc}\n        props={{\n          data: component.value,\n          type: component.type,\n          buildEdges,\n          onChange: handleComponentChange,\n        }}\n      />\n      <Button onClick={() => handleDeleteClick(index)}>Delete</Button>\n      <Button onClick={() => handleMoveUpClick(index)} disabled={isTop}>\n        &uarr;\n      </Button>\n      <Button onClick={() => handleMoveDownClick(index)} disabled={isBottom}>\n        &darr;\n      </Button>\n    </div>\n  );\n}\n\nreturn (\n  <div>\n    <Button onClick={() => handleTypeClick(\"efiz.near/type/community\")}>\n      Add Community\n    </Button>\n    <Button onClick={() => handleTypeClick(\"every.near/type/feed\")}>\n      Add Feed\n    </Button>\n    <Button onClick={() => handleTypeClick(\"embed\")}>Embed Thing</Button>\n    {state.components?.map((component, index) => (\n      <RenderComponent key={index} component={component} index={index} />\n    ))}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/every.thing.build", "__row_index": 4}