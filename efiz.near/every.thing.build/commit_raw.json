{"tx_hash": "uvRFo1SvccCRfqsiBrqCvb7FEXLevV3bG33MQeSNMsf", "action_id_social": "AkewzqgwqzR58BooECVd1sMZAVE5B2xVXdq1y78trKWA-0-widget", "block_id": 94189447, "block_timestamp": "2023-06-14T16:19:12.405Z", "signer_id": "efiz.near", "widget_name": "every.thing.build", "source_code": "const accountId = context.accountId || null;\nconst onChange = props.onChange;\n\nif (accountId === null) {\n  return \"please login to a near account\";\n}\n\nconst Button = styled.button`\n  margin-left: 5px;\n`;\n\nState.init({\n  components: [],\n});\n\nfunction handleApply() {\n  const thing = {};\n  const blocks = [];\n\n  state.components?.forEach((entry) => {\n    if (entry.type !== \"embed\") {\n      const entryId = Math.random();\n      thing[entryId] = JSON.stringify({\n        data: entry.value,\n        type: entry.type,\n      });\n      blocks.push(`${accountId}/thing/${entryId}`);\n    } else {\n      blocks.push(entry.value);\n    }\n  });\n  if (onChange) {\n    onChange(blocks);\n  } else {\n    console.log(blocks);\n  }\n}\n\nfunction handleTypeClick(type) {\n  State.update({ components: [...state.components, { type }] });\n}\n\nfunction handleDeleteClick(index) {\n  const updatedComponents = [...state.components];\n  updatedComponents.splice(index, 1);\n  State.update({ components: updatedComponents });\n}\n\nfunction handleMoveUpClick(index) {\n  if (index > 0) {\n    const updatedComponents = [...state.components];\n    const component = updatedComponents[index];\n    updatedComponents.splice(index, 1);\n    updatedComponents.splice(index - 1, 0, component);\n    State.update({ components: updatedComponents });\n  }\n}\n\nfunction handleMoveDownClick(index) {\n  if (index < state.components.length - 1) {\n    const updatedComponents = [...state.components];\n    const component = updatedComponents[index];\n    updatedComponents.splice(index, 1);\n    updatedComponents.splice(index + 1, 0, component);\n    State.update({ components: updatedComponents });\n  }\n}\n\nfunction RenderComponent({ component, index }) {\n  const isTop = index === 0;\n  const isBottom = index === state.components.length - 1;\n  let widgetSrc;\n  if (component.type === \"embed\") {\n    widgetSrc = \"efiz.near/widget/Every.Thing.Embed\";\n  } else {\n    const type = JSON.parse(Social.get(component.type, \"final\") || \"null\");\n    widgetSrc = type.widgets?.create;\n  }\n\n  const handleComponentChange = (value) => {\n    const updatedComponents = [...state.components];\n    updatedComponents[index] = {\n      ...updatedComponents[index],\n      value,\n    };\n    State.update({ components: updatedComponents });\n  };\n\n  return (\n    <div>\n      <Widget\n        src={widgetSrc}\n        props={{\n          data: state.components[index].value,\n          onChange: handleComponentChange,\n        }}\n      />\n      <Button onClick={() => handleDeleteClick(index)}>Delete</Button>\n      <Button onClick={() => handleMoveUpClick(index)} disabled={isTop}>\n        &uarr;\n      </Button>\n      <Button onClick={() => handleMoveDownClick(index)} disabled={isBottom}>\n        &darr;\n      </Button>\n    </div>\n  );\n}\n\nreturn (\n  <div>\n    <Button onClick={() => handleTypeClick(\"every.near/type/image\")}>\n      Add Image\n    </Button>\n    <Button onClick={() => handleTypeClick(\"every.near/type/markdown\")}>\n      Add Markdown\n    </Button>\n    <Button onClick={() => handleTypeClick(\"every.near/type/feed\")}>\n      Add Feed\n    </Button>\n    <Button onClick={() => handleTypeClick(\"embed\")}>Embed Thing</Button>\n    {state.components.map((component, index) => (\n      <RenderComponent key={index} component={component} index={index} />\n    ))}\n    <Button onClick={handleApply}>apply</Button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/every.thing.build", "__row_index": 2}