{"tx_hash": "DKcWrbGshicFAGW9b9rXbcJzWQpprfv6Sao78Luf4RkG", "action_id_social": "2MDEbcxdduBJzgt2rPQQjoDhWwdz7daW4dA2jxUFBkeg-0-widget", "block_id": 93064883, "block_timestamp": "2023-05-30T14:59:34.517Z", "signer_id": "efiz.near", "widget_name": "every.type.create", "source_code": "const type = props.type || null;\nconst blockHeight = props.blockHeight || \"final\";\n\nconst availableTypes = JSON.parse(props.availableTypes) || [\n  \"string\",\n  \"h1\",\n  \"paragraph\",\n  \"code\",\n  \"feed\",\n];\n\nif (type) {\n  const parts = type.split(\"/\");\n  type = JSON.parse(Social.get(type, blockHeight) || null);\n  type.name = parts[2];\n}\n\nState.init({\n  typeName: type.name || \"\",\n  properties: type.properties || [],\n  newPropertyName: \"\",\n  newPropertyType: \"string\",\n  newPropertyRequired: false,\n});\n\nconst FormContainer = styled.div`\n  margin: 20px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  max-width: 200px;\n  margin-bottom: 10px;\n  height: 30px;\n`;\n\nconst Select = styled.select`\n  height: 30px;\n`;\n\nconst Button = styled.button`\n  height: 30px;\n`;\n\nconst Text = styled.p`\n  display: inline-block;\n  margin-right: 10px;\n`;\n\nconst handleAddProperty = () => {\n  if (state.newPropertyName.trim() === \"\") return;\n\n  const newProperty = {\n    name: state.newPropertyName,\n    type: state.newPropertyType,\n    required: state.newPropertyRequired,\n  };\n\n  State.update({\n    properties: [...state.properties, newProperty],\n    newPropertyName: \"\",\n    newPropertyType: \"string\",\n    newPropertyRequired: false,\n  });\n};\n\nconst handleRemoveProperty = (index) => {\n  const updatedProperties = [...state.properties];\n  updatedProperties.splice(index, 1);\n  State.update({ properties: updatedProperties });\n};\n\nconst handlePropertyChange = (e, index) => {\n  const updatedProperties = [...state.properties];\n  updatedProperties[index].name = e.target.value.toLowerCase();\n  State.update({ properties: updatedProperties });\n};\n\nconst handleTypeChange = (e, index) => {\n  const updatedProperties = [...state.properties];\n  updatedProperties[index].type = e.target.value;\n  State.update({ properties: updatedProperties });\n};\n\nconst handleRequiredChange = (e, index) => {\n  const updatedProperties = [...state.properties];\n  updatedProperties[index].required = e.target.value === \"true\";\n  State.update({ properties: updatedProperties });\n};\n\nconst handleTypeNameChange = (e) => {\n  State.update({ typeName: e.target.value.toLowerCase() });\n};\n\nconst composeData = () => {\n  const data = {\n    type: {\n      [state.typeName]: JSON.stringify({\n        properties: state.properties,\n      }),\n    },\n  };\n  return data;\n};\n\nfunction TypeSelect({ value, onChange }) {\n  return (\n    <Select value={value} onChange={onChange}>\n      {availableTypes.map((it) => (\n        <option value={it} key={it}>\n          {it}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction RequiredSelect({ value, onChange }) {\n  return (\n    <Select value={value} onChange={onChange}>\n      <option value=\"true\">true</option>\n      <option value=\"false\">false</option>\n    </Select>\n  );\n}\n\nreturn (\n  <FormContainer>\n    <Row>\n      <Text>Type Name:</Text>\n      <Input\n        type=\"text\"\n        placeholder=\"Type Name\"\n        value={state.typeName}\n        onChange={handleTypeNameChange}\n      />\n    </Row>\n    <Text>Properties:</Text>\n    {state.properties.map((property, index) => (\n      <Row key={index}>\n        <Input\n          type=\"text\"\n          value={property.name}\n          onChange={(e) => handlePropertyChange(e, index)}\n        />\n        <TypeSelect\n          value={property.type}\n          onChange={(e) => handleTypeChange(e, index)}\n        />\n        <RequiredSelect\n          value={property.required}\n          onChange={(e) => handleRequiredChange(e, index)}\n        />\n        <Button onClick={() => handleRemoveProperty(index)}>Remove</Button>\n      </Row>\n    ))}\n    <Row>\n      <Input\n        type=\"text\"\n        placeholder=\"Property Name\"\n        value={state.newPropertyName}\n        onChange={(e) =>\n          State.update({ newPropertyName: e.target.value.toLowerCase() })\n        }\n      />\n      <TypeSelect\n        value={state.newPropertyType}\n        onChange={(e) => State.update({ newPropertyType: e.target.value })}\n      />\n      <RequiredSelect\n        value={state.newPropertyRequired}\n        onChange={(e) =>\n          State.update({ newPropertyRequired: e.target.value === \"true\" })\n        }\n      />\n      <Button\n        onClick={handleAddProperty}\n        disabled={state.newPropertyName.trim() === \"\"}\n      >\n        Add Property\n      </Button>\n    </Row>\n    <CommitButton\n      force\n      data={composeData()}\n      disabled={state.properties.length === 0}\n      className=\"styless\"\n    >\n      create\n    </CommitButton>\n  </FormContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/every.type.create", "__row_index": 2}