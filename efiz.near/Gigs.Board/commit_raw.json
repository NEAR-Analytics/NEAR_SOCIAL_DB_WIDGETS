{"tx_hash": "J9x35LCbwENuDgBnDN7HDqUy3jBCsCf8bgCFPmqXEzPx", "action_id_social": "EaxgpB2niXVQLGq6jrkS43V3HTiRnHRgmchgV2PymWzw-1-widget", "block_id": 91258875, "block_timestamp": "2023-05-06T22:10:46.996Z", "signer_id": "efiz.near", "widget_name": "Gigs.Board", "source_code": "const externalAppUrl = \"https://gigs-board.vercel.app\";\n\n/**\n * Initial Path (optional but recommended)\n */\nconst path = props.path;\n/**\n * Initial view height (optional but recommended)\n */\nconst initialViewHeight = 500;\nconst initialPayload = {\n  lanes: [\n    {\n      currentPage: 1,\n      id: \"proposed\",\n      style: {\n        width: 280,\n      },\n      title: \"Proposed\",\n      cards: [\n        {\n          description: \"Sort out recyclable and waste as needed\",\n          id: \"Plan2\",\n          label: \"10 mins\",\n          laneId: \"PLANNED\",\n          title: \"Dispose Garbage\",\n        },\n        {\n          description: \"Can AI make memes?\",\n          id: \"Plan3\",\n          label: \"30 mins\",\n          laneId: \"PLANNED\",\n          title: \"Write Blog\",\n        },\n        {\n          description: \"Transfer to bank account\",\n          id: \"Plan4\",\n          label: \"5 mins\",\n          laneId: \"PLANNED\",\n          title: \"Pay Rent\",\n        },\n      ],\n    },\n    {\n      currentPage: 1,\n      id: \"in-progress\",\n      label: \"10/20\",\n      style: {\n        width: 280,\n      },\n      title: \"In Progress\",\n      disallowAddingCard: true,\n      cards: [\n        {\n          description:\n            \"Soap wash and polish floor. Polish windows and doors. Scrap all broken glasses\",\n          id: \"Wip1\",\n          label: \"30 mins\",\n          laneId: \"WIP\",\n          title: \"Clean House\",\n        },\n      ],\n    },\n    {\n      currentPage: 1,\n      id: \"completed\",\n      style: {\n        width: 280,\n      },\n      title: \"Completed\",\n      disallowAddingCard: true,\n      cards: [],\n    },\n  ],\n};\n\nconst requestHandler = (request, response, Utils) => {\n  switch (request.type) {\n    case \"add-card\":\n      handleAddCard(request, response);\n      break;\n    case \"delete-card\":\n      handleDeleteCard(request, response);\n      break;\n    case \"get-cards\":\n      handleGetCards(request, response);\n      break;\n  }\n};\n\nconst handleAddCard = (request, response) => {\n  const { payload } = request;\n  if (payload) {\n    console.log(payload);\n  } else {\n    response(request).send({ error: \"payload not provided\" });\n  }\n};\n\nconst handleDeleteCard = (request, response) => {\n  const { payload } = request;\n  if (payload) {\n    console.log(payload);\n  } else {\n    response(request).send({ error: \"payload not provided\" });\n  }\n};\n\nconst handleGetCards = (request, response) => {\n  const { payload } = request;\n  if (payload) {\n    //      asyncFetch(\"https://monkfish-app-ginhc.ondigitalocean.app/graphql\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"X-Everything\": \"simple\",\n    //     },\n    //     body: JSON.stringify({\n    //       query:\n    //         \"mutation createEvent($allDay: Boolean = false, $startStr: String, $endStr: String, $source: String, $title: String, $url: String) { events { create(allDay: $allDay, endStr: $endStr, source: $source, startStr: $startStr, title: $title, url: $url) { entities { id } } } }\",\n    //       variables: {\n    //         source: context.accountId,\n    //         ...request.payload,\n    //       },\n    //     }),\n    //   }).then((resp) => {\n    //     if (resp.body.errors) {\n    //       response(request).send({ error: resp.body.errors[0].message });\n    //     } else {\n    //       response(request).send({ success: true });\n    //     }\n    //   });\n    //     response(request).send({ cards: })\n  } else {\n    response(request).send({ error: \"payload not provided\" });\n  }\n};\n\nreturn (\n  <Widget\n    src={\"wendersonpires.near/widget/NearSocialBridgeCore\"}\n    props={{\n      externalAppUrl,\n      path,\n      initialViewHeight,\n      initialPayload,\n      requestHandler,\n    }}\n  />\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Gigs.Board", "__row_index": 10}