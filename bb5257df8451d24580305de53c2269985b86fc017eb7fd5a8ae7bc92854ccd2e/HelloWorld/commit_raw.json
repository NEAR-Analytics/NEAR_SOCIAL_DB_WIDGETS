{"tx_hash": "FPrtTpNuxagVDyDFJD7ZZP5XeDhzFHEHeNfM4pDd7Gfo", "action_id_social": "B3yf4ZaqhmaiPiyHmP5ra3FAwYXcCR5GuqzeteXrDdwb-0-widget", "block_id": 86583393, "block_timestamp": "2023-03-05 03:16:25.829", "signer_id": "bb5257df8451d24580305de53c2269985b86fc017eb7fd5a8ae7bc92854ccd2e", "widget_name": "HelloWorld", "source_code": "\nlet currentTrade = {};\nlet currentSelectSide;\nlet tokens;\n\nasync function init(){\n  await listAvailableTokens();\n}\n\nasync function listAvailableTokens(){\n  console.log(\"initializing\");\n  let response = await fetch('https://tokens.coingecko.com/uniswap/all.json');\n  let tokenListJSON = await response.json();\n  console.log(\"listing available tokens\");\n  console.log(tokenListJSON);\n  tokens = tokenListJSON.tokens\n  console.log(\"tokens:\", tokens);\n\n  // create token list for modal\n  let parent = document.getElementById(\"token_list\");\n  for (const i in tokens){\n    // token row in the modal token list\n    let div = document.createElement(\"div\");\n    div.className = \"token_row\";\n    let html = `\n    <img class=\"token_list_img\" src=\"${tokens[i].logoURI}\">\n      <span class=\"token_list_text\">${tokens[i].symbol}</span>\n      `;\n    div.innerHTML = html;\n    div.onclick = () => {\n      selectToken(tokens[i]);\n    };\n    parent.appendChild(div);\n  }\n}\n\nfunction selectToken(token) {\n  closeModal();\n  currentTrade[currentSelectSide] = token;\n  console.log(\"currentTrade:\" , currentTrade);\n  renderInterface();\n}\n\nfunction renderInterface(){\n  if (currentTrade.from) {\n    console.log(currentTrade.from)\n    document.getElementById(\"from_token_img\").src = currentTrade.from.logoURI;\n    document.getElementById(\"from_token_text\").innerHTML = currentTrade.from.symbol;\n  }\n  if (currentTrade.to) {\n    document.getElementById(\"to_token_img\").src = currentTrade.to.logoURI;\n    document.getElementById(\"to_token_text\").innerHTML = currentTrade.to.symbol;\n  }\n\n}\n\nasync function connect() {\n    if (typeof window.ethereum !== \"undefined\") {\n        try {\n          console.log(\"connecting\");\n          await ethereum.request({ method: \"eth_requestAccounts\" });\n        } catch (error) {\n          console.log(error);\n        }\n        document.getElementById(\"login_button\").innerHTML = \"Connected\";\n        // const accounts = await ethereum.request({ method: \"eth_accounts\" });\n        document.getElementById(\"swap_button\").disabled = false;\n      } else {\n        document.getElementById(\"login_button\").innerHTML =\n          \"Please install MetaMask\";\n      }\n    }\n\nfunction openModal(side){\n    currentSelectSide = side;\n    document.getElementById(\"token_modal\").style.display = \"block\";\n}\n\nfunction closeModal(){\n  document.getElementById(\"token_modal\").style.display = \"none\";\n}\n\ninit();\n\ndocument.getElementById(\"login_button\").onclick = connect;\ndocument.getElementById(\"from_token_select\").onclick = () => {\n  openModal(\"from\");\n};\ndocument.getElementById(\"to_token_select\").onclick = () => {\n  openModal(\"to\");\n};\ndocument.getElementById(\"modal_close\").onclick = closeModal;\n\n\nreturn ()", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/bb5257df8451d24580305de53c2269985b86fc017eb7fd5a8ae7bc92854ccd2e/widget/HelloWorld", "metadata.name": NaN, "branch.draft": NaN, "metadata.tags.ethdenver2023": NaN, "metadata.linktree.website": NaN}