{"tx_hash": "EkqJLKmtzsccraaCyxgKncpcksVCvLdUPTMwQmCyHzrR", "action_id_social": "BnMTb2xsrr2QJojn1wseCiHqTd9GuaEXzqfELC8FHxjt-0-widget", "block_id": 87832653, "block_timestamp": "2023-03-22 00:37:30.962", "signer_id": "syi216.near", "widget_name": "Swap-ethxsushi-usdt-near", "source_code": "// FETCH LIDO ABI\r\n\r\nconst lidoContract = \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\";\r\n\r\nconst mainnetLidoContract = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\r\nconst gorliLidoContract = \"0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506\";\r\nconst tokenDecimals = 18;\r\nconst contract = \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\";\r\n\r\n//const sushiTokenContract = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\r\n\r\n//const network = \"gorli\"; // \"gorli\" // \"rinkeby\" // \"mainnet\"\r\n\r\nconst network = \"mainnet\";\r\nswitch (network) {\r\n  case \"gorli\":\r\n    lidoContract = gorliLidoContract;\r\n    break;\r\n  case \"mainnet\":\r\n    lidoContract = mainnetLidoContract;\r\n    break;\r\n  case \"ropsten\":\r\n    lidoContract = mainnetLidoContract;\r\n    break;\r\n  default:\r\n    lidoContract = mainnetLidoContract;\r\n    break;\r\n}\r\n\r\nconst handleSelect = (data) => {\r\n  console.log(data.target.value);\r\n  let info = data.target.value.split(\"-\");\r\n  State.update({ tokenTo: info[1] });\r\n  if (info[0] == \"sushi\") {\r\n    State.update({ tokenSelected: 0 });\r\n  } else if (info[0] == \"usdt\") {\r\n    State.update({ tokenSelected: 1 });\r\n  } else if (info[0] == \"near\") {\r\n    State.update({ tokenSelected: 2 });\r\n  }\r\n  console.log(state.tokenSelected);\r\n  contract = data.target.value;\r\n};\r\n\r\nconst lidoAbi = fetch(\r\n  \"https://raw.githubusercontent.com/cloudmex/sushiswap-bos/main/abi-sushi.json\"\r\n);\r\n\r\nconsole.log(lidoAbi);\r\n\r\nif (!lidoAbi.ok) {\r\n  return \"Loading\";\r\n}\r\n\r\nconst iface = new ethers.utils.Interface(lidoAbi.body);\r\n\r\n// FETCH LIDO STAKING APR\r\n\r\n/*if (state.lidoArp === undefined) {\r\n  const apr = fetch(\r\n    \"https://api.allorigins.win/get?url=https://stake.lido.fi/api/sma-steth-apr\"\r\n  );\r\n  if (!apr) return;\r\n  State.update({ lidoArp: JSON.parse(apr?.body?.contents) ?? \"...\" });\r\n}*/\r\n\r\n// HELPER FUNCTIONS\r\n\r\n/*const getStakedBalance = (receiver) => {\r\n  const encodedData = iface.encodeFunctionData(\"balanceOf\", [receiver]);\r\n\r\n  return Ethers.provider()\r\n    .call({\r\n      to: lidoContract,\r\n      data: encodedData,\r\n    })\r\n    .then((rawBalance) => {\r\n      const receiverBalanceHex = iface.decodeFunctionResult(\r\n        \"balanceOf\",\r\n        rawBalance\r\n      );\r\n\r\n      return Big(receiverBalanceHex.toString())\r\n        .div(Big(10).pow(tokenDecimals))\r\n        .toFixed(2)\r\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    });\r\n};*/\r\n\r\nconst submitEthers = (strEther, _referral) => {\r\n  if (!strEther) {\r\n    console.log(\"contrato: \", state.tokenTo);\r\n    return console.log(\"Amount is missing\");\r\n  }\r\n\r\n  const erc20 = new ethers.Contract(\r\n    lidoContract,\r\n    lidoAbi.body,\r\n    Ethers.provider().getSigner()\r\n  );\r\n  console.log(\"11111\", erc20);\r\n  let amount = ethers.utils.parseUnits(strEther, tokenDecimals).toHexString();\r\n\r\n  //uint amountOutMin, address[] calldata path, address to, uint deadline\r\n  //const ETHaddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n  //const SUSHIaddress = \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\";\r\n  //const usdtContract = \"0xdAC17F958D2ee523a2206206994597C13D831ec7\"\r\n  //const sushiMainContract = \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\"\r\n\r\n  let ARR = [\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", state.tokenTo];\r\n\r\n  console.log(\"contract: \", contract);\r\n\r\n  console.log(\"amountlol\", amount);\r\n  console.log(\"ARRlol\", ARR);\r\n  console.log(\r\n    \"Ethers.provider().getSigner()l\",\r\n    Ethers.provider().getSigner().getAddress()\r\n  );\r\n  console.log(\"Sender:\", state.sender);\r\n  console.log(\"block.timestamp + 60 1678849571\");\r\n  console.log(\"token to swap: \", state.tokenTo);\r\n  erc20\r\n    .swapExactETHForTokens(\r\n      amount,\r\n      ARR,\r\n      //Ethers.provider().getSigner(),\r\n      state.sender,\r\n      Date.now() + 180,\r\n      { value: amount, gasLimit: 3e5 }\r\n    )\r\n    .then((transactionHash) => {\r\n      console.log(\"transactionHash is \" + transactionHash);\r\n    });\r\n};\r\n\r\n// DETECT SENDER\r\n\r\nif (state.sender === undefined) {\r\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\r\n  if (accounts.length) {\r\n    State.update({ sender: accounts[0] });\r\n    console.log(\"set sender\", accounts[0]);\r\n  }\r\n}\r\n\r\n//if (!state.sender)  return \"Please login first\";\r\n\r\n// FETCH SENDER BALANCE\r\n\r\nif (state.balance === undefined && state.sender) {\r\n  State.update({ tokenTo: \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\" });\r\n  State.update({ tokenSelected: 0 });\r\n  Ethers.provider()\r\n    .getBalance(state.sender)\r\n    .then((balance) => {\r\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\r\n    });\r\n}\r\n\r\n// FETCH SENDER STETH BALANCE\r\n\r\n/*\r\nif (state.stakedBalance === undefined && state.sender) {\r\n  getStakedBalance(state.sender).then((stakedBalance) => {\r\n    State.update({ stakedBalance });\r\n  });\r\n}*/\r\n\r\n// FETCH TX COST\r\n\r\n/*if (state.txCost === undefined) {\r\n  const gasEstimate = ethers.BigNumber.from(1875000);\r\n  const gasPrice = ethers.BigNumber.from(1500000000);\r\n\r\n  const gasCostInWei = gasEstimate.mul(gasPrice);\r\n  const gasCostInEth = ethers.utils.formatEther(gasCostInWei);\r\n\r\n  let responseGql = fetch(\r\n    \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\r\n    {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: `{\r\n          bundle(id: \"1\" ) {\r\n            ethPrice\r\n          }\r\n        }`,\r\n      }),\r\n    }\r\n  );\r\n\r\n  if (!responseGql) return \"\";\r\n\r\n  const ethPriceInUsd = responseGql.body.data.bundle.ethPrice;\r\n\r\n  const txCost = Number(gasCostInEth) * Number(ethPriceInUsd);\r\n\r\n  State.update({ txCost: `$${txCost.toFixed(2)}` });\r\n} */\r\n\r\n// FETCH CSS\r\n\r\nconst cssFont = fetch(\r\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\r\n).body;\r\n// const css = fetch(\r\n//   \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\r\n// ).body;\r\nconst css = `\r\n.LidoContainer{\r\n    box-sizing: border-box;\r\n    margin: 0px auto;\r\n    min-width: 320px;\r\n    width: 100%;\r\n    padding: 0px 32px;\r\n    max-width: 560px;\r\n    position: relative;\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.Header{\r\n    font-weight: 800;\r\n    font-size: 26px;\r\n    margin-bottom: 0.2em;\r\n    line-height: 1.2em;\r\n    text-align: center;\r\n}\r\n\r\n.SubHeader{\r\n    font-weight: 500;\r\n    color: #FF79D8;\r\n    margin-bottom: 16px;\r\n    font-size: 12px;\r\n    line-height: 1.5em;\r\n    text-align: center;\r\n};\r\n\r\n.LidoForm{\r\n    background: linear-gradient(65.21deg, rgb(223, 39, 270) 19.1%, rgb(255, 135, 220) 100%);\r\n    margin-bottom: -20px;\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    padding-bottom: 52px;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n    border-radius: 20px;\r\n    margin: 0px;\r\n    padding: 32px;\r\n    box-shadow: none;\r\n    color: #fff;    \r\n}\r\n\r\n.LidoFormTopContainer{\r\n    margin-top: 0px;\r\n    display: flex;\r\n    margin: 20px 0px;\r\n}\r\n\r\n.LidoFormTopContainerLeft{\r\n    margin-right: 18px;\r\n    flex-basis: 50%;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n}\r\n\r\n.LidoFormTopContainerLeftContent1{\r\n    display: flex;\r\n    flex-direction: row;\r\n    -webkit-box-pack: start;\r\n    justify-content: flex-start;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n}\r\n\r\n.LidoFormTopContainerLeftContent1Container{\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n}\r\n\r\n.LidoFormTopContainerLeftContent1Circle{\r\n    background-color: #53BA95;\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    margin-left: 8px;\r\n}\r\n\r\n.LidoFormTopContainerLeftContent2{\r\n    margin-top: 2px;\r\n    font-size: 18px;\r\n    line-height: 1.4em;\r\n    font-weight: 800;\r\n    white-space: nowrap;\r\n    display: block;\r\n}\r\n\r\n.LidoFormTopContainerRight{\r\n    align-self: stretch;\r\n    display: flex;\r\n    flex: 1 1 50%;\r\n    -webkit-box-flex: 1;\r\n    overflow: hidden;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    -webkit-box-pack: end;\r\n    justify-content: flex-end;\r\n    margin-left: auto;\r\n}\r\n\r\n.LidoFormTopContainerRightContent1{\r\n    max-width: 100%;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    margin: 0px;\r\n    border-radius: 1000px;\r\n    padding: 4px;\r\n    display: inline-flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    background: rgba(0, 0, 0, .2);\r\n    color: #fff;    \r\n}\r\n\r\n.LidoFormTopContainerRightContent1Text{\r\n    padding: 0px 6px;\r\n    font-weight: 400;\r\n}\r\n\r\n.LidoSplitter{\r\n    box-sizing: border-box;\r\n    list-style: none;\r\n    opacity: 0.1;\r\n    padding: 0px;\r\n    flex-shrink: 0;\r\n    -webkit-box-flex: 0;\r\n    flex-grow: 0;\r\n    border-top: 1px solid currentcolor;\r\n    width: 100%;\r\n    height: 0px;\r\n    margin: 0px;\r\n}\r\n\r\n.LidoFormBottomContainer{\r\n    margin-bottom: 0px;\r\n    display: flex;\r\n    margin: 20px 0px;\r\n}\r\n\r\n.LidoAprContainer{\r\n    margin-right: 0px;\r\n    flex-basis: 50%;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n}\r\n\r\n.LidoAprTitle{\r\n    display: flex;\r\n    flex-direction: row;\r\n    -webkit-box-pack: start;\r\n    justify-content: flex-start;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n}\r\n\r\n.LidoAprValue{\r\n    margin-top: 2px;\r\n    font-size: 16px;\r\n    line-height: 1.4em;\r\n    font-weight: 800;\r\n    white-space: nowrap;\r\n    color: rgb(97, 183, 95);\r\n    font-size: 16px;\r\n    line-height: 1.4em;\r\n    font-weight: 800;\r\n    white-space: nowrap;\r\n}        \r\n}\r\n\r\n.LidoStakeForm{\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n    border-radius: 0px 0px 20px 20px;\r\n    margin: 0px;\r\n    padding: 32px;\r\n    box-shadow: none;\r\n    background: #eee;\r\n    color: #7a8aa0;\r\n    margin-top: -30px;\r\n}\r\n\r\n.LidoStakeFormInputContainer{\r\n    margin-bottom: 16px;\r\n    z-index: 2;\r\n    position: relative;\r\n    display: inline-flex;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-image: initial;\r\n    border-radius: 10px;\r\n    -webkit-box-align: stretch;\r\n    align-items: stretch;\r\n    box-sizing: border-box;\r\n    padding: 0px 15px;\r\n    cursor: text;\r\n    transition: border-color 100ms ease 0s;\r\n    width: 100%;\r\n    background: #fff;\r\n    border-color: rgba(0,10,61,.12);\r\n    color: #273852;\r\n}\r\n\r\n.LidoStakeFormInputContainerSpan1{\r\n    -webkit-box-flex: 0;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    cursor: inherit;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    padding-right: 16px;\r\n}\r\n\r\n.selectCSS{\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    display: flex;\r\n    border: none;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n    position: relative;\r\n    padding: 17px 0px;\r\n    color: #273852;\r\n}\r\n\r\n.LidoStakeFormInputContainerSpan2{\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    display: flex;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n    position: relative;\r\n    padding: 17px 0px;\r\n}\r\n\r\n.LidoStakeFormInputContainerSpan2Input{\r\n    width: 100%;\r\n    font-family: inherit;\r\n    font-weight: 400;\r\n    font-size: 1em;\r\n    line-height: 1.43em;\r\n    padding: 0px;\r\n    border-radius: 0px;\r\n    background: transparent;\r\n    box-shadow: none;\r\n    border: none;\r\n    outline: none;\r\n    position: relative;\r\n    top: 0px;\r\n    color: #273852;\r\n}\r\n\r\n.LidoStakeFormInputContainerSpan3{\r\n    -webkit-box-flex: 0;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    cursor: inherit;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    padding-left: 16px;\r\n}\r\n\r\n.LidoStakeFormInputContainerSpan3Content{\r\n    cursor: pointer;\r\n    letter-spacing: 0.4px;\r\n    box-sizing: border-box;\r\n    margin: 0px;\r\n    border: none;\r\n    outline: none;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background: transparent;\r\n    font-family: inherit;\r\n    font-weight: 700;\r\n    width: auto;\r\n    line-height: 1em;\r\n    font-size: 10px;\r\n    border-radius: 6px;\r\n    padding: 11px 16px;\r\n    min-width: 50px;\r\n    color: #fa7aad;\r\n    &::before {\r\n            display: block;\r\n            background-color: #f72277;\r\n            transition: opacity 100ms ease 0s;\r\n            opacity: 0.1;\r\n            content: \"\";\r\n            position: absolute;\r\n            inset: 0px;\r\n            pointer-events: none;\r\n            border-radius: inherit;\r\n        }    \r\n}\r\n\r\n.LidoStakeFormInputContainerSpan3Max{\r\n    position: relative;\r\n    pointer-events: none;\r\n    visibility: visible;\r\n}\r\n\r\n.LidoStakeFormSubmitContainer{\r\n    cursor: pointer;\r\n    box-sizing: border-box;\r\n    margin: 0px;\r\n    border: none;\r\n    outline: none;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background-image: initial;\r\n    background-position: initial;\r\n    background-size: initial;\r\n    background-repeat: initial;\r\n    background-attachment: initial;\r\n    background-origin: initial;\r\n    background-clip: initial;\r\n    font-family: inherit;\r\n    font-weight: 700;\r\n    width: 100%;\r\n    line-height: 1em;\r\n    font-size: 14px;\r\n    border-radius: 10px;\r\n    padding: 21px 44px;\r\n    min-width: 120px;\r\n    color: #fff;\r\n    background-color: #fa7aad;\r\n    transition: background-color 100ms ease 0s;\r\n    &:hover {\r\n        background-color: ##f72277;\r\n    }\r\n}\r\n\r\n.LidoFooterContainer{\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n}\r\n\r\n.LidoFooterRaw{\r\n    margin-top: 0px;\r\n    display: flex;\r\n    margin: 16px 0px;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n}\r\n\r\n.LidoFooterRawLeft{\r\n    color: #7a8aa0;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n}\r\n\r\n.LidoFooterRawRight{\r\n    color: #273852;\r\n    text-align: right;\r\n    margin-left: 32px;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n}\r\n`;\r\n\r\nif (!cssFont || !css) return \"\";\r\n\r\nif (!state.theme) {\r\n  State.update({\r\n    theme: styled.div`\r\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n    ${cssFont}\r\n    ${css}\r\n`,\r\n  });\r\n}\r\nconst Theme = state.theme;\r\n\r\n// OUTPUT UI\r\n\r\nconst getSender = () => {\r\n  return !state.sender\r\n    ? \"\"\r\n    : state.sender.substring(0, 6) +\r\n        \"...\" +\r\n        state.sender.substring(state.sender.length - 4, state.sender.length);\r\n};\r\n\r\nreturn (\r\n  <Theme>\r\n    <div class=\"LidoContainer\">\r\n      <div class=\"Header\">Swap $ETH &lt;&gt; $SUSHI/$USDT/$NEAR</div>\r\n      <div class=\"SubHeader\">Swap ETH and receive SUSHI</div>\r\n\r\n      <div class=\"LidoForm\">\r\n        {state.sender && (\r\n          <>\r\n            <div class=\"LidoFormTopContainer\">\r\n              <div class=\"LidoFormTopContainerLeft\">\r\n                <div class=\"LidoFormTopContainerLeftContent1\">\r\n                  <div class=\"LidoFormTopContainerLeftContent1Container\">\r\n                    <span>Available to swap</span>\r\n                    <div class=\"LidoFormTopContainerLeftContent1Circle\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"LidoFormTopContainerLeftContent2\">\r\n                  <span>\r\n                    {state.balance ?? (!state.sender ? \"0\" : \"...\")}&nbsp;ETH\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"LidoFormTopContainerRight\">\r\n                <div class=\"LidoFormTopContainerRightContent1\">\r\n                  <div class=\"LidoFormTopContainerRightContent1Text\">\r\n                    <span>\r\n                      <b>Account:</b> {getSender()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"LidoSplitter\" />\r\n          </>\r\n        )}\r\n      </div>\r\n      <div class=\"LidoStakeForm\">\r\n        <div class=\"mb-2 LidoStakeFormInputContainer\">\r\n          <select\r\n            name=\"select\"\r\n            id=\"token\"\r\n            class=\"selectCSS\"\r\n            onChange={handleSelect}\r\n          >\r\n            <option\r\n              value=\"sushi-0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\"\r\n              data-image=\"https://www.spectre.ai/assets/images/assets/SUSHI-logo.png?v=2.13\"\r\n            >\r\n              SUSHI\r\n            </option>\r\n            <option value=\"usdt-0xdAC17F958D2ee523a2206206994597C13D831ec7\">\r\n              USDT\r\n            </option>\r\n            <option value=\"near-0x85F17Cf997934a597031b2E18a9aB6ebD4B9f6a4\">\r\n              NEAR\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"LidoStakeFormInputContainer\">\r\n          <span class=\"LidoStakeFormInputContainerSpan1\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path\r\n                opacity=\"0.6\"\r\n                d=\"M11.999 3.75v6.098l5.248 2.303-5.248-8.401z\"\r\n              ></path>\r\n              <path d=\"M11.999 3.75L6.75 12.151l5.249-2.303V3.75z\"></path>\r\n              <path\r\n                opacity=\"0.6\"\r\n                d=\"M11.999 16.103v4.143l5.251-7.135L12 16.103z\"\r\n              ></path>\r\n              <path d=\"M11.999 20.246v-4.144L6.75 13.111l5.249 7.135z\"></path>\r\n              <path\r\n                opacity=\"0.2\"\r\n                d=\"M11.999 15.144l5.248-2.993-5.248-2.301v5.294z\"\r\n              ></path>\r\n              <path\r\n                opacity=\"0.6\"\r\n                d=\"M6.75 12.151l5.249 2.993V9.85l-5.249 2.3z\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n          <span class=\"LidoStakeFormInputContainerSpan2\">\r\n            <input\r\n              disabled={!state.sender}\r\n              class=\"LidoStakeFormInputContainerSpan2Input\"\r\n              value={state.strEther}\r\n              onChange={(e) => State.update({ strEther: e.target.value })}\r\n              placeholder=\"Amount\"\r\n            />\r\n          </span>\r\n          <span\r\n            class=\"LidoStakeFormInputContainerSpan3\"\r\n            onClick={() => {\r\n              State.update({\r\n                //strEther: (parseFloat(state.balance) - 0.05).toFixed(2),\r\n                strEther: parseFloat(state.balance).toFixed(2),\r\n              });\r\n            }}\r\n          >\r\n            <button\r\n              class=\"LidoStakeFormInputContainerSpan3Content\"\r\n              disabled={!state.sender}\r\n            >\r\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">MAX</span>\r\n            </button>\r\n          </span>\r\n        </div>\r\n        {!!state.sender ? (\r\n          <button\r\n            class=\"LidoStakeFormSubmitContainer\"\r\n            onClick={() => submitEthers(state.strEther, state.sender)}\r\n          >\r\n            <span>Swap</span>\r\n          </button>\r\n        ) : (\r\n          <Web3Connect\r\n            className=\"LidoStakeFormSubmitContainer\"\r\n            connectLabel=\"Connect with Web3\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  </Theme>\r\n);\r\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/syi216.near/widget/Swap-ethxsushi-usdt-near", "metadata.tags.ethdenver2023": null, "metadata.name": "SushiSwap Eth->SUSHI/USDT/NEAR", "metadata.image.ipfs_cid": NaN, "metadata.tags.near": NaN, "metadata.tags.sushi": NaN, "metadata.tags.swap": NaN, "metadata.tags.usdt": NaN, "metadata.tags.widget": NaN, "metadata": NaN}