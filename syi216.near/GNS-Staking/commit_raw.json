{"tx_hash": "7b4ctWHhHeBFafKSFeK2NXCgL6qy7hSKvm1DyD2cvnw6", "action_id_social": "J4pVDbPnefcaMuTacqkyo3T5srH8h17xzoXarncyk96i-0-widget", "block_id": 87896412, "block_timestamp": "2023-03-22 21:18:33.254", "signer_id": "syi216.near", "widget_name": "GNS-Staking", "source_code": "// FETCH LIDO ABI\n\nconst lidoContract = \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\";\n\n//Contrato de gains bridge\nconst gbContract = \"0xDF774A4F3EA5095535f5B8f5b9149caF90FF75Bd\";\nconst gnsLZContract = \"0x3c2269811836af69497E5F486A85D7316753cf62\";\nconst gnsToken = \"0xE5417Af564e4bFDA1c483642db72007871397896\";\nconst gnsStaking = \"0xFb06a737f549Eb2512Eb6082A808fc7F16C0819D\";\n\nconst mainnetLidoContract = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nconst gorliLidoContract = \"0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506\";\nconst tokenDecimals = 18;\nconst contract = \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\";\n\n//const sushiTokenContract = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\n\n//const network = \"gorli\"; // \"gorli\" // \"rinkeby\" // \"mainnet\"\n\nconst network = \"mainnet\";\nswitch (network) {\n  case \"gorli\":\n    lidoContract = gbContract;\n    break;\n  case \"mainnet\":\n    lidoContract = gbContract;\n    break;\n  case \"ropsten\":\n    lidoContract = gbContract;\n    break;\n  default:\n    lidoContract = gbContract;\n    break;\n}\n\nconst handleSelect = (data) => {\n  console.log(data.target.value);\n  let info = data.target.value.split(\"-\");\n  State.update({ tokenTo: info[1] });\n  if (info[0] == \"sushi\") {\n    State.update({ tokenSelected: 0 });\n  } else if (info[0] == \"usdt\") {\n    State.update({ tokenSelected: 1 });\n  } else if (info[0] == \"near\") {\n    State.update({ tokenSelected: 2 });\n  }\n  console.log(state.tokenSelected);\n  contract = data.target.value;\n};\n\nconst lidoAbi = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmawuBDkx1w56AFpZ2hiph1gaVrnq3gyAMRnSH2c9S54TY\"\n);\n\nconst gnsLZEndAbi = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/Qmd3xkYoDxS7ATdvoDzTgF1ojLog7kTqoTeWBhJQfUZ4F9\"\n);\n\nconst gnsTokenAbi = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmRNckfDbxxjHBhHqMWewKg2dxfUXpoCumxS6YGRW4uAhq\"\n);\n\nconst gnsStakingAbi = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmXj2sEUz2RNubsnnAt5hpBBeHtRzhVMZvJ8vVG5WwTcND\"\n);\n\nconsole.log(lidoAbi);\n\nif (!lidoAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(lidoAbi.body);\n\n// FETCH LIDO STAKING APR\n\n/*if (state.lidoArp === undefined) {\n  const apr = fetch(\n    \"https://api.allorigins.win/get?url=https://stake.lido.fi/api/sma-stgns-apr\"\n  );\n  if (!apr) return;\n  State.update({ lidoArp: JSON.parse(apr?.body?.contents) ?? \"...\" });\n}*/\n\n// HELPER FUNCTIONS\n\nconst getStakedBalance = (receiver) => {\n  const contractGNSStaking = new ethers.Contract(\n    gnsStaking,\n    gnsStakingAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contractGNSStaking\n    .users(Ethers.provider().getSigner().getAddress())\n    .then((res) => {\n      console.log(res[0]);\n      return Big(res[0]).div(Big(10).pow(18)).toFixed(2);\n    });\n};\n\nconst submitEthers = (strEther, _referral) => {\n  if (!strEther) {\n    console.log(\"contrato: \", state.tokenTo);\n    return console.log(\"Amount is missing\");\n  }\n\n  const erc20 = new ethers.Contract(\n    lidoContract,\n    lidoAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  const contractGNSLZ = new ethers.Contract(\n    gnsLZContract,\n    gnsLZEndAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  const contractGNSTOK = new ethers.Contract(\n    gnsToken,\n    gnsTokenAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  const contractGNSStaking = new ethers.Contract(\n    gnsStaking,\n    gnsStakingAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  console.log(\"11111\", erc20);\n  console.log(\"contrato GNSLZ\", contractGNSLZ);\n  console.log(\"contrato GNS Token\", contractGNSTOK);\n  console.log(\"contrato GNS Staking\", contractGNSStaking);\n  let amount = ethers.utils.parseUnits(strEther, tokenDecimals).toHexString();\n\n  contractGNSStaking\n    .stakeTokens(amount, { gasLimit: 3e6 })\n    .then((transactionHash) => {\n      console.log(\"transactionHash is \" + transactionHash);\n    });\n  // contractGNSTOK.balanceOf(state.sender).then((res) => {\n  //   console.log(\"balance GNS\", Big(res).div(Big(10).pow(18)).toFixed(2));\n  // });\n  // erc20.bridgeTokens(dstChainID, amount, { value: amount, gasLimit: 3e3 });\n  //\n  //uint amountOutMin, address[] calldata path, address to, uint deadline\n  //const ETHaddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\n  //const SUSHIaddress = \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\";\n  //const usdtContract = \"0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n  //const sushiMainContract = \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\"\n\n  //   let ARR = [\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", state.tokenTo];\n\n  //   console.log(\"contract: \", contract);\n\n  //   console.log(\"amountlol\", amount);\n  //   console.log(\"ARRlol\", ARR);\n  //   console.log(\n  //     \"Ethers.provider().getSigner()l\",\n  //     Ethers.provider().getSigner().getAddress()\n  //   );\n  //   console.log(\"Sender:\", state.sender);\n  //   console.log(\"block.timestamp + 60 1678849571\");\n  //   console.log(\"token to swap: \", state.tokenTo);\n  //   erc20\n  //     .swapExactETHForTokens(\n  //       amount,\n  //       ARR,\n  //       //Ethers.provider().getSigner(),\n  //       state.sender,\n  //       Date.now() + 180,\n  //       { value: amount, gasLimit: 3e5 }\n  //     )\n  //     .then((transactionHash) => {\n  //       console.log(\"transactionHash is \" + transactionHash);\n  //     });\n};\n\n// DETECT SENDER\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n  }\n}\n\n//if (!state.sender)  return \"Please login first\";\n\n// FETCH SENDER BALANCE\n\nif (state.balance === undefined && state.sender) {\n  // State.update({ tokenTo: \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\" });\n  // State.update({ tokenSelected: 0 });\n  const contractGNSTOK = new ethers.Contract(\n    gnsToken,\n    gnsTokenAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contractGNSTOK.balanceOf(state.sender).then((res) => {\n    console.log(\"balance GNS\", Big(res).div(Big(10).pow(18)).toFixed(2));\n    State.update({ balance: Big(res).div(Big(10).pow(18)).toFixed(2) });\n  });\n  // Ethers.provider()\n  //   .getBalance(state.sender)\n  //   .then((balance) => {\n  //     State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n  //   });\n}\n\n// FETCH SENDER STETH BALANCE\n\nif (state.stakedBalance === undefined && state.sender) {\n  const contractGNSTOK = new ethers.Contract(\n    gnsToken,\n    gnsTokenAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contractGNSTOK.balanceOf(state.sender).then((res) => {\n    console.log(\"balance GNS\", Big(res).div(Big(10).pow(18)).toFixed(2));\n    State.update({ stakedBalance: Big(res).div(Big(10).pow(18)).toFixed(2) });\n  });\n}\n\n// FETCH TX COST\n\n/*if (state.txCost === undefined) {\n  const gasEstimate = ethers.BigNumber.from(1875000);\n  const gasPrice = ethers.BigNumber.from(1500000000);\n\n  const gasCostInWei = gasEstimate.mul(gasPrice);\n  const gasCostInEth = ethers.utils.formatEther(gasCostInWei);\n\n  let responseGql = fetch(\n    \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `{\n          bundle(id: \"1\" ) {\n            ethPrice\n          }\n        }`,\n      }),\n    }\n  );\n\n  if (!responseGql) return \"\";\n\n  const ethPriceInUsd = responseGql.body.data.bundle.ethPrice;\n\n  const txCost = Number(gasCostInEth) * Number(ethPriceInUsd);\n\n  State.update({ txCost: `$${txCost.toFixed(2)}` });\n} */\n\n// FETCH CSS\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\n// const css = fetch(\n//   \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n// ).body;\nconst css = `\n.LidoContainer{\n    box-sizing: border-box;\n    margin: 0px auto;\n    min-width: 320px;\n    width: 100%;\n    padding: 0px 32px;\n    max-width: 560px;\n    position: relative;\n    margin-top: 8px;\n    margin-bottom: 8px;\n}\n\n.Header{\n    font-weight: 800;\n    font-size: 26px;\n    margin-bottom: 0.2em;\n    line-height: 1.2em;\n    text-align: center;\n}\n\n.SubHeader{\n    font-weight: 500;\n    color: #0df4a3;\n    margin-bottom: 16px;\n    font-size: 12px;\n    line-height: 1.5em;\n    text-align: center;\n};\n\n.LidoForm{\n    background: linear-gradient(65.21deg, rgb(97, 171, 138) 10%, rgb(0, 255, 141) 100%);\n    margin-bottom: -20px;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n    padding-bottom: 52px;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.6em;\n    border-radius: 20px;\n    margin: 0px;\n    padding: 32px;\n    box-shadow: none;\n    color: #fff;    \n}\n\n.LidoFormTopContainer{\n    margin-top: 0px;\n    display: flex;\n    margin: 20px 0px;\n}\n\n.LidoFormTopContainerLeft{\n    margin-right: 18px;\n    flex-basis: 50%;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n    font-size: 12px;\n    line-height: 1.6em;\n}\n\n.LidoFormTopContainerLeftContent1{\n    display: flex;\n    flex-direction: row;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    -webkit-box-align: center;\n    align-items: center;\n}\n\n.LidoFormTopContainerLeftContent1Container{\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n}\n\n.LidoFormTopContainerLeftContent1Circle{\n    background-color: #53BA95;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    margin-left: 8px;\n}\n\n.LidoFormTopContainerLeftContent2{\n    margin-top: 2px;\n    font-size: 18px;\n    line-height: 1.4em;\n    font-weight: 800;\n    white-space: nowrap;\n    display: block;\n}\n\n.LidoFormTopContainerRight{\n    align-self: stretch;\n    display: flex;\n    flex: 1 1 50%;\n    -webkit-box-flex: 1;\n    overflow: hidden;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: end;\n    justify-content: flex-end;\n    margin-left: auto;\n}\n\n.LidoFormTopContainerRightContent1{\n    max-width: 100%;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0px;\n    border-radius: 1000px;\n    padding: 4px;\n    display: inline-flex;\n    -webkit-box-align: center;\n    align-items: center;\n    background: rgba(0, 0, 0, .2);\n    color: #fff;    \n}\n\n.LidoFormTopContainerRightContent1Text{\n    padding: 0px 6px;\n    font-weight: 400;\n}\n\n.LidoSplitter{\n    box-sizing: border-box;\n    list-style: none;\n    opacity: 0.1;\n    padding: 0px;\n    flex-shrink: 0;\n    -webkit-box-flex: 0;\n    flex-grow: 0;\n    border-top: 1px solid currentcolor;\n    width: 100%;\n    height: 0px;\n    margin: 0px;\n}\n\n.LidoFormBottomContainer{\n    margin-bottom: 0px;\n    display: flex;\n    margin: 20px 0px;\n}\n\n.LidoAprContainer{\n    margin-right: 0px;\n    flex-basis: 50%;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n    font-size: 12px;\n    line-height: 1.6em;\n}\n\n.LidoAprTitle{\n    display: flex;\n    flex-direction: row;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    -webkit-box-align: center;\n    align-items: center;\n}\n\n.LidoAprValue{\n    margin-top: 2px;\n    font-size: 16px;\n    line-height: 1.4em;\n    font-weight: 800;\n    white-space: nowrap;\n    color: rgb(97, 183, 95);\n    font-size: 16px;\n    line-height: 1.4em;\n    font-weight: 800;\n    white-space: nowrap;\n}        \n}\n\n.LidoStakeForm{\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.6em;\n    border-radius: 0px 0px 20px 20px;\n    margin: 0px;\n    padding: 32px;\n    box-shadow: none;\n    background: #eee;\n    color: #7a8aa0;\n    margin-top: -30px;\n}\n\n.LidoStakeFormInputContainer{\n    margin-bottom: 16px;\n    z-index: 2;\n    position: relative;\n    display: inline-flex;\n    border-width: 1px;\n    border-style: solid;\n    border-image: initial;\n    border-radius: 10px;\n    -webkit-box-align: stretch;\n    align-items: stretch;\n    box-sizing: border-box;\n    padding: 0px 15px;\n    cursor: text;\n    transition: border-color 100ms ease 0s;\n    width: 100%;\n    background: #fff;\n    border-color: rgba(0,10,61,.12);\n    color: #273852;\n}\n\n.LidoStakeFormInputContainerSpan1{\n    -webkit-box-flex: 0;\n    flex-grow: 0;\n    flex-shrink: 0;\n    cursor: inherit;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    padding-right: 16px;\n}\n\n.selectCSS{\n    font-weight: 400;\n    font-size: 14px;\n    display: flex;\n    border: none;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n    position: relative;\n    padding: 17px 0px;\n    color: #273852;\n}\n\n.LidoStakeFormInputContainerSpan2{\n    font-weight: 400;\n    font-size: 14px;\n    display: flex;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n    position: relative;\n    padding: 17px 0px;\n}\n\n.LidoStakeFormInputContainerSpan2Input{\n    width: 100%;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 1em;\n    line-height: 1.43em;\n    padding: 0px;\n    border-radius: 0px;\n    background: transparent;\n    box-shadow: none;\n    border: none;\n    outline: none;\n    position: relative;\n    top: 0px;\n    color: #273852;\n}\n\n.LidoStakeFormInputContainerSpan3{\n    -webkit-box-flex: 0;\n    flex-grow: 0;\n    flex-shrink: 0;\n    cursor: inherit;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    padding-left: 16px;\n}\n\n.LidoStakeFormInputContainerSpan3Content{\n    cursor: pointer;\n    letter-spacing: 0.4px;\n    box-sizing: border-box;\n    margin: 0px;\n    border: none;\n    outline: none;\n    white-space: nowrap;\n    overflow: hidden;\n    position: relative;\n    background: transparent;\n    font-family: inherit;\n    font-weight: 700;\n    width: auto;\n    line-height: 1em;\n    font-size: 10px;\n    border-radius: 6px;\n    padding: 11px 16px;\n    min-width: 50px;\n    color: #04dba6;\n    &::before {\n            display: block;\n            background-color: #04dba6;\n            transition: opacity 100ms ease 0s;\n            opacity: 0.1;\n            content: \"\";\n            position: absolute;\n            inset: 0px;\n            pointer-events: none;\n            border-radius: inherit;\n        }    \n}\n\n.LidoStakeFormInputContainerSpan3Max{\n    position: relative;\n    pointer-events: none;\n    visibility: visible;\n}\n\n.LidoStakeFormSubmitContainer{\n    cursor: pointer;\n    box-sizing: border-box;\n    margin: 0px;\n    border: none;\n    outline: none;\n    white-space: nowrap;\n    overflow: hidden;\n    position: relative;\n    background-image: initial;\n    background-position: initial;\n    background-size: initial;\n    background-repeat: initial;\n    background-attachment: initial;\n    background-origin: initial;\n    background-clip: initial;\n    font-family: inherit;\n    font-weight: 700;\n    width: 100%;\n    line-height: 1em;\n    font-size: 14px;\n    border-radius: 10px;\n    padding: 21px 44px;\n    min-width: 120px;\n    color: #fff;\n    background-color: #00bf79;\n    transition: background-color 100ms ease 0s;\n    &:hover {\n        background-color: ##029961;\n    }\n}\n\n.LidoFooterContainer{\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.6em;\n}\n\n.LidoFooterRaw{\n    margin-top: 0px;\n    display: flex;\n    margin: 16px 0px;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.6em;\n}\n\n.LidoFooterRawLeft{\n    color: #7a8aa0;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n}\n\n.LidoFooterRawRight{\n    color: #273852;\n    text-align: right;\n    margin-left: 32px;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n}\n`;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\n// OUTPUT UI\n\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Stake GNS</div>\n      <div class=\"SubHeader\">Stake GNS token on Polygon </div>\n\n      <div class=\"LidoForm\">\n        {state.sender && (\n          <>\n            <div class=\"LidoFormTopContainer\">\n              <div class=\"LidoFormTopContainerLeft\">\n                <div class=\"LidoFormTopContainerLeftContent1\">\n                  <div class=\"LidoFormTopContainerLeftContent1Container\">\n                    <span>Available to stake</span>\n                    <div class=\"LidoFormTopContainerLeftContent1Circle\" />\n                  </div>\n                </div>\n                <div class=\"LidoFormTopContainerLeftContent2\">\n                  <span>\n                    {state.balance ?? (!state.sender ? \"0\" : \"...\")}&nbsp;GNS\n                  </span>\n                </div>\n              </div>\n              <div class=\"LidoFormTopContainerRight\">\n                <div class=\"LidoFormTopContainerRightContent1\">\n                  <div class=\"LidoFormTopContainerRightContent1Text\">\n                    <span>\n                      <b>Account:</b> {getSender()}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"LidoSplitter\" />\n          </>\n        )}\n        <div\n          class={\n            state.sender ? \"LidoFormBottomContainer\" : \"LidoFormTopContainer\"\n          }\n        >\n          <div class=\"LidoFormTopContainerLeft\">\n            <div class=\"LidoFormTopContainerLeftContent1\">\n              <div class=\"LidoFormTopContainerLeftContent1Container\">\n                <span>Staked amount</span>\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerLeftContent2\">\n              <span>\n                {state.stakedBalance ?? (!state.sender ? \"0\" : \"...\")}\n                &nbsp;GNS\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"LidoStakeForm\">\n        <div class=\"LidoStakeFormInputContainer\">\n          <span class=\"LidoStakeFormInputContainerSpan1\">\n            <img\n              src=\"https://research.binance.com/static/images/projects/gains-network/logo.png\"\n              width=\"24\"\n              height=\"24\"\n            />\n          </span>\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              disabled={!state.sender}\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={state.strEther}\n              onChange={(e) => State.update({ strEther: e.target.value })}\n              placeholder=\"Amount\"\n            />\n          </span>\n          <span\n            class=\"LidoStakeFormInputContainerSpan3\"\n            onClick={() => {\n              State.update({\n                //strEther: (parseFloat(state.balance) - 0.05).toFixed(2),\n                strEther: parseFloat(state.balance).toFixed(2),\n              });\n            }}\n          >\n            <button\n              class=\"LidoStakeFormInputContainerSpan3Content\"\n              disabled={!state.sender}\n            >\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">MAX</span>\n            </button>\n          </span>\n        </div>\n        {!!state.sender ? (\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => submitEthers(state.strEther, state.sender)}\n          >\n            <span>Swap</span>\n          </button>\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Web3\"\n          />\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/syi216.near/widget/GNS-Staking", "metadata.description": "Widget to stake GNS on polygon", "metadata.name": "GNS-Stake", "metadata.tags.ethdenver2023": null, "metadata.tags.gns": "", "metadata.tags.polygon": "", "metadata.tags.stake": "", "metadata.image.ipfs_cid": NaN, "metadata.tags.dai": NaN, "metadata.tags.staking": NaN, "metadata.tags.widget": NaN, "metadata": NaN}