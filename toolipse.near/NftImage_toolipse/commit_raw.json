{"tx_hash": "FQiXF1PXbbRiZE5i9sDDKg7hw5gnsRaVmwhMibyDwwHz", "action_id_social": "5fbjKaAiz4oYK6FycCrr6Pxg59E4NzzmeZGVnwZLBhW-0-widget", "block_id": 86632439, "block_timestamp": "2023-03-05 19:12:38.750", "signer_id": "toolipse.near", "widget_name": "NftImage_toolipse", "source_code": "const nft = props.nft ?? {\r\n  contractId: props.contractId,\r\n  tokenId: props.tokenId,\r\n};\r\nconst contractId = nft.contractId;\r\nconst tokenId = nft.tokenId;\r\nconst className = props.className ?? \"img-fluid\";\r\nconst style = props.style;\r\nconst alt = props.alt;\r\nconst thumbnail = props.thumbnail;\r\nconst fallbackUrl = props.fallbackUrl;\r\nconst loadingUrl =\r\n  props.loadingUrl ??\r\n  \"https://ipfs.near.social/ipfs/bafkreidoxgv2w7kmzurdnmflegkthgzaclgwpiccgztpkfdkfzb4265zuu\";\r\n\r\nState.init({\r\n  contractId,\r\n  tokenId,\r\n  imageUrl: null,\r\n});\r\n\r\nif (contractId !== state.contractId || tokenId !== tokenId) {\r\n  State.update({\r\n    contractId,\r\n    tokenId,\r\n    imageUrl: null,\r\n  });\r\n}\r\n\r\nconst nftMetadata =\r\n  nft.contractMetadata ?? Near.view(contractId, \"nft_metadata\");\r\nconst tokenMetadata =\r\n  nft.tokenMetadata ??\r\n  Near.view(contractId, \"nft_token\", {\r\n    token_id: tokenId,\r\n  }).metadata;\r\n\r\nlet imageUrl = null;\r\n\r\nif (nftMetadata && tokenMetadata) {\r\n  let tokenMedia = tokenMetadata.media || \"\";\r\n\r\n  imageUrl =\r\n    tokenMedia.startsWith(\"https://\") ||\r\n    tokenMedia.startsWith(\"http://\") ||\r\n    tokenMedia.startsWith(\"data:image\")\r\n      ? tokenMedia\r\n      : nftMetadata.base_uri\r\n      ? `${nftMetadata.base_uri}/${tokenMedia}`\r\n      : tokenMedia.startsWith(\"Qm\") || tokenMedia.startsWith(\"ba\")\r\n      ? `https://ipfs.near.social/ipfs/${tokenMedia}`\r\n      : tokenMedia;\r\n\r\n  if (!tokenMedia && tokenMetadata.reference) {\r\n    if (\r\n      nftMetadata.base_uri === \"https://arweave.net\" &&\r\n      !tokenMetadata.reference.startsWith(\"https://\")\r\n    ) {\r\n      const res = fetch(`${nftMetadata.base_uri}/${tokenMetadata.reference}`);\r\n      imageUrl = res.body.media;\r\n    } else if (\r\n      tokenMetadata.reference.startsWith(\"https://\") ||\r\n      tokenMetadata.reference.startsWith(\"http://\")\r\n    ) {\r\n      const res = fetch(tokenMetadata.reference);\r\n      imageUrl = JSON.parse(res.body).media;\r\n    } else if (tokenMetadata.reference.startsWith(\"ar://\")) {\r\n      const res = fetch(\r\n        `${\"https://arweave.net\"}/${tokenMetadata.reference.split(\"//\")[1]}`\r\n      );\r\n      imageUrl = JSON.parse(res.body).media;\r\n    }\r\n  }\r\n\r\n  if (!imageUrl) {\r\n    imageUrl = false;\r\n  }\r\n}\r\n\r\nconst rex =\r\n  /^(?:https?:\\/\\/)(?:[^\\/]+\\/ipfs\\/)?(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(?:\\.[^\\/]+)?(\\/.*)?$/g;\r\nrex.lastIndex = 0;\r\n\r\nconst replaceIpfs = (imageUrl) => {\r\n  if (state.oldUrl !== imageUrl && imageUrl) {\r\n    const match = rex.exec(imageUrl);\r\n    if (match) {\r\n      const newImageUrl = `https://ipfs.near.social/ipfs/${match[1]}${\r\n        match[2] || \"\"\r\n      }`;\r\n      if (newImageUrl !== imageUrl) {\r\n        State.update({\r\n          oldUrl: imageUrl,\r\n          imageUrl: newImageUrl,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  if (state.imageUrl !== false) {\r\n    State.update({\r\n      imageUrl: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst thumb = (imageUrl) =>\r\n  thumbnail && imageUrl && !imageUrl.startsWith(\"data:image/\")\r\n    ? `https://i.near.social/${thumbnail}/${imageUrl}`\r\n    : imageUrl;\r\n\r\nconst img = state.imageUrl !== null ? state.imageUrl : imageUrl;\r\nconst src = img !== false ? img : fallbackUrl;\r\n\r\nreturn (\r\n  <img\r\n    className={className}\r\n    style={style}\r\n    src={src !== null ? thumb(src) : loadingUrl}\r\n    alt={alt}\r\n    onError={() => replaceIpfs(img)}\r\n  />\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/toolipse.near/widget/NftImage_toolipse"}