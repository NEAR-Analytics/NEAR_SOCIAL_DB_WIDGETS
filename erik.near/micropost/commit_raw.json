{"tx_hash": "Fx9jaZdaWEpnmwfg3c9mvJCJhqEngJjoSaL8PRMjpHwS", "action_id_social": "EbVXyAy6zX8gkCvarKf2iQRyyZoM8wZJ9Wt2tNHKmoD9-0-widget", "block_id": 80721983, "block_timestamp": "2022-12-15 18:15:49.599", "signer_id": "erik.near", "widget_name": "micropost", "source_code": "// A simple form for creating a post that does NOT follow standards at\n// https://github.com/NearSocial/standards/blob/main/types/Root.md\n// because they don't allow multiple posts.\n// It saves using a very naive indexing system.\nlet accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet to post\";\n}\n\nState.init({ postbody: null });\n\n// Display microposts already made\nconst data = Social.keys(`${accountId}/micropost`, \"final\", {\n  return_type: \"History\",\n});\nconst processData = (data) => {\n  console.log(data);\n  const accounts = Object.entries(data);\n\n  const allMicroposts = accounts\n    .map((account) => {\n      const accountId = account[0];\n      const blockHeights = account[1].post.meme;\n      return blockHeights.map((blockHeight) => ({\n        accountId,\n        blockHeight,\n      }));\n    })\n    .flat();\n\n  allMicroposts.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allMicroposts;\n};\n\n// Create micropost button\n\nreturn (\n  <div>\n    <div className=\"mb-3\">\n      <label for=\"exampleFormControlTextarea1\" className=\"form-label\">\n        Write a short post and it'll show up in the timeline of your followers\n      </label>\n      <textarea\n        className=\"form-control\"\n        id=\"exampleFormControlTextarea1\"\n        rows=\"2\"\n        style={{ maxWidth: \"30em\" }}\n        onChange={(event) => State.update({ postbody: event.target.value })}\n      ></textarea>\n    </div>\n\n    <div>\n      <CommitButton\n        disabled={state.memo === null}\n        data={{\n          micropost: {\n            i: \"0\",\n            body: state.postbody,\n          },\n        }}\n      >\n        Submit\n      </CommitButton>\n    </div>\n    <hr />\n    {state.done && <div className=\"alert alert-success\">Success!</div>}\n    <h3>Micropost feed</h3>\n    {\n      <Widget\n        src=\"mob.near/widget/Meme\"\n        props={{ meme: allMicroposts.last ? allMicroposts.last : undefined }}\n      />\n    }\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/erik.near/widget/micropost", "metadata.name": NaN}