{"tx_hash": "HfjWZcKPkRHSt6j9QbovDvkugxx2kEmKBN9kiQiiEaWg", "action_id_social": "9LBKospbgoW6xPGtB3mFGdLhTxHddqavQD2Lun4GkoYK-0-widget", "block_id": 80729710, "block_timestamp": "2022-12-15 20:45:58.032", "signer_id": "erik.near", "widget_name": "micropost", "source_code": "// A simple form for creating a post that does NOT follow standards at\n// https://github.com/NearSocial/standards/blob/main/types/Root.md\n// because I'm just trying to get it to work\n// There is no index because microposts are sorted by block height.\nconst accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet to post\";\n}\n\nState.init({ postbody: null });\n\nconsole.log(accountId);\n\n// Display microposts already made\nconst data = Social.keys(`${accountId}/micropost/**`, \"final\", {\n  return_type: \"History\",\n});\n\nconsole.log(\"data\", data);\nif (!data) {\n  return \"No data to see here...\";\n}\n\n// const processData = (data) => {\n//   //console.log(data);\n//   const accounts = Object.entries(data);\n\n//   const allMicroposts = accounts\n//     .map((account) => {\n//       const accountId = account[0];\n//       const blockHeights = account[1].micropost.postbody;\n//       return blockHeights.map((blockHeight) => ({\n//         accountId,\n//         blockHeight,\n//       }));\n//     })\n//     .flat();\n\n//   allMicroposts.sort((a, b) => b.blockHeight - a.blockHeight);\n//   console.log(\"returning all microposts...\");\n//   console.log(allMicroposts);\n//   console.log(\"...done?\");\n//   return allMicroposts;\n// };\n\n// if (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n//   State.update({\n//     data,\n//     allMemes: processData(data),\n//   });\n// }\n\n// How to render a micropost\nconst renderItem = (a) => (\n  <div key={JSON.stringify(a)} style={{ minHeight: \"200px\" }}>\n    <a\n      className=\"text-decoration-none\"\n      href={`#/mob.near/widget/Meme?accountId=${a.accountId}&blockHeight=${a.blockHeight}`}\n    >\n      This is the old render area\n    </a>\n    <h4>This is a micropost</h4>\n    <p>still need to find a real one, though...</p>\n    <p>{a}</p>\n  </div>\n);\n\n// Create micropost button\n\nreturn (\n  <div>\n    <div className=\"mb-3\">\n      <label for=\"exampleFormControlTextarea1\" className=\"form-label\">\n        Write a short post and it'll show up in the timeline of your followers\n      </label>\n      <textarea\n        className=\"form-control\"\n        id=\"exampleFormControlTextarea1\"\n        rows=\"2\"\n        style={{ maxWidth: \"30em\" }}\n        onChange={(event) => State.update({ postbody: event.target.value })}\n      ></textarea>\n    </div>\n\n    <div>\n      <CommitButton\n        disabled={state.memo === null}\n        data={{\n          micropost: {\n            1: {\n              body: state.postbody,\n            },\n          },\n        }}\n      >\n        Submit\n      </CommitButton>\n    </div>\n    <hr />\n    {state.done && <div className=\"alert alert-success\">Success!</div>}\n    <h3>Micropost feed</h3>\n    {renderItem(allMicroposts[0])}\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/erik.near/widget/micropost", "metadata.name": NaN}