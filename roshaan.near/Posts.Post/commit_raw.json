{"tx_hash": "A6KuG8ThGsrMC2JgxUNFH77ueRvfVChhMnz1uGe25PP9", "action_id_social": "5H6Y4dMJtrDRdiDkxSsWLPCzrzfxN5S2goMCUJFf4Gmd-0-widget", "block_id": 88308795, "block_timestamp": "2023-03-28 16:37:10.349", "signer_id": "roshaan.near", "widget_name": "Posts.Post", "source_code": "const accountId = props.accountId;\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst subscribe = !!props.subscribe;\nconst notifyAccountId = accountId;\nconst postUrl = `https://alpha.near.org/#/roshaan.near/widget/PostPage?accountId=${accountId}&blockHeight=${blockHeight}`;\nState.init({\n  renderedComments: props.comments ?? undefined,\n  content: JSON.parse(props.content) ?? undefined,\n});\n\nconst renderComment = (a) => {\n  return (\n    <div key={JSON.stringify(a)}>\n      <Widget\n        src=\"roshaan.near/widget/Comments.Comment\"\n        props={{\n          accountId: a.account_id,\n          blockHeight: a.block_height,\n          content: a.content,\n        }}\n      />\n    </div>\n  );\n};\n\nif (!state.content) {\n  const postsQuery = `\nquery IndexerQuery {\n  roshaan_near_alphaindexer_posts(\n    order_by: {block_height: desc}\n    where: {_and: {block_height: {_eq: ${blockHeight}}, account_id: {_eq: \"${accountId}\"}}}\n  ) {\n    account_id\n    block_height\n    block_timestamp\n    content\n    receipt_id\n    comments(order_by: {block_height: asc}) {\n      account_id\n      block_height\n      block_timestamp\n      content\n    }\n    post_likes {\n      account_id\n    }\n  }\n}\n`;\n  function fetchGraphQL(operationsDoc, operationName, variables) {\n    return asyncFetch(\n      \"https://query-api-hasura-vcqilefdcq-uc.a.run.app/v1/graphql\",\n      {\n        method: \"POST\",\n        headers: { \"x-hasura-role\": \"roshaan_near\" },\n        body: JSON.stringify({\n          query: operationsDoc,\n          variables: variables,\n          operationName: operationName,\n        }),\n      }\n    );\n  }\n\n  fetchGraphQL(postsQuery, \"IndexerQuery\", {}).then((result) => {\n    console.log(result);\n    if (result.status === 200) {\n      if (result.body.data) {\n        const posts = result.body.data.roshaan_near_alphaindexer_posts;\n        if (posts.length > 0) {\n          const post = posts[0];\n          let content = JSON.parse(post.content);\n          console.log(content, \"content\");\n          const renderedComments = post.comments.map(renderComment);\n\n          State.update({\n            content: content,\n            renderedComments: renderedComments,\n          });\n        }\n      }\n    }\n  });\n}\n\nconst Post = styled.div`\n  position: relative;\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 19px;\n    top: 52px;\n    bottom: 12px;\n    width: 2px;\n    background: #ECEEF0;\n  }\n`;\n\nconst Header = styled.div`\n  margin-bottom: 0;\n  display: inline-flex;\n`;\n\nconst Body = styled.div`\n  padding-left: 52px;\n  padding-bottom: 1px;\n`;\n\nconst Content = styled.div`\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 80vh;\n    margin: 0 0 12px;\n  }\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #687076;\n  white-space: nowrap;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin: -6px -6px 6px;\n`;\n\nconst Comments = styled.div`\n  > div > div:first-child {\n    padding-top: 12px;\n  }\n`;\nconst Wrapper = styled.div`\n  > div:first-child {\n    > a:first-child {\n      display: inline-flex;\n      margin-bottom: 24px;\n      font-size: 14px;\n      line-height: 20px;\n      color: #687076;\n      outline: none;\n      font-weight: 600;\n\n      &:hover,\n      &:focus {\n        color: #687076;\n        text-decoration: underline;\n      }\n    }\n  }\n`;\n\nreturn (\n  <Post>\n    <Header>\n      <Widget\n        src=\"calebjacob.near/widget/AccountProfile\"\n        props={{\n          accountId,\n          hideAccountId: true,\n          inlineContent: (\n            <>\n              <Text as=\"span\">\uff65</Text>\n              <Text>\n                {blockHeight === \"now\" ? (\n                  \"now\"\n                ) : (\n                  <>\n                    <Widget\n                      src=\"mob.near/widget/TimeAgo\"\n                      props={{ blockHeight }}\n                    />{\" \"}\n                    ago\n                  </>\n                )}\n              </Text>\n            </>\n          ),\n        }}\n      />\n    </Header>\n\n    <Body>\n      {state.content && (\n        <Content>\n          {state.content.text && (\n            <Widget\n              src=\"calebjacob.near/widget/SocialMarkdown\"\n              props={{ text: state.content.text }}\n            />\n          )}\n\n          {state.content.image && (\n            <Widget\n              src=\"mob.near/widget/Image\"\n              props={{\n                image: state.content.image,\n              }}\n            />\n          )}\n        </Content>\n      )}\n\n      {blockHeight !== \"now\" && (\n        <Actions>\n          <Widget\n            src=\"calebjacob.near/widget/LikeButton\"\n            props={{\n              item,\n              notifyAccountId,\n            }}\n          />\n          <Widget\n            src=\"calebjacob.near/widget/CommentButton\"\n            props={{\n              item,\n              onClick: () => State.update({ showReply: !state.showReply }),\n            }}\n          />\n          <Widget\n            src=\"calebjacob.near/widget/CopyUrlButton\"\n            props={{\n              url: postUrl,\n            }}\n          />\n        </Actions>\n      )}\n\n      {state.showReply && (\n        <div className=\"mb-2\">\n          <Widget\n            src=\"calebjacob.near/widget/Comments.Compose\"\n            props={{\n              notifyAccountId,\n              item,\n              onComment: () => State.update({ showReply: false }),\n            }}\n          />\n        </div>\n      )}\n      {state.renderedComments && (\n        <Comments>\n          <Wrapper>{state.renderedComments}</Wrapper>\n        </Comments>\n      )}\n    </Body>\n  </Post>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/Posts.Post", "branch.draft": NaN}