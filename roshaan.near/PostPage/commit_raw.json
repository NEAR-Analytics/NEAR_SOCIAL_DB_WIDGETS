{"tx_hash": "7QFUYE7yRpyZ4TWpE3PaYtQ3jo4G1Kp8ootm9YTukrAu", "action_id_social": "HftNM6X8ZJzGFomq1eVeezPnWesfr2xGwncHe9DWuuFA-0-widget", "block_id": 88377191, "block_timestamp": "2023-03-29 16:10:31.498", "signer_id": "roshaan.near", "widget_name": "PostPage", "source_code": "const accountId = props.accountId;\nconst commentBlockHeight = parseInt(props.commentBlockHeight);\n\nState.init({\n  parentPostLoaded: false,\n  originalAuthorAccountId: undefined,\n  originalAuthorBlockHeight: undefined,\n  originalPostContent: undefined,\n});\n\nconst parentPostByComment = `query ParentPostByComment {\n  roshaan_near_alphaindexer_comments(\n    where: {_and: {account_id: {_eq: \"${accountId}\"}, block_height: {_eq: ${commentBlockHeight}}}}\n  ) {\n    post {\n      account_id\n      accounts_liked\n      block_height\n      block_timestamp\n      content\n      id\n      receipt_id\n      comments {\n        account_id\n        block_height\n        block_timestamp\n        content\n        receipt_id\n        id\n      }\n      post_likes {\n        account_id\n        block_height\n        block_timestamp\n        receipt_id\n      }\n    }\n    receipt_id\n    id\n  }\n}`;\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(\n    \"https://query-api-hasura-vcqilefdcq-uc.a.run.app/v1/graphql\",\n    {\n      method: \"POST\",\n      headers: { \"x-hasura-role\": \"roshaan_near\" },\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    }\n  );\n}\n\nif (commentBlockHeight && accountId) {\n  fetchGraphQL(parentPostByComment, \"ParentPostByComment\", {}).then(\n    (result) => {\n      if (result.status === 200) {\n        if (result.body.data) {\n          const posts = result.body.data.roshaan_near_alphaindexer_comments;\n          if (posts.length > 0) {\n            const post = posts[0].post;\n            let content = JSON.parse(post.content);\n            const comments = post.comments;\n            State.update({\n              parentPostLoaded: true,\n              originalAuthorAccountId: post.account_id,\n              originalAuthorBlockHeight: post.block_height,\n              originalPostContent: content,\n              comments: comments,\n            });\n          }\n        }\n      }\n    }\n  );\n} else {\n  return \"Must pass in an accountId and blockHeight when comment was posted.\";\n}\n\nif (state.parentPostLoaded) {\n  return (\n    <Widget\n      src=\"roshaan.near/widget/Posts.Post\"\n      props={{\n        accountId: state.originalAuthorAccountId,\n        blockHeight: state.originalAuthorBlockHeight,\n        content: state.originalPostContent,\n        highlightComment: { accountId, blockHeight: commentBlockHeight },\n        comments: state.comments,\n      }}\n    />\n  );\n} else {\n  return \"Loading\";\n}\n", "metadata": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/PostPage", "branch.draft.": NaN, "branch.draft.metadata": NaN, "branch": NaN}