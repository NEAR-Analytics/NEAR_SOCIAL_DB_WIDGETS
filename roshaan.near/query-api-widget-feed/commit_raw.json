{"tx_hash": "TpcEe9PJPfcbVUEV7X1mvkUg6y9akwo9kkJraYmyTLT", "action_id_social": "G2rug2KKxdTNq9WJPuvhqNPWh2iBvefuLYAncEz73jSm-0-widget", "block_id": 93598662, "block_timestamp": "2023-06-06T16:43:01.930Z", "signer_id": "roshaan.near", "widget_name": "query-api-widget-feed", "source_code": "//props widget_activity_feed\nconst widget_activity_feed =\n  props.widget_activity_feed || \"widget-activity-feed\";\n\nconst GRAPHQL_ENDPOINT =\n  props.GRAPHQL_ENDPOINT || \"queryapi-hasura-graphql-vcqilefdcq-ew.a.run.app\";\n\nconst LIMIT = 10;\nconst accountId = props.accountId || \"roshaan.near\" || context.accountId;\n\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181c;\n  margin: 0 0 24px;\n`;\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: black;\n`;\nconst SmallTitle = styled.h3`\n  color: black;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 15px;\n  text-transform: uppercase;\n\n  @media (max-width: 770px) {\n    margin-bottom: 16px;\n  }\n`;\nconst TableElement = styled.td`\n  word-wrap: break-word;\n  font-family: \"Roboto Mono\", monospace;\n  font-size: 11px;\n  background-color: rgb(255, 255, 255);\n  color: rgb(32, 33, 36);\n`;\nconst Subheading = styled.h2`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 10px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n`;\nconst Card = styled.div`\n  border-radius: 12px;\n  background: #fff;\n  border: ${(div) => (div.selected ? \"1px solid black\" : \"1px solid #eceef0\")};\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n  padding: 10px;  \n  margin: 10px;  \n  width: 80%;     \n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst CardBody = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  align-items: center;\n  flex-direction: column;\n  > * {\n    min-width: 0;\n  }\n`;\nconst CardFooter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 16px;\n  border-top: 1px solid #eceef0;\n`;\n\nconst TextLink = styled.a`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst RowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  overflow-x: auto;\n\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: ${(p) => (p.bold ? \"black !important\" : \"#687076 !important\")};\n  white-space: nowrap;\n`;\n\nif (!widget_activity_feed) return \"missing widget_activity_feed\";\n\nState.init({\n  widgetActivities: [],\n  widgetActivityCount: 0,\n  startWebSocketWidgetActivity: null,\n  initialFetch: false,\n  soundEffect:\n    \"https://bafybeic7uvzmhuwjficgctpleov5i43rteavwmktyyjrauwi346ntgja4a.ipfs.nftstorage.link/\",\n});\n\nconst widgetActivitySubscription = `\n  subscription IndexerQuery {\n    roshaan_near_widget_activity_feed_widget_activity(\n      order_by: {block_timestamp: desc}\n      limit: ${LIMIT}\n    ) {\n      account_id\n      block_height\n      block_timestamp\n      bytes_committed\n      id\n      receipt_id\n      widget_name\n    }\n  }\n`;\n\nconst subscriptionWidgetActivity = {\n  type: \"start\",\n  id: \"widgetActivity\", // You can use any unique identifier\n  payload: {\n    operationName: \"IndexerQuery\",\n    query: widgetActivitySubscription,\n    variables: {},\n  },\n};\nfunction processWidgetActivity(activity) {\n  return { ...activity };\n}\nfunction startWebSocketWidgetActivity(processWidgetActivities) {\n  let ws = State.get().ws_widgetActivity;\n\n  if (ws) {\n    ws.close();\n    return;\n  }\n\n  ws = new WebSocket(`wss://${GRAPHQL_ENDPOINT}/v1/graphql`, \"graphql-ws\");\n\n  ws.onopen = () => {\n    console.log(`Connection to WS has been established`);\n    ws.send(\n      JSON.stringify({\n        type: \"connection_init\",\n        payload: {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Hasura-Client-Name\": \"hasura-console\",\n            \"x-hasura-role\": \"roshaan_near\",\n          },\n          lazy: true,\n        },\n      })\n    );\n\n    setTimeout(() => ws.send(JSON.stringify(subscriptionWidgetActivity)), 50);\n  };\n\n  ws.onclose = () => {\n    State.update({ ws_widgetActivity: null });\n    console.log(`WS Connection has been closed`);\n  };\n\n  ws.onmessage = (e) => {\n    const data = JSON.parse(e.data);\n    console.log(\"received data\", data);\n    if (data.type === \"data\" && data.id === \"widgetActivity\") {\n      processWidgetActivities(data.payload.data);\n    }\n  };\n\n  ws.onerror = (err) => {\n    State.update({ ws_widgetActivity: null });\n    console.log(\"WebSocket error\", err);\n  };\n\n  State.update({ ws_widgetActivity: ws });\n}\n\nfunction processWidgetActivities(incoming_data) {\n  let incoming_widgetActivities =\n    incoming_data.roshaan_near_widget_activity_feed_widget_activity.flatMap(\n      processWidgetActivity\n    );\n  const newActivities = [\n    ...incoming_widgetActivities.filter((activity) => {\n      return (\n        state.widgetActivities.length == 0 ||\n        activity.block_timestamp > state.widgetActivities[0].block_timestamp\n      );\n    }),\n  ];\n  if (newActivities.length > 0 && state.widgetActivities.length > 0) {\n    const sound = new Audio(state.soundEffect);\n    sound.play();\n  }\n  const prevActivities = state.prevActivities || [];\n  State.update({ widgetActivities: [...newActivities, ...prevActivities] });\n}\n\nif (state.ws_widgetActivity === undefined) {\n  State.update({\n    startWebSocketWidgetActivity: startWebSocketWidgetActivity,\n  });\n  state.startWebSocketWidgetActivity(processWidgetActivities);\n}\n\n// <Text>Bytes Committed: {activity.bytes_committed}</Text>\n//  <Text>Block Height: {activity.block_height}</Text>\n//     <Text>Receipt ID: {activity.receipt_id}</Text>\nreturn (\n  <div>\n    <Title>Widget Activity Feed</Title>\n    <RowContainer>\n      {state.widgetActivities.map((activity, i) => (\n        <Card>\n          <div>\n            <Widget\n              src=\"mob.near/widget/TimeAgo\"\n              props={{ blockHeight: activity.block_height }}\n            />{\" \"}\n            ago\n          </div>\n          <CardBody>\n            <div key={i}>\n              <Text bold>Widget Name: {activity.widget_name}</Text>\n              <Text bold>Account ID: {activity.account_id}</Text>\n            </div>\n          </CardBody>\n          <CardFooter>\n            <TextLink\n              href={`/#/near/widget/ComponentDetailsPage?src=${activity.account_id}/widget/${activity.widget_name}`}\n            >\n              View\n            </TextLink>\n          </CardFooter>\n        </Card>\n      ))}\n    </RowContainer>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/query-api-widget-feed", "__row_index": 0}