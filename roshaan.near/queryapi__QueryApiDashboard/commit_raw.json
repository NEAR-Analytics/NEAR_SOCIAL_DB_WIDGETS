{"tx_hash": "7Kv1LkUMmFRwJZg1P7T4cBAh3MY7YFVNe6VwWF5BpqwX", "action_id_social": "8qpa1puCTYVtgxfmnmVVDSjfmkZ6BgG6VFbTYZYmZ4oo-0-widget", "block_id": 85733681, "block_timestamp": "2023-02-21 17:40:09.100", "signer_id": "roshaan.near", "widget_name": "queryapi__QueryApiDashboard", "source_code": "const [selected_accountId, selected_indexerName] = props.indexer_path\n  ? props.indexer_path.split(\"/\")\n  : [undefined, undefined];\n\nconst accountId = selected_accountId || props.accountId || context.accountId;\nconst google_analytics = `<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-BE2N8N8G93\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-BE2N8N8G93');\n</script>`;\nconst activeTab = props.view ?? \"public-indexers\";\nconst limit = 7;\nlet totalIndexers = 0;\nconst registry_contract_id =\n  props.registry_contract_id || \"registry.queryapi.near\";\n\nState.init({\n  activeTab: activeTab,\n  indexers: [],\n  totalIndexers: 0,\n  selected_indexer: \"\",\n});\n\nconst Wrapper = styled.div`\n  margin-top: calc(var(--body-top-padding) * -1);\n`;\nconst NavBarLogo = styled.a`\n    padding-top: 0.3125rem;\n    padding-bottom: 0.3125rem;\n    margin-right: 1rem;\n    font-size: 1.25rem;\n    text-decoration: none;\n    white-space: nowrap;\n`;\nconst Main = styled.div`\n  display: grid;\n  grid-template-columns: 284px minmax(0, 1fr);\n  grid-gap: 16px;\n  padding-bottom: 24px;\n\n  @media (max-width: 1200px) {\n    display: block;\n  }\n`;\n\nconst Section = styled.div`\n  padding-left: 10px;\n  padding-top: 24px;\n  border-left: ${(p) => (p.primary ? \"1px solid #ECEEF0\" : \"none\")};\n  border-right: ${(p) => (p.primary ? \"1px solid #ECEEF0\" : \"none\")};\n\n  @media (max-width: 1200px) {\n    padding-top: 0px;\n    border-left: none;\n    border-right: none;\n    display: ${(p) => (p.active ? \"block\" : \"none\")};\n    margin: ${(p) => (p.negativeMargin ? \"0 -12px\" : \"0\")};\n  }\n`;\n\nconst Tabs = styled.div`\n  display: none;\n  height: 48px;\n  background: #f8f9fa;\n  border-top: 1px solid #eceef0;\n  border-bottom: 1px solid #eceef0;\n  margin-bottom: ${(p) => (p.noMargin ? \"0\" : p.halfMargin ? \"24px\" : \"24px\")};\n\n  @media (max-width: 1200px) {\n    display: flex;\n    margin-left: -12px;\n    margin-right: -12px;\n\n    button {\n      flex: 1;\n    }\n  }\n`;\nconst Content = styled.div`\n  background-color: #f7f7f7;\n  padding: 2em;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nconst TabsButton = styled.button`\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: '';\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #0091ff;\n  }\n`;\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181c;\n  margin: 0 0 24px;\n`;\n\nconst indexerView = (accountId, indexerName, idx) => {\n  const Card = styled.div`\n  border-radius: 12px;\n  background: #fff;\n  border: ${(div) => (div.selected ? \"1px solid black\" : \"1px solid #eceef0\")};\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n`;\n\n  const CardBody = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  align-items: center;\n\n  > * {\n    min-width: 0;\n  }\n`;\n\n  const CardFooter = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  padding: 16px;\n  border-top: 1px solid #eceef0;\n`;\n\n  const TextLink = styled.a`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\n  const Thumbnail = styled.a`\n  display: block;\n  width: 48px;\n  height: 48px;\n  flex-shrink: 0;\n  border: 1px solid #eceef0;\n  border-radius: 8px;\n  overflow: hidden;\n  outline: none;\n  transition: border-color 200ms;\n\n  &:focus,\n  &:hover {\n    border-color: #d0d5dd;\n  }\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\n  const ButtonLink = styled.a`\n  padding: 8px;\n  height: 32px;\n  border: 1px solid #d7dbdf;\n  border-radius: 6px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: ${(p) => (p.primary ? \"#006ADC\" : \"#11181C\")} !important;\n  background: #fbfcfd;\n\n  &:hover,\n  &:focus {\n    background: #ecedee;\n    text-decoration: none;\n    outline: none;\n  }\n`;\n  const isSelected =\n    (selected_accountId === undefined &&\n      selected_indexerName === undefined &&\n      idx === 0) ||\n    (selected_accountId === accountId && selected_indexerName === indexerName);\n\n  const editUrl = `https://near.social/#/roshaan.near/widget/queryapi__QueryApiDashboard?indexer_path=${accountId}/${indexerName}&view=editor-window`;\n  const statusUrl = `https://near.social/#/roshaan.near/widget/queryapi__QueryApiDashboard?indexer_path=${accountId}/${indexerName}&view=indexer-status`;\n  return (\n    <Card selected={isSelected}>\n      <CardBody>\n        <Thumbnail>\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: metadata.image,\n              fallbackUrl:\n                \"https://upload.wikimedia.org/wikipedia/commons/8/86/Database-icon.svg\",\n              alt: \"Near QueryApi indexer\",\n            }}\n          />\n        </Thumbnail>\n\n        <div>\n          <TextLink as=\"a\" bold ellipsis>\n            {indexerName}\n          </TextLink>\n          <TextLink as=\"a\" ellipsis>\n            @{accountId}\n          </TextLink>\n        </div>\n      </CardBody>\n\n      <CardFooter>\n        <ButtonLink\n          href={statusUrl}\n          onClick={() =>\n            State.update({\n              activeTab: \"indexer-status\",\n              selected_indexer: `${accountId}/${indexerName}`,\n            })\n          }\n        >\n          View Status\n        </ButtonLink>\n        <ButtonLink\n          primary\n          href={editUrl}\n          onClick={() =>\n            State.update({\n              activeTab: \"editor-window\",\n              selected_indexer: `${accountId}/${indexerName}`,\n            })\n          }\n        >\n          Edit Indexer\n        </ButtonLink>\n      </CardFooter>\n    </Card>\n  );\n};\nconst allIndexerView = () => {\n  const limit = 7;\n  const registry_contract_id =\n    props.registry_contract_id || \"registry.queryapi.near\";\n  console.log(selected_accountId, \"selecteed account exists\");\n\n  if (!accountId) {\n    return <H2>Please sign in to see your widgets.</H2>;\n  }\n\n  Near.asyncView(registry_contract_id, \"list_indexer_functions\").then(\n    (data) => {\n      let indexer_paths = Object.keys(data);\n      let indexers = indexer_paths\n        .map((indexer_path) => {\n          return {\n            accountId: indexer_path.split(\"/\")[0],\n            indexerName: indexer_path.split(\"/\").splice(1).join(\"/\"),\n          };\n        })\n        .filter((indexer) => indexer.accountId === accountId);\n      console.log(indexers, \"loaded indexers\");\n      State.update({ indexers: indexers, totalIndexers: indexer_paths.length });\n    }\n  );\n\n  const CardWrapper = styled.div`\n  margin: 0 0 16px;\n`;\n\n  const sharedButtonStyles = `\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n  height: 32px;\n  border-radius: 6px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    outline: none;\n  }\n\n  i {\n    color: #7E868C;\n  }\n\n  .bi-16 {\n    font-size: 16px;\n  }\n`;\n\n  const Button = styled.button`\n  ${sharedButtonStyles}\n  color: ${(p) => (p.primary ? \"#fff\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#0091FF\" : \"#FBFCFD\")};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"#0484e5\" : \"#ECEDEE\")};\n  }\n`;\n\n  const ButtonLink = styled.a`\n  ${sharedButtonStyles}\n  color: ${(p) => (p.primary ? \"#fff\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#0091FF\" : \"#FBFCFD\")};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"#0484e5\" : \"#ECEDEE\")};\n  }\n`;\n  const Subheading = styled.h2`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n`;\n\n  return (\n    <>\n      <ButtonLink\n        primary\n        href=\"/#/roshaan.near/widget/queryapi__QueryApiDashboard/?view=create-new-indexer\"\n        onClick={() =>\n          State.update({\n            activeTab: \"create-new-indexer\",\n            selected_indexerName: \"\",\n          })\n        }\n      >\n        Create New Indexer\n      </ButtonLink>\n      <H2>\n        {accountId}'s Indexers\n        <span>({state.indexers.length})</span>\n      </H2>\n      {state.indexers.map((indexer, i) => (\n        <CardWrapper key={i}>\n          {indexerView(indexer.accountId, indexer.indexerName, i)}\n        </CardWrapper>\n      ))}\n      {state.indexers.length === 0 && (\n        <Subheading> You have no indexers to show...</Subheading>\n      )}\n    </>\n  );\n};\n\nreturn (\n  <Wrapper negativeMargin={state.activeTab === \"indexers\"}>\n    <iframe\n      style={{ height: \"0px\" }}\n      name=\"widget-iframe\"\n      srcDoc={google_analytics}\n    />\n    <Tabs\n      halfMargin={state.activeTab === \"indexers\"}\n      noMargin={state.activeTab === \"indexers\"}\n    >\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ activeTab: \"indexers\" })}\n        selected={state.activeTab === \"indexers\"}\n      >\n        Indexers\n      </TabsButton>\n\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ activeTab: \"editor-window\" })}\n        selected={state.activeTab === \"editor-window\"}\n      >\n        Indexer Editor\n      </TabsButton>\n\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ activeTab: \"indexer-status\" })}\n        selected={state.activeTab === \"indexer-status\"}\n      >\n        Indexer Status\n      </TabsButton>\n    </Tabs>\n\n    <Main>\n      <Section active={state.activeTab === \"indexers\"}>\n        <NavBarLogo\n          href=\"https://near.social/#/roshaan.near/widget/queryapi__QueryApiDashboard\"\n          title=\"QueryApi\"\n          onClick={() => {\n            State.update({\n              activeTab: \"public-indexers\",\n            });\n          }}\n        >\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              className: \"d-inline-block align-text-top me-2\",\n              image: metadata.image,\n              style: { height: \"24px\" },\n              fallbackUrl:\n                \"https://upload.wikimedia.org/wikipedia/commons/8/86/Database-icon.svg\",\n              alt: \"the queryapi logo\",\n            }}\n          />\n          QueryApi\n        </NavBarLogo>\n        {allIndexerView()}\n      </Section>\n\n      <Section\n        negativeMargin\n        primary\n        active={state.activeTab === \"editor-window\"}\n      >\n        {state.activeTab === \"indexer-status\" && (\n          <div>\n            {state.indexers.length > 0 &&\n              (state.selected_indexer != \"\" ? (\n                <H2>{state.selected_indexer}</H2>\n              ) : (\n                <H2>{state.indexers[0].indexerName}</H2>\n              ))}\n            <Widget\n              src={\"roshaan.near/widget/queryapi__IndexerStatus\"}\n              props={{\n                indexer_name:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: accountId,\n              }}\n            />\n          </div>\n        )}\n        {state.activeTab === \"editor-window\" && (\n          <div>\n            {state.indexers.length > 0 &&\n              (state.selected_indexer != undefined ? (\n                <H2>{state.selected_indexer}</H2>\n              ) : (\n                <H2>{`${state.indexers[0].accountId}/${state.indexers[0].indexerName}`}</H2>\n              ))}\n            <Widget\n              src={\"roshaan.near/widget/queryapi__IndexerFunctionEditor\"}\n              props={{\n                indexerName:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: accountId,\n                base: \"query-api-editor/\",\n              }}\n            />\n          </div>\n        )}\n        {state.activeTab === \"create-new-indexer\" && (\n          <div>\n            {state.indexers.length > 0 &&\n              (state.selected_indexer != undefined ? (\n                <H2>{state.selected_indexer}</H2>\n              ) : (\n                <H2>{`${state.indexers[0].accountId}/${state.indexers[0].indexerName}`}</H2>\n              ))}\n            <Widget\n              src={\"roshaan.near/widget/queryapi__IndexerFunctionEditor\"}\n              props={{\n                indexerName:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: accountId,\n                base: \"create-new-indexer/\",\n              }}\n            />\n          </div>\n        )}\n        {state.activeTab === \"public-indexers\" && (\n          <div>\n            <div>\n              <Widget\n                src={\"roshaan.near/widget/queryapi__ViewAllPublicIndexers\"}\n              />\n            </div>\n          </div>\n        )}\n      </Section>\n    </Main>\n  </Wrapper>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/queryapi__QueryApiDashboard", "metadata.image.url": NaN, "metadata.tags.app": NaN, "metadata.tags.data-platform": NaN, "metadata.tags.indexers": NaN, "metadata.image.ipfs_cid": NaN}