{"tx_hash": "8R8y4BXCbGWvGMqKsoqY9zPm5eAmWKP769UXiRNRtjYv", "action_id_social": "3PfaW9sdikVtTA7jHgi1P9Tp9yz1yFWH477fGv3GLDxK-0-widget", "block_id": 94856170, "block_timestamp": "2023-06-23T16:35:17.175Z", "signer_id": "roshaan.near", "widget_name": "QueryApiRenderer", "source_code": "const query = props.query || \"\";\nconst indexer_user = props.user;\nconst queryName = props.queryName;\nconst QUERYAPI_ENDPOINT =\n  props.graphqlEndpoint ||\n  \"https://near-queryapi.dev.api.pagoda.co/v1/graphql/\";\n\nconst defaultRenderer = (data) => {\n  return <div key={JSON.stringify(data)}>{JSON.stringify(data)}</div>;\n};\n\nconst renderer = props.renderer || defaultRenderer;\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  let fetchOptions = {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  };\n\n  if (indexer_user) {\n    fetchOptions.headers = { \"x-hasura-role\": indexer_user };\n  }\n\n  return asyncFetch(QUERYAPI_ENDPOINT, fetchOptions);\n}\n\nfetchGraphQL(query, queryName, {}).then((result) => {\n  if (result.status === 200) {\n    if (result.body.data) {\n      const data = result.body.data.roshaan_near_feed_indexer_posts;\n      State.update({ data });\n      console.log(data);\n    }\n  }\n});\n\nconst renderData = (a) => {\n  return <div key={JSON.stringify(a)}>{JSON.stringify(a)}</div>;\n};\n\nState.init({\n  data: [],\n});\n\nconst renderedData = state.data.map(renderer);\n\nreturn { renderedData };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/QueryApiRenderer", "__row_index": 2}