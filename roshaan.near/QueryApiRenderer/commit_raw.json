{"tx_hash": "AHscGpEpLid81YxKikThQC3UJS62mb1Zse8D6G5kYTgX", "action_id_social": "BysKdezUnKYAYZ89QcVTB82r4QUWV9ihVKtRx8ScrxZ4-0-widget", "block_id": 95157225, "block_timestamp": "2023-06-27T14:38:43.958Z", "signer_id": "roshaan.near", "widget_name": "QueryApiRenderer", "source_code": "const query = props.query || \"\";\nconst indexer_user = props.user;\nconst queryName = props.queryName;\nconst stateHandler = props.stateHandler;\n\nState.init({\n  data: [],\n});\n\nconst QUERYAPI_ENDPOINT =\n  props.graphqlEndpoint ||\n  \"https://near-queryapi.dev.api.pagoda.co/v1/graphql/\";\n\nconst defaultRenderer = (data) => {\n  return (\n    <div key={JSON.stringify(data)}>\n      <p>Account ID: {data.account_id}</p>\n      <p>Block Height: {data.block_height}</p>\n      <p>Block Timestamp: {data.block_timestamp}</p>\n    </div>\n  );\n};\n\nconst renderer = props.renderer || defaultRenderer;\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  let fetchOptions = {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  };\n\n  if (indexer_user) {\n    fetchOptions.headers = { \"x-hasura-role\": indexer_user };\n  }\n\n  return asyncFetch(QUERYAPI_ENDPOINT, fetchOptions);\n}\n\nfetchGraphQL(query, queryName, {}).then((result) => {\n  if (result.status === 200) {\n    if (result.body.data && stateHandler) {\n      const data = stateHandler(result.body.data);\n      State.update({ data });\n    }\n  }\n});\n\nconst renderedData = state.data.map(renderer);\n\nreturn { renderedData };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/QueryApiRenderer", "__row_index": 0}