{"tx_hash": "91vU3DcQjyb5Nz19k8AsKbxCqd9KoHnAzq8uWUB38Ubp", "action_id_social": "BCMrXvUn9x2VfRBmtfh6KC2PQm4TbcrJSbJS9vKoYjTQ-0-widget", "block_id": 86254182, "block_timestamp": "2023-02-28 17:16:18.361", "signer_id": "roshaan.near", "widget_name": "queryapi__IndexerStatus", "source_code": "//props indexer_name\nconst indexer_name = props.indexer_name;\nconst accountId = props.accountId || context.accountId;\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181c;\n  margin: 0 0 24px;\n`;\nconst Subheading = styled.h2`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n`;\n\nif (!indexer_name) return \"missing indexer_name\";\nconst state_table = \"| Function Name | Current Block Height |\\n| --- | --- |\\n\";\n\nconst logs_table =\n  \"| Function Name | Id | Message | Timestamp |\\n| --- | --- | --- | --- |\\n\";\nconst indexer_values_table =\n  \"| Function Name | Key Name | Value |\\n| --- | --- | --- |\\n\";\n\nState.init({ logs: [], state: [], indexer_res: [] });\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(\n    \"https://query-api-hasura-vcqilefdcq-uc.a.run.app/v1/graphql\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    }\n  );\n}\n\nconst operationsDoc = `\n  query MyQuery {\n    indexer_storage(where: {function_name: {_eq: \"${accountId}/${indexer_name}\"}}) {\n      function_name\n      key_name\n      value\n    }\n  }\n`;\n\nfetchGraphQL(operationsDoc, \"MyQuery\", {}).then((result) => {\n  console.log(result, \"result\");\n  if (result.status === 200) {\n    State.update({\n      indexer_res: result.body.data.indexer_storage,\n    });\n  }\n});\n\nfunction query() {\n  let response = asyncFetch(\n    \"https://query-api-hasura-vcqilefdcq-uc.a.run.app/v1/graphql\",\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `\n  query IndexerStatus {\n  indexer_state(\n    where: {function_name: {_eq: \"${indexer_name}\"}}\n    order_by: {current_block_height: desc}\n  ) {\n    current_block_height\n  }\n  log_entries(\n    where: {function_name: {_eq: ${indexer_name}}}\n    order_by: {timestamp: desc}\n  ) {\n    id\n    message\n    timestamp\n  }\n}\n    `,\n      }),\n    }\n  );\n  console.log(response);\n  if (!response) return;\n  let state = response.body.data.indexer_state;\n  let logs = response.body.data.log_entries;\n  State.update({ state, logs });\n}\n\nconst create_table = () => {\n  state.indexer_res.forEach((row) => {\n    indexer_values_table += `| ${row.function_name} | ${row.key_name} | ${row.value} |\\n`;\n  });\n};\ncreate_table();\nreturn (\n  <>\n    <h1>Indexer Status</h1>\n\n    {state.indexer_res.length > 0 ? (\n      <Markdown text={indexer_values_table} />\n    ) : (\n      <Subheading> No data to show... </Subheading>\n    )}\n\n    <H2> Indexer State </H2>\n    {state.state.length > 0 ? (\n      <Markdown text={state_table} />\n    ) : (\n      <Subheading> No data to show... </Subheading>\n    )}\n\n    <H2> Indexer Logs </H2>\n    {state.logs.length > 0 ? (\n      <Markdown text={logs_table} />\n    ) : (\n      <Subheading> No data to show... </Subheading>\n    )}\n  </>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/queryapi__IndexerStatus", "branch.draft.": NaN, "branch.draft.metadata": NaN}