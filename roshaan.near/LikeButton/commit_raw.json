{"tx_hash": "CVCt1v7Ugg6TqHTx6FyUfoUdMtCy5ykWPB91dEEFpqtm", "action_id_social": "Bocua2xLW5ngUVoia83kLgdtDnToazBTUdqiVLuGx1BK-0-widget", "block_id": 88453849, "block_timestamp": "2023-03-30 18:20:01.503", "signer_id": "roshaan.near", "widget_name": "LikeButton", "source_code": "const item = props.item;\n\nconst likes = JSON.parse(props.likes?.length ? props.likes : \"[]\") ?? [];\n\nState.init({ likes: props.likes });\n\nif (!item) {\n  return \"\";\n}\n\nconst dataLoading = likes === null;\n\nconst likesByUsers = {};\n\n(state.likes || []).forEach((account_id) => {\n  likesByUsers[account_id] = true;\n});\n\nif (state.hasLike === true) {\n  likesByUsers[context.accountId] = {\n    accountId: context.accountId,\n  };\n} else if (state.hasLike === false) {\n  delete likesByUsers[context.accountId];\n}\n\nconst accountsWithLikes = Object.keys(likesByUsers);\nconst hasLike = context.accountId && !!likesByUsers[context.accountId];\nconst hasLikeOptimistic =\n  state.hasLikeOptimistic === undefined ? hasLike : state.hasLikeOptimistic;\nconst totalLikes =\n  accountsWithLikes.length +\n  (hasLike === false && state.hasLikeOptimistic === true ? 1 : 0) -\n  (hasLike === true && state.hasLikeOptimistic === false ? 1 : 0);\n\nconst LikeButton = styled.button`\n  border: 0;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  color: #687076;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  cursor: pointer;\n  background: none;\n  padding: 6px;\n  transition: color 200ms;\n\n  i {\n    font-size: 16px;\n    transition: color 200ms;\n\n    &.bi-heart-fill {\n      color: #E5484D !important;\n    }\n  }\n\n  &:hover, &:focus {\n    outline: none;\n    color: #11181C;\n  }\n`;\n\nconst likeClick = () => {\n  if (state.loading) {\n    return;\n  }\n\n  State.update({\n    loading: true,\n    hasLikeOptimistic: !hasLike,\n  });\n\n  const data = {\n    index: {\n      like: JSON.stringify({\n        key: item,\n        value: {\n          type: hasLike ? \"unlike\" : \"like\",\n        },\n      }),\n    },\n  };\n\n  if (!hasLike && props.notifyAccountId) {\n    data.index.notify = JSON.stringify({\n      key: props.notifyAccountId,\n      value: {\n        type: \"like\",\n        item,\n      },\n    });\n  }\n  Social.set(data, {\n    onCommit: () => State.update({ loading: false, hasLike: !hasLike }),\n    onCancel: () =>\n      State.update({\n        loading: false,\n        hasLikeOptimistic: !state.hasLikeOptimistic,\n      }),\n  });\n};\n\nconst title = hasLike ? \"Unlike\" : \"Like\";\n\nreturn (\n  <LikeButton\n    disabled={state.loading || dataLoading || !context.accountId}\n    title={title}\n    onClick={likeClick}\n  >\n    <i className={`${hasLikeOptimistic ? \"bi-heart-fill\" : \"bi-heart\"}`} />\n    {totalLikes}\n  </LikeButton>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/LikeButton", "branch.draft.": NaN, "branch.draft.metadata": NaN}