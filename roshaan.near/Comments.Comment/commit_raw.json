{"tx_hash": "3dVNXSF7mBkRnW4kPArmhvXfvMJZVMBiNGgoCAsXz1Ep", "action_id_social": "3nvampXuwKv1HE31TY7zZnEMFEaG52pknYrMsXmMyZd1-0-widget", "block_id": 88453960, "block_timestamp": "2023-03-30 18:22:29.084", "signer_id": "roshaan.near", "widget_name": "Comments.Comment", "source_code": "const accountId = props.accountId;\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\n\nState.init({\n  content: JSON.parse(props.content) ?? undefined,\n  notifyAccountId: undefined,\n});\n\n// const parentItem = content.item;\nconst highlight = !!props.highlight;\n\nconst extractNotifyAccountId = (parentItem) => {\n  if (!parentItem || parentItem.type !== \"social\" || !parentItem.path) {\n    return undefined;\n  }\n  const accountId = parentItem.path.split(\"/\")[0];\n  return `${accountId}/post/main` === parentItem.path ? accountId : undefined;\n};\n\nconst commentUrl = `https://alpha.near.org/#/roshaan.near/widget/PostPage?accountId=${accountId}&commentBlockHeight=${blockHeight}`;\n\nif (!state.content && accountId && blockHeight !== \"now\") {\n  const commentQuery = `\nquery CommentQuery {\n  roshaan_near_alphaindexer_comments(\n    where: {_and: {account_id: {_eq: \"${accountId}\"}, block_height: {_eq: ${blockHeight}}}}\n  ) {\n    content\n    block_timestamp\n    receipt_id\n    post {\n      account_id\n    }\n  }\n}\n`;\n\n  function fetchGraphQL(operationsDoc, operationName, variables) {\n    return asyncFetch(\n      \"https://query-api-hasura-vcqilefdcq-uc.a.run.app/v1/graphql\",\n      {\n        method: \"POST\",\n        headers: { \"x-hasura-role\": \"roshaan_near\" },\n        body: JSON.stringify({\n          query: operationsDoc,\n          variables: variables,\n          operationName: operationName,\n        }),\n      }\n    );\n  }\n\n  fetchGraphQL(commentQuery, \"CommentQuery\", {}).then((result) => {\n    if (result.status === 200) {\n      if (result.body.data) {\n        const comments = result.body.data.roshaan_near_alphaindexer_comments;\n        if (comments.length > 0) {\n          const comment = comments[0];\n          let content = JSON.parse(comment.content);\n          State.update({\n            content: content,\n            notifyAccountId: comment.post.accountId,\n          });\n        }\n      }\n    }\n  });\n}\n\nconst Comment = styled.div`\n  position: relative;\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 15px;\n    top: 44px;\n    bottom: 12px;\n    width: 2px;\n    background: ${props.highlight ? \"#006ADC\" : \"#ECEEF0\"};\n  }\n`;\n\nconst Header = styled.div`\n  display: inline-flex;\n  margin-bottom: 0;\n`;\n\nconst Body = styled.div`\n  padding-left: 44px;\n  padding-bottom: 1px;\n`;\n\nconst Content = styled.div`\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 80vh;\n    margin: 0 0 12px;\n  }\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #687076;\n  white-space: nowrap;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin: -6px -6px 6px;\n`;\n\nreturn (\n  <Comment>\n    <Header>\n      <Widget\n        src=\"calebjacob.near/widget/AccountProfile\"\n        props={{\n          accountId,\n          avatarSize: \"32px\",\n          hideAccountId: true,\n          inlineContent: (\n            <>\n              <Text as=\"span\">\uff65</Text>\n              {blockHeight === \"now\" ? (\n                \"now\"\n              ) : (\n                <Text>\n                  <Widget\n                    src=\"mob.near/widget/TimeAgo\"\n                    props={{ blockHeight }}\n                  />{\" \"}\n                  ago\n                </Text>\n              )}\n            </>\n          ),\n        }}\n      />\n    </Header>\n\n    <Body>\n      <Content>\n        {state.content.text && (\n          <Widget\n            src=\"calebjacob.near/widget/SocialMarkdown\"\n            props={{ text: state.content.text }}\n          />\n        )}\n\n        {state.content.image && (\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: state.content.image,\n            }}\n          />\n        )}\n      </Content>\n\n      {blockHeight !== \"now\" && (\n        <Actions>\n          <Widget\n            src=\"roshaan.near/widget/LikeButton\"\n            props={{\n              item: {\n                type: \"social\",\n                path: `${accountId}/post/comment`,\n                blockHeight,\n              },\n              notifyAccountId: state.notifyAccountId,\n              likes: [],\n            }}\n          />\n          <Widget\n            src=\"calebjacob.near/widget/CommentButton\"\n            props={{\n              hideCount: true,\n              onClick: () => State.update({ showReply: !state.showReply }),\n            }}\n          />\n          <Widget\n            src=\"calebjacob.near/widget/CopyUrlButton\"\n            props={{\n              url: commentUrl,\n            }}\n          />\n        </Actions>\n      )}\n\n      {state.showReply && (\n        <div className=\"mb-2\">\n          <Widget\n            src=\"calebjacob.near/widget/Comments.Compose\"\n            props={{\n              initialText: `@${accountId}, `,\n              notifyAccountId: state.notifyAccountId,\n              item: parentItem,\n              onComment: () => State.update({ showReply: false }),\n            }}\n          />\n        </div>\n      )}\n    </Body>\n  </Comment>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/Comments.Comment", "branch.draft.": NaN, "branch.draft.metadata": NaN}