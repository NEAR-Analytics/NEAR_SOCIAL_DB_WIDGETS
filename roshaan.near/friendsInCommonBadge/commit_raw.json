{"tx_hash": "9hFLuK6nDHSfUWC4sCTfbwBierjHjfpTXste1iauL6zL", "action_id_social": "8WMREpEuDaak8N7Jg72VYn82V8uQVEgCQz92QzjRJFkC-0-widget", "block_id": 81606531, "block_timestamp": "2022-12-27 23:14:02.595", "signer_id": "roshaan.near", "widget_name": "friendsInCommonBadge", "source_code": "const accountId = props.accountId;\nconst userId = context.accountId;\n\nif (!accountId || !userId) return \"\";\n\nconst accounts = Social.keys(`*/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nlet followingsPerAccount = Object.keys(accounts).reduce(\n  (res, id) => ({\n    ...res,\n    [id]: Object.keys(accounts[id].graph.follow).filter((x) => x !== accountId),\n  }),\n  {}\n);\n\nconst myFriends = followingsPerAccount[userId] || [];\n\nconst findFriendsInCommon = (accountId) => {\n  return myFriends.filter((a) => followingsPerAccount[accountId].includes(a));\n};\n\nconst friendsInCommon = findFriendsInCommon(accountId);\n\nif (friendsInCommon.length == 0) return \"\";\n\nreturn (\n  <OverlayTrigger\n    placement=\"auto\"\n    overlay={\n      <Tooltip>\n        <span> You both follow </span>\n        <br />\n        <br />\n        {friendsInCommon.map((friendsInCommon) => {\n          return <li className={`list-group-item`}>{friendsInCommon}</li>;\n        })}\n      </Tooltip>\n    }\n  >\n    <span\n      className=\"badge rounded-pill bg-primary\"\n      title={`${friendsInCommon.length} followers in common`}\n    >\n      {friendsInCommon.length} friends in common\n    </span>\n  </OverlayTrigger>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/friendsInCommonBadge"}