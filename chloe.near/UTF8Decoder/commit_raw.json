{"tx_hash": "639nNgwSxX5upgLsSRrng5uBWku4pvR9zBnJmW3nRuwv", "action_id_social": "DWry2oZ7tQgHc5tmjkypv9zjMZMad6Yq3Lp6gZUUmZhd-0-widget", "block_id": 88339927, "block_timestamp": "2023-03-29 03:41:03.114", "signer_id": "chloe.near", "widget_name": "UTF8Decoder", "source_code": "const UTF8Decoder = {\n  decodeUTF8: (input) => {\n    let output = \"\";\n    for (let i = 0; i < input.length; i++) {\n      const value = input[i];\n      if (value >>> 7 === 0) {\n        output += String.fromCharCode(value);\n      } else if (value >>> 5 === 6) {\n        const value2 = input[++i];\n        output += String.fromCharCode(((value & 0x1f) << 6) | (value2 & 0x3f));\n      } else if (value >>> 4 === 14) {\n        const value2 = input[++i];\n        const value3 = input[++i];\n        output += String.fromCharCode(\n          ((value & 0x0f) << 12) | ((value2 & 0x3f) << 6) | (value3 & 0x3f)\n        );\n      } else {\n        const value2 = input[++i];\n        const value3 = input[++i];\n        const value4 = input[++i];\n        const codepoint =\n          ((value & 0x07) << 18) |\n          ((value2 & 0x3f) << 12) |\n          ((value3 & 0x3f) << 6) |\n          ((value4 & 0x3f) - 0x10000);\n        output += String.fromCharCode(\n          (codepoint >> 10) + 0xd800,\n          (codepoint & 0x3ff) + 0xdc00\n        );\n      }\n    }\n    return output;\n  },\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chloe.near/widget/UTF8Decoder"}