{"tx_hash": "CcK46q9UrFYUcFGtB9dmmEMcKbKhu6U2DSN3NryBg8fC", "action_id_social": "CYo9FnzuUYLKhkkksYGHPZu7czXiRPtp2nbu39tvxMnw-0-widget", "block_id": 87542765, "block_timestamp": "2023-03-18 03:59:31.676", "signer_id": "minorityprogrammers.near", "widget_name": "RainbowBridgeWNEAR", "source_code": "// Define the NEAR account and amount to bridge\nconst amount = \"10000000000000000000000\"; // 0.01 NEAR // maybe off\n// Define the Aurora address to receive the bridged NEAR\nconst accountId = context.accountId; // add check for context it\n\nconst receiver_id = \"aurora\";\nconst contract_name = \"wrap.near\";\nconst auroraAddress = \"0x97B882530830a10f07A9f9A733cB7d0491F808Dc\"; // minority programmersEth address\n\ninitState({\n  amount: amount,\n  ethereum_receiver: auroraAddress,\n});\n\nconst onChangeAddress = (ethereum_receiver) => {\n  State.update({\n    ethereum_receiver,\n  });\n}; // add helper function for proper ethereum addresses\n\nconst onChangeAmount = (amount) => {\n  State.update({\n    amount,\n  });\n};\n\n// improve this so it shows in same transaction\nconst bridge = () => {\n  if (!(accountId && state.amount && state.ethereum_receiver)) {\n    return;\n  }\n  const gas = 200000000000000;\n  const deposit = 1; // exactly 1 yocto\n  Near.call([\n    {\n      contractName: \"wrap.near\",\n      methodName: \"near_deposit\",\n      args: {},\n      gas,\n      deposit: state.amount,\n    },\n    {\n      contractName: contract_name,\n      // need to wrap first with near_deposit\n      methodName: \"ft_transfer_call\",\n      args: {\n        receiver_id: \"aurora\",\n        amount: state.amount,\n        memo: null,\n        msg: state.ethereum_receiver,\n        //   msg: \"0x97B882530830a10f07A9f9A733cB7d0491F808Dc\",\n      },\n      gas: gas,\n      deposit: 1, // may take this out\n    },\n  ]);\n};\nreturn (\n  <div>\n    <h1>\ud83c\udf08 Send NEAR to Aurora Address </h1>\n    <div className=\" mb-2\">\n      Aurora Address Your Want to Bridge\n      <input\n        type=\"text\"\n        placeholder={state.ethereum_receiver}\n        onChange={(e) => onChangeAddress(e.target.value)}\n      />\n    </div>\n    <div className=\" mb-2\">\n      Enter Amount of NEAR to Bridge\n      <input\n        type=\"number\"\n        placeholder={state.amount / 1e24}\n        onChange={(e) => onChangeAmount(e.target.value * 1e24)} // maybe 1e24 degen match\n      />\n      <p>\n        * You will pay some extra gas in \u24c3 to bridge and the asset will be\n        wrapped NEAR on Aurora\n      </p>\n    </div>\n    <button className=\"btn btn-primary mt-3\" onClick={bridge}>\n      Bridge\n    </button>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/minorityprogrammers.near/widget/RainbowBridgeWNEAR", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.aurora": NaN, "metadata.tags.bridge": NaN, "metadata.tags.ethereum": NaN, "metadata.tags.rainbow": NaN, "metadata.tags.rainbow-bridge": NaN, "metadata.tags.wnear": NaN, "metadata.tags.wrap-near": NaN}