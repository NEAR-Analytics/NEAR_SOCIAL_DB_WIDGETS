{"tx_hash": "2wVFBFV6LheHSi6iGfjEDb7V763CMrEsHacCG3dSa3cb", "action_id_social": "5NDveZMW4qiY4N94XxjS4GsuLPwMUz8GhZv2GKNN3C8b-0-widget", "block_id": 80723732, "block_timestamp": "2022-12-15 18:49:13.258", "signer_id": "calebjacob.near", "widget_name": "SetHeightForm", "source_code": "const contractId = \"proof_of_height.lewidenmann.near\";\nconst accountId = context.accountId;\nif (!accountId) {\n  return \"Please login to use Proof of Height\";\n}\n\nState.init({\n  heightHasBeenSaved: false,\n  heightFeet: null,\n  heightInches: null,\n});\n\nconst userHeight = Near.view(contractId, \"get_height_inches\", {\n  account_id: accountId,\n});\n\nif (userHeight && !state.heightHasBeenSaved) {\n  State.update({\n    heightHasBeenSaved: true,\n    heightFeet: Math.floor(userHeight / 12),\n    heightInches: userHeight % 12,\n  });\n}\n\nconst height = {\n  feet: state.inputHeightFeet || 0,\n  inches: state.inputHeightInches || 0,\n};\n\nconst heightIsSet = height.feet > 0 || height.inches > 0;\nconst inchesAreValid = height.inches >= 0 && height.inches < 12;\nconst formIsValid = heightIsSet && inchesAreValid;\n\nfunction submitHeight() {\n  const totalInches = height.feet * 12 + height.inches;\n  Near.call(contractId, \"set_height_inches\", {\n    height: totalInches,\n  });\n  State.update({\n    heightHasBeenSaved: true,\n  });\n  console.log(`Your height in total inches: ${totalInches}`);\n}\n\nreturn (\n  <div class=\"card p-3\">\n    {state.heightHasBeenSaved ? (\n      <h5 className=\"mb-0\">Your Height</h5>\n    ) : (\n      <h5 className=\"mb-0\">What&apos;s your height?</h5>\n    )}\n\n    <hr />\n\n    {state.heightHasBeenSaved ? (\n      <Widget\n        src=\"lewidenmann.near/widget/UserHeightDisplay\"\n        props={{ accountId }}\n      />\n    ) : (\n      <div>\n        <div\n          className=\" d-flex flex-column flex-md-row align-items-stretch\"\n          style={{ gap: \"1rem\" }}\n        >\n          <div\n            className=\"d-flex flex-row\"\n            style={{ gap: \"1rem\", minWidth: \"15rem\" }}\n          >\n            <div class=\"form-floating\" style={{ width: \"50%\" }}>\n              <input\n                className=\"form-control\"\n                id=\"heightFeet\"\n                type=\"number\"\n                placeholder=\"Feet\"\n                value={state.giveBadgeAccountId}\n                min=\"0\"\n                onChange={(e) => {\n                  const value = Number(e.target.value) || 0;\n                  State.update({ inputHeightFeet: e.target.value });\n                }}\n              />\n              <label for=\"heightFeet\">Feet</label>\n            </div>\n\n            <div class=\"form-floating\" style={{ width: \"50%\" }}>\n              <input\n                className=\"form-control\"\n                id=\"heightInches\"\n                type=\"number\"\n                placeholder=\"Inches\"\n                value={state.giveBadgeAccountId}\n                min=\"0\"\n                max=\"11\"\n                onChange={(e) => {\n                  const value = Number(e.target.value) || 0;\n                  State.update({ inputHeightInches: value });\n                }}\n              />\n              <label for=\"heightInches\">Inches</label>\n            </div>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            disabled={!formIsValid}\n            onClick={submitHeight}\n          >\n            Save Height: {height.feet}\u2032{height.inches}\u2033\n          </button>\n        </div>\n\n        {!inchesAreValid && (\n          <div class=\"alert alert-danger m-0 mt-3\" role=\"alert\">\n            Inches must be between 0 and 11\n          </div>\n        )}\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/calebjacob.near/widget/SetHeightForm"}