{"tx_hash": "yBg6WvUZfeM338yFi8G6MM7t8nXn7fN85e3qFD7RayX", "action_id_social": "uBLhbpL3szURGMEBsf8YJDg7VBh7abTTSC95ocF7uF4-0-widget", "block_id": 85309717, "block_timestamp": "2023-02-15 22:52:04.532", "signer_id": "calebjacob.near", "widget_name": "ProfilePage", "source_code": "State.init({\n  copiedShareUrl: false,\n  selectedTab: \"overview\",\n});\n\nconst accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\n\n// Profile Data:\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nconst tags = Object.keys(profile.tags || {});\nconst viewingOwnAccount = accountId === context.accountId;\nconst shareUrl = `https://alpha.near.org/#/calebjacob.near/widget/ProfilePage?accountId=${accountId}`;\n\n// Follower Count:\nconst following = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst followers = Social.keys(`*/graph/follow/${accountId}`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst followingCount = following\n  ? Object.keys(following[accountId].graph.follow || {}).length\n  : null;\nconst followersCount = followers ? Object.keys(followers || {}).length : null;\n\n// Account follows you:\nconst accountFollowsYouData = Social.keys(\n  `${props.accountId}/graph/follow/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\nconst accountFollowsYou = Object.keys(accountFollowsYouData || {}).length > 0;\n\nconst Wrapper = styled.div`\n  .button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 8px 16px;\n    height: 32px;\n    border-radius: 100px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    background: #FBFCFD;\n    border: 1px solid #D7DBDF;\n    color: #11181C !important;\n\n    &.button--primary {\n      color: #006ADC !important;\n      width: 100%;\n    }\n\n    &:hover,\n    &:focus {\n      background: #ECEDEE;\n      text-decoration: none;\n      outline: none;\n    }\n\n    i {\n      color: #7E868C;\n    }\n\n    .bi-16 {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst Main = styled.div`\n  display: grid;\n  gap: 40px;\n  grid-template-columns: 352px  minmax(0, 1fr);\n  align-items: start;\n`;\n\nconst BackgroundImage = styled.div`\n  height: 240px;\n  border-radius: 20px 20px 0 0;\n  overflow: hidden;\n  margin: 0 -12px;\n  background: #ECEEF0;\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Sidebar = styled.div`\n  display: grid;\n  gap: 40px;\n  position: relative;\n  z-index: 5;\n  margin-top: -55px;\n`;\n\nconst SidebarSection = styled.div`\n  display: grid;\n  gap: 24px;\n`;\n\nconst Content = styled.div``;\n\nconst Avatar = styled.div`\n  width: 133px;\n  height: 133px;\n  flex-shrink: 0;\n  border: 3px solid #fff;\n  overflow: hidden;\n  border-radius: 100%;\n  box-shadow: 0px 12px 16px rgba(16, 24, 40, 0.08), 0px 4px 6px rgba(16, 24, 40, 0.03);\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  font-weight: 600;\n  font-size: ${(p) => p.size || \"25px\"};\n  line-height: 1.2em;\n  color: #11181C;\n  margin: ${(p) => (p.margin ? \"0 0 24px\" : \"0\")};\n  overflow-wrap: anywhere;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181C;\n  }\n  \n  &[href] {\n    display: inline-flex;\n    \n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst TextLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: #11181C !important;\n  font-weight: 400;\n  font-size: 14px;\n  white-space: nowrap;\n  outline: none;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n\n  i {\n    color: #7E868C;\n  }\n`;\n\nconst TextBadge = styled.p`\n  display: inline-block;\n  margin: 0;\n  font-size: 10px;\n  line-height: 1.1rem;\n  background: #687076;\n  color: #fff;\n  font-weight: 600;\n  white-space: nowrap;\n  padding: 0 6px;\n  border-radius: 3px;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nconst SocialLinks = styled.div`\n  display: grid;\n  gap: 9px;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #ECEEF0;\n  margin-bottom: 24px;\n\n  @media (max-width: 1200px) {\n    button {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled.button`\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n\n  &:hover {\n    color: #11181C;\n  }\n\n  &::after {\n    content: '';\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #0091FF;\n  }\n`;\n\nconst Bio = styled.div`\n  color: #11181C;\n  font-size: 14px;\n  line-height: 20px;\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #ECEEF0;\n`;\n\nif (profile === null) {\n  return \"Loading\";\n}\n\nreturn (\n  <Wrapper>\n    <BackgroundImage>\n      {profile.backgroundImage && (\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: profile.backgroundImage,\n            alt: \"profile background image\",\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\n          }}\n        />\n      )}\n    </BackgroundImage>\n\n    <Main>\n      <Sidebar>\n        <Avatar>\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: profile.image,\n              alt: profile.name,\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\n            }}\n          />\n        </Avatar>\n\n        <SidebarSection>\n          <div>\n            <Title>{profile.name || accountId}</Title>\n            <Text>@{accountId}</Text>\n\n            {accountFollowsYou && <TextBadge>Follows You</TextBadge>}\n          </div>\n\n          <Actions>\n            {viewingOwnAccount ? (\n              <a\n                className=\"button button--primary\"\n                href=\"/#/mob.near/widget/ProfileEditor\"\n              >\n                Edit Profile\n              </a>\n            ) : context.accountId ? (\n              <>\n                <Widget\n                  src=\"calebjacob.near/widget/FollowButton\"\n                  props={{\n                    accountId,\n                    className: \"button button--primary\",\n                  }}\n                />\n\n                <Widget\n                  src=\"calebjacob.near/widget/PokeButton\"\n                  props={{\n                    accountId,\n                    className: \"button\",\n                  }}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Copy URL to clipboard</Tooltip>}\n            >\n              <button\n                className=\"button\"\n                type=\"button\"\n                onMouseLeave={() => {\n                  State.update({ copiedShareUrl: false });\n                }}\n                onClick={() => {\n                  clipboard.writeText(shareUrl).then(() => {\n                    State.update({ copiedShareUrl: true });\n                  });\n                }}\n              >\n                {state.copiedShareUrl ? (\n                  <i className=\"bi-16 bi bi-check\"></i>\n                ) : (\n                  <i className=\"bi-16 bi-link-45deg\"></i>\n                )}\n                Share\n              </button>\n            </OverlayTrigger>\n          </Actions>\n        </SidebarSection>\n\n        {tags.length > 0 && (\n          <SidebarSection>\n            <Widget\n              src=\"calebjacob.near/widget/ComponentTags\"\n              props={{\n                tags,\n              }}\n            />\n          </SidebarSection>\n        )}\n\n        <SidebarSection>\n          <Stats>\n            <Text>\n              <b bold as=\"span\">\n                {followingCount === null ? \"--\" : followingCount}\n              </b>{\" \"}\n              Following\n            </Text>\n            <Text>\n              <b>{followersCount === null ? \"--\" : followersCount}</b> Followers\n            </Text>\n          </Stats>\n        </SidebarSection>\n\n        {profile.linktree && (\n          <SidebarSection>\n            <SocialLinks>\n              {profile.linktree.website && (\n                <TextLink\n                  href={`https://${profile.linktree.website}`}\n                  target=\"_blank\"\n                >\n                  <i className=\"bi bi-globe\"></i> {profile.linktree.website}\n                </TextLink>\n              )}\n\n              {profile.linktree.github && (\n                <TextLink\n                  href={`https://github.com/${profile.linktree.github}`}\n                  target=\"_blank\"\n                >\n                  <i className=\"bi bi-github\"></i> {profile.linktree.github}\n                </TextLink>\n              )}\n\n              {profile.linktree.twitter && (\n                <TextLink\n                  href={`https://twitter.com/${profile.linktree.twitter}`}\n                  target=\"_blank\"\n                >\n                  <i className=\"bi bi-twitter\"></i> {profile.linktree.twitter}\n                </TextLink>\n              )}\n\n              {profile.linktree.telegram && (\n                <TextLink\n                  href={`https://t.me/${profile.linktree.telegram}`}\n                  target=\"_blank\"\n                >\n                  <i className=\"bi bi-telegram\"></i> {profile.linktree.telegram}\n                </TextLink>\n              )}\n            </SocialLinks>\n          </SidebarSection>\n        )}\n      </Sidebar>\n\n      <Content>\n        <Tabs>\n          <TabsButton\n            type=\"button\"\n            onClick={() => State.update({ selectedTab: \"overview\" })}\n            selected={state.selectedTab === \"overview\"}\n          >\n            Overview\n          </TabsButton>\n\n          <TabsButton\n            type=\"button\"\n            onClick={() => State.update({ selectedTab: \"apps\" })}\n            selected={state.selectedTab === \"apps\"}\n          >\n            Applications\n          </TabsButton>\n\n          <TabsButton\n            type=\"button\"\n            onClick={() => State.update({ selectedTab: \"nfts\" })}\n            selected={state.selectedTab === \"nfts\"}\n          >\n            NFTs\n          </TabsButton>\n        </Tabs>\n\n        {state.selectedTab === \"overview\" && (\n          <>\n            <Bio>\n              {profile.description && <Markdown text={profile.description} />}\n            </Bio>\n\n            <Title as=\"h2\" size=\"19px\" margin>\n              Activity\n            </Title>\n\n            <Widget\n              src=\"calebjacob.near/widget/Feed\"\n              props={{ accounts: [accountId] }}\n            />\n          </>\n        )}\n      </Content>\n    </Main>\n  </Wrapper>\n);\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/calebjacob.near/widget/ProfilePage", "branch.draft.": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.profile": NaN, "branch.draft.metadata": NaN, "metadata.description": NaN, "metadata.tags.app": NaN, "metadata.tags.page": NaN, "metadata.tags.social": NaN, "metadata.image.url": NaN, "metadata.tags.ethdenver2023": NaN, "branch.draft": NaN}