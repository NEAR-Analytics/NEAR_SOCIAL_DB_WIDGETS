{"tx_hash": "CuRMsqqkwerxe9SGDThNpDwwdHbo4HKwxFjGQe6CFugf", "action_id_social": "6MnZEegrAZHsy8VuQWrf8UtAk1fYNo7m6V6szqoNBBso-0-widget", "block_id": 85299222, "block_timestamp": "2023-02-15 19:24:38.136", "signer_id": "calebjacob.near", "widget_name": "ProfilePage", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\n\n// Profile Data:\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nconst tags = Object.keys(profile.tags || {});\nconst viewingOwnAccount = accountId === context.accountId;\n\n// Follower Count:\nconst following = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst followers = Social.keys(`*/graph/follow/${accountId}`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst followingCount = following\n  ? Object.keys(following[accountId].graph.follow || {}).length\n  : null;\nconst followersCount = followers ? Object.keys(followers || {}).length : null;\n\n// Account follows you:\nconst accountFollowsYouData = Social.keys(\n  `${props.accountId}/graph/follow/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\nconst accountFollowsYou = Object.keys(accountFollowsYouData || {}).length > 0;\n\nconst Wrapper = styled.div``;\n\nconst Main = styled.div`\n  display: grid;\n  gap: 40px;\n  grid-template-columns: 352px  minmax(0, 1fr);\n`;\n\nconst BackgroundImage = styled.div`\n  height: 240px;\n  width: 100%;\n  border-radius: 20px 20px 0 0;\n  overflow: hidden;\n  margin: 0 -12px;\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Sidebar = styled.div`\n  display: grid;\n  gap: 40px;\n  position: relative;\n  z-index: 5;\n  margin-top: -55px;\n`;\n\nconst SidebarSection = styled.div`\n  display: grid;\n  gap: 24px;\n`;\n\nconst Avatar = styled.div`\n  width: 133px;\n  height: 133px;\n  flex-shrink: 0;\n  border: 3px solid #fff;\n  overflow: hidden;\n  border-radius: 100%;\n  box-shadow: 0px 12px 16px rgba(16, 24, 40, 0.08), 0px 4px 6px rgba(16, 24, 40, 0.03);\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Title = styled.h2`\n  font-weight: 600;\n  font-size: 25px;\n  line-height: 30px;\n  color: #11181C;\n  margin: 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n\n  b {\n    font-weight: 600;\n    color: #11181C;\n  }\n`;\n\nconst TextBadge = styled.p`\n  display: inline-block;\n  margin: 0;\n  font-size: 10px;\n  line-height: 1.1rem;\n  background: #687076;\n  color: #fff;\n  font-weight: 600;\n  white-space: nowrap;\n  padding: 0 6px;\n  border-radius: 3px;\n`;\n\nconst sharedButtonStyles = `\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 8px 16px;\n  height: 32px;\n  border-radius: 100px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  background: #FBFCFD;\n  border: 1px solid #D7DBDF;\n\n  &:hover,\n  &:focus {\n    background: #ECEDEE;\n    text-decoration: none;\n    outline: none;\n  }\n\n  &.primary { \n    color: #006ADC !important;\n    width: 100%;\n  }\n\n  i {\n    color: #7E868C;\n  }\n\n  .bi-16 {\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  color: ${(p) => (p.primary ? \"#006ADC\" : \"#11181C\")} !important;\n  width: ${(p) => (p.primary ? \"100%\" : \"auto\")};\n  ${sharedButtonStyles}\n`;\n\nconst ButtonLink = styled.a`\n  color: ${(p) => (p.primary ? \"#006ADC\" : \"#11181C\")} !important;\n  width: ${(p) => (p.primary ? \"100%\" : \"auto\")};\n  ${sharedButtonStyles}\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nconsole.log(profile);\n\nif (profile === null) {\n  return \"Loading\";\n}\n\nreturn (\n  <Wrapper>\n    <BackgroundImage>\n      {profile.backgroundImage && (\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: profile.backgroundImage,\n            alt: \"profile background image\",\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\n          }}\n        />\n      )}\n    </BackgroundImage>\n\n    <Main>\n      <Sidebar>\n        <Avatar>\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: profile.image,\n              alt: profile.name,\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\n            }}\n          />\n        </Avatar>\n\n        <SidebarSection>\n          <div>\n            <Title>{profile.name || accountId}</Title>\n            <Text>@{accountId}</Text>\n\n            {accountFollowsYou && <TextBadge>Follows You</TextBadge>}\n          </div>\n\n          <Actions>\n            {viewingOwnAccount ? (\n              <ButtonLink href=\"/#/mob.near/widget/ProfileEditor\" primary>\n                Edit Profile\n              </ButtonLink>\n            ) : (\n              <>\n                <Button type=\"button\" primary>\n                  Follow\n                </Button>\n\n                <Button type=\"button\">\n                  <i className=\"bi bi-hand-index-thumb\"></i> Poke\n                </Button>\n              </>\n            )}\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Copy URL to clipboard</Tooltip>}\n            >\n              <Button\n                type=\"button\"\n                onMouseLeave={() => {\n                  State.update({ copiedShareUrl: false });\n                }}\n                onClick={() => {\n                  clipboard.writeText(shareUrl).then(() => {\n                    State.update({ copiedShareUrl: true });\n                  });\n                }}\n              >\n                {state.copiedShareUrl ? (\n                  <i className=\"bi-16 bi bi-check\"></i>\n                ) : (\n                  <i className=\"bi-16 bi-link-45deg\"></i>\n                )}\n                Share\n              </Button>\n            </OverlayTrigger>\n          </Actions>\n        </SidebarSection>\n\n        {tags.length > 0 && (\n          <SidebarSection>\n            <Widget\n              src=\"calebjacob.near/widget/ComponentTags\"\n              props={{\n                tags,\n              }}\n            />\n          </SidebarSection>\n        )}\n\n        <SidebarSection>\n          <Stats>\n            <Text>\n              <b bold as=\"span\">\n                {followingCount === null ? \"--\" : followingCount}\n              </b>{\" \"}\n              Following\n            </Text>\n            <Text>\n              <b>{followersCount === null ? \"--\" : followersCount}</b> Followers\n            </Text>\n          </Stats>\n        </SidebarSection>\n      </Sidebar>\n    </Main>\n  </Wrapper>\n);\n\n// return (\n//   <div className=\"py-1 px-1\">\n//     <h1>Testing</h1>\n//     <div className=\"mx-auto\">\n//       <Widget\n//         src=\"mob.near/widget/ProfileLarge\"\n//         props={{\n//           accountId,\n//           profile,\n//           link: true,\n//           showEditButton: !props.profile,\n//         }}\n//       />\n\n//       <div className=\"mt-3\">\n//         <Widget\n//           src=\"mob.near/widget/ProfileTabs\"\n//           props={{ accountId, profile }}\n//         />\n//       </div>\n//     </div>\n//   </div>\n// );\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/calebjacob.near/widget/ProfilePage", "branch.draft.": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.profile": NaN, "branch.draft.metadata": NaN, "metadata.description": NaN, "metadata.tags.app": NaN, "metadata.tags.page": NaN, "metadata.tags.social": NaN, "metadata.image.url": NaN, "metadata.tags.ethdenver2023": NaN, "branch.draft": NaN}