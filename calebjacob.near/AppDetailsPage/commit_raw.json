{"tx_hash": "4VU1oG43CWWDBYMGiWxKgn7bKtE3Qw9uHyjmM4uVuYCM", "action_id_social": "HANdzCM5ehNtVniBbYsPJy8Kg2oJLomnskDi8GQ7f8ud-0-widget", "block_id": 85155856, "block_timestamp": "2023-02-13 17:36:09.369", "signer_id": "calebjacob.near", "widget_name": "AppDetailsPage", "source_code": "State.init({\n  copiedShareUrl: false,\n  selectedTab: props.tab ?? \"about\",\n});\n\nconst [accountId, widget, widgetName] = props.src.split(\"/\");\nconst existsData = Social.keys(`${accountId}/widget/${widgetName}`);\nconst exists = !existsData || Object.keys(existsData).length > 0;\nconst data = Social.get(`${accountId}/widget/${widgetName}/**`);\nconst code = data[\"\"];\nconst metadata = data.metadata;\nconst tags = Object.keys(metadata.tags || {});\nconst shareUrl = `https://near.social/#/${props.src}`;\n\nconst dependencyMatch = code && code.matchAll(/<Widget.+src=\"(.+)\".+\\/>/g);\nconst dependencySources = [...(dependencyMatch || [])]\n  .map((r) => r[1])\n  .filter((r) => !!r);\n\nconst sourceCode = `\n\\`\\`\\`jsx\n${code}\n\\`\\`\\`\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 32px;\n  margin-bottom: 48px;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n  margin-bottom: 48px;\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n  line-height: 39px;\n  color: #11181C;\n  margin: 0 0 8px;\n  font-weight: 600;\n`;\n\nconst Thumbnail = styled.div`\n  width: 100px;\n  height: 100px;\n  flex-shrink: 0;\n  border: 1px solid #ECEEF0;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1), 0px 1px 2px rgba(16, 24, 40, 0.06);\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst TagsWrapper = styled.div`\n  position: relative;\n\n  &::after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: 16px;\n    background: linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255,1));\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst Tags = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 6px;\n  overflow: auto;\n  margin: 0;\n  padding: 6px 16px 0 0;\n\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Tag = styled.li`\n  border: 1px solid #E6E8EB;\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-size: 12px;\n  line-height: 18px;\n  color: #687076;\n  font-weight: 500;\n`;\n\nconst ButtonLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  height: 32px;\n  border-radius: 6px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: ${(p) => (p.primary ? \"#fff\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#0091FF\" : \"#FBFCFD\")};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"#0484e5\" : \"#ECEDEE\")};\n    text-decoration: none;\n    outline: none;\n  }\n\n  i {\n    color: #7E868C;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #ECEEF0;\n  margin-bottom: 32px;\n`;\n\nconst TabsButton = styled.button`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n\n  &:hover {\n    color: #11181C;\n  }\n\n  &::after {\n    content: '';\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #0091FF;\n  }\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 336px;\n  gap: 64px;\n`;\n\nconst Sidebar = styled.div`\n    > div {\n      padding-bottom: 32px;\n      border-bottom: 1px solid #ECEEF0;\n      margin-bottom: 32px;\n\n      &:last-child {\n          padding-bottom: 0;\n          border-bottom: none;\n          margin-bottom: 0;\n      }\n    }\n`;\n\nconst SmallTitle = styled.h3`\n  color: #687076;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  margin-bottom: 32px;\n  text-transform: uppercase;\n`;\n\nconst TextLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: #0091FF;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst Dependency = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst HistoryContainer = styled.div`\n  h1,\n  .input-group.mb-3 {\n    display: none;\n  }\n`;\n\nif (!exists) {\n  return (\n    <>\n      <Title>Error</Title>\n      <Text>Could not find: {props.src}</Text>\n    </>\n  );\n}\n\nreturn (\n  <>\n    <Header>\n      <Thumbnail>\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: metadata.image,\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreido7gsk4dlb63z3s5yirkkgrjs2nmyar5bxyet66chakt2h5jve6e\",\n            alt: metadata.name,\n          }}\n        />\n      </Thumbnail>\n\n      <div>\n        <Title>{metadata.name || widgetName}</Title>\n        <Text>{props.src}</Text>\n      </div>\n    </Header>\n\n    <Actions>\n      <ButtonLink primary href={`/#/${props.src}`}>\n        Open\n      </ButtonLink>\n\n      <ButtonLink href={`/#/edit/${props.src}`}>\n        {context.accountId === accountId ? (\n          <>\n            <i class=\"bi bi-pencil-fill\"></i> Edit\n          </>\n        ) : (\n          <>\n            <i class=\"bi bi-git\"></i> Fork\n          </>\n        )}\n      </ButtonLink>\n\n      <ButtonLink\n        as=\"button\"\n        type=\"button\"\n        onClick={() => {\n          State.update({ selectedTab: \"source\" });\n        }}\n      >\n        <i class=\"bi bi-code-square\"></i>\n        View Source\n      </ButtonLink>\n\n      <OverlayTrigger\n        placement=\"top\"\n        overlay={<Tooltip>Copy to clipboard</Tooltip>}\n      >\n        <ButtonLink\n          as=\"button\"\n          type=\"button\"\n          onMouseLeave={() => {\n            State.update({ copiedShareUrl: false });\n          }}\n          onClick={() => {\n            clipboard.writeText(shareUrl).then(() => {\n              State.update({ copiedShareUrl: true });\n            });\n          }}\n        >\n          {state.copiedShareUrl ? (\n            <i class=\"bi bi-check-circle\"></i>\n          ) : (\n            <i class=\"bi bi-box-arrow-up-right\"></i>\n          )}\n          Share URL\n        </ButtonLink>\n      </OverlayTrigger>\n    </Actions>\n\n    <Tabs>\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ selectedTab: \"about\" })}\n        selected={state.selectedTab === \"about\"}\n      >\n        About\n      </TabsButton>\n\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ selectedTab: \"source\" })}\n        selected={state.selectedTab === \"source\"}\n      >\n        Source\n      </TabsButton>\n\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ selectedTab: \"history\" })}\n        selected={state.selectedTab === \"history\"}\n      >\n        History\n      </TabsButton>\n    </Tabs>\n\n    {state.selectedTab === \"about\" && (\n      <Content>\n        <div>\n          {metadata.description ? (\n            <Markdown text={metadata.description} />\n          ) : (\n            <Text>This component has no description.</Text>\n          )}\n        </div>\n\n        <Sidebar>\n          <div>\n            <SmallTitle>Developer</SmallTitle>\n            <Widget\n              src=\"calebjacob.near/widget/AccountProfile\"\n              props={{\n                accountId: accountId,\n              }}\n            />\n          </div>\n\n          {tags.length > 0 && (\n            <div>\n              <SmallTitle>Tags</SmallTitle>\n              <TagsWrapper>\n                <Tags>\n                  {tags.map((tag, i) => (\n                    <Tag key={i}>{tag}</Tag>\n                  ))}\n                </Tags>\n              </TagsWrapper>\n            </div>\n          )}\n\n          {metadata.linktree?.website && (\n            <div>\n              <SmallTitle>Website</SmallTitle>\n              <TextLink\n                href={`https://${metadata.linktree.website}`}\n                target=\"_blank\"\n              >\n                {metadata.linktree.website}\n                <i class=\"bi bi-box-arrow-up-right\"></i>\n              </TextLink>\n            </div>\n          )}\n\n          <div>\n            <Text small>\n              <i class=\"bi bi-clock\"></i>\n              Last updated\n              <Widget\n                src=\"mob.near/widget/TimeAgo\"\n                props={{ keyPath: `${accountId}/widget/${widgetName}` }}\n              />{\" \"}\n              ago.\n            </Text>\n          </div>\n        </Sidebar>\n      </Content>\n    )}\n\n    {state.selectedTab === \"source\" && (\n      <Content>\n        <Markdown text={sourceCode} />\n\n        <Sidebar>\n          <div>\n            <SmallTitle>Dependencies ({dependencySources.length})</SmallTitle>\n\n            {dependencySources.length === 0 && (\n              <Text>This component has no dependencies.</Text>\n            )}\n\n            {dependencySources.map((source) => (\n              <Dependency key={source}>\n                <Widget\n                  src=\"calebjacob.near/widget/ComponentProfile\"\n                  props={{ src: source }}\n                />\n              </Dependency>\n            ))}\n          </div>\n        </Sidebar>\n      </Content>\n    )}\n\n    {state.selectedTab === \"history\" && (\n      <HistoryContainer>\n        <Widget\n          src=\"bozon.near/widget/WidgetHistory\"\n          props={{ widgetPath: props.src }}\n        />\n      </HistoryContainer>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/calebjacob.near/widget/AppDetailsPage"}