{"tx_hash": "5Hez61LjSeyeRrD8Bm43R7hfjbgnQ55ccqUZ1Wq5Rc5x", "action_id_social": "GmgbNcqxj4cunZQw4hqAHjCoccGyLvrM6NFUrvP1y2CN-0-widget", "block_id": 85366454, "block_timestamp": "2023-02-16 17:25:20.548", "signer_id": "calebjacob.near", "widget_name": "ComponentDetailsPage", "source_code": "State.init({\n  copiedShareUrl: false,\n  selectedTab: props.tab ?? \"about\",\n});\n\nconst src = props.src;\nconst [accountId, widget, widgetName] = src.split(\"/\");\nconst existsData = Social.keys(`${accountId}/widget/${widgetName}`);\nconst exists = !existsData || Object.keys(existsData).length > 0;\nconst data = Social.get(`${accountId}/widget/${widgetName}/**`);\nconst code = data[\"\"];\nconst metadata = data.metadata;\nconst tags = Object.keys(metadata.tags || {});\nconst shareUrl = `https://near.social/#/calebjacob.near/widget/ComponentDetailsPage?src=${src}`;\n\nconst dependencyMatch =\n  code && code.matchAll(/<Widget[\\s\\S]*?src=\"(.+)\"[\\s\\S]*?\\/>/g);\nconst dependencySources = [...(dependencyMatch || [])]\n  .map((r) => r[1])\n  .filter((r) => !!r);\n\nconsole.log(code);\n\nconst sourceCode = `\n\\`\\`\\`jsx\n${code}\n\\`\\`\\`\n`;\n\nfunction onViewSource() {\n  State.update({ selectedTab: \"source\" });\n}\n\nconst Wrapper = styled.div`\n  padding-bottom: 48px;\n`;\n\nconst SummaryWrapper = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #ECEEF0;\n  margin-bottom: 32px;\n\n  @media (max-width: 900px) {\n    background: #F8F9FA;\n    border-top: 1px solid #ECEEF0;\n    margin: 0 -12px 48px;\n\n    button {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled.button`\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n\n  &:hover {\n    color: #11181C;\n  }\n\n  &::after {\n    content: '';\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #0091FF;\n  }\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 336px;\n  gap: 64px;\n\n  @media (max-width: 995px) {\n    grid-template-columns: 1fr;\n    gap: 24px;\n  }\n`;\n\nconst Sidebar = styled.div`\n  > div {\n    padding-bottom: 32px;\n    border-bottom: 1px solid #ECEEF0;\n    margin-bottom: 32px;\n\n    &:last-child {\n        padding-bottom: 0;\n        border-bottom: none;\n        margin-bottom: 0;\n    }\n  }\n  \n  @media (max-width: 995px) {\n    padding-top: 32px;\n    border-top: 1px solid #ECEEF0;\n  }\n`;\n\nconst SmallTitle = styled.h3`\n  color: #687076;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  margin-bottom: 32px;\n  text-transform: uppercase;\n\n  @media (max-width: 770px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst TextLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: #0091FF;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst Dependency = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst HistoryContainer = styled.div`\n  > div > h1,\n  > div > .input-group.mb-3 {\n    display: none;\n  }\n`;\n\nif (!exists) {\n  return (\n    <>\n      <Title>Error</Title>\n      <Text>Could not find: {src}</Text>\n    </>\n  );\n}\n\nreturn (\n  <Wrapper>\n    <SummaryWrapper>\n      <Widget\n        src=\"calebjacob.near/widget/ComponentSummary\"\n        props={{\n          primaryAction: \"open\",\n          size: \"large\",\n          showTags: false,\n          src,\n          onViewSource,\n        }}\n      />\n    </SummaryWrapper>\n\n    <Tabs>\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ selectedTab: \"about\" })}\n        selected={state.selectedTab === \"about\"}\n      >\n        About\n      </TabsButton>\n\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ selectedTab: \"source\" })}\n        selected={state.selectedTab === \"source\"}\n      >\n        Source\n      </TabsButton>\n\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ selectedTab: \"history\" })}\n        selected={state.selectedTab === \"history\"}\n      >\n        History\n      </TabsButton>\n    </Tabs>\n\n    {state.selectedTab === \"about\" && (\n      <Content>\n        <div>\n          {metadata.description ? (\n            <Markdown text={metadata.description} />\n          ) : (\n            <Text>This component has no description.</Text>\n          )}\n        </div>\n\n        <Sidebar>\n          <div>\n            <SmallTitle>Developer</SmallTitle>\n            <Widget\n              src=\"calebjacob.near/widget/AccountProfile\"\n              props={{\n                accountId: accountId,\n              }}\n            />\n          </div>\n\n          {tags.length > 0 && (\n            <div>\n              <SmallTitle>Tags</SmallTitle>\n              <Widget\n                src=\"calebjacob.near/widget/ComponentTags\"\n                props={{\n                  tags,\n                }}\n              />\n            </div>\n          )}\n\n          {metadata.linktree?.website && (\n            <div>\n              <SmallTitle>Website</SmallTitle>\n              <TextLink\n                href={`https://${metadata.linktree.website}`}\n                target=\"_blank\"\n              >\n                {metadata.linktree.website}\n                <i className=\"bi bi-box-arrow-up-right\"></i>\n              </TextLink>\n            </div>\n          )}\n\n          <div>\n            <Text small>\n              <i className=\"bi bi-clock\"></i>\n              Last updated\n              <Widget\n                src=\"mob.near/widget/TimeAgo\"\n                props={{ keyPath: `${accountId}/widget/${widgetName}` }}\n              />{\" \"}\n              ago.\n            </Text>\n          </div>\n        </Sidebar>\n      </Content>\n    )}\n\n    {state.selectedTab === \"source\" && (\n      <Content>\n        <Markdown text={sourceCode} />\n\n        <Sidebar>\n          <div>\n            <SmallTitle>Dependencies ({dependencySources.length})</SmallTitle>\n\n            {dependencySources.length === 0 && (\n              <Text>This component has no dependencies.</Text>\n            )}\n\n            {dependencySources.map((source) => (\n              <Dependency key={source}>\n                <Widget\n                  src=\"calebjacob.near/widget/ComponentProfile\"\n                  props={{ src: source }}\n                />\n              </Dependency>\n            ))}\n          </div>\n        </Sidebar>\n      </Content>\n    )}\n\n    {state.selectedTab === \"history\" && (\n      <HistoryContainer>\n        <Widget\n          src=\"bozon.near/widget/WidgetHistory\"\n          props={{ widgetPath: src }}\n        />\n      </HistoryContainer>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/calebjacob.near/widget/ComponentDetailsPage", "branch.draft": NaN}