{"tx_hash": "CfDrTb2YeHJP2kiZaZAoLT2y7sYAbrFNCn2zmEhQFBsy", "action_id_social": "D3NHBb8EDhDN3cat5qwUrvSq1Lj8SeUmBhnS7pHFLcgN-0-widget", "block_id": 90962783, "block_timestamp": "2023-05-02 23:29:02.812", "signer_id": "kenjon.near", "widget_name": "TBD", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) return <Web3Connect connectLabel=\"Connect with Web3\" />;\n\nconst erc721Abi = fetch(\n  \"https://gist.githubusercontent.com/leon-do/e1e9271c44f326068d36baa2755143ff/raw/59ba9232b55a37acd38d98f3a937237d63fcf66a/abi.json\"\n);\nconst ercs = JSON.parse(erc721Abi.body);\nconsole.log(ercs);\nconst erc721 = ercs.erc721;\nconsole.log(erc721);\n\nconst buffContract = \"0x1e988ba4692e52Bc50b375bcC8585b95c48AaD77\";\n\n// const buff = new ethers.Contract(\n//   buffContract,\n//   erc721Abi.body,\n//   Ethers.provider().getSigner()\n// );\n\n// console.log(buff);\n\ninitState({\n  uri: \"\",\n  metadata: \"\",\n  image: \"\",\n});\nconst getBuff = () => {\n  const buff = new ethers.Contract(\n    buffContract,\n    erc721,\n    Ethers.provider().getSigner()\n  );\n  // console.log(buff);\n  const token = buff.tokenURI(4699).then((value) => {\n    // console.log(value);\n    State.update({ uri: value });\n    console.log(state.uri);\n    // State.update({ senderBalance: value });\n  });\n\n  const metadata = fetch(state.uri);\n  console.log(metadata.body.image);\n  console.log(\"Nice\");\n  State.update({ image: metadata.body.image });\n};\n\ngetBuff();\n\n// const iface = new ethers.utils.Interface(erc721Abi.erc721);\n\n// NEAR Stuff\n\nconst accountId = context.accountId;\n\nconst initialData = Social.getr(`${accountId}/flappybos`);\n\nconst initialScore = !initialData ? 0 : Number(initialData.flappybos.score);\n\nconst srcData = `\n\n<style>\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: black;\n}\n\n</style>\n\n<script src=\"https://cdn.jsdelivr.net/npm/kaboom@2000.2.10/dist/kaboom.js\"></script>\n<script>\n\nwindow.addEventListener(\"load\", (event) => {\n  init()\n});\n</script>\n<script>\nconst init = () => {\nkaboom()\n\nloadSprite(\"bean\", \"${state.image}\")\nloadSound(\"score\", \"https://kaboomjs.com/sounds/score.mp3\")\nloadSound(\"wooosh\", \"https://kaboomjs.com/sounds/wooosh.mp3\")\nloadSound(\"hit\", \"https://kaboomjs.com/sounds/hit.mp3\")\n\nscene(\"game\", () => {\n\n\tconst PIPE_OPEN = 35000\n\tconst PIPE_MIN = 60\n\tconst JUMP_FORCE = 1000\n\tconst SPEED = 320000\n\tconst CEILING = -1000\n\n\tgravity(4000)\n\n\tconst bean = add([\n\t\tsprite(\"bean\"),\n\t\tpos(width() / 4, 0),\n\t\tarea(),\n\t\tbody(),\n\t])\n\n\tbean.onUpdate(() => {\n\t\tif (bean.pos.y >= height() || bean.pos.y <= CEILING) {\n\t\t\tgo(\"lose\", score)\n\t\t}\n\t})\n\n\tonKeyPress(\"space\", () => {\n\t\tbean.jump(JUMP_FORCE)\n\t\tplay(\"wooosh\")\n\t})\n\n\tonClick(() => {\n\t\tbean.jump(JUMP_FORCE)\n\t\tplay(\"wooosh\")\n\t})\n\n\tonTouchStart(() => {\n\t\tbean.jump(JUMP_FORCE)\n\t\tplay(\"wooosh\")\n\t})\n\n\tfunction spawnPipe() {\n\t\tconst h1 = rand(PIPE_MIN, height() - PIPE_MIN - PIPE_OPEN)\n\t\tconst h2 = height() - h1 - PIPE_OPEN\n\n\t\tadd([\n\t\t\tpos(width(), 0),\n\t\t\trect(64, h1),\n\t\t\tcolor(0, 127, 255),\n\t\t\toutline(4),\n\t\t\tarea(),\n\t\t\tmove(LEFT, SPEED),\n\t\t\tcleanup(),\n\t\t\t\"pipe\",\n\t\t])\n\n\t\tadd([\n\t\t\tpos(width(), h1 + PIPE_OPEN),\n\t\t\trect(64, h2),\n\t\t\tcolor(0, 127, 255),\n\t\t\toutline(4),\n\t\t\tarea(),\n\t\t\tmove(LEFT, SPEED),\n\t\t\tcleanup(),\n\t\t\t\"pipe\",\n\t\t\t{ passed: false, },\n\t\t])\n\n\t}\n\n\tbean.onCollide(\"pipe\", () => {\n\t\tgo(\"lose\", score)\n\t\tplay(\"hit\")\n\t\taddKaboom(bean.pos)\n\t})\n\n\tonUpdate(\"pipe\", (p) => {\n\t\tif (p.pos.x + p.width <= bean.pos.x && p.passed === false) {\n\t\t\taddScore()\n\t\t\tp.passed = true\n\t\t}\n\t})\n\n\tloop(1, () => {\n\t\tspawnPipe()\n\t})\n\n\tlet score = 0\n\n\tconst scoreLabel = add([\n\t\ttext(score),\n\t\torigin(\"center\"),\n\t\tpos(width() / 2, 80),\n\t\tfixed(),\n\t])\n\n\t/*\n\tconst highScoreLabel = add([\n\t\ttext(\"hi score:\", {\n\t\t\tsize: 20\n\t\t}),\n\t\torigin(\"center\"),\n\t\tpos(width() / 10, 80),\n\t\tfixed(),\n\t])\n\t*/\n\n\tfunction addScore() {\n\t\tscore++\n\t\tscoreLabel.text = score\n\t\tplay(\"score\")\n\t}\n\n})\n\nscene(\"lose\", (score) => {\n\n\tadd([\n\t\tsprite(\"bean\"),\n\t\tpos(width() / 2, height() / 2 - 108),\n\t\tscale(3),\n\t\torigin(\"center\"),\n\t])\n\n\tadd([\n\t\ttext(score),\n\t\tpos(width() / 2, height() / 2 + 108),\n\t\tscale(3),\n\t\torigin(\"center\"),\n\t])\n\n\tonKeyPress(\"space\", () => go(\"game\"))\n\tonClick(() => go(\"game\"))\n\tonTouchStart(() => go(\"game\"))\n\n\twindow.top.postMessage({ score: score }, \"*\")\n})\n\ngo(\"game\")\n}\n</script>\n`;\n\nreturn (\n  <>\n    <iframe\n      srcDoc={srcData}\n      onMessage={(data) => {\n        State.update({ ...data });\n\n        const newScore = Number(data.score);\n\n        if (newScore > initialScore) {\n          Social.set({\n            flappybos: {\n              ...data,\n            },\n          });\n        }\n      }}\n      style={{\n        height: \"80vh\",\n        width: \"100%\",\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kenjon.near/widget/TBD"}