{"tx_hash": "FyjrrnPzKoUMP66SnWBjHD66nXTN4QhcPyPHsKXA4fFZ", "action_id_social": "7uGLY8C5iNR2HzsBfvmSXRmt5MXWFhUUyMBKNySejT9A-0-widget", "block_id": 87432350, "block_timestamp": "2023-03-16 15:40:13.795", "signer_id": "ae40cb52839f896de8ec2313e5d7ef5f3b05b9ebc474329fa3456eec32126055", "widget_name": "DevSupport.Question.Edit", "source_code": "initState({\n  labels: [],\n  title: props.title ?? \"\",\n  content: props.content ?? \"\",\n});\n\n// Predefined Labels\nconst predefinedLabels = [\n  \"Aurora\",\n  \"Account\",\n  \"CLI\",\n  \"Cross-Contract Call\",\n  \"Discovery\",\n  \"Indexer\",\n  \"Javascript API\",\n  \"Javascript SDK\",\n  \"Keys\",\n  \"Frontend\",\n  \"Fungible Token (FT)\",\n  \"Gas\",\n  \"Non Fungible Token (NFT)\",\n  \"Protocol\",\n  \"RPC\",\n  \"Rust\",\n  \"Smart Contract\",\n  \"Storage\",\n  \"Wallet\",\n];\n\nconst labelOptions = predefinedLabels.map((s) => {\n  return { label: s };\n});\n\nconst setLabels = (labels) => {\n  let labelStrings = labels.map((o) => {\n    return o.label;\n  });\n  State.update({ labels, labelStrings });\n};\n\n// Form\nconst titleDiv = (\n  <div className=\"col-lg-12  mb-2\">\n    Title:\n    <input\n      type=\"text\"\n      placeholder={\"A title for your question\"}\n      value={state.title}\n      onChange={(event) => State.update({ title: event.target.value })}\n    />\n  </div>\n);\n\nconst labelEditor = (\n  <div className=\"col-lg-12  mb-2\">\n    Labels:\n    <Typeahead\n      multiple\n      labelKey=\"label\"\n      onChange={setLabels}\n      options={labelOptions}\n      placeholder=\"Frontend, NFT, Rust ...\"\n      selected={state.labels}\n      positionFixed={true}\n      allowNew={false}\n    />\n  </div>\n);\n\nconst contentDiv = (\n  <div className=\"col-lg-12  mb-2\">\n    Content:\n    <Widget\n      src=\"ae40cb52839f896de8ec2313e5d7ef5f3b05b9ebc474329fa3456eec32126055/widget/DevSupport.Compose\"\n      props={{\n        placeholder: \"Describe your question so we can help you\",\n        initialText: props.initialText,\n        onChange: ({ content }) => State.update({ content: content }),\n      }}\n    />\n  </div>\n);\n\nconst commitButton = (\n  <CommitButton\n    force\n    className=\"btn btn-primary\"\n    data={{\n      question: {\n        main: JSON.stringify({\n          title: state.title,\n          labels: state.labelStrings,\n          content: state.content,\n        }),\n      },\n      index: {\n        question: JSON.stringify({\n          key: \"main\",\n          value: { type: \"md\" },\n        }),\n      },\n    }}\n  >\n    <i class=\"bi bi-chat\"></i> Ask\n  </CommitButton>\n);\n\nreturn (\n  <div className=\"card\">\n    <div class=\"card-body\">\n      <div className=\"row\">\n        {titleDiv}\n        {labelEditor}\n        {contentDiv}\n      </div>\n      {commitButton}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ae40cb52839f896de8ec2313e5d7ef5f3b05b9ebc474329fa3456eec32126055/widget/DevSupport.Question.Edit"}