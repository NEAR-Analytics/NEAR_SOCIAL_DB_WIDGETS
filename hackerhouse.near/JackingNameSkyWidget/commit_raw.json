{"tx_hash": "Fd5fAMXifoRf8m4YWzwoVe5mMsruFNEd9vepyZAyqpdL", "action_id_social": "E8hSPbkSnKYufvC4eTx9NueLsFQfnv3gREej7QY8EiLn-0-widget", "block_id": 80189981, "block_timestamp": "2022-12-08 13:35:28.825", "signer_id": "hackerhouse.near", "widget_name": "JackingNameSkyWidget", "source_code": "const namesky_url = \"https://testnet.namesky.app\";\n\nlet data = fetch(\"https://api.thegraph.com/subgraphs/name/hsxyl/nnn\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    query: `\n    query GetUserActions($user_id: String) {\n  userActions(\n    first: 50\n    orderBy: timestamp\n    orderDirection: desc\n    where: {action_type_in: [update_listing_action,create_listing_action,nft_mint_action]}\n  ) {\n    id\n    timestamp\n    action_type\n    user_id\n    create_listing_action {\n      price\n      listing {\n        seller_id\n        price\n        token_id\n      }\n    }\n    update_listing_action {\n\t  old_price\n\t  new_price\n\t  listing_id\n      listing {\n        seller_id\n        token_id\n      }\n    }\n\tnft_mint_action {\n\t\towner_id\n\t\ttoken_id\n\t}\n  }\n}\n      `,\n    variables: {\n      user_id: \"xsb.testnet\",\n    },\n  }),\n});\n\nif (!data) {\n  return \"Loading1\";\n}\n\nlet transfer_to_readable = (amount) => {\n  let decimals = 24;\n  if (amount === undefined || amount === null) return \"\";\n  let wholeStr = amount.substring(0, amount.length - decimals) || \"0\";\n  let fractionStr = amount\n    .substring(amount.length - decimals)\n    .padStart(decimals, \"0\")\n    .substring(0, decimals);\n  return `${wholeStr}.${fractionStr}`.replace(/\\.?0+$/, \"\");\n};\n\nlet wrap_url_by_token_id = (token_id, text) => (\n  <a href={`${namesky_url}/${token_id}`}>{text}</a>\n);\n\n// -------------------------\n\n/**\n *  create_listing_action {\n      price\n      listing {\n        seller_id\n        token_id\n      }\n    }\n * @param e \n */\nlet create_listing_action = (e) => (\n  <span style={{ fontFamily: sans - serif, color: \"#333\" }}>\n    {wrap_url_by_token_id(e.listing.token_id, e.listing.token_id)}\n    is listing on ${transfer_to_readable(e.price)} \u24c3.\n    <a href={`${namesky_url}/${e.listing.token_id}`}>Buy it now!</a>\n  </span>\n);\n\n/**\n *  update_listing_action {\n      old_price\n      new_price\n\t  listing_id\n      listing {\n        seller_id\n\t\tcontract_id\n        token_id\n      }\n    }\n * @param e \n */\nlet update_listing_action = (e) => (\n  <span>\n    {wrap_url_by_token_id(e.listing.token_id, e.listing.token_id)}\n    update price: {transfer_to_readable(e.old_price)} \u24c3 to\n    {transfer_to_readable(e.new_price)} \u24c3.\n    {wrap_url_by_token_id(e.listing.token_id, \"Buy it now!\")}\n  </span>\n);\n\n/**\n *  nft_mint_action {\n      owner_id\n\t  token_id\n    }\n * @param e \n */\nlet nft_mint_action = (e) => (\n  <span>\n    {wrap_url_by_token_id(e.token_id, e.token_id)}\n    have been mint as an NFT.\n    {wrap_url_by_token_id(e.token_id, \"Make offer to it!\")}\n  </span>\n);\n\nlet userActions = data.body.data.userActions;\nconsole.log(userActions);\n\nlet userActionComp = (e) => {\n  if (e.action_type == \"create_listing_action\") {\n    return create_listing_action(e.create_listing_action);\n    // return <div>a</div>;\n  } else if (e.action_type === \"update_listing_action\") {\n    return update_listing_action(e.update_listing_action);\n  } else if (e.action_type === \"nft_mint_action\") {\n    return nft_mint_action(e.nft_mint_action);\n  }\n};\n\nconst timeAgo = (timestamp_nanosec) => {\n  let timeMs = parseFloat(timestamp_nanosec) / 1e6;\n  let diffSec = Date.now() - timeMs;\n  return diffSec < 60000\n    ? `${(diffSec / 1000) | 0} seconds ago`\n    : diffSec < 3600000\n    ? `${(diffSec / 60000) | 0} minutes ago`\n    : diffSec < 86400000\n    ? `${(diffSec / 3600000) | 0} hours ago`\n    : `${(diffSec / 86400000) | 0} days ago`;\n};\n\nlet view = userActions.map((e) => {\n  return (\n    <div>\n      {userActionComp(e)}\n      <span className=\"text-muted\">{timeAgo(e.timestamp)}</span>\n    </div>\n  );\n});\n\nreturn <div>{view}</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hackerhouse.near/widget/JackingNameSkyWidget"}