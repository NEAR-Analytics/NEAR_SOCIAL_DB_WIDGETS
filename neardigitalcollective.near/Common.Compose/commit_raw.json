{"tx_hash": "J5eK5Gxtoo2BrUziQUueaii12wZZ3EYehWCJvQS9czYk", "action_id_social": "FodGS3zGsp9GZvGDRUYVJ6pP7UGxHDcDf4PNnLNcm2iU-0-widget", "block_id": 88255459, "block_timestamp": "2023-03-27 21:32:21.551", "signer_id": "neardigitalcollective.near", "widget_name": "Common.Compose", "source_code": "const autocompleteEnabled = props.autocompleteEnabled ?? true;\r\n\r\nif (state.image === undefined) {\r\n  State.init({\r\n    image: {},\r\n    text: props.initialText || \"\",\r\n    id: props.id,\r\n  });\r\n\r\n  if (props.onHelper) {\r\n    const extractMentions = (text) => {\r\n      const mentionRegex =\r\n        /@((?:(?:[a-z\\d]+[-_])*[a-z\\d]+\\.)*(?:[a-z\\d]+[-_])*[a-z\\d]+)/gi;\r\n      mentionRegex.lastIndex = 0;\r\n      const accountIds = new Set();\r\n      for (const match of text.matchAll(mentionRegex)) {\r\n        if (\r\n          !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\r\n          !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\r\n          match[1].length >= 2 &&\r\n          match[1].length <= 64\r\n        ) {\r\n          accountIds.add(match[1].toLowerCase());\r\n        }\r\n      }\r\n      return [...accountIds];\r\n    };\r\n\r\n    const extractHashtags = (text) => {\r\n      const hashtagRegex = /#(\\w+)/gi;\r\n      hashtagRegex.lastIndex = 0;\r\n      const hashtags = new Set();\r\n      for (const match of text.matchAll(hashtagRegex)) {\r\n        if (\r\n          !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\r\n          !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length))\r\n        ) {\r\n          hashtags.add(match[1].toLowerCase());\r\n        }\r\n      }\r\n      return [...hashtags];\r\n    };\r\n\r\n    const extractMentionNotifications = (text, item) =>\r\n      extractMentions(text || \"\")\r\n        .filter((accountId) => accountId !== context.accountId)\r\n        .map((accountId) => ({\r\n          key: accountId,\r\n          value: {\r\n            type: \"mention\",\r\n            item,\r\n          },\r\n        }));\r\n\r\n    props.onHelper({\r\n      extractHashtags,\r\n      extractMentions,\r\n      extractTagNotifications: extractMentionNotifications,\r\n      extractMentionNotifications,\r\n    });\r\n  }\r\n}\r\n\r\nconst content = (state.text || state.image.cid) && {\r\n  id: state.id,\r\n  type: \"md\",\r\n  text: state.text,\r\n  image: state.image.cid ? { ipfs_cid: state.image.cid } : undefined,\r\n};\r\n\r\nif (content && props.extraContent) {\r\n  Object.assign(content, props.extraContent);\r\n}\r\n\r\nfunction autoCompleteAccountId(id) {\r\n  let text = state.text.replace(/[\\s]{0,1}@[^\\s]*$/, \"\");\r\n  text = `${text} @${id}`.trim() + \" \";\r\n  State.update({ text, showAccountAutocomplete: false });\r\n}\r\n\r\nconst onChange = (text) => {\r\n  const showAccountAutocomplete = /@[\\w][^\\s]*$/.test(text);\r\n  State.update({ text, showAccountAutocomplete });\r\n};\r\n\r\nconst jContent = JSON.stringify(content);\r\nif (props.onChange && jContent !== state.jContent) {\r\n  State.update({\r\n    jContent,\r\n  });\r\n  props.onChange({ content });\r\n}\r\n\r\nconst onCompose = () => {\r\n  State.update({\r\n    image: {},\r\n    text: \"\",\r\n  });\r\n};\r\n\r\nconst TextareaWrapper = styled.div`\r\n  display: grid;\r\n  vertical-align: top;\r\n  align-items: center;\r\n  position: relative;\r\n  align-items: stretch;\r\n\r\n  &::after,\r\n  textarea {\r\n    width: 100%;\r\n    min-width: 1em;\r\n    height: unset;\r\n    min-height: 5em;\r\n    font: inherit;\r\n    padding: var(--padding) var(--padding) calc(40px + (var(--padding) * 2)) calc(40px + (var(--padding) * 2));\r\n    margin: 0;\r\n    resize: none;\r\n    background: none;\r\n    appearance: none;\r\n    border: none;\r\n    grid-area: 1 / 1;\r\n    overflow: hidden;\r\n    outline: none;\r\n  }\r\n\r\n  &::after {\r\n    content: attr(data-value) ' ';\r\n    visibility: hidden;\r\n    white-space: pre-wrap;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <div className=\"text-bg-light rounded-4\">\r\n    <TextareaWrapper className=\"p-3\" data-value={state.text || \"\"}>\r\n      <textarea\r\n        value={state.text || \"\"}\r\n        onInput={(event) => onChange(event.target.value)}\r\n        onKeyUp={(event) => {\r\n          if (event.key === \"Escape\") {\r\n            State.update({ showAccountAutocomplete: false });\r\n          }\r\n        }}\r\n        placeholder={props.placeholder ?? \"Tell em how they did!\"}\r\n      />\r\n      {autocompleteEnabled && state.showAccountAutocomplete && (\r\n        <div className=\"pt-1 w-100 overflow-hidden\">\r\n          <Widget\r\n            src=\"mob.near/widget/AccountAutocomplete\"\r\n            props={{\r\n              term: state.text.split(\"@\").pop(),\r\n              onSelect: autoCompleteAccountId,\r\n              onClose: () => State.update({ showAccountAutocomplete: false }),\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </TextareaWrapper>\r\n    {!props.textAreaOnly ? (\r\n      <div className=\"d-flex flex-row p-2 border-top\">\r\n        <div className=\"flex-grow-1\">\r\n          <IpfsImageUpload\r\n            image={state.image}\r\n            className=\"btn btn-outline-secondary border-0 rounded-3\"\r\n          />\r\n        </div>\r\n        <div>{props.composeButton && props.composeButton(onCompose)}</div>\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    )}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/neardigitalcollective.near/widget/Common.Compose"}