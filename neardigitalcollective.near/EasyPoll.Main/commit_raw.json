{"tx_hash": "6g9ftfbrFW6AjA5thsRJ3WAbQEmtdqKWnBTj5CsnUttG", "action_id_social": "83ReB58purCTE6cwhNgb6mzu6wMz8NeyMvJpnrXB3EmA-0-widget", "block_id": 93291679, "block_timestamp": "2023-06-02T14:57:15.186Z", "signer_id": "neardigitalcollective.near", "widget_name": "EasyPoll.Main", "source_code": "let sharedBlockHeight = props.sharedBlockHeight;\n\nconst widgetOwner = \"neardigitalcollective.near\";\n\nconst getFirstSBTToken = () => {\n  const view = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n    account: `${context.accountId}`,\n    issuer: \"fractal.i-am-human.near\",\n  });\n  return view?.[0]?.[1]?.[0];\n};\n\nconst whitelist = [\"neardigitalcollective.near\"];\n\nconst hasSBTToken = getFirstSBTToken() !== undefined;\n\nconst canPost = hasSBTToken || whitelist.includes(context.accountId);\n\nState.init({\n  displaying: canPost ? 0 : 3,\n  hoveringElement: \"\",\n  showAbortPollCreation: false,\n  abortThroughAllExistingPolls: false,\n  profile: {},\n});\n\nif (state.displaying === 3 && canPost) {\n  State.update({ displaying: 0 });\n}\n\nfunction makeAccountIdShorter(accountId, length) {\n  if (accountId.length > length) {\n    return accountId.slice(0, length) + \"...\";\n  }\n  return accountId;\n}\n\nconst profile = Social.getr(`${context.accountId}/profile`);\n\nif (JSON.stringify(profile) != JSON.stringify(state.profile)) {\n  State.update({ profile: profile });\n}\n\nfunction abortPollCreation() {\n  State.update({ showAbortPollCreation: true });\n}\n\nfunction closeModalClickingOnTransparent() {\n  return (e) => {\n    e.target.id == \"modal\" && State.update({ showAbortPollCreation: false });\n  };\n}\nconst tabs = {\n  MY_POLLS: { id: 0, text: \"My Polls\" },\n  ALL_EXISTING_POLLS: { id: 1, text: \"All existing polls\" },\n  NEW_POLL: { id: 2, text: \"Create a poll\" },\n  GET_VERIFIED_AS_A_HUMAN: { id: 3, text: \"Get Verified as Human\" },\n};\n\nconst CardWrapper = styled.div`\n  display: flex;\n  @media screen and (max-width: 768px)  {\n      display: none;\n  }\n`;\n\nconst StyledSelect = styled.select`\n    width: 180px;\n    height: 40px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 2px 12px;\n    font-size: 16px;\n    color: #333;\n    margin-left:5px;\n    background-color: #fff;\n    outline: none;\n    &:focus {\n        border-color: #007bff;\n    }\n    display: none;\n    @media screen and (max-width: 768px)  {\n      display: block;\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  display: block;\n  @media screen and (min-width: 768px)  {\n      display: flex;\n  }\n`;\n\nconst renderAbortPollCreationModal = () => {\n  return (\n    <Widget\n      src={`${widgetOwner}/widget/EasyPoll.AbortCreationModal`}\n      props={{\n        state,\n        closeModalClickingOnTransparent,\n        tabs,\n        stateUpdate: (data) => State.update(data),\n      }}\n    />\n  );\n};\n\nreturn (\n  <div\n    className=\"pb-5\"\n    style={{\n      backgroundColor: \"rgb(230, 230, 230)\",\n      fontFamily: \"Onest\",\n      fontStyle: \"normal\",\n      borderRadius: \"20px\",\n    }}\n    id=\"poll-id\"\n  >\n    <HeaderContainer\n      className=\"justify-content-between align-items-center px-4 py-3\"\n      style={{\n        backgroundColor: \"white\",\n        boxShadow: \"0px 4px 28px rgba(43, 68, 106, 0.04)\",\n      }}\n    >\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"d-flex align-items-center\">\n          <div\n            className=\"d-flex align-items-center justify-content-center\"\n            style={{\n              backgroundColor: \"#010A2D\",\n              color: \"white\",\n              height: \"100%\",\n              minWidth: \"2.5rem\",\n              aspectRatio: \"1\",\n              borderRadius: \"12px\",\n            }}\n          >\n            <i className=\"bi bi-bar-chart-fill\"></i>\n          </div>\n          <h3\n            style={{\n              margin: \"0 0.5rem\",\n              color: \"#010A2D\",\n              fontWeight: \"700\",\n              fontSize: \"1.3rem\",\n              letterSpacing: \"0.1px\",\n            }}\n          >\n            EasyPolls\n          </h3>\n        </div>\n        <StyledSelect\n          value={Object.values(tabs).find(\n            (item) => item.id === `${state.displaying}`\n          )}\n          onChange={({ target: { value } }) => {\n            State.update({ displaying: parseInt(value) });\n          }}\n          {...props}\n        >\n          {Object.values(tabs).map((option, index) => (\n            <option value={option.id} key={index}>\n              {option.text}\n            </option>\n          ))}\n        </StyledSelect>\n      </div>\n\n      <CardWrapper\n        className=\"w-100 justify-content-between\"\n        style={{ margin: \"0 4rem\" }}\n      >\n        <Widget\n          src={`${widgetOwner}/widget/EasyPoll.HeaderButtons`}\n          props={{\n            state: state,\n            stateUpdate: (data) => {\n              State.update(data);\n            },\n            fVToken: canPost,\n            tabs: tabs,\n          }}\n        />\n      </CardWrapper>\n      <div style={{ width: 200 }} className=\"p-2\">\n        <div>\n          <p style={{ margin: \"0\", fontWeight: \"bold\", fontSize: \"0.9rem\" }}>\n            {canPost ? \"Verified Human\" : \"Non-Verified Human\"}\n          </p>\n        </div>\n      </div>\n    </HeaderContainer>\n\n    {state.displaying == tabs.ALL_EXISTING_POLLS.id ? (\n      <div className=\"px-4\">\n        <h2 style={{ margin: \"2rem 0 0.5rem 0\", fontWeight: \"700\" }}>\n          All existing polls\n        </h2>\n        <Widget\n          src={`${widgetOwner}/widget/EasyPoll.Questions`}\n          props={{ sharedBlockHeight, whitelist }}\n        />\n      </div>\n    ) : state.displaying == tabs.MY_POLLS.id ? (\n      <div className=\"px-4\">\n        <h2 style={{ margin: \"2rem 0 0.5rem 0\", fontWeight: \"700\" }}>\n          My Polls\n        </h2>\n        <Widget\n          src={`${widgetOwner}/widget/EasyPoll.Questions`}\n          props={{ sharedBlockHeight, onlyUser: true, whitelist }}\n        />\n      </div>\n    ) : state.displaying == tabs.NEW_POLL.id ? (\n      <div\n        className=\"px-4\"\n        style={{\n          backgroundColor: \"white\",\n          borderRadius: \"28px\",\n          margin: \"2rem auto 0 auto\",\n          width: \"60%\",\n        }}\n      >\n        <div>\n          <i\n            className=\"bi bi-x-lg\"\n            style={{\n              position: \"absolute\",\n              right: \"2rem\",\n              top: \"2rem\",\n              cursor: \"pointer\",\n            }}\n            onClick={abortPollCreation}\n          ></i>\n          <h2\n            style={{\n              padding: \"2rem\",\n              margin: \"2rem 0 0.5rem 0\",\n              fontWeight: \"700\",\n            }}\n          >\n            Create a poll\n          </h2>\n        </div>\n        <Widget src={`${widgetOwner}/widget/EasyPoll.NewPollForm`} />\n        <button\n          onMouseEnter={() => {\n            State.update({ hoveringElement: \"cancelNewPoll\" });\n          }}\n          onMouseLeave={() => {\n            State.update({ hoveringElement: \"\" });\n          }}\n          onClick={abortPollCreation}\n          style={\n            state.hoveringElement == \"cancelNewPoll\"\n              ? {\n                  border: \"2px solid transparent\",\n                  fontWeight: \"500\",\n                  fontSize: \"1rem\",\n                  padding: \"0.3rem 1.5rem\",\n                  backgroundColor: \"#010A2D\",\n                  borderRadius: \"12px\",\n                  color: \"white\",\n                  transform: \"translateY(-2.3rem)\",\n                }\n              : {\n                  border: \"2px solid black\",\n                  color: \"black\",\n                  backgroundColor: \"white\",\n                  fontWeight: \"500\",\n                  fontSize: \"1rem\",\n                  padding: \"0.3rem 1.5rem\",\n                  borderRadius: \"12px\",\n                  transform: \"translateY(-2.3rem)\",\n                }\n          }\n        >\n          Cancel\n        </button>\n      </div>\n    ) : (\n      state.displaying === tabs.GET_VERIFIED_AS_A_HUMAN.id && (\n        <div\n          className=\"px-4\"\n          style={{\n            backgroundColor: \"white\",\n            borderRadius: \"28px\",\n            margin: \"2rem auto 0 auto\",\n            width: \"60%\",\n          }}\n        >\n          <div style={{ padding: \"2rem\" }}>\n            <h2\n              style={{\n                fontWeight: \"700\",\n              }}\n            >\n              Get Verified As a Human\n            </h2>\n            <p>\n              Go on{\" \"}\n              <a href=\"https://i-am-human.app\" target=\"_blank\">\n                i-am-human.app\n              </a>{\" \"}\n              and get faceverified as a human\n            </p>\n          </div>\n        </div>\n      )\n    )}\n    {state.showAbortPollCreation && renderAbortPollCreationModal()}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/neardigitalcollective.near/widget/EasyPoll.Main", "__row_index": 4}