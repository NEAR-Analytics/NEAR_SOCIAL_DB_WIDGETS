{"tx_hash": "3722NhyPsK8HkHJ3mWbzXauMDhxg4zdztAsgoA4sCrjN", "action_id_social": "GDokErW1WQQW8KhHStseC95RJZJTMz17S1UKUan7SYmi-0-widget", "block_id": 94565533, "block_timestamp": "2023-06-19T21:09:08.854Z", "signer_id": "neardigitalcollective.near", "widget_name": "EasyPoll.Percentage", "source_code": "const ResponsiveText = styled.span`\n  @media screen and (max-width: 1024px)  {\n      font-size: 11px;\n  }\n`;\nconst ResponsiveTextOption = styled.p`\n  whitespace: pre-wrap;\n  margin-bottom: 2px !important;\n  @media screen and (max-width: 1024px)  {\n      font-size: 11px;\n  }\n`;\nconst TopMarginPercentage = styled.span`\n  margin: 0.5rem 0px 0.4rem 0.3rem;\n  @media screen and (max-width: 1024px)  {\n      margin: 0.6rem 0px 0.4rem 0.3rem;\n      font-size: 11px;\n  }\n`;\n\nconst VoteButton = styled.div`\n  border-radius: 20px;\n  border: none;\n  display: flex;\n  padding: 0;\n  position: relative;\n  background: #f3f3f2;\n  width: 100%;\n  margin-bottom: 14px;\n  cursor: pointer;\n\n  .button {\n    border-radius: 20px;\n    padding: 12px 20px;\n    text-align: left;\n    font-weight: 600;\n    font-size: 15px;\n    transition: all 0.4s ease-in-out;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    min-width: 90px;\n    width: 90px;\n\n    @media (max-width: 600px) {\n      justify-content: start;\n    }\n  }\n\n  .votes {\n    text-align: right;\n    padding: 12px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    color: rgb(27, 27, 24);\n  }\n\n  .preview {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    border-radius: 20px;\n    transition: all 0.4s ease-in-out;\n    z-index: 0;\n  }\n\n`;\n\nfunction calculatePercentageOfOption(votes, index) {\n  const validAnswers = votes.reduce((acc, curr) => acc + curr, 0);\n\n  if (validAnswers == 0 || votes.length == 0) return 0;\n\n  const votesToThisOption = votes[index];\n  return ((votesToThisOption / validAnswers) * 100).toFixed(2);\n}\n\nreturn (\n  <div>\n    <div className=\"align-content-center\">\n      {/* Set the width of the next div to make the bar grow. At the same, use the same value to fill the span tag */}\n      {!props.canVote && (\n        <ResponsiveTextOption\n          style={{\n            marginTop: 15,\n            fontWeight: \"500\",\n          }}\n        >\n          {props.option} \u2022\n          <TopMarginPercentage\n            className=\"text-secondary\"\n            style={{\n              fontWeight: \"400\",\n              marginTop: \"0.8rem\",\n            }}\n          >\n            (\n            {\n              props.countVotes(props.questionNumber, props.questionType)[\n                props.optionNumber\n              ]\n            }{\" \"}\n            votes)\n          </TopMarginPercentage>\n        </ResponsiveTextOption>\n      )}\n      {!props.canVote ? (\n        <>\n          <VoteButton>\n            <span\n              style={{\n                width: `${\n                  calculatePercentageOfOption(\n                    props.countVotes(props.questionNumber, props.questionType),\n                    props.optionNumber\n                  ) < 5\n                    ? 5\n                    : calculatePercentageOfOption(\n                        props.countVotes(\n                          props.questionNumber,\n                          props.questionType\n                        ),\n                        props.optionNumber\n                      )\n                }%`,\n                opacity: 1,\n                backgroundColor: `${props.getBgColor(\n                  props.optionNumber,\n                  true\n                )}`,\n              }}\n              className=\"button\"\n            >\n              <span className=\"vote\">\n                <span style={{ opacity: 0 }}>b</span>\n              </span>\n            </span>\n            <span className=\"votes\">\n              <span className=\"preview\" />\n              {calculatePercentageOfOption(\n                props.countVotes(props.questionNumber, props.questionType),\n                props.optionNumber\n              )}\n              %\n            </span>\n          </VoteButton>\n        </>\n      ) : (\n        <>\n          <input\n            className=\"form-check-input\"\n            id={`${props.questionNumber}-${props.optionNumber}`}\n            name={`${props.questionNumber}-${props.questionType}`}\n            key={`${props.questionNumber}-${props.optionNumber}-${props.vote}`}\n            style={props.getInputStyles(\n              props.questionType,\n              props.questionNumber,\n              props.optionNumber\n            )}\n            type={props.questionType == \"2\" ? \"checkbox\" : \"radio\"}\n            value={props.optionNumber}\n            checked={\n              props.questionType == \"2\"\n                ? props.vote[props.questionNumber].includes(\n                    props.optionNumber + \"\"\n                  )\n                : props.vote[props.questionNumber] == props.optionNumber + \"\"\n            }\n            onClick={\n              props.questionType != \"2\" &&\n              props.clickRadioInputHandler(\n                props.questionNumber,\n                props.optionNumber\n              )\n            }\n            onChange={\n              props.questionType == \"2\" &&\n              props.clickCheckboxInputHandler(\n                props.questionNumber,\n                props.optionNumber\n              )\n            }\n          />\n          <label for={`${props.questionNumber}-${props.optionNumber}`}>\n            {props.option}\n          </label>\n        </>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/neardigitalcollective.near/widget/EasyPoll.Percentage", "__row_index": 3}