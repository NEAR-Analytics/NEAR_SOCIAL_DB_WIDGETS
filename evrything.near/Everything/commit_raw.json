{"tx_hash": "hxJsm8eM9doucSgtxD7U4MUzLLHsbK5jTSeEjbUm1EE", "action_id_social": "9uZ1Kwduj6fDjfyAzuAxd4TjY3hxurpZvBnBULKiBz1Z-0-widget", "block_id": 89209947, "block_timestamp": "2023-04-09 21:09:18.794", "signer_id": "evrything.near", "widget_name": "Everything", "source_code": "const accountId = props.accountId || \"evrything.near\"; // which account's Types to use\nconst font = props.font || \"Times New Roman\"; // custom font for H1\nconst type = props.type || \"everything\"; // selected type\nconst text = props.text || type.toLowerCase(); // text for H1\n\nconst H1 = styled.h1`\n  font-family: ${font}, Times, serif;\n  font-size: 4em;\n  line-height: 1.25;\n  font-weight: 400;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n`;\n\nconst Controller = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  margin-top: 160px;\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0 4px;\n`;\n\nconst Button = styled.button`\n    text-transform: lowercase !important;\n`;\n\nconst types = Social.keys(`${accountId}/type/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\ntypes = Object.entries(types[accountId].type ?? {});\n\nState.init({\n  title: text,\n  type: type,\n});\n\nconst handleSelectType = (typeName) => {\n  if (typeName === \"everything\") {\n    State.update({\n      title: text,\n      type: \"everything\",\n    });\n  } else {\n    State.update({\n      title: typeName.toLowerCase() + \"s\",\n      type: `${accountId}/type/${typeName}`,\n    });\n  }\n};\n\nreturn (\n  <>\n    <Container>\n      <Controller>\n        <H1>{state.title}</H1>\n        <ButtonRow>\n          {state.type === \"everything\" ? (\n            <>\n              {types.map((it) => (\n                <Button onClick={() => handleSelectType(it[0])}>\n                  {it[0] + \"s\"}\n                </Button>\n              ))}\n              {context.accountId === accountId ? ( // currently thinking the button should only show if you are able to create types in domain\n                <a\n                  href={`/#/evrything.near/widget/Everything.Create.Type`} // this could get way more intense\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\n                >\n                  <Button>+</Button>\n                </a>\n              ) : null}\n            </>\n          ) : (\n            <>\n              <Button onClick={() => handleSelectType(\"everything\")}>\n                back\n              </Button>\n              <a\n                href={`/#/evrything.near/widget/Everything.Type.Details?type=${accountId}/type/${state.type}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <Button>view type details</Button>\n              </a>\n              <a\n                href={`/#/evrything.near/widget/Everything.Type.Create?type=${accountId}/type/${state.type}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <Button>create new</Button>\n              </a>\n            </>\n          )}\n        </ButtonRow>\n      </Controller>\n      <Widget\n        src={\"evrything.near/widget/Everything.Things\"}\n        props={{\n          type: `${accountId}/type/${state.type}`,\n        }}\n      />\n    </Container>\n  </>\n);\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/evrything.near/widget/Everything", "branch.draft.": NaN, "branch.draft.metadata": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.linktree.website": NaN, "metadata.tags.list": NaN, "metadata.tags.thing": NaN, "branch.draft": NaN}