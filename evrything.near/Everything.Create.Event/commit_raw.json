{"tx_hash": "EncA7KsMUCrVGfh7Y51gVmEpJsUoryJsA1ZxXwbQ6Wtt", "action_id_social": "9JHgJh4ta8FNgRu1PpD2rteWFr1hnuPTPmQBKCJLgqG-0-widget", "block_id": 87597273, "block_timestamp": "2023-03-18 21:30:46.628", "signer_id": "evrything.near", "widget_name": "Everything.Create.Event", "source_code": "const ERROR_WIDGET = \"evrything.near/widget/Everything.Error\";\n\nconst Header = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst Title = styled.div`\n    font-size: 24px;\n    line-height: 33.6px;\n`;\n\nconst Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n`;\n\nconst TextArea = styled.textarea`\n    width: 100%;\n`;\n\nconst ButtonRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 4px;\n`;\n\nconst Button = styled.button`\n    padding: 8px 20px;\n    max-width: 90px;\n`;\n\nconst Caption = styled.div`\n    font-size: 12px;\n    line-height: 15.6px;\n    color: #A6A6A6;\n`;\n\nconst typeStr = \"evrything.near/type/Event\";\n\nconst type = Type.get(typeStr);\n// const type = props.type;\n\nif (!type) {\n  return (\n    <Widget\n      src={ERROR_WIDGET}\n      props={{\n        message: `provided type: \"${props.type}\" is not valid.`,\n      }}\n    />\n  );\n}\n\nState.init({\n  title: \"\",\n  description: \"\",\n});\n\nfunction composeData() {\n  const data = {\n    thing: {\n      main: JSON.stringify(state),\n    },\n    index: {\n      thing: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: typeStr,\n        },\n      }),\n    },\n  };\n  return data;\n}\n\nconst resetThing = () => {\n  State.update({\n    title: \"\",\n    description: \"\",\n  });\n};\n\nreturn (\n  <>\n    <Header>\n      <Title>{typeStr.split(\"/\")[2]}</Title>\n    </Header>\n\n    <Form>\n      <Input\n        placeholder={\"title\"}\n        onChange={({ target }) => State.update({ title: target.value })}\n      />\n      <TextArea\n        onInput={({ target }) => State.update({ description: target.value })}\n        placeholder={\"description, markdown supported\"}\n      />\n      <ButtonRow>\n        <CommitButton\n          disabled={!state.title}\n          force\n          data={composeData}\n          onCommit={resetThing}\n        >\n          create\n        </CommitButton>\n        <Button onClick={resetThing}>reset</Button>\n      </ButtonRow>\n    </Form>\n  </>\n);\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/evrything.near/widget/Everything.Create.Event", "branch.draft": NaN, "metadata.tags.everything-creator": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN}