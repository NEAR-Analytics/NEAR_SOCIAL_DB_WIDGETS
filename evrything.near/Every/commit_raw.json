{"tx_hash": "2sihtBAVZZ3TuE5DQVMUD9uaXekENadAXvbrNRZN6vKz", "action_id_social": "2CkhdLedHxxNSDLfEHaeQ97UFxq79jtWMMgCkHVZLRfp-0-widget", "block_id": 90199397, "block_timestamp": "2023-04-22 21:33:31.417", "signer_id": "evrything.near", "widget_name": "Every", "source_code": "/**\n * Configure your community feed.\n */\n// const daoId = \"liberty.sputnik-dao.near\"; // restrict posting to members of a DAO (Optional)\n// const groupId = \"community\"; // which group can post?\n\n// const policy = Near.view(daoId, \"get_policy\");\n// const group = policy.roles\n//   .filter((role) => role.name === groupId)\n//   .map((role) => {\n//     const group = role.kind.Group;\n\n//     return group;\n//   });\n\nconst defaultTag = props.defaultTag || \"earthday\";\n\nconst hashtags = [\n  { name: \"everything\", required: true },\n  { name: \"nyc\", required: true },\n  { name: \"earthday\", required: true },\n  { name: \"bos\", required: true },\n  { name: \"dev\", required: true },\n];\n\nconst options = hashtags.map((hashtag) => ({\n  label: hashtag.name,\n  value: hashtag,\n}));\n\nconst defaultOption = options.find((option) => option.label === defaultTag);\nconst defaultFilter = hashtags.find((hashtag) => hashtag.name === defaultTag);\n\nconst font = props.font || \"Times New Roman\";\nState.init({\n  title: \"everything\",\n  hashtagsFilter: defaultFilter,\n  selectedType: \"posts\",\n});\n\nconst renderThings = () => {\n  switch (state.selectedType) {\n    case \"posts\":\n      return (\n        <Widget\n          src=\"efiz.near/widget/Community.Posts\"\n          props={{\n            communityHashtags: [state.hashtagsFilter],\n            communityMembers: [],\n            exclusive: false,\n            allowPublicPosting: true,\n          }}\n        />\n      );\n    case \"events\":\n      return <Widget src=\"evrything.near/widget/Everything.ViewAll.Events\" />;\n    case \"climateclock\":\n      return <Widget src=\"earthday.near/widget/ClimateClock\" />;\n  }\n};\n\nconst H1 = styled.h1`\n  font-family: ${font}, Times, serif;\n  font-size: 4em;\n  line-height: 1.25;\n  font-weight: 400;\n  cursor: pointer;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n`;\n\nconst Controller = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  margin: 160px 0;\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0 4px;\n`;\n\nconst Button = styled.button`\n  text-transform: lowercase !important;\n`;\n\nreturn (\n  <>\n    <Container>\n      <Controller>\n        <Typeahead\n          size=\"large\"\n          bsPrefix={null}\n          inputProps={{\n            style: {\n              border: \"none\",\n              outline: \"none\",\n              boxShadow: \"none !important\",\n              height: \"3rem\",\n              fontSize: \"2rem\",\n              fontFamily: `${font}, Times, serif`,\n              lineHeight: 1.5,\n              fontWeight: 400,\n              cursor: pointer,\n              width: \"auto\",\n              textAlign: \"center\",\n            },\n          }}\n          defaultSelected={[defaultOption]}\n          options={options}\n          multiple={false}\n          onChange={(val) => {\n            const [{ value }] = val;\n            const { name, required } = value;\n            State.update({\n              hashtagsFilter: {\n                name,\n                required,\n              },\n            });\n          }}\n          renderInput={({ inputRef, referenceElementRef, ...inputProps }) => (\n            <input\n              {...inputProps}\n              ref={(ref) => {\n                inputRef(ref);\n                referenceElementRef(ref);\n              }}\n              placeholder=\"everything\"\n            />\n          )}\n        />\n        <div className=\"d-inline-block\">\n          <Button onClick={() => State.update({ selectedType: \"posts\" })}>\n            posts\n          </Button>\n          <Button onClick={() => State.update({ selectedType: \"events\" })}>\n            events\n          </Button>\n          {state.hashtagsFilter.name === \"earthday\" ? (\n            <Button\n              onClick={() => State.update({ selectedType: \"climateclock\" })}\n            >\n              climate clock\n            </Button>\n          ) : null}\n        </div>\n      </Controller>\n      {renderThings()}\n    </Container>\n  </>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/evrything.near/widget/Every", "branch.draft": NaN}