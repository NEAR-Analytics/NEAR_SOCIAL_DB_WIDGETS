{"tx_hash": "WqUTCxoE3BzqDE29Ztxn1y65mSbgHvJsAtBLP2MSyLo", "action_id_social": "BrfszAkQyM8xMrHQovT8EZms41XppBDGfnhagcEfhizk-0-widget", "block_id": 86625243, "block_timestamp": "2023-03-05 16:50:01.229", "signer_id": "e9ffdac33b150951c850ae9a9f91274e327c4e7af6f10d4b0a699bd5eae6d99c", "widget_name": "atmosphere", "source_code": "/* Components */\nconst term = props.searchTerm ? props.searchTerm + \"*\" : \"*\";\n\nconst users2 = fetch(\n  \"https://bafybeie6k6htg2ft626s4n3t6gnwcf3nlmka4tlkluphdrxx2zqs2looem.ipfs.w3s.link/web3storage.json\"\n);\nif (!users2.ok) {\n  return \"Loading\";\n}\n\nconsole.log(users2);\n\nconst users = {\n  users: [\n    {\n      title: \"Living in Denver\",\n      description:\n        \"I live off of the street and have been homeless for 2 years. Any help is much appeciated\",\n      name: \"John Smith\",\n    },\n    {\n      title: \"Boulder Winter\",\n      description:\n        \"Boulder is a great place to live even if you are homeless but it get's extremely code in the winter\",\n      name: \"Dave Jones\",\n    },\n    {\n      title: \"On the Road\",\n      description:\n        \"Been living off the land and on the road a huge part of the my life. I don't anyother way\",\n      name: \"David Lee\",\n    },\n  ],\n};\n\n// console.log(users);\n\nconst Card = styled.div`\n  box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);\n  border-radius: 5px;\n  padding: 30px 0;\n  margin-bottom: 10px;\n  overflow-wrap: break-word;\n`;\n\nconst imageEndpoint = \"https://astro-prod-ui.s3.us-east-1.amazonaws.com/\";\n\nconst tokens = {\n  \"Select Token\": \"\",\n  USDT: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n  DAI: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n  USDC: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n  MKR: \"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\",\n};\n\nconst tokensMenuItems = Object.keys(tokens).map((token) => (\n  <option value={tokens[token]}>{token}</option>\n));\n\n/* Input Code */\nconst computeResults = (term) => {\n  const searchTerm = term.toLowerCase();\n  State.update({\n    searchTerm,\n  });\n\n  if (props.onChange) {\n    props.onChange({ searchTerm });\n  }\n};\n\n/* Ethereum */\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) return <Web3Connect connectLabel=\"Connect with Web3\" />;\n\nconst erc20Abi = fetch(\n  \"https://gist.githubusercontent.com/Slyracoon23/67ddc4a8e58dabd43e9a6bbccc1903ef/raw/eb3a6cf0f6d9239dbd318cf034bd37220ad493cd/riley-code.json\"\n);\nif (!erc20Abi.ok) {\n  return \"scam\";\n}\n\nconst iface = new ethers.utils.Interface(erc20Abi.body);\n\ninitState({\n  token: \"\",\n  tokenDecimals: \"\",\n  sendTo: \"\",\n  sender,\n  senderBalance: \"0\",\n  receiverBalance: \"0\",\n  receiver: \"\",\n  amount: \"1\",\n});\n\nconst getTokenBalance = (receiver) => {\n  const encodedData = iface.encodeFunctionData(\"balanceOf\", [receiver]);\n\n  return Ethers.provider()\n    .call({\n      to: state.token,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = iface.decodeFunctionResult(\n        \"balanceOf\",\n        rawBalance\n      );\n\n      return Big(receiverBalanceHex.toString())\n        .div(Big(10).pow(state.tokenDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    });\n};\n\nconst getTokenDecimals = () => {\n  const encodedData = iface.encodeFunctionData(\"decimals\", []);\n\n  return Ethers.provider()\n    .call({\n      to: state.token,\n      data: encodedData,\n    })\n    .then((tokenDecimals) => {\n      State.update({ tokenDecimals: parseInt(Number(tokenDecimals)) });\n      refreshBalances();\n    });\n};\n\nconst refreshBalances = () => {\n  getTokenBalance(state.sender).then((value) => {\n    State.update({ senderBalance: value });\n  });\n\n  getTokenBalance(state.receiver).then((value) => {\n    State.update({ receiverBalance: value });\n  });\n};\n\nconst sendTokens = () => {\n  const erc20 = new ethers.Contract(\n    state.token,\n    erc20Abi.body,\n    Ethers.provider().getSigner()\n  );\n\n  let amount = ethers.utils.parseUnits(state.amount, state.tokenDecimals);\n\n  erc20.transfer(state.receiver, amount);\n\n  console.log(\"transactionHash is \" + transactionHash);\n};\n\nconst open = () => {\n  let receiver = \"0x5ada39e766c416ca083d8c7e43104f2c7cf2194a\";\n  let amount = \"100\";\n  const erc20 = new ethers.Contract(\n    \"0x7fe350bda863478d61d3bf302aa35818e36e447b\",\n    erc20Abi.body,\n    Ethers.provider().getSigner()\n  );\n\n  erc20.open(receiver, \"10\");\n\n  console.log(\"transactionHash is \" + transactionHash);\n};\n\nconst airdrop = () => {\n  console.log(\"123\");\n  const erc20 = new ethers.Contract(\n    \"0x7fe350bda863478d61d3bf302aa35818e36e447b\",\n    erc20Abi.body,\n    Ethers.provider().getSigner()\n  );\n  erc20.airdrop(\"100000\");\n\n  console.log(\"transactionHash is \" + transactionHash);\n};\n\n/* Main export */\nreturn (\n  <>\n    <h2>Atomosphere</h2>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      value={state.searchTerm ?? \"\"}\n      onChange={(e) => computeResults(e.target.value)}\n      placeholder={props.placeholder ?? `\ud83d\udd0d Search Components`}\n    />\n\n    {props.debug && <pre>{JSON.stringify(state.searchTerm, undefined, 2)}</pre>}\n    <div className=\"container py-4\">\n      {users\n        ? users.users.map((user) => {\n            const bountyId = bounty._source.id;\n            return (\n              <div className=\"row justify-content-md-center py-2 px-5\">\n                <div className=\"col-2 justify-content-md-center\"></div>\n                <div className=\"col-10\">\n                  <h4>{user.title}</h4>\n                  <Card>\n                    <div\n                      style={{\n                        borderBottom: \"1px solid\",\n                        borderColor: \"rgba(0,0,0,0.2)\",\n                      }}\n                    >\n                      <div style={{ padding: \"0 30px 15px\" }}>\n                        <b>Summary:</b>\n                        <br />\n                        {user.description}\n                      </div>\n                    </div>\n                    <div style={{ padding: \"15px 30px 0\" }}>\n                      <b>0.1 ETH</b>\n                    </div>\n                  </Card>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <h3>Send ERC-20 tokens</h3>\n                      <div class=\"mb-3\">\n                        <label for=\"selectToken\">Select token</label>\n                        <select\n                          class=\"form-select\"\n                          id=\"selectToken\"\n                          onChange={(e) => {\n                            setToken(e.target.value);\n                          }}\n                        >\n                          {tokensMenuItems}\n                        </select>\n                      </div>\n                      <div class=\"mb-3\">\n                        <label for=\"send-to\" class=\"form-label\">\n                          Recepient address\n                        </label>\n                        <input\n                          value={state.sendTo}\n                          class=\"form-control\"\n                          id=\"send-to\"\n                          placeholder=\"vitalik.eth\"\n                          onChange={(e) => setSendTo(e.target.value)}\n                        />\n                        {state.receiver && (\n                          <div class=\"text-secondary mt-3\">\n                            Resolved to {state.receiver}\n                          </div>\n                        )}\n                        {state.receiverBalance != \"0\" && (\n                          <div class=\"text-secondary mt-3\">\n                            Receiver's balance: {state.receiverBalance}\n                          </div>\n                        )}\n\n                        {state.senderBalance != \"0\" && (\n                          <div class=\"text-secondary mt-3\">\n                            Sender's balance: {state.senderBalance}\n                          </div>\n                        )}\n                      </div>\n                      <div class=\"mb-3\">\n                        <label for=\"amount\" class=\"form-label\">\n                          Enter the amount\n                        </label>\n                        <input\n                          value={state.amount}\n                          class=\"form-control\"\n                          id=\"amount\"\n                          placeholder=\"\"\n                          onChange={(e) =>\n                            State.update({ amount: e.target.value })\n                          }\n                        />\n                      </div>\n                      <div class=\"mb-3\">\n                        <button onClick={airdrop}>AirDrop</button>\n                        <button onClick={open}>Send</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        : \"Fetching\"}\n    </div>\n  </>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/e9ffdac33b150951c850ae9a9f91274e327c4e7af6f10d4b0a699bd5eae6d99c/widget/atmosphere", "metadata.tags.ethdenver2023": NaN}