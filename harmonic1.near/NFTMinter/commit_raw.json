{"tx_hash": "B3uPD319FDK8Rgb1bqKmURVMbFFwYFJaqFzcjmpvjPvg", "action_id_social": "BtKQWL2ujzr99SsCS5CUhdeBtDJbp3B9H2f2BAfzcvjz-0-widget", "block_id": 91973911, "block_timestamp": "2023-05-16T07:29:59.572Z", "signer_id": "harmonic1.near", "widget_name": "NFTMinter", "source_code": "const nearContract = \"nft.harmonic1.near\";\nlet accountId = context.accountId;\n\nconst handleMint = () => {\n  console.log(\"it's here\", state.title && state.description && state.image.cid);\n  if (!(state.title && state.description && state.image.cid)) {\n    console.log(\"not working\");\n    return;\n  }\n  //if (state.selectedChain == \"0\") {\n  const gas = 200000000000000;\n  const deposit = 10000000000000000000000;\n  const metadata = {\n    name: state.title,\n    description: state.description,\n    properties: [],\n    image: `ipfs://${state.image.cid}`,\n  };\n  asyncFetch(\"https://ipfs.near.social/add\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n    },\n    body: metadata,\n  }).then((res) => {\n    const cid = res.body.cid;\n    const Id = Math.floor(Math.random() * (9999999 - 100000 + 1) + 100000);\n    console.log(\"in the promise\", res, Id);\n    Near.call([\n      {\n        contractName: nearContract,\n        methodName: \"nft_mint\",\n        args: {\n          token_id: `${Date.now()}`,\n          token_metadata: {\n            title: state.title,\n            description: state.description,\n            media: `https://ipfs.io/ipfs/${state.image.cid}`,\n            reference: `ipfs://${cid}`,\n          },\n          receiver_id: accountId,\n        },\n        gas: gas,\n        deposit: deposit,\n      },\n    ]);\n  });\n  return;\n  //}\n  console.log(\"passed checks\");\n};\n\nState.init({\n  title: \"\",\n  description: \"\",\n});\n\nconst onChangeTitle = (title) => {\n  State.update({\n    title,\n  });\n};\n\nconst onChangeDesc = (description) => {\n  console.log(\"Log critcal critics:\", state.selectedChain, state.title);\n  State.update({\n    description,\n  });\n};\n\nconst containerStyle = {\n  maxWidth: \"500px\",\n  margin: \"0 auto\",\n  padding: \"2rem\",\n  backgroundColor: \"#f5f5f5\",\n};\n\nconst headerStyle = {\n  fontSize: \"2rem\",\n  marginBottom: \"1rem\",\n  color: \"black\",\n  fontWeight: \"bold\",\n};\n\nconst formFieldStyle = {\n  marginBottom: \"1.5rem\",\n};\n\nconst labelStyle = {\n  display: \"block\",\n  fontWeight: \"bold\",\n  marginBottom: \"0.5rem\",\n};\n\nconst inputStyle = {\n  width: \"100%\",\n  padding: \"0.5rem\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"0.3rem\",\n  fontSize: \"1rem\",\n};\n\nconst previewContainerStyle = {\n  marginTop: \"1.5rem\",\n};\n\nconst previewImageStyle = {\n  maxWidth: \"100%\",\n  height: \"auto\",\n  marginTop: \"0.5rem\",\n};\n\nconst buttonStyle = {\n  display: \"inline-block\",\n  padding: \"0.5rem 1rem\",\n  fontSize: \"1rem\",\n  textAlign: \"center\",\n  textDecoration: \"none\",\n  cursor: \"pointer\",\n  borderRadius: \"0.3rem\",\n};\n\nconst primaryButtonStyle = {\n  ...buttonStyle,\n  backgroundColor: \"#007bff\",\n  color: \"#fff\",\n  border: \"none\",\n};\n\nconst secondaryButtonStyle = {\n  ...buttonStyle,\n  backgroundColor: \"transparent\",\n  color: \"#6c757d\",\n  border: \"1px solid #6c757d\",\n};\n\nreturn (\n  <div style={containerStyle}>\n    <div style={headerStyle}>Mint an NFT on Harmonic</div>\n    <div style={formFieldStyle}>\n      <label style={labelStyle} htmlFor=\"title\">\n        Title\n      </label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        value={title}\n        onChange={(e) => onChangeTitle(e.target.value)}\n        style={inputStyle}\n      />\n    </div>\n    <div style={formFieldStyle}>\n      <label style={labelStyle} htmlFor=\"description\">\n        Description\n      </label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        value={description}\n        onChange={(e) => onChangeDesc(e.target.value)}\n        style={inputStyle}\n      />\n    </div>\n    <div style={formFieldStyle}>\n      <IpfsImageUpload\n        image={state.image}\n        className=\"my-2 btn btn-outline-secondary border-1 rounded-3\"\n        onImageChange={setImage}\n      />\n    </div>\n    {state.image.cid && (\n      <div style={previewContainerStyle}>\n        <h5>Preview</h5>\n        <img\n          src={`https://ipfs.io/ipfs/${state.image.cid}`}\n          alt=\"Preview\"\n          style={previewImageStyle}\n        />\n      </div>\n    )}\n    <div style={formFieldStyle}>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary my-3 px-4\"\n        onClick={handleMint}\n        style={primaryButtonStyle}\n      >\n        Mint\n      </button>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harmonic1.near/widget/NFTMinter", "__row_index": 0}