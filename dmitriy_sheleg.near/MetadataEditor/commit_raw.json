{"tx_hash": "CwbKE3JqVDRjZSimHzcfMM8meK8G1w94WLCGzQ6ADA5F", "action_id_social": "FSvWtJmyW5xbUkef7muty4cWbuBSkQLu7PVrLQumjCbs-0-widget", "block_id": 87725294, "block_timestamp": "2023-03-20 14:12:55.509", "signer_id": "dmitriy_sheleg.near", "widget_name": "MetadataEditor", "source_code": "const initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\n\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n});\n\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree).length > 0\n      ? state.linktree\n      : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  backgroundImage:\n    options.backgroundImage &&\n    state.backgroundImage &&\n    Object.keys(state.backgroundImage).length > 0\n      ? state.backgroundImage\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n};\n\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\n\n// const debounce = (func, timeout = 300) => {\n//   let timer;\n//   return (...args) => {\n//     if (!timer) {\n//       func.apply(this, args);\n//     }\n//     clearTimeout(timer);\n//     timer = setTimeout(() => {\n//       timer = undefined;\n//     }, timeout);\n//   };\n// };\n\nconst debounceSave = (params) => {\n  let timer;\n  // console.log(\"some thing\");\n  console.log(state);\n  return () => {\n    if (!timer) {\n      State.update(params);\n    }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = undefined;\n    }, 300);\n  };\n};\n\nlet metadataDescription = metadata.description;\n\nconst handleDescriptionChange = (value) => {\n  metadataDescription = value;\n  console.log(\"metadataDescription: \", metadataDescription);\n  debounceSave(metadataDescription);\n};\n\nreturn (\n  <>\n    {options.name && (\n      <div className=\"mb-2\">\n        {options.name.label ?? \"Name\"}\n        <input type=\"text\" value={state.metadata.name} />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-2\">\n        {options.image.label ?? \"Image\"}\n        <Widget\n          src=\"mob.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.image,\n            onChange: (image) => State.update({ image }),\n          }}\n        />\n      </div>\n    )}\n    {options.backgroundImage && (\n      <div className=\"mb-2\">\n        {options.backgroundImage.label ?? \"Background image\"}\n        <Widget\n          src=\"mob.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.backgroundImage,\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-2\">\n        {options.description.label ?? \"Description\"}\n        <span className=\"text-secondary\"> (supports markdown)</span>\n        <textarea\n          className=\"form-control\"\n          rows={5}\n          value={metadataDescription}\n          onChange={(e) => {\n            handleDescriptionChange(e.target.value);\n            // metadataDescription = e.target.value;\n            // debounceSave((state.metadata.description = metadataDescription));\n            // State.update();\n          }}\n        />\n      </div>\n    )}\n    {options.tags && (\n      <div className=\"mb-2\">\n        {options.tags.label ?? \"Tags\"}\n        <Widget\n          src=\"mob.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </div>\n    )}\n    {options.linktree &&\n      (options.linktree.links ?? []).map((link) => (\n        <div className=\"mb-2\">\n          {link.label}\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">{link.prefix}</span>\n            <input type=\"text\" value={state.linktree[link.name]} />\n          </div>\n        </div>\n      ))}\n  </>\n);\n", "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/dmitriy_sheleg.near/widget/MetadataEditor", "metadata": NaN, "branch.draft.": NaN, "branch.draft": NaN, "metadata.tags.app": NaN}