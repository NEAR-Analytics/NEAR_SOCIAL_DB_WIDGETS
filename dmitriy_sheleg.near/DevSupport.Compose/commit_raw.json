{"tx_hash": "5BY7zPQuFcidX74maJhiaQwDQtjWRYt1CjMrWNGEMrbk", "action_id_social": "32akJJ9ogTZtHNDDRZZBmo7NdGQ1kgB7VKUWxtHKCPC4-0-widget", "block_id": 88432203, "block_timestamp": "2023-03-30 10:35:05.958", "signer_id": "dmitriy_sheleg.near", "widget_name": "DevSupport.Compose", "source_code": "const autocompleteEnabled = props.autocompleteEnabled || true;\nconst withProfileImage = props.withProfileImage;\nconst composeButton = props.composeButton;\nconst accountId = props.accountId;\n\nif (state.image === undefined) {\n  State.init({\n    image: {},\n    text: props.initialText || \"\",\n  });\n\n  if (props.onHelper) {\n    const extractMentions = (text) => {\n      const mentionRegex =\n        /@((?:(?:[a-z\\d]+[-_])*[a-z\\d]+\\.)*(?:[a-z\\d]+[-_])*[a-z\\d]+)/gi;\n      mentionRegex.lastIndex = 0;\n      const accountIds = new Set();\n      for (const match of text.matchAll(mentionRegex)) {\n        if (\n          !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\n          !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\n          match[1].length >= 2 &&\n          match[1].length <= 64\n        ) {\n          accountIds.add(match[1].toLowerCase());\n        }\n      }\n      return [...accountIds];\n    };\n    const extractTagNotifications = (text, item) =>\n      extractMentions(text || \"\").map((accountId) => ({\n        key: accountId,\n        value: {\n          type: \"mention\",\n          item,\n        },\n      }));\n\n    props.onHelper({\n      extractMentions,\n      extractTagNotifications,\n    });\n  }\n}\n\nconst content = (state.text || state.image.cid) && {\n  type: \"md\",\n  text: state.text,\n  image: state.image.cid ? { ipfs_cid: state.image.cid } : undefined,\n};\n\nconst onChange = (text) => {\n  State.update({\n    text,\n  });\n};\n\nconst jContent = JSON.stringify(content);\nif (props.onChange && jContent !== state.jContent) {\n  State.update({\n    jContent,\n  });\n  props.onChange({ content });\n}\n\nconst onCompose = () => {\n  State.update({\n    image: {},\n    text: \"\",\n  });\n};\n\nfunction textareaInputHandler(value) {\n  const showAccountAutocomplete = /@[\\w][^\\s]*$/.test(value);\n  State.update({ text: value, showAccountAutocomplete });\n}\n\nfunction autoCompleteAccountId(id) {\n  let text = state.text.replace(/[\\s]{0,1}@[^\\s]*$/, \"\");\n  text = `${text} @${id}`.trim() + \" \";\n  State.update({ text, showAccountAutocomplete: false });\n}\n\n// const TextArea = styled.textarea`\n//   background-color: #ffffff;\n//   border: 1px solid #ECEEF0;\n//   border-radius: 8px;\n//   resize: none;\n//   padding-left: 5.5rem;\n//   padding-top: .75rem;\n// `;\nconst AvatarWrapper = styled.div`\n  position: absolute;\n  left: 1.5rem;\n  top: 1.5rem;\n`;\n\nconst Wrapper = styled.div`\n  --padding: 12px;\n  --paddingLeft: ${withProfileImage ? \"5.5rem\" : \"12px\"};\n  position: relative;\n  margin-left: -12px;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 200ms;\n  border: 1px solid #eceef0;\n  border-radius: 8px;\n\n  &:focus-within {\n    box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.05);\n    border-color: #687076;\n  }\n`;\n\nconst Textarea = styled.div`\n  display: grid;\n  vertical-align: top;\n  align-items: center;\n  position: relative;\n  align-items: stretch;\n\n  &::after,\n  textarea {\n    width: 100%;\n    min-width: 1em;\n    height: unset;\n    min-height: 124px;\n    font: inherit;\n    padding: var(--padding) var(--padding) calc(40px + (var(--padding) * 2))\n      var(--paddingLeft);\n    margin: 0;\n    resize: none;\n    background: none;\n    appearance: none;\n    border: none;\n    grid-area: 1 / 1;\n    overflow: hidden;\n    outline: none;\n  }\n\n  &::after {\n    content: attr(data-value) \" \";\n    visibility: hidden;\n    white-space: pre-wrap;\n  }\n`;\n\nconst Actions = styled.div`\n  display: inline-flex;\n  gap: 12px;\n  position: absolute;\n  bottom: var(--padding);\n  right: var(--padding);\n\n  .commit-post-button {\n    background: #59e692;\n    color: #11181c;\n    border-radius: 40px;\n    height: 40px;\n    padding: 0 35px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    cursor: pointer;\n    transition: background 200ms, opacity 200ms;\n\n    &:hover,\n    &:focus {\n      background: rgb(112 242 164);\n      outline: none;\n    }\n\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n  }\n\n  .upload-image-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f1f3f5;\n    color: #11181c;\n    border-radius: 40px;\n    height: 40px;\n    min-width: 40px;\n    font-size: 0;\n    border: none;\n    cursor: pointer;\n    transition: background 200ms, opacity 200ms;\n\n    &::before {\n      font-size: 16px;\n    }\n\n    &:hover,\n    &:focus {\n      background: #d7dbde;\n      outline: none;\n    }\n\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n\n    span {\n      margin-left: 12px;\n    }\n  }\n\n  .d-inline-block {\n    display: flex !important;\n    gap: 12px;\n    margin: 0 !important;\n\n    .overflow-hidden {\n      width: 40px !important;\n      height: 40px !important;\n    }\n  }\n`;\n\nconst AutoComplete = styled.div`\n  position: absolute;\n  z-index: 5;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  > div > div {\n    padding: calc(var(--padding) / 2);\n  }\n`;\n\n// <div>\n//   <div className=\"py-2 position-relative\">\n//     <AvatarWrapper>\n//       <Widget\n//         src=\"mob.near/widget/ProfileImage\"\n//         props={{\n//           accountId,\n//           imageClassName: \"rounded-circle w-100 h-100\",\n//           imageStyle: {\n//             pointerEvents: \"none\",\n//             objectFit: \"cover\",\n//           },\n//         }}\n//       />\n//     </AvatarWrapper>\n//     <TextArea\n//       className=\"form-control\"\n//       style={{ \"min-height\": \"15vh\" }}\n//       value={state.text || \"\"}\n//       onChange={(e) => onChange(e.target.value)}\n//       placeholder={props.placeholder ?? \"What's happening?\"}\n//     />\n//   </div>\n//   <div className=\"d-flex flex-row py-2\">\n//     <div className=\"flex-grow-1\">\n//       <IpfsImageUpload\n//         image={state.image}\n//         className=\"btn btn-outline-secondary\"\n//         style={{\n//           backgroundColor: \"#FAFAFA\",\n//           color: \"#006ADC\",\n//           fontWeight: 600,\n//           borderRadius: \"50px\",\n//           border: \"1px solid #E6E8EB\",\n//           padding: \".5rem 1.75rem\",\n//         }}\n//       />\n//     </div>\n//     <div>{props.composeButton && props.composeButton(onCompose)}</div>\n//   </div>\n// </div>\n\nreturn (\n  <Wrapper>\n    {withProfileImage && (\n      <AvatarWrapper>\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            accountId,\n            imageClassName: \"rounded-circle w-100 h-100\",\n            imageStyle: {\n              pointerEvents: \"none\",\n              objectFit: \"cover\",\n            },\n          }}\n        />\n      </AvatarWrapper>\n    )}\n    <Textarea data-value={state.text}>\n      <textarea\n        placeholder=\"Write your reply...\"\n        onInput={(event) => textareaInputHandler(event.target.value)}\n        onKeyUp={(event) => {\n          if (event.key === \"Escape\") {\n            State.update({ showAccountAutocomplete: false });\n          }\n        }}\n        value={state.text}\n      />\n    </Textarea>\n\n    {autocompleteEnabled && state.showAccountAutocomplete && (\n      <AutoComplete>\n        <Widget\n          src=\"adminalpha.near/widget/AccountAutocomplete\"\n          props={{\n            term: state.text.split(\"@\").pop(),\n            onSelect: autoCompleteAccountId,\n            onClose: () => State.update({ showAccountAutocomplete: false }),\n          }}\n        />\n      </AutoComplete>\n    )}\n\n    <Actions>\n      <IpfsImageUpload\n        image={state.image}\n        className=\"upload-image-button bi bi-image\"\n      />\n      {composeButton && composeButton(onCompose)}\n    </Actions>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dmitriy_sheleg.near/widget/DevSupport.Compose"}