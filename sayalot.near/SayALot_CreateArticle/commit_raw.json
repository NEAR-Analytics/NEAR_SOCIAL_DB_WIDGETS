{"tx_hash": "9LFLCyVrGxqpmntJzBZDcuuLqLtg7Sydmmmf2VSSGEKK", "action_id_social": "2qZDLyTBSeXbvik3oamLKUnTkeF5xMKdeixovgFc2nDC-0-widget", "block_id": 92997854, "block_timestamp": "2023-05-29T17:54:51.133Z", "signer_id": "sayalot.near", "widget_name": "SayALot_CreateArticle", "source_code": "const addressForArticles = \"sayALotArticle\";\r\nconst authorForWidget = \"sayalot.near\";\r\nconst accountId = props.accountId ?? context.accountId;\r\nif (!accountId) {\r\n  return \"No account ID\";\r\n}\r\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\r\nif (profile === null) {\r\n  return \"Loading\";\r\n}\r\nconst initialBody = `# h1 Heading 8-)\r\n## h2 Heading\r\n### h3 Heading\r\n#### h4 Heading\r\n##### h5 Heading\r\n###### h6 Heading\r\n\r\n\r\n## Horizontal Rules\r\n\r\n___\r\n\r\n---\r\n\r\n***\r\n\r\n\r\n## Typographic replacements\r\n\r\nEnable typographer option to see result.\r\n\r\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\r\n\r\ntest.. test... test..... test?..... test!....\r\n\r\n!!!!!! ???? ,,  -- ---\r\n\r\n\"Smartypants, double quotes\" and 'single quotes'\r\n\r\n\r\n## Emphasis\r\n\r\n**This is bold text**\r\n\r\n__This is bold text__\r\n\r\n*This is italic text*\r\n\r\n_This is italic text_\r\n\r\n~~Strikethrough~~\r\n\r\n\r\n## Blockquotes\r\n\r\n\r\n> Blockquotes can also be nested...\r\n>> ...by using additional greater-than signs right next to each other...\r\n> > > ...or with spaces between arrows.\r\n\r\n\r\n## Lists\r\n\r\nUnordered\r\n\r\n+ Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\`\r\n+ Sub-lists are made by indenting 2 spaces:\r\n  - Marker character change forces new list start:\r\n    * Ac tristique libero volutpat at\r\n    + Facilisis in pretium nisl aliquet\r\n    - Nulla volutpat aliquam velit\r\n+ Very easy!\r\n\r\nOrdered\r\n\r\n1. Lorem ipsum dolor sit amet\r\n2. Consectetur adipiscing elit\r\n3. Integer molestie lorem at massa\r\n\r\n\r\n1. You can use sequential numbers...\r\n1. ...or keep all the numbers as \\`1.\\`\r\n\r\nStart numbering with offset:\r\n\r\n57. foo\r\n1. bar\r\n\r\n\r\n## Code\r\n\r\nInline \\`code\\`\r\n\r\nIndented code\r\n\r\n    // Some comments\r\n    line 1 of code\r\n    line 2 of code\r\n    line 3 of code\r\n\r\n\r\nBlock code \"fences\"\r\n\r\n\\`\\`\\`\r\nSample text here...\r\n\\`\\`\\`\r\n\r\nSyntax highlighting\r\n\r\n\\`\\`\\` js\r\nvar foo = function (bar) {\r\n  return bar++;\r\n};\r\n\r\nconsole.log(foo(5));\r\n\\`\\`\\`\r\n\r\n## Tables\r\n\r\n| Option | Description |\r\n| ------ | ----------- |\r\n| data   | path to data files to supply the data that will be passed into templates. |\r\n| engine | engine to be used for processing templates. Handlebars is the default. |\r\n| ext    | extension to be used for dest files. |\r\n\r\nRight aligned columns\r\n\r\n| Option | Description |\r\n| ------:| -----------:|\r\n| data   | path to data files to supply the data that will be passed into templates. |\r\n| engine | engine to be used for processing templates. Handlebars is the default. |\r\n| ext    | extension to be used for dest files. |\r\n\r\n\r\n## Links\r\n\r\n[link text](http://dev.nodeca.com)\r\n\r\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\r\n\r\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\r\n\r\n\r\n## Images\r\n\r\n![Minion](https://octodex.github.com/images/minion.png)\r\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\r\n\r\nLike links, Images also have a footnote style syntax\r\n\r\n![Alt text][id]\r\n\r\nWith a reference later in the document defining the URL location:\r\n\r\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\r\n\r\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\r\n\r\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\r\n>\r\n> Shortcuts (emoticons): :-) :-( 8-) ;)\r\n\r\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\r\n\r\n\r\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\r\n\r\n- 19^th^\r\n- H~2~O\r\n\r\n\r\n### [\\<ins>](https://github.com/markdown-it/markdown-it-ins)\r\n\r\n++Inserted text++\r\n\r\n\r\n### [\\<mark>](https://github.com/markdown-it/markdown-it-mark)\r\n\r\n==Marked text==\r\n\r\n\r\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\r\n\r\nFootnote 1 link[^first].\r\n\r\nFootnote 2 link[^second].\r\n\r\nInline footnote^[Text of inline footnote] definition.\r\n\r\nDuplicated footnote reference[^second].\r\n\r\n[^first]: Footnote **can have markup**\r\n\r\n    and multiple paragraphs.\r\n\r\n[^second]: Footnote text.\r\n\r\n\r\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\r\n\r\nTerm 1\r\n\r\n:   Definition 1\r\nwith lazy continuation.\r\n\r\nTerm 2 with *inline markup*\r\n\r\n:   Definition 2\r\n\r\n        { some code, part of Definition 2 }\r\n\r\n    Third paragraph of definition 2.\r\n\r\n_Compact style:_\r\n\r\nTerm 1\r\n  ~ Definition 1\r\n\r\nTerm 2\r\n  ~ Definition 2a\r\n  ~ Definition 2b\r\n`;\r\n\r\nconst errTextNoBody = \"ERROR: no article Body\",\r\n  errTextNoId = \"ERROR: no article Id\",\r\n  errTextDublicatedId = \"ERROR: there is article with such name\";\r\n\r\nconst initialCreateArticleState = {\r\n  articleId: \"\",\r\n  articleBody: initialBody,\r\n  errorId: \"\",\r\n  errorBody: \"\",\r\n  tags: {},\r\n};\r\n\r\nState.init(initialCreateArticleState);\r\nconst tagsArray = state.tags ? Object.keys(state.tags) : undefined;\r\n\r\nconst getArticleData = () => {\r\n  const args = {\r\n    articleId: state.articleId,\r\n    author: accountId,\r\n    lastEditor: accountId,\r\n    timeLastEdit: Date.now(),\r\n    timeCreate: Date.now(),\r\n    body: state.articleBody,\r\n    version: 0,\r\n    navigation_id: null,\r\n    tags: tagsArray,\r\n  };\r\n  return args;\r\n};\r\n\r\nconst composeData = () => {\r\n  const data = {\r\n    sayALotArticle: {\r\n      main: JSON.stringify(getArticleData()),\r\n    },\r\n    index: {\r\n      sayALotArticle: JSON.stringify({\r\n        key: \"main\",\r\n        value: {\r\n          type: \"md\",\r\n        },\r\n      }),\r\n    },\r\n  };\r\n\r\n  if (tagsArray.length) {\r\n    data.index.tag = JSON.stringify(\r\n      tagsArray.map((tag) => ({\r\n        key: tag,\r\n        value: item,\r\n      }))\r\n    );\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\n// === SAVE HANDLER ===\r\nconst saveHandler = (e) => {\r\n  State.update({\r\n    ...state,\r\n    errorId: \"\",\r\n    errorBody: \"\",\r\n  });\r\n  if (state.articleId && state.articleBody) {\r\n    // TODO check it automaticle\r\n    const isArticleIdDublicated = false;\r\n\r\n    if (!isArticleIdDublicated) {\r\n      const newData = composeData();\r\n      Social.set(newData, { force: true });\r\n    } else {\r\n      State.update({\r\n        ...state,\r\n        errorId: errTextDublicatedId,\r\n      });\r\n    }\r\n  } else {\r\n    if (!state.articleId) {\r\n      State.update({\r\n        ...state,\r\n        errorId: errTextNoId,\r\n      });\r\n    }\r\n    if (!state.articleBody) {\r\n      State.update({ ...state, errorBody: errTextNoBody });\r\n    }\r\n  }\r\n};\r\n\r\nconst Button = styled.button`\r\n  margin: 0px 1rem;\r\n  display: inline-block;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;\r\n\r\n  border: 2px solid transparent;\r\n  font-weight: 500;\r\n  padding: 0.3rem 0.5rem;\r\n  background-color: #010A2D;\r\n  border-radius: 12px;\r\n  color: white;\r\n  text-decoration: none;  \r\n\r\n  &:hover {\r\n    color: #010A2D;\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <div\r\n    className=\"container-fluid\"\r\n    style={{\r\n      backgroundColor: \"rgb(230, 230, 230)\",\r\n      borderRadius: \"20px\",\r\n      padding: \"0 0 1rem 0 \",\r\n    }}\r\n  >\r\n    <Widget\r\n      src={`${authorForWidget}/widget/SayALot_MainNavigation`}\r\n      props={{ currentNavPill: \"create\" }}\r\n    />\r\n    <div\r\n      style={{\r\n        margin: \"0 auto\",\r\n        width: \"90%\",\r\n        minWidth: \"360px\",\r\n        backgroundColor: \"white\",\r\n        padding: \"1rem\",\r\n        borderRadius: \"20px\",\r\n      }}\r\n    >\r\n      <h1 className=\"mb-3\"> Create Article</h1>\r\n      <div>\r\n        <div>\r\n          <Button type=\"submit\" onClick={saveHandler}>\r\n            Save Article\r\n          </Button>\r\n        </div>\r\n        <div class=\"d-flex flex-column pt-3\">\r\n          <label for=\"inputArticleId\">\r\n            Input article id (case-sensitive, without spaces):\r\n          </label>\r\n          <label for=\"inputArticleId\" class=\"small text-danger\">\r\n            {state.errorId}\r\n          </label>\r\n          <input\r\n            className=\"form-control mt-2\"\r\n            id=\"inputArticleId\"\r\n            value={state.articleId}\r\n            onChange={(e) => {\r\n              State.update({\r\n                ...state,\r\n                articleId: e.target.value.replace(/\\s+/g, \"\"),\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"d-flex flex-column pt-3\">\r\n          <Widget\r\n            src=\"mob.near/widget/TagsEditor\"\r\n            props={{\r\n              initialTagsObject: state.tags,\r\n              placeholder: \"Input tags\",\r\n              setTagsObject: (tags) => {\r\n                state.tags = tags;\r\n                State.update();\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"d-flex flex-column pt-3\">\r\n          <label for=\"textareaArticleBody\">\r\n            Input article body (in makrdown format):\r\n          </label>\r\n          <label for=\"textareaArticleBody\" class=\"small text-danger\">\r\n            {state.errorBody}\r\n          </label>\r\n          <div className=\"d-flex gap-2\" style={{ minHeight: \"300px\" }}>\r\n            <div className=\"w-50\">\r\n              <Widget\r\n                src=\"mob.near/widget/MarkdownEditorIframe\"\r\n                props={{\r\n                  initialText: initialBody,\r\n                  onChange: (articleBody) => State.update({ articleBody }),\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"w-50\">\r\n              <Widget\r\n                src=\"mob.near/widget/SocialMarkdown\"\r\n                props={{ text: state.articleBody }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/SayALot_CreateArticle", "__row_index": 1}