{"tx_hash": "DUBHEhJZPRcFSyJHXayLHFKfKSYBq4Wi2KAaNi2GPc6q", "action_id_social": "7PM1wkAgjSQpfsRB3NZ97vSgkQyufe4bhuzVTErCSBkX-0-widget", "block_id": 93091008, "block_timestamp": "2023-05-30T23:12:35.795Z", "signer_id": "sayalot.near", "widget_name": "SayALot_ManualIndexFeed", "source_code": "const addressForArticles = \"sayALotArticle\";\r\nconst addressForComments = \"sayalot-comments\";\r\nconst authorForWidget = \"sayalot.near\";\r\nconst index = props.index;\r\nif (!index) {\r\n  return \"props.index is not defined\";\r\n}\r\n\r\nconst renderItem =\r\n  props.renderItem ??\r\n  ((item, i) => (\r\n    <div key={i}>\r\n      #{item.blockHeight}: {JSON.stringify(item)}\r\n    </div>\r\n  ));\r\nconst cachedRenderItem = (item, i) => {\r\n  const key = JSON.stringify(item);\r\n\r\n  if (!(key in state.cachedItems)) {\r\n    state.cachedItems[key] = renderItem(item, i);\r\n    State.update();\r\n  }\r\n  return state.cachedItems[key];\r\n};\r\n\r\nindex.options = index.options || {};\r\nconst initialRenderLimit =\r\n  props.initialRenderLimit ?? index.options.limit ?? 10;\r\nconst addDisplayCount =\r\n  props.nextLimit ?? initialRenderLimit ?? index.options.limit;\r\n\r\nindex.options.limit = Math.min(\r\n  Math.max(initialRenderLimit + addDisplayCount, index.options.limit),\r\n  100\r\n);\r\nconst reverse = !!props.reverse;\r\n\r\nconst initialItems = Social.index(index.action, index.key, index.options);\r\n\r\nif (initialItems === null) {\r\n  return \"\";\r\n}\r\n\r\nconst computeFetchFrom = (items, limit) => {\r\n  if (!items || items.length < limit) {\r\n    return false;\r\n  }\r\n  const blockHeight = items[items.length - 1].blockHeight;\r\n  return index.options.order === \"desc\" ? blockHeight - 1 : blockHeight + 1;\r\n};\r\n\r\nconst mergeItems = (newItems) => {\r\n  const items = [\r\n    ...new Set([...newItems, ...state.items].map((i) => JSON.stringify(i))),\r\n  ].map((i) => JSON.parse(i));\r\n  items.sort((a, b) => a.blockHeight - b.blockHeight);\r\n  if (index.options.order === \"desc\") {\r\n    items.reverse();\r\n  }\r\n  return items;\r\n};\r\n\r\nconst jInitialItems = JSON.stringify(initialItems);\r\nif (state.jInitialItems !== jInitialItems) {\r\n  const jIndex = JSON.stringify(index);\r\n  if (jIndex !== state.jIndex) {\r\n    State.update({\r\n      jIndex,\r\n      jInitialItems,\r\n      items: initialItems,\r\n      fetchFrom: false,\r\n      nextFetchFrom: computeFetchFrom(initialItems, index.options.limit),\r\n      displayCount: initialRenderLimit,\r\n      cachedItems: {},\r\n    });\r\n  } else {\r\n    State.update({\r\n      jInitialItems,\r\n      items: mergeItems(initialItems),\r\n    });\r\n  }\r\n}\r\n\r\nif (state.fetchFrom) {\r\n  const limit = addDisplayCount;\r\n  const newItems = Social.index(\r\n    index.action,\r\n    index.key,\r\n    Object.assign({}, index.options, {\r\n      from: state.fetchFrom,\r\n      subscribe: undefined,\r\n      limit,\r\n    })\r\n  );\r\n  if (newItems !== null) {\r\n    State.update({\r\n      items: mergeItems(newItems),\r\n      fetchFrom: false,\r\n      nextFetchFrom: computeFetchFrom(newItems, limit),\r\n    });\r\n  }\r\n}\r\n\r\nconst makeMoreItems = () => {\r\n  State.update({\r\n    displayCount: state.displayCount + addDisplayCount,\r\n  });\r\n  if (\r\n    state.items.length - state.displayCount < addDisplayCount &&\r\n    !state.fetchFrom &&\r\n    state.nextFetchFrom &&\r\n    state.nextFetchFrom !== state.fetchFrom\r\n  ) {\r\n    State.update({\r\n      fetchFrom: state.nextFetchFrom,\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchMore =\r\n  state.fetchFrom && state.items.length < state.displayCount ? (\r\n    <div className=\"loader\" key={\"loader\"}>\r\n      <span\r\n        className=\"spinner-grow spinner-grow-sm me-1\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n      Loading ...\r\n    </div>\r\n  ) : (\r\n    state.displayCount < state.items.length && (\r\n      <div key={\"loader more\"}>\r\n        <a href=\"javascript:void\" onClick={(e) => makeMoreItems()}>\r\n          {props.loadMoreText ?? \"Load more...\"}\r\n        </a>\r\n      </div>\r\n    )\r\n  );\r\n\r\nconst items = state.items ? state.items.slice(0, state.displayCount) : [];\r\nif (reverse) {\r\n  items.reverse();\r\n}\r\n\r\nreturn (\r\n  <>\r\n    {reverse && fetchMore}\r\n    {items.map(cachedRenderItem)}\r\n    {!reverse && fetchMore}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/SayALot_ManualIndexFeed", "__row_index": 7}