{"tx_hash": "HmRcNU2fZQhpGniHybaMGoveqMUFPxwguB7bh2FVrfqp", "action_id_social": "7jZN9ZFBAgyUNwf1mdp8ZyJcdrnTFdeFr9ms2RCqvs8p-0-widget", "block_id": 93383159, "block_timestamp": "2023-06-03T19:49:05.295Z", "signer_id": "0xgh.near", "widget_name": "liquityComponentBorrow", "source_code": "State.init({\n  displayColl: \"\",\n  displayBorrow: \"\",\n  coll: 0,\n  borrow: 0,\n  borrowingFee: 0,\n  totalcoll: 200,\n  collateralRatio: 0,\n  liquidationReserve: 200,\n  complete: false,\n  loading: false,\n  msg: \"\",\n  address: undefined,\n  chainId: undefined,\n  balance: undefined,\n  price: 0,\n  isOpenTrove: undefined,\n  isBlocked: true,\n});\n\nconst setcoll = (depositChangeEvent) => {\n  const value = depositChangeEvent.target.value.replace(/[^.0-9]/g, \"\");\n  const coll = Number(value);\n  const { totalcoll } = state;\n  const collateralRatio = ((coll * state.price) / Number(totalcoll)) * 100;\n\n  State.update({\n    displayColl: value,\n    coll,\n    collateralRatio,\n  });\n\n  validateTrove();\n};\n\nconst setBorrow = (borrowChangeEvent) => {\n  const { coll, liquidationReserve } = state;\n  const value = borrowChangeEvent.target.value.replace(/[^.0-9]/g, \"\");\n  const borrow = Number(value);\n  const borrowingFee = (borrow * 0.5) / 100;\n  const totalcoll =\n    borrow + Number(borrowingFee.toFixed(2)) + liquidationReserve;\n  const collateralRatio = ((coll * state.price) / Number(totalcoll)) * 100;\n\n  State.update({\n    displayBorrow: value,\n    borrow,\n    borrowingFee,\n    totalcoll,\n    collateralRatio,\n  });\n  validateTrove();\n};\n\nconst validateTrove = () => {\n  const { coll, borrow, totalcoll, balance } = state;\n\n  if (borrow < 1800) {\n    State.update({\n      msg: \"Borrow must be at least 1800 LUSD\",\n      isBlocked: true,\n    });\n    return;\n  }\n\n  const collateralRatio = ((coll * state.price) / Number(totalcoll)) * 100;\n  if (collateralRatio < 110) {\n    State.update({\n      msg: \"Collateral ratio must be at least 110%\",\n      isBlocked: true,\n    });\n    return;\n  }\n\n  if (coll > Number(balance)) {\n    State.update({\n      msg: `The amount you're trying to deposit exceeds your balance by ${coll} ETH`,\n      isBlocked: true,\n    });\n    return;\n  }\n\n  State.update({ msg: \"\", isBlocked: false });\n};\n\nconst borrowerOperationAddress = \"0xD69fC8928D4F3229341cb431263F1EBd87B1ade8\";\n\nconst troveManagerAddress = \"0x0ECDF34731eE8Dd46caa99a1AAE173beD1B32c67\";\n\nconst borrowerOperationAbi = fetch(\n  \"https://api-sepolia.etherscan.io/api?module=contract&action=getabi&address=0xcb306e2509ca52872c2d04160F3c1fa7bc013064\"\n);\n\nconst troveManagerAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/trove-manager-abi.json\"\n);\n\nconst priceFeedAddress = \"0x07dD4Ce17De84bA13Fc154A7FdB46fC362a41E2C\";\nconst priceFeedAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/price-feed-abi.json\"\n);\n\nconst openTrove = () => {\n  if (state.complete) {\n    State.update({ complete: false, hash: null });\n  }\n  const borrowerOperationContract = new ethers.Contract(\n    borrowerOperationAddress,\n    borrowerOperationAbi.body.result,\n    Ethers.provider().getSigner()\n  );\n\n  borrowerOperationContract\n    .openTrove(\n      ethers.BigNumber.from(5000000000000000),\n      ethers.BigNumber.from(state.borrow * 100)\n        .mul(\"10000000000000000\")\n        .toString(),\n      // ethers.BigNumber.from((state.borrow * 10000000000000000).toString()),\n      \"0x1Bc65296aa95A0fD41d6A8AEb34C49665c6de81d\",\n      \"0x1Bc65296aa95A0fD41d6A8AEb34C49665c6de81d\",\n      {\n        value: ethers.BigNumber.from(\n          (state.coll * 1000000000000000000).toString()\n        ),\n        // gasPrice: state.gasPrice,\n        // gasLimit: 25000000,\n      }\n    )\n    .then((transactionHash) => {\n      State.update({\n        loading: true,\n        hash: transactionHash.hash,\n        borrow: 0,\n        displayBorrow: \"\",\n        coll: 0,\n        displayColl: \"\",\n        borrowingFee: 0,\n        totalcoll: 200,\n        collateralRatio: 0,\n        liquidationReserve: 200,\n      });\n    });\n};\n\nif (Ethers.provider()) {\n  const signer = Ethers.provider().getSigner();\n  signer.getAddress().then((address) => {\n    State.update({ address });\n    if (state.chainId === 11155111) {\n      if (state.balance === undefined) {\n        Ethers.provider()\n          .getBalance(address)\n          .then((balance) => {\n            State.update({\n              balance: Big(balance).div(Big(10).pow(18)).toFixed(2),\n            });\n          });\n      }\n\n      if (state.isOpenTrove === undefined) {\n        const troveManagerContract = new ethers.Contract(\n          troveManagerAddress,\n          troveManagerAbi.body,\n          Ethers.provider().getSigner()\n        );\n\n        troveManagerContract.getTroveStatus(address).then((res) => {\n          const isOpenTrove = ethers.utils.formatEther(res).includes(\"1\");\n          State.update({ isOpenTrove });\n        });\n      }\n    }\n  });\n\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n\n  if (state.price === 0) {\n    const priceFeedContract = new ethers.Contract(\n      priceFeedAddress,\n      priceFeedAbi.body,\n      Ethers.provider().getSigner()\n    );\n    const troveManagerContract = new ethers.Contract(\n      troveManagerAddress,\n      troveManagerAbi.body,\n      Ethers.provider().getSigner()\n    );\n\n    priceFeedContract.getPrice().then((priceRes) => {\n      const price = Number(ethers.utils.formatEther(priceRes));\n\n      State.update({ price });\n      troveManagerContract.getTCR(priceRes).then((tcrRes) => {\n        const tcr = Number(ethers.utils.formatEther(tcrRes)) * 100;\n\n        State.update({ tcr });\n      });\n    });\n  }\n}\n\nconst complete = () => {\n  State.update({ complete: true });\n};\n\nEthers.provider() &&\n  Ethers.provider()\n    .waitForTransaction(state.hash)\n    .then((res) => {\n      State.update({\n        loading: false,\n      });\n      complete();\n    })\n    .catch((err) => {\n      console.log(err);\n      State.update({ loading: false });\n    });\n\nconst BorrowWrapper = styled.div`\n  width: 100%;\n  .input-section{\n    width: 100%;\n    color: #8e9aaf;\n    &.deposit{\n        margin-bottom: 1rem;\n    }\n  }\n  .input-label{\n    color: black;\n    margin-bottom: 0.5rem;\n  }\n  .input-wrapper{\n    display: flex;\n    width: 100%;\n    border: rgb(220, 220, 220) 1px solid;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .info-wrapper{\n    display: flex;\n    flex-direction: column;\n    margin: 0 0 2rem 0;\n    div {\n      height: 1.75rem;\n      display: flex;\n      align-items: center;\n    }\n  }\n  .detail-info-wrapper{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #8e9aaf;\n  }\n    .error-message{\n        height: 2rem;\n        width: 100%;\n        color: #3a0ca3;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .info-unit{\n        margin-left: 0.5rem;\n    }\n\n    .confirm-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n  }\n  .confirm {\n    border: none;\n    border-radius: 1000px;\n    width: 75%;\n    height: 2rem;\n    transition: 0.5s all;\n    font-size: 1.1rem;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    &.ok {\n      background-color: #3a0ca3;\n      color: white;\n    }\n    &.not-ok {\n      background-color: #8e9aaf;\n      color: white;\n    }\n  }\n\n  input {\n    border: none;\n    background-color: transparent;\n  }\n  input:focus {\n    outline: none;\n  }\n  input[type=\"number\"]::-webkit-outer-spin-button,\n  input[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nreturn (\n  <BorrowWrapper>\n    <div className=\"input-section deposit\">\n      <div className=\"input-label\">Deposit (ETH)</div>\n      <div className=\"input-wrapper\">\n        <input\n          type=\"text\"\n          placeholder=\"0.0000 ETH\"\n          disabled={\n            !state.address || state.isOpenTrove || state.chainId !== 11155111\n          }\n          onChange={setcoll}\n          value={state.displayColl}\n        ></input>\n      </div>\n    </div>\n    <div className=\"input-section\">\n      <div className=\"input-label\">Borrow (LUSD)</div>\n      <div className=\"input-wrapper\">\n        <input\n          type=\"text\"\n          placeholder=\"0.0000 LUSD\"\n          disabled={\n            !state.address || state.isOpenTrove || state.chainId !== 11155111\n          }\n          onChange={setBorrow}\n          value={state.displayBorrow}\n        />\n      </div>\n    </div>\n    <div className=\"error-message\">{state.msg}</div>\n    <div className=\"info-wrapper\">\n      <div className=\"detail-info-wrapper\">\n        <div className=\"detail-info-label\">Liquidation Reserve</div>\n        <div className=\"detail-info-value\">\n          <span className=\"\">{state.liquidationReserve}</span>\n          <span className=\"info-unit\">LUSD</span>\n        </div>\n      </div>\n      <div className=\"detail-info-wrapper\">\n        <div className=\"detail-info-label\">Borrowing Fee</div>\n        <div className=\"detail-info-value\">\n          <span className=\"\">{state.borrowingFee.toFixed(2)}</span>{\" \"}\n          <span className=\"info-unit\">LUSD (0.50%)</span>\n        </div>\n      </div>\n\n      <div className=\"detail-info-wrapper\">\n        <div className=\"detail-info-label\">Recieve</div>\n        <div className=\"detail-info-value\">\n          <span className=\"\">{state.borrow.toFixed(2)}</span>\n          <span className=\"info-unit\">LUSD</span>\n        </div>\n      </div>\n\n      <div className=\"detail-info-wrapper\">\n        <div className=\"detail-info-label\">Total debt</div>\n        <div className=\"detail-info-value\">\n          <span className=\"\">{state.totalcoll.toFixed(2)}</span>\n          <span className=\"info-unit\">LUSD</span>\n        </div>\n      </div>\n      <div className=\"detail-info-wrapper\">\n        <div className=\"detail-info-label\">Collateral ratio</div>\n        <div className=\"detail-info-value\">\n          <span>{state.collateralRatio.toFixed(1)}</span>\n          <span className=\"info-unit\">%</span>\n        </div>\n      </div>\n    </div>\n    <div className=\"confirm-wrapper\">\n      {state.address ? (\n        <button\n          className={`confirm ${state.isBlocked ? \"not-ok\" : \"ok\"}`}\n          disabled={state.isBlocked}\n          onClick={openTrove}\n        >\n          {Ethers.provider() && state.chainId !== 11155111\n            ? \"Change network to Sepolia\"\n            : state.isOpenTrove === true\n            ? \"You already have active Trove\"\n            : state.loading\n            ? \"Loading...\"\n            : state.complete\n            ? \"Done \u2705\"\n            : state.coll === 0 || state.borrow === 0\n            ? \"Enter input value\"\n            : state.isBlocked\n            ? \"Check stats\"\n            : \"Open Trove\"}\n        </button>\n      ) : (\n        <Web3Connect className=\"connect-wallet\" />\n      )}\n    </div>\n  </BorrowWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xgh.near/widget/liquityComponentBorrow", "__row_index": 5}