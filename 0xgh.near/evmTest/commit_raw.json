{"tx_hash": "HLtiWTe3AhWX1wRwN5frqW1aBzATYDJCqh5NsDorUGr8", "action_id_social": "4W4TvoL3SFBMmuwfbecYPjFAjfKNBaDSHhqtLf5edt33-0-widget", "block_id": 92922316, "block_timestamp": "2023-05-28T18:13:53.609Z", "signer_id": "0xgh.near", "widget_name": "evmTest", "source_code": "const address = \"0x5A6722e9EE2d298a4E83e420759CaBBbd58aB1d9\";\nconst abi = [\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" }],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"account\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"subtractedValue\", type: \"uint256\" },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"addedValue\", type: \"uint256\" },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst WrapperStyle = styled.div`\n  .content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n  p {\n    margin: 0;\n  }\n  .indicator {\n    padding: 0 2rem 0 2rem;\n    width: 100%;\n  }\n  .mint {\n    padding: 0 2rem 0 2rem;\n    margin: 0 0 2rem 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    input {\n      height: 2rem;\n      border: none;\n      border-bottom: 1px solid #8338ec;\n      outline: none;\n    }\n  }\n  .section {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 3rem;\n  }\n  .label {\n    font-size: 1.2rem;\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n    padding: 0 1rem 0 0;\n    color: #8338ec;\n  }\n  .value {\n    font-size: 1.2rem;\n  }\n\n  .get-mung {\n    color: #8338ec;\n    border: 2px #8338ec solid;\n    background-color: transparent;\n    border-radius: 10px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    width: 12rem;\n    height: 2.5rem;\n    transition: all 0.3s;\n    margin-bottom: 2rem;\n    &:hover {\n      background-color: #8338ec;\n      color: white;\n    }\n    &.disabled {\n      border-color: gray !important;\n      color: gray;\n      cursor: default;\n      &:hover {\n        background-color: transparent;\n        color: gray;\n      }\n    }\n    &.loading {\n      @keyframes change {\n        0% {\n          color: #8338ec;\n        }\n        50% {\n          color: #f72585;\n        }\n        100% {\n          color: #8338ec;\n        }\n      }\n      animation-duration: 1.5s;\n      animation-name: change;\n      animation-iteration-count: infinite;\n    }\n  }\n`;\n\n// const signer = Ethers.provider().getSigner();\nconst mungInterface = new ethers.utils.Interface(abi);\n\nconst getBalance = () => {\n  const encodedData = mungInterface.encodeFunctionData(\"balanceOf\", [state.address]);\n\n  Ethers.provider()\n    .call({\n      to: address,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = mungInterface.decodeFunctionResult(\"balanceOf\", rawBalance);\n      const result = receiverBalanceHex[0].div(\"1000000000000000000\");\n      State.update({ balance: result.toString() });\n    });\n};\n\nconst getMung = () => {\n  if (!state.mintMungInput || state.loading) {\n    return;\n  }\n  const mungContract = new ethers.Contract(address, abi, Ethers.provider().getSigner());\n  const amount = ethers.BigNumber.from(state.mintMungInput).mul(\"1000000000000000000\").toString();\n\n  mungContract.mint(state.address, amount).then((transactionHash) => {\n    State.update({\n      mintMungInput: \"\",\n      hash: transactionHash.hash,\n      loading: true,\n    });\n    console.log(transactionHash);\n  });\n};\n\nif (Ethers.provider()) {\n  const signer = Ethers.provider().getSigner();\n  signer.getAddress().then((address) => {\n    State.update({ address });\n  });\n\n  getBalance();\n}\n\nstate.address &&\n  Ethers.provider()\n    .waitForTransaction(state.hash)\n    .then((res) => {\n      console.log(res);\n      State.update({ loading: false });\n      getBalance();\n    });\n\nreturn (\n  <WrapperStyle>\n    <div className=\"content\">\n      <div className=\"indicator\">\n        <div className=\"section\">\n          {state.address ? (\n            <>\n              <p className=\"label\">Wallet: </p>\n              <p className=\"value\">{state.address}</p>\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"section\">\n          {state.address ? (\n            <>\n              <p className=\"label\">Balance: </p>\n              <p className=\"value mung-balance\">{state.balance} Mung</p>\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"mint\">\n        <div className=\"section\">\n          {state.address ? (\n            <>\n              <p className=\"label\">Mint: </p>\n              <input\n                className=\"mint-mung-input\"\n                onChange={(e) => {\n                  State.update({ mintMungInput: e.target.value });\n                }}\n                value={state.mintMungInput}\n              ></input>\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {state.address ? (\n        <>\n          <button className={`get-mung ${state.mintMungInput || state.loading ? \"\" : \"disabled\"} ${state.loading ? \"loading\" : \"\"}`} onClick={getMung}>\n            {state.loading ? \"Loading...\" : \"Mung \ud1a0\ud070 \ubc1b\uae30\"}\n          </button>\n          <p>Mung Contract</p>\n          <p>0x5A6722e9EE2d298a4E83e420759CaBBbd58aB1d9</p>\n        </>\n      ) : (\n        <Web3Connect />\n      )}\n    </div>\n  </WrapperStyle>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xgh.near/widget/evmTest", "__row_index": 5}