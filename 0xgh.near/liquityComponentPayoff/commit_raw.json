{"tx_hash": "6XqVcqr8jiRzQ1dHCm3WdMtEo7vEUQ3PSEK1cBKAiDj7", "action_id_social": "5jrBQySKLTBqZR2iAwX6ui47DHvnYcHzerA73iQvgC8n-0-widget", "block_id": 93385893, "block_timestamp": "2023-06-03T20:40:20.495Z", "signer_id": "0xgh.near", "widget_name": "liquityComponentPayoff", "source_code": "const borrowerOperationAddress = \"0xD69fC8928D4F3229341cb431263F1EBd87B1ade8\";\nconst troveManagerAddress = \"0x0ECDF34731eE8Dd46caa99a1AAE173beD1B32c67\";\nconst lusdTokenAddress = \"0x80668Ed2e71290EB7526ABE936327b4f5dB52dA8\";\n\nState.init({ mouse: false, loading: false, complete: false });\n\nconst borrowerOperationAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_activePoolAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"ActivePoolAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_collSurplusPoolAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"CollSurplusPoolAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_defaultPoolAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"DefaultPoolAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_gasPoolAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"GasPoolAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_lqtyStakingAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"LQTYStakingAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_borrower\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_LUSDFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"LUSDBorrowingFeePaid\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_lusdTokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"LUSDTokenAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_newPriceFeedAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"PriceFeedAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_sortedTrovesAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"SortedTrovesAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_stabilityPoolAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"StabilityPoolAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_borrower\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"arrayIndex\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TroveCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_newTroveManagerAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"TroveManagerAddressChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_borrower\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_debt\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_coll\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"stake\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum BorrowerOperations.BorrowerOperation\",\n        name: \"operation\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"TroveUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BORROWING_FEE_FLOOR\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CCR\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DECIMAL_PRECISION\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUSD_GAS_COMPENSATION\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MCR\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_NET_DEBT\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"NAME\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PERCENT_DIVISOR\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_100pct\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"activePool\",\n    outputs: [\n      { internalType: \"contract IActivePool\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"addColl\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"_maxFeePercentage\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"_collWithdrawal\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"_LUSDChange\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"_isDebtIncrease\", type: \"bool\" },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"adjustTrove\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"claimCollateral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"closeTrove\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"defaultPool\",\n    outputs: [\n      { internalType: \"contract IDefaultPool\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"_debt\", type: \"uint256\" }],\n    name: \"getCompositeDebt\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getEntireSystemColl\",\n    outputs: [\n      { internalType: \"uint256\", name: \"entireSystemColl\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getEntireSystemDebt\",\n    outputs: [\n      { internalType: \"uint256\", name: \"entireSystemDebt\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isOwner\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lqtyStaking\",\n    outputs: [\n      { internalType: \"contract ILQTYStaking\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lqtyStakingAddress\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lusdToken\",\n    outputs: [\n      { internalType: \"contract ILUSDToken\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_borrower\", type: \"address\" },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"moveETHGainToTrove\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"_maxFeePercentage\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"_LUSDAmount\", type: \"uint256\" },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"openTrove\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"priceFeed\",\n    outputs: [\n      { internalType: \"contract IPriceFeed\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"_LUSDAmount\", type: \"uint256\" },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"repayLUSD\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_troveManagerAddress\",\n        type: \"address\",\n      },\n      { internalType: \"address\", name: \"_activePoolAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"_defaultPoolAddress\", type: \"address\" },\n      {\n        internalType: \"address\",\n        name: \"_stabilityPoolAddress\",\n        type: \"address\",\n      },\n      { internalType: \"address\", name: \"_gasPoolAddress\", type: \"address\" },\n      {\n        internalType: \"address\",\n        name: \"_collSurplusPoolAddress\",\n        type: \"address\",\n      },\n      { internalType: \"address\", name: \"_priceFeedAddress\", type: \"address\" },\n      {\n        internalType: \"address\",\n        name: \"_sortedTrovesAddress\",\n        type: \"address\",\n      },\n      { internalType: \"address\", name: \"_lusdTokenAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"_lqtyStakingAddress\", type: \"address\" },\n    ],\n    name: \"setAddresses\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"sortedTroves\",\n    outputs: [\n      { internalType: \"contract ISortedTroves\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"troveManager\",\n    outputs: [\n      { internalType: \"contract ITroveManager\", name: \"\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"_collWithdrawal\", type: \"uint256\" },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"withdrawColl\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"_maxFeePercentage\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"_LUSDAmount\", type: \"uint256\" },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"withdrawLUSD\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst troveManagerAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/trove-manager-abi.json\"\n);\n\nconst lusdTokenAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/lusd-token-abi.json\"\n);\n\nconst closeTrove = () => {\n  if (state.complete) {\n    State.update({ complete: false, hash: null });\n    return;\n  }\n  const borrowerOperationContract = new ethers.Contract(\n    borrowerOperationAddress,\n    borrowerOperationAbi,\n    Ethers.provider().getSigner()\n  );\n\n  borrowerOperationContract.closeTrove().then((transactionHash) => {\n    State.update({ loading: true, hash: transactionHash.hash });\n  });\n};\n\nconst infoHandler = () => {\n  const signer = Ethers.provider().getSigner();\n  signer.getAddress().then((address) => {\n    State.update({ address });\n    if (state.chainId === 11155111) {\n      const troveManagerContract = new ethers.Contract(\n        troveManagerAddress,\n        troveManagerAbi.body,\n        Ethers.provider().getSigner()\n      );\n\n      const lusdTokenContract = new ethers.Contract(\n        lusdTokenAddress,\n        lusdTokenAbi.body,\n        Ethers.provider().getSigner()\n      );\n\n      troveManagerContract.getTroveDebt(address).then((troveDebtRes) => {\n        const troveDebt = Number(\n          ethers.utils.formatEther(troveDebtRes.toString())\n        );\n        State.update({\n          troveDebt: troveDebt === 0 ? 0 : troveDebt - 200,\n        });\n\n        lusdTokenContract.balanceOf(address).then((lusdBalanceRes) => {\n          const lusdBalance = Number(\n            ethers.utils.formatEther(lusdBalanceRes.toString())\n          );\n          if (troveDebt - 200 - lusdBalance > 0) {\n            State.update({\n              isBlock: true,\n            });\n          }\n        });\n      });\n    }\n  });\n};\n\nif (Ethers.provider()) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n\n  infoHandler();\n}\n\nEthers.provider() &&\n  Ethers.provider()\n    .waitForTransaction(state.hash)\n    .then((res) => {\n      State.update({ loading: false, complete: true });\n      infoHandler();\n    })\n    .catch((err) => {\n      State.update({ loading: false });\n    });\n\nconst PayoffWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .debt-label{\n    width: 100%;\n    font-size: 1.3rem;\n    font-weight: 700;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .debt-value{\n    transition: 0.3s all;\n    margin: 1rem 0 1rem 0;\n    min-width: 190px;\n    padding: 0.5rem 1rem 0.5rem 1rem;\n    border: #3a0ca3 1.5px solid ;\n    border-radius: 10px;\n    font-weight: 600;\n    background-color: white;\n   \n    &.disabled{\n      &:hover{\n      background-color: #8e9aaf;\n      color: white;\n      border-color: #8e9aaf;\n    }\n    }\n    &.active{\n    &:hover{\n      background-color: #3a0ca3;\n      color: white;\n    }\n    }\n     &.loading{\n      background-color: transparent !important;\n      cursor: default;\n      &:hover{\n      background-color: transparent !important;\n      color: black !important;\n      border-color: #3a0ca3 !important;\n    }\n    }\n    &.complete{\n      background-color: #3a0ca3 !important;\n      color: white;\n      &:hover{\n      background-color: #3a0ca3 !important;\n      color: white !important;\n      border-color: #3a0ca3 !important;\n    }\n  }\n  .confirm-wrapper{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n  }\n`;\n\nreturn (\n  <PayoffWrapper>\n    <div className=\"debt-label\">You pay for debt</div>\n\n    <div className=\"confirm-wrapper\">\n      {state.address ? (\n        <button\n          onMouseEnter={() => {\n            State.update({ mouse: true });\n          }}\n          onMouseLeave={() => {\n            State.update({ mouse: false });\n          }}\n          className={`debt-value ${state.isBlock ? \"disabled\" : \"active\"} ${\n            state.loading ? \"loading\" : \"\"\n          } ${state.complete ? \"complete\" : \"\"}`}\n          // disabled={state.isBlock}\n          onClick={closeTrove}\n        >\n          {state.loading\n            ? \"Loading...\"\n            : state.complete\n            ? \"Done \u2705\"\n            : state.mouse\n            ? state.isBlock\n              ? \"Not enough LUSD \ud83e\udd72\"\n              : state.troveDebt === 0\n              ? \"No debt\"\n              : \"Pay off all debt \ud83d\udd25\"\n            : `${state.troveDebt ?? 0}\n          LUSD`}\n        </button>\n      ) : (\n        <Web3Connect connectLabel=\"Connect Wallet\" />\n      )}\n    </div>\n  </PayoffWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xgh.near/widget/liquityComponentPayoff", "__row_index": 3}