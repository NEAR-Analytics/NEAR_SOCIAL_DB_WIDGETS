{"tx_hash": "2ozpnLnTbBFrUnjdKQKthoXkpb9STTptSrGVDH4FijHC", "action_id_social": "4cNSwJ4jzH57doAYprrUF3EaS3U7AVbroeVMdbKKpezG-0-widget", "block_id": 92817619, "block_timestamp": "2023-05-27T09:15:54.705Z", "signer_id": "mcbyte.near", "widget_name": "Minter_Rescatarte", "source_code": "const cssFont = fetch(\r\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\r\n).body;\r\n\r\nconst css = fetch(\r\n  \"https://nativonft.mypinata.cloud/ipfs/QmcMwXUUiiVUqr4eRV3w6gL76q6aY8vGQCNW9D3sMv2rsS\"\r\n).body;\r\n\r\nif (!cssFont || !css) return \"\";\r\n\r\nif (!state.theme) {\r\n  State.update({\r\n    theme: styled.div`\r\n      font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n      ${cssFont}\r\n      ${css}\r\n  `,\r\n  });\r\n}\r\nconst Theme = state.theme;\r\nconst RST_contract_mcbyte = \"0xFD2Bd4a8C051fB2d9Aa05E3AED906514CCFaE3EA\";\r\nconst RST_abi = fetch(\r\n  \"https://gateway.pinata.cloud/ipfs/QmTqkDGBsnMCBmBuBtyvG5NF4g6hwtMUUi5HizoNFL6agW\"\r\n);\r\n\r\nif (!RST_abi.ok) {\r\n  return \"Loading\";\r\n}\r\n\r\nconst iface = new ethers.utils.Interface(RST_abi.body);\r\n\r\nconst trigger_bgreen = () => {\r\n  console.log(\"trigger green clicked\");\r\n\r\n  contract.walletOfOwner(state.sender).then((res) => {\r\n    State.update({ nfts: res });\r\n  });\r\n\r\n  const contract = new ethers.Contract(\r\n    RST_contract_mcbyte,\r\n    RST_abi.body,\r\n    Ethers.provider().getSigner()\r\n  );\r\n\r\n  contract.mint().then((transactionHash) => {\r\n    console.log(\"transactionHash is \" + transactionHash);\r\n    const contract = new ethers.Contract(\r\n      RST_contract_mcbyte,\r\n      RST_abi.body,\r\n      Ethers.provider().getSigner()\r\n    );\r\n  });\r\n};\r\n\r\nif (state.sender === undefined) {\r\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\r\n  if (accounts.length) {\r\n    State.update({ sender: accounts[0] });\r\n  }\r\n}\r\n\r\nif (state.tasks === undefined && state.sender) {\r\n  const contract = new ethers.Contract(\r\n    RST_contract_mcbyte,\r\n    RST_abi.body,\r\n    Ethers.provider().getSigner()\r\n  );\r\n\r\n  contract.name().then((res) => {\r\n    State.update({ name: res });\r\n  });\r\n\r\n  contract.symbol().then((res) => {\r\n    State.update({ symbolx: res });\r\n  });\r\n\r\n  contract.ownerOf(1).then((res) => {\r\n    State.update({ ownerOf: res });\r\n  });\r\n\r\n  contract.walletOfOwner(state.sender).then((res) => {\r\n    State.update({ nfts: res });\r\n  });\r\n\r\n  contract.baseURI().then((res) => {\r\n    State.update({ baseURI: res });\r\n  });\r\n\r\n  var nftsavailable = [];\r\n  const getnftsres = state.nfts.map((data) => {\r\n    const Numbx = parseInt(data._hex, 16);\r\n    const cid_json = state.baseURI.split(\"ipfs://\")[1];\r\n    const urix_json = `https://ipfs.thirdwebcdn.com/ipfs/${cid_json}/${Numbx}.json`;\r\n    const req_json = fetch(urix_json).body;\r\n    const cid_img = req_json.image.split(\"ipfs://\")[1];\r\n    const img_form = `https://ipfs.thirdwebcdn.com/ipfs/${cid_img}`;\r\n\r\n    var itemx = {\r\n      name: req_json.name,\r\n      description: req_json.description,\r\n      image: img_form,\r\n    };\r\n    nftsavailable.push(itemx);\r\n  });\r\n\r\n  State.update({ nftsavailable: nftsavailable });\r\n  console.log(\"nftsavailable\");\r\n  console.log(nftsavailable);\r\n}\r\n\r\nreturn (\r\n  <Theme>\r\n    <div class=\"LidoContainer\">\r\n      <div class=\"Header\">Nfts disponibles</div>\r\n\r\n      {!!state.sender ? (\r\n        <>\r\n          <div class=\"SubHeader\">{state.sender} </div>\r\n          <div class=\"rendernfts\"></div>\r\n          <button\r\n            class=\"LidoStakeFormSubmitContainer\"\r\n            onClick={() => trigger_bgreen()}\r\n          >\r\n            <span>Mint 1 FREE</span>\r\n          </button>\r\n          <div>\r\n            <div class=\"\"> Max 2 mints per wallet </div>\r\n            <div class=\"\">Colection: {state.name} </div>\r\n            <div class=\"\">Symbol: {state.symbolx} </div>\r\n            <div class=\"SubHeader\">NFTS: {state.nfts.length} </div>\r\n            <div>\r\n              {state.nftsavailable.map((data) => {\r\n                return (\r\n                  <div class=\"boxg\">\r\n                    <h4>{data.name}</h4>\r\n                    <img class=\"imgboxg\" src={data.image} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Web3Connect\r\n          className=\"LidoStakeFormSubmitContainer\"\r\n          connectLabel=\"Connect with Web3\"\r\n        />\r\n      )}\r\n    </div>\r\n  </Theme>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mcbyte.near/widget/Minter_Rescatarte", "__row_index": 2}