{"tx_hash": "C9Ts9PWXhR9hzvf2Cc3Gof79Kaz9MnQuMxC6cr8HeSUi", "action_id_social": "HNiAvBUExVuaEwN9p8TdJVZstH4qsUrMeBsD6apHVSkv-0-widget", "block_id": 84790106, "block_timestamp": "2023-02-08 20:14:31.940", "signer_id": "events_v2.near", "widget_name": "components__image", "source_code": "const url = props.url;\n\nif (!url) {\n  return props.__engine.helpers.propIsRequiredMessage('url');\n}\n\nif (!state) {\n  State.init({ loaded: false, src: null, animated: false });\n  return <></>;\n}\n\nconst AnimationFadeBlurIn = styled.keyframes`\n  from {\n    opacity: 0;\n    filter: blur(20px);\n  }\n\n  to {\n    opacity: 1;\n    filter: blur(0px);\n  }\n`;\n\nconst AnimationRotate = styled.keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoadedImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  opacity: ${state.loaded ? 1 : 0};\n\n  animation: ${AnimationFadeBlurIn} 1s ease-in-out;\n  animation-delay: ${(props) => props.delay || '0s'};\n  animation-fill-mode: both;\n  animation-iteration-count: 1;\n  animation-duration: ${(props) => props.duration || '1s'};\n`;\n\nconst BlurredImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  opacity: ${state.loaded ? 1 : 0};\n\n  filter: blur(100px);\n  animation: ${AnimationRotate} 10s linear infinite;\n  animation-fill-mode: both;\n`;\n\nreturn (\n  <>\n    {!state.loaded && (\n      <img\n        src={url}\n        alt={props.alt || 'Image'}\n        onLoad={() => {\n          console.log('Image loaded');\n          State.update({ loaded: true, src: url });\n        }}\n        style={{\n          display: 'none',\n          width: 0,\n          height: 0,\n        }}\n      />\n    )}\n\n    {state.loaded && !state.animated && (\n      <BlurredImage src={state.src} alt={props.alt || 'Image'} />\n    )}\n\n    {state.loaded && (\n      <LoadedImage\n        src={state.src}\n        alt={props.alt || 'Image'}\n        style={props.style || {}}\n        delay={state.animated ? 0 : props.delay || '1s'}\n        duration={state.animated ? 0 : props.duration || '2s'}\n        onAnimationEnd={() => {\n          if (!state.animated) {\n            State.update({ animated: true });\n          }\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v2.near/widget/components__image"}