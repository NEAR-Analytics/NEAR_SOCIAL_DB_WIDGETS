{"tx_hash": "43Ztk9tWnWtGk87GUpQ2oDMcCJCfudxXmiAHWf4PjLpv", "action_id_social": "4YBBYC3NEcwUDhSfpXdeTwrtgfcUJGd6DGcK4sXWdUEA-0-widget", "block_id": 85152444, "block_timestamp": "2023-02-13 16:29:53.895", "signer_id": "events_v2.near", "widget_name": "components__search_bar", "source_code": "const fields = Object.entries(props.fields || {}).map(([key, weight]) => {\n  return { key, weight };\n});\n\nif (!state) {\n  const items = props.items || [];\n  State.init({ all: items, filtered: [], term: '' });\n  return props.__engine.loading();\n}\n\nconst items = state.all.filter((item) => {\n  const term = state.term.toLowerCase();\n\n  const itemFields = fields.map((field) => {\n    return item[field.key];\n  });\n\n  const itemScores = itemFields.map((field) => {\n    if (!field) {\n      return 0;\n    }\n\n    return field\n      .toLowerCase()\n      .split(/[ ,\\w]+/giu)\n      .map((word) => {\n        const index = word.indexOf(term);\n        if (index === -1) {\n          return 0;\n        }\n\n        return 1 / (index + 1);\n      })\n      .map((score) => {\n        return score * (field.weight || 1);\n      })\n      .reduce((a, b) => a + b, 0);\n  });\n});\n\nconst Searchbar = styled.input`\n  width: auto;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 0;\n  outline: none;\n  font-size: 1rem;\n  margin: 8px;\n  border-radius: 8px;\n  z-index: 1;\n\n  &:focus {\n    outline: none;\n    border-color: #333;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nreturn (\n  <div style={{ position: 'relative' }}>\n    <Searchbar\n      onChange={(e) => {\n        const term = e.target.value;\n        State.update({ term });\n      }}\n      placeholder=\"Search for events\"\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v2.near/widget/components__search_bar"}