{"tx_hash": "Af1ovFctfg9QCVjyMjeksNwxCMXstT7HZLseEVSoVb2d", "action_id_social": "AvTxp7LUdaif1MpvJGGJTGBMf5kdJ9Sia8a1SVNdkCp1-0-widget", "block_id": 84794405, "block_timestamp": "2023-02-08 21:38:37.133", "signer_id": "events_v2.near", "widget_name": "event_lists__index__list_item", "source_code": "const EVENTS_CONTRACT = 'events_v2.near';\nconst EVENTS_LIMIT = 5;\nconst DESCRIPTION_MAX_LENGTH = 100;\nconst ANIMATION_DELAY = 300;\n\nconst event_list = props.event_list || null;\n\nif (!event_list) {\n  return props.__engine.helpers.propIsRequiredMessage('event_list');\n}\n\nif (!state) {\n  const events = props.__engine.contract.view(\n    EVENTS_CONTRACT,\n    'get_events_in_event_list',\n    {\n      event_list_id: event_list.id,\n      limit: EVENTS_LIMIT,\n    }\n  );\n\n  if (!events) {\n    return props.__engine.loading();\n  }\n\n  State.init({ events });\n  return props.__engine.loading();\n}\n\nfunction showEventList() {\n  props.__engine.push('show', { event_list_id: event_list.id });\n}\n\nconst Card = props.__engine.Components.Card;\nconst CardTitle = props.__engine.Components.CardTitle;\nconst CardHeader = props.__engine.Components.CardHeader;\nconst Text = props.__engine.Components.Text;\nconst HorizontalScroll = props.__engine.Components.HorizontalScroll;\n\nconst CardBody = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 66%;\n  height: 100%;\n  flex-wrap: nowrap;\n  flex-grow: 1;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n\n  & > * {\n    padding: 20px;\n  }\n\n  @media (max-width: 768px) {\n    & > * {\n      padding: 10px;\n    }\n  }\n`;\n\nconst AnimationSlideFadeInLeft = styled.keyframes`\n  0% {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nconst EventTileWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  animation: ${AnimationSlideFadeInLeft} 0.5s ease-in-out;\n  animation-delay: ${(props) => props.delay + ANIMATION_DELAY}ms;\n  animation-fill-mode: forwards;\n  opacity: 0;\n  flex-grow & > * {\n    height: 100%;\n  }\n`;\n\nconst TextButton = styled.button`\n  background: transparent;\n  border: none;\n  color: #007bff;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 400;\n  outline: none;\n  padding: 0;\n  text-decoration: underline;\n  transition: color 0.15s ease-in-out;\n  display: inline-block;\n  width: fit-content;\n  margin-top: 10px;\n\n  &:hover {\n    color: #0056b3;\n  }\n\n  &:focus {\n    color: #0056b3;\n    outline: none;\n  }\n`;\n\nconst FlexGrowDesktop = styled.div`\n  flex-grow: 1;\n  flex-shrink: 0;\n  @media (max-width: 768px) {\n    flex-grow: 0;\n    flex-shrink: 1;\n  }\n`;\n\nconst scrollingEvents =\n  (state.events || []).length > 0 ? (\n    <HorizontalScroll itemWidth={'36%'}>\n      {state.events\n        .sort(({ position: a }, { position: b }) => {\n          return a - b;\n        })\n        .map(({ event }, idx) => {\n          return (\n            <EventTileWrapper\n              delay={idx * ANIMATION_DELAY}\n              key={`${idx}-${event.id}`}\n            >\n              {props.__engine.renderComponent(\n                'index.list_item',\n                {\n                  event: event,\n                  small: true,\n                  delay: `${(idx + 1) * ANIMATION_DELAY}ms`,\n                  duration: '0.9s',\n                },\n                { appName: 'events' }\n              )}\n            </EventTileWrapper>\n          );\n        })}\n    </HorizontalScroll>\n  ) : (\n    <Text>This list is empty :(</Text>\n  );\n\nconst elDescription =\n  event_list.description.length > DESCRIPTION_MAX_LENGTH\n    ? event_list.description.substring(0, DESCRIPTION_MAX_LENGTH) + '...'\n    : event_list.description;\n\nreturn (\n  <Card orientation=\"horizontal\">\n    <CardHeader>\n      <CardTitle>{event_list.name}</CardTitle>\n\n      <FlexGrowDesktop>\n        <Text>{elDescription}</Text>\n      </FlexGrowDesktop>\n      <TextButton\n        onClick={() => {\n          showEventList();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            showEventList();\n          }\n        }}\n        tabIndex={0}\n      >\n        View\n      </TextButton>\n    </CardHeader>\n\n    <CardBody>{scrollingEvents}</CardBody>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v2.near/widget/event_lists__index__list_item"}