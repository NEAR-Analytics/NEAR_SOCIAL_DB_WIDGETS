{"tx_hash": "Bg6nAPDSLxMqcpsgo2bRaQUgX3SCEsPiTJi7VHep9i1E", "action_id_social": "8HyhpcwLHTJZKCGzyMKv9QoFmDYNnQLxpBxo22fkcdy6-0-widget", "block_id": 84776310, "block_timestamp": "2023-02-08 15:46:23.093", "signer_id": "events_v2.near", "widget_name": "event_lists__add_events", "source_code": "const EVENTS_CONTRACT = 'events_v2.near';\n\nconst event_list_id = props.event_list_id;\nif (!event_list_id) {\n  return props.__engine.helpers.propsIsRequiredMessage('event_list_id');\n}\n\nif (!state) {\n  const event_list = props.__engine.contract.view(\n    EVENTS_CONTRACT,\n    'get_event_list',\n    { event_list_id, include_events: true }\n  );\n  const allEvents = props.__engine.contract.view(\n    EVENTS_CONTRACT,\n    'get_all_events'\n  );\n  if (!event_list) {\n    return props.__engine.loading();\n  }\n  if (!allEvents) {\n    return props.__engine.loading();\n  }\n\n  State.init({\n    term: '',\n    allEvents,\n    event_list,\n  });\n\n  return <></>;\n}\n\nprops.controller.setLayout('layouts:modal', {\n  title: 'Add events',\n});\n\nconst Searchbar = styled.input`\n  width: auto;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 0;\n  outline: none;\n  font-size: 1rem;\n  margin: 8px;\n  border-radius: 8px;\n  position: fixed;\n  top: 64px;\n  left: 0;\n  right: 0;\n  z-index: 1;\n\n  &:focus {\n    outline: none;\n    border-color: #333;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst events = state.allEvents.filter((event) => {\n  return event.name.toLowerCase().includes(state.term.toLowerCase());\n});\n\nif (!events) {\n  return props.__engine.loading();\n}\n\nconst AnimationPulse = styled.keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst ConditionalButton = styled.button`\n  background: ${(props) => (props.add ? '#2ecc71' : '#e74c3c')};\n  border-radius: 12px;\n  padding: 0.5rem 1rem;\n\n  border: none;\n  outline: none;\n\n  color: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n\n  transition: background 0.2s ease-in-out, animation 0.5s ease-in-out;\n  transform: scale(1);\n\n  &:hover {\n    background: ${(props) => (props.add ? '#27ae60' : '#c0392b')};\n    animation: ${AnimationPulse} 2s ease-in-out infinite;\n  }\n`;\n\nfunction addEventToList(event_id, position) {\n  props.__engine.contract.call(EVENTS_CONTRACT, 'add_event_to_event_list', {\n    event_list_id,\n    event_id,\n    position,\n  });\n}\n\nfunction removeEventFromList(event_id) {\n  props.__engine.contract.call(\n    EVENTS_CONTRACT,\n    'remove_event_from_event_list',\n    {\n      event_list_id,\n      event_id,\n    }\n  );\n}\n\nfunction findEventInList(event_id) {\n  return state.event_list.events.find((event) => {\n    return event.id === event_id;\n  });\n}\n\nfunction addEventButton(event_id) {\n  return (\n    <ConditionalButton\n      add\n      onClick={() => {\n        addEventToList(event_id, state.event_list.events.length);\n      }}\n    >\n      Add\n    </ConditionalButton>\n  );\n}\n\nfunction removeEventButton(event_id) {\n  return (\n    <ConditionalButton\n      onClick={() => {\n        removeEventFromList(event_id);\n      }}\n    >\n      Remove\n    </ConditionalButton>\n  );\n}\n\nconst EventTile = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: start;\n\n  padding: 0.5rem;\n\n  border-bottom: 1px solid #ccc;\n\n  transition: background 0.2s ease-in-out;\n  background: #fff;\n\n  &:first-child {\n    border-top: 1px solid #ccc;\n  }\n\n  &:hover {\n    background: #f5f5f5;\n  }\n\n  & > div {\n    flex-grow: 0;\n    flex-shrink: 1;\n  }\n`;\n\nconst ImageTileContainer = styled.div`\n  width: 64px;\n  height: 64px;\n  border-radius: 8px;\n\n  overflow: hidden;\n`;\n\nreturn (\n  <div style={{ position: 'relative' }}>\n    <Searchbar\n      onChange={(e) => {\n        const term = e.target.value;\n        State.update({ term });\n      }}\n      placeholder=\"Search for events\"\n    />\n\n    {/* search results */}\n    <div\n      style={{\n        paddingTop: '64px',\n      }}\n    >\n      {events.map((event) => {\n        return (\n          <EventTile key={event.id}>\n            <ImageTileContainer>\n              {props.__engine.renderComponent('components:event_image_slider', {\n                event,\n                mode: 'tile',\n              })}\n            </ImageTileContainer>\n            <div style={{ flexGrow: 100, marginLeft: 8 }}>\n              <div className=\"flex items-center\">{event.name}</div>\n              <div className=\"flex items-center\">\n                {event.description.slice(0, 100)}\n              </div>\n            </div>\n\n            <div>\n              {findEventInList(event.id)\n                ? removeEventButton(event.id)\n                : addEventButton(event.id)}\n            </div>\n          </EventTile>\n        );\n      })}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v2.near/widget/event_lists__add_events"}