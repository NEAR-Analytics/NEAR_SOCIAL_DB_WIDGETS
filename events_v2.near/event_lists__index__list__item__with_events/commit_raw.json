{"tx_hash": "8cX6c5nv4wzFhrGQA34AtHYKBTAUkhe8yx5H41JNRZrq", "action_id_social": "3RDXzqyzvTYZQcG2mYzyC7GkooCnyuEye36pBiK1YPjY-0-widget", "block_id": 85145900, "block_timestamp": "2023-02-13 14:22:32.801", "signer_id": "events_v2.near", "widget_name": "event_lists__index__list__item__with_events", "source_code": "const EVENTS_CONTRACT = 'events_v2.near';\nconst EVENT_LIMIT = 5;\nconst DESCRIPTION_MAX_LENGTH = 200;\nconst ANIMATION_DELAY = 300;\n\nconst eventLimit = props.limit || EVENT_LIMIT;\n\nconst event_list = props.event_list || null;\nif (!event_list) {\n  return props.__engine.helpers.propIsRequiredMessage('event_list');\n}\n\nif (!state) {\n  const events = props.__engine.contract.view(\n    EVENTS_CONTRACT,\n    'get_events_in_event_list',\n    {\n      event_list_id: event_list.id,\n      limit: eventLimit,\n    }\n  );\n\n  if (!events) {\n    return props.__engine.loading();\n  }\n\n  State.init({ events });\n  return props.__engine.loading();\n}\n\nfunction showEventList() {\n  props.__engine.push('show', { event_list_id: event_list.id });\n}\n\nconst Card = props.__engine.Components.Card;\nconst CardTitle = props.__engine.Components.CardTitle;\nconst CardHeader = props.__engine.Components.CardHeader;\nconst Text = props.__engine.Components.Text;\nconst TextButton = props.__engine.Components.TextButton;\nconst HorizontalScroll = props.__engine.Components.HorizontalScroll;\n\nconst Constants = props.__engine.Constants;\nconst {\n  EASE_DEFAULT,\n  GRID_PAD,\n  GRID_PAD_SMALL,\n  BORDER_DEFAULT,\n  BOX_SHADOW_HOVER,\n  BOX_SHADOW_DEFAULT,\n} = Constants;\n\nconst CardBody = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 66%;\n  height: 100%;\n  flex-wrap: nowrap;\n  flex-grow: 1;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n\n  & > * {\n    padding: ${GRID_PAD};\n  }\n\n  @media (max-width: 768px) {\n    & > * {\n      padding: ${GRID_PAD_SMALL};\n    }\n  }\n`;\n\nconst FadeIn = styled.keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst EventTileWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  animation: ${FadeIn} 0.5s ${EASE_DEFAULT};\n  animation-delay: ${(props) => props.delay + ANIMATION_DELAY}ms;\n  animation-fill-mode: forwards;\n  opacity: 0;\n  z-index: 10;\n  border-radius: 17px;\n  overflow: hidden;\n  border: ${BORDER_DEFAULT}\n\n  transform: scale(0.9875);\n  box-shadow: ${BOX_SHADOW_DEFAULT};\n  transition: transform 0.25s ${EASE_DEFAULT},\n    box-shadow 0.25s ${EASE_DEFAULT};\n\n  &:hover {\n    transform: scale(1.025);\n    box-shadow:  ${BOX_SHADOW_HOVER}\n  }\n\n  & > * {\n    height: 100%;\n  }\n\n  @media (max-width: 768px) {\n    width: 30%;\n    min-width: 199px;\n  }\n`;\n\nconst FlexGrowDesktop = styled.div`\n  flex-grow: 1;\n  flex-shrink: 0;\n  @media (max-width: 768px) {\n    flex-grow: 0;\n    flex-shrink: 1;\n  }\n`;\n\nconst BobbleWrap = styled.div`\n  position: relative;\n  width: 0;\n  height: 100%;\n  margin-left: 0;\n  padding-right: 140px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Bobble = styled.div`\n  background: #f8f9fa;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 1;\n  transform: translate(-50%, -50%);\n  border: 1px solid #e9ecef;\n\n  font-size: 1.5rem;\n  aspect-ratio: 1 / 1;\n  height: 4rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  box-shadow: ${BOX_SHADOW_DEFAULT};\n\n  user-select: none;\n`;\n\nconst scrollingEvents =\n  (state.events || []).length > 0 ? (\n    <HorizontalScroll\n      itemWidth={'calc(max(15vw, 210px))'}\n      style={{ height: '100%' }}\n    >\n      {state.events\n        .sort(({ position: a }, { position: b }) => {\n          return a - b;\n        })\n        .map(({ event }, idx) => {\n          return (\n            <EventTileWrapper\n              delay={idx * ANIMATION_DELAY}\n              key={`${idx}-${event.id}`}\n            >\n              {props.__engine.renderComponent(\n                'index.list_item',\n                {\n                  event: event,\n                  small: true,\n                  border: false,\n                  shadow: false,\n                  delay: `${(idx + 1) * ANIMATION_DELAY}ms`,\n                  duration: '0.9s',\n                },\n                { appName: 'events' }\n              )}\n            </EventTileWrapper>\n          );\n        })}\n\n      {event_list.event_count > eventLimit && (\n        <BobbleWrap>\n          <Bobble>+{event_list.event_count - eventLimit}</Bobble>\n        </BobbleWrap>\n      )}\n    </HorizontalScroll>\n  ) : (\n    <Text>This list has no events</Text>\n  );\n\nconst elDescription =\n  event_list.description.length > DESCRIPTION_MAX_LENGTH\n    ? event_list.description.substring(0, DESCRIPTION_MAX_LENGTH) + '...'\n    : event_list.description;\n\nreturn (\n  <Card orientation=\"horizontal\" border>\n    <CardHeader>\n      <CardTitle>{event_list.name}</CardTitle>\n\n      <FlexGrowDesktop>\n        <Text>{elDescription}</Text>\n      </FlexGrowDesktop>\n\n      <TextButton\n        onClick={() => {\n          showEventList();\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            showEventList();\n          }\n        }}\n        tabIndex={0}\n      >\n        View\n      </TextButton>\n    </CardHeader>\n\n    {(state.events || []).length > 0 ? (\n      <CardBody style={{ height: 'auto' }}>{scrollingEvents}</CardBody>\n    ) : (\n      <></>\n    )}\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v2.near/widget/event_lists__index__list__item__with_events"}