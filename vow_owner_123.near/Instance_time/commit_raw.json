{"tx_hash": "4PX96WNiNFMPMFPLzGXRS5bQ383rYnfpQFWfqZJVJ7Xj", "action_id_social": "7ryJhny5HSqEs8sRXYGewrncEahxpECUqkZQYLmvYJE4-0-widget", "block_id": 83765806, "block_timestamp": "2023-01-25 13:58:12.424", "signer_id": "vow_owner_123.near", "widget_name": "Instance_time", "source_code": "const tabs = {\n  ALL_SCHEDULE: { id: 0, text: \"Create Schedule\" },\n  NEW_SCHEDULE: { id: 1, text: \"View All Schedules\" },\n};\nconst time_zones = [\n  \"(UTC-11:00) Samoa\",\n  \"(UTC-10:00) Hawaii\",\n  \"(UTC-09:00) Alaska\",\n  \"(UTC-08:00) Pacific Time\",\n  \"(UTC-07:00) Arizona\",\n  \"(UTC-06:00) Central America\",\n  \"(UTC-06:00) Saskatchewan\",\n  \"(UTC-05:00) Eastern Time\",\n  \"(UTC-04:00) Atlantic Time\",\n  \"(UTC-04:30) Caracas\",\n  \"(UTC-04:00) Santiago\",\n  \"(UTC-03:30) Newfoundland\",\n  \"(UTC-03:00) Brasilia\",\n  \"(UTC-02:00) Mid-Atlantic\",\n  \"(UTC-01:00) Azores\",\n  \"(UTC+00:00) UTC\",\n  \"(UTC+01:00) Amsterdam\",\n  \"(UTC+02:00) Athens\",\n  \"(UTC+03:00) Baghdad\",\n  \"(UTC+04:00) Abu Dhabi\",\n  \"(UTC+04:30) Kabul\",\n  \"(UTC+05:00) Islamabad\",\n  \"(UTC+05:30) Chennai\",\n  \"(UTC+05:45) Kathmandu\",\n  \"(UTC+06:00) Almaty\",\n  \"(UTC+06:30) Rangoon\",\n  \"(UTC+07:00) Bangkok\",\n  \"(UTC+08:00) Beijing\",\n  \"(UTC+09:00) Irkutsk\",\n  \"(UTC+09:00) Seoul\",\n  \"(UTC+09:00) Tokyo\",\n  \"(UTC+09:30) Adelaide\",\n  \"(UTC+10:00) Guam\",\n  \"(UTC+11:00) Vladivostok\",\n  \"(UTC+12:00) Auckland\",\n  \"(UTC+13:00) Nuku'alofa\",\n];\nState.init({\n  tab: tabs.ALL_SCHEDULE.id,\n  hoveringElement: \"\",\n  _account: \"All\",\n  _time_zone: \"(UTC+00:00) UTC\",\n});\n\nconst data = Social.index(\"Instance_time\", \"data\");\nif (!data) {\n  return \"Loading datas\";\n}\nvar sortedData = data.sort((d1, d2) => d2.blockHeight - d1.blockHeight);\nvar accountIds = [\"All\"];\n\nfor (let i = 0; i < sortedData.length; i++) {\n  if (accountIds.indexOf(sortedData[i].accountId) < 0) {\n    accountIds.push(sortedData[i].accountId);\n  }\n}\n\nconst profile = Social.getr(`${context.accountId}/profile`);\nconst flex_column = {\n  display: \"flex\",\n  flexDirection: \"column\",\n};\nconst comboBox = {\n  background: \"rgb(1, 10, 45)\",\n  color: \"white\",\n  borderRadius: \"1rem\",\n  padding: \"1rem\",\n  fontWeight: \"500\",\n  fontSize: \"1rem\",\n};\nconst set_schedule = () => {\n  if (state.tab == tabs.ALL_SCHEDULE.id) {\n    State.update({ tab: tabs.NEW_SCHEDULE.id });\n  } else {\n    State.update({ tab: tabs.ALL_SCHEDULE.id });\n  }\n};\nreturn (\n  <div>\n    <div className=\"d-flex flex-column\">\n      <div className=\"d-flex justify-content-between\">\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n            color: \"black\",\n            borderRadius: \"2rem\",\n            fontWeight: 600,\n            fontSize: \"x-large\",\n          }}\n        >\n          Weekly Schedule\n        </div>\n        <div class=\"d-flex flex-column\">\n          <div>{profile.name}</div>\n          <div>@{context.accountId}</div>\n        </div>\n      </div>\n      <div className=\"w-100 d-flex flex-row justify-content-between align-items-center\">\n        <div>\n          {state.tab == tabs.ALL_SCHEDULE.id ? (\n            <select\n              style={comboBox}\n              name=\"accounts\"\n              id=\"accounts\"\n              value={state._account}\n              onChange={(e) => {\n                State.update({ _account: e.target.value });\n              }}\n            >\n              {accountIds.map((account) => (\n                <option value={account}>{account}</option>\n              ))}\n            </select>\n          ) : (\n            <select\n              style={comboBox}\n              name=\"zones\"\n              id=\"zones\"\n              value={state._time_zone}\n              onChange={(e) => {\n                State.update({ _time_zone: e.target.value });\n              }}\n            >\n              {time_zones.map((zone) => (\n                <option value={zone}>{zone}</option>\n              ))}\n            </select>\n          )}\n        </div>\n        <div>\n          <button\n            onMouseEnter={() => {\n              State.update({ hoveringElement: \"create\" });\n            }}\n            onMouseLeave={() => {\n              State.update({ hoveringElement: \"\" });\n            }}\n            onClick={set_schedule}\n            style={\n              state.hoveringElement == \"create\"\n                ? {\n                    border: \"2px solid transparent\",\n                    fontWeight: \"500\",\n                    fontSize: \"1rem\",\n                    padding: \"0.3rem 1.5rem\",\n                    backgroundColor: \"#010A2D\",\n                    borderRadius: \"12px\",\n                    color: \"white\",\n                  }\n                : {\n                    border: \"2px solid black\",\n                    color: \"black\",\n                    backgroundColor: \"white\",\n                    fontWeight: \"500\",\n                    fontSize: \"1rem\",\n                    padding: \"0.3rem 1.5rem\",\n                    borderRadius: \"12px\",\n                  }\n            }\n          >\n            {state.tab == tabs.ALL_SCHEDULE.id\n              ? tabs.ALL_SCHEDULE.text\n              : tabs.NEW_SCHEDULE.text}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div className=\"align-items-center pt-3\">\n      {state.tab == tabs.ALL_SCHEDULE.id ? (\n        <Widget\n          src={`vow_owner_123.near/widget/Instance_time_review`}\n          props={{\n            accountId: state._account,\n            className: \"d-inline-block\",\n            style: { width: \"100%\", height: \"1.5em\" },\n          }}\n        />\n      ) : (\n        <Widget\n          src={`vow_owner_123.near/widget/Instance_time_setting`}\n          props={{\n            time_zone: state._time_zone,\n            style: { width: \"100%\", height: \"1.5em\" },\n          }}\n        />\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vow_owner_123.near/widget/Instance_time"}