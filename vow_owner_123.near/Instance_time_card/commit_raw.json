{"tx_hash": "A2v4iB5p9GFBdqsDg4Y8xvzfVz1zhpriKz9B21J7c76E", "action_id_social": "FveUk16yc4SwnGLMQXp4E8miWE6aY9oX7rCtESFraacE-0-widget", "block_id": 85164879, "block_timestamp": "2023-02-13 20:29:39.951", "signer_id": "vow_owner_123.near", "widget_name": "Instance_time_card", "source_code": "const accountId = props.accountId ?? context.accountId;\r\nconst style = props.style ?? \"large\";\r\nconst font_small = style == \"small\" ? \"0.8rem\" : \"0.9rem\";\r\nconst font_big = style == \"small\" ? \"0.8rem\" : \"1rem\";\r\nconst data = Social.index(\"Instance_time\", \"schedule\");\r\n\r\nState.init({\r\n  is_on: false,\r\n});\r\n\r\nif (!data) {\r\n  return \"Loading datas\";\r\n}\r\nvar sortedData = data.sort((d1, d2) => d1.blockHeight - d2.blockHeight);\r\nvar finalData = {};\r\n\r\nconst sortAndRemoveRepeated = (flag, data) => {\r\n  var temp = data;\r\n  const flag1 = data.indexOf(0);\r\n  if (flag) temp.push(0, 168);\r\n  var sortedTimeData = temp.sort((d2, d1) => d2 - d1);\r\n\r\n  var final = [];\r\n  for (var k = 0; k < sortedTimeData.length; k++) {\r\n    var repeated = false;\r\n    for (var l = 0; l < sortedTimeData.length; l++) {\r\n      if (k != l && sortedTimeData[k] == sortedTimeData[l]) {\r\n        repeated = true;\r\n      }\r\n    }\r\n    if (!repeated) {\r\n      if (\r\n        !(\r\n          (flag1 && sortedTimeData[k] == 0) ||\r\n          (flag1 && sortedTimeData[k] == 168)\r\n        )\r\n      )\r\n        final.push(sortedTimeData[k]);\r\n    }\r\n  }\r\n  return final;\r\n};\r\n\r\nconst getFormatedTime = (time) => {\r\n  const hours = parseInt(time);\r\n  const mins = (time - hours) * 60;\r\n  let formated =\r\n    hours > 12\r\n      ? `${hours - 12}:${mins == 0 ? \"00\" : mins} PM`\r\n      : `${hours}:${mins == 0 ? \"00\" : mins} AM`;\r\n  return formated;\r\n};\r\n\r\nvar date = new Date();\r\nvar utc_offset = -date.getTimezoneOffset() / 60;\r\nfor (let i = 0; i < sortedData.length; i++) {\r\n  if (sortedData[i].accountId == accountId) {\r\n    var times = sortedData[i].value._data;\r\n    var temp = [];\r\n    var flag = false;\r\n    for (var j = 0; j < times.length; j++) {\r\n      const time = times[j] + utc_offset;\r\n      if (time > 168) {\r\n        temp.push(time - 168);\r\n        flag = true;\r\n      } else if (time < 0) {\r\n        temp.push(time + 168);\r\n        flag = true;\r\n      } else temp.push(time);\r\n    }\r\n    const final = sortAndRemoveRepeated(flag, temp);\r\n    for (var m = 0; m < final.length - 1; m += 2) {\r\n      const _from = final[m];\r\n      const _to = final[m + 1];\r\n      for (var o = 1; o < 7; o++) {\r\n        if (o * 24 > _from && o * 24 < _to) {\r\n          final.push(o * 24, o * 24);\r\n        }\r\n      }\r\n    }\r\n    var sortedTimeDataNew = final.sort((d2, d1) => d2 - d1);\r\n    var weeklyData = [];\r\n    for (var t = 0; t < 7; t++) {\r\n      var dailyData = [];\r\n      var exist = false;\r\n      for (var p = 0; p < sortedTimeDataNew.length - 1; p += 2) {\r\n        var _from = sortedTimeDataNew[p];\r\n        var _to = sortedTimeDataNew[p + 1];\r\n        if (_to > t * 24 && _to <= (t + 1) * 24) {\r\n          dailyData.push({\r\n            _from: _from - t * 24,\r\n            _to: _to - t * 24,\r\n          });\r\n          exist = true;\r\n        }\r\n      }\r\n      if (!exist) weeklyData.push({ on_off: \"off\", data: [] });\r\n      else weeklyData.push({ on_off: \"on\", data: dailyData });\r\n    }\r\n    finalData = {\r\n      accountId: sortedData[i].accountId,\r\n      is_on: sortedData[i].value._is_on,\r\n      time_zone: sortedData[i].value._time_zone,\r\n      value: {\r\n        _data: weeklyData,\r\n      },\r\n    };\r\n  }\r\n}\r\nconst days = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nfunction sliceString(string, newStringLength) {\r\n  if (string.length > newStringLength) {\r\n    return string.slice(0, newStringLength) + \"...\";\r\n  }\r\n  return string;\r\n}\r\n\r\nsetInterval(() => {\r\n  const day = new Date().getDay() == 0 ? 6 : new Date().getDay() - 1;\r\n  const hours = new Date().getHours();\r\n  const mins = new Date().getMinutes();\r\n  const now = hours + mins / 60;\r\n  var is_on = false;\r\n  var temp = finalData.value._data[day];\r\n  if (temp.on_off == \"on\") {\r\n    for (var j = 0; j < temp.data.length; j++) {\r\n      if (now >= temp.data[j]._from && now < temp.data[j]._to) {\r\n        // console.log(now, temp.data[j]._from, temp.data[j]._to, is_on);\r\n        is_on = true;\r\n      }\r\n    }\r\n  }\r\n  State.update({ is_on: is_on });\r\n}, 1000);\r\n\r\n// console.log(finalData, temp, day);\r\n\r\nreturn (\r\n  <div>\r\n    <div className=\"d-flex content-align-start justify-content-between\">\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          margin: style == \"small\" ? \"0rem\" : \"2rem 0.5rem 2rem 2rem\",\r\n          borderRadius: \"18px\",\r\n          background: \"white\",\r\n          boxShadow: \"0px 8px 28px rgba(43, 68, 106, 0.05)\",\r\n        }}\r\n      >\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div\r\n            className=\"d-flex\"\r\n            style={{\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Widget\r\n              src=\"mob.near/widget/ProfileImage\"\r\n              props={{\r\n                profile,\r\n                question: state.poll.accountId,\r\n                className: \"float-start d-inline-block me-2\",\r\n                style: {\r\n                  width: style == \"small\" ? \"2.5rem\" : \"3.5rem\",\r\n                  height: style == \"small\" ? \"2.5rem\" : \"3.5rem\",\r\n                  aspectRatio: \"1\",\r\n                  marginLeft: font_small,\r\n                  borderRadius: \"100%\",\r\n                  overflow: \"hidden\",\r\n                },\r\n              }}\r\n            />\r\n            <div>\r\n              <p style={{ margin: \"0\", fontWeight: \"300\" }}>Created by</p>\r\n              <p style={{ fontWeight: \"500\" }}>{sliceString(accountId, 18)}</p>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <a\r\n              href=\"https://near.social/#/vow_owner_123.near/widget/Instance_time\"\r\n              onMouseEnter={() => {\r\n                State.update({ hoveringElement: \"view\" });\r\n              }}\r\n              onMouseLeave={() => {\r\n                State.update({ hoveringElement: \"\" });\r\n              }}\r\n              style={\r\n                state.hoveringElement == \"view\"\r\n                  ? {\r\n                      border: \"2px solid transparent\",\r\n                      fontWeight: \"500\",\r\n                      fontSize: font_big,\r\n                      padding: \"0.3rem 1.5rem\",\r\n                      backgroundColor: \"#010A2D\",\r\n                      borderRadius: \"12px\",\r\n                      color: \"white\",\r\n                      textDecoration: \"none\",\r\n                      marginBottom: \"0.5rem\",\r\n                    }\r\n                  : {\r\n                      border: \"2px solid black\",\r\n                      color: \"black\",\r\n                      backgroundColor: \"white\",\r\n                      fontWeight: \"500\",\r\n                      fontSize: font_big,\r\n                      padding: \"0.3rem 1.5rem\",\r\n                      borderRadius: \"12px\",\r\n                      textDecoration: \"none\",\r\n                      marginBottom: \"0.5rem\",\r\n                    }\r\n              }\r\n            >\r\n              View Schedules\r\n            </a>\r\n            {accountId == context.accountId && (\r\n              <a\r\n                href=\"https://near.social/#/vow_owner_123.near/widget/Instance_time_edit\"\r\n                onMouseEnter={() => {\r\n                  State.update({ hoveringElement: \"edit\" });\r\n                }}\r\n                onMouseLeave={() => {\r\n                  State.update({ hoveringElement: \"\" });\r\n                }}\r\n                style={\r\n                  state.hoveringElement == \"edit\"\r\n                    ? {\r\n                        border: \"2px solid transparent\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: font_big,\r\n                        padding: \"0.3rem 1.5rem\",\r\n                        backgroundColor: \"#010A2D\",\r\n                        borderRadius: \"12px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"none\",\r\n                      }\r\n                    : {\r\n                        border: \"2px solid black\",\r\n                        color: \"black\",\r\n                        backgroundColor: \"white\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: font_big,\r\n                        padding: \"0.3rem 1.5rem\",\r\n                        borderRadius: \"12px\",\r\n                        textDecoration: \"none\",\r\n                      }\r\n                }\r\n              >\r\n                Edit Schedules\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex my-3\">\r\n          <div\r\n            style={{\r\n              height: \"inherit\",\r\n              backgroundColor: \"#AAC8F7\",\r\n              width: \"0.5rem\",\r\n              minWidth: \"5px\",\r\n              marginRight: \"0.5rem\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            {/*Decorative div, do not delete*/}\r\n          </div>\r\n          <h2\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontSize: style == \"small\" ? \"1.5rem\" : \"2rem\",\r\n              letterSpacing: \"0.1px\",\r\n              color: \"#010A2D\",\r\n              wordWrap: \"anywhere\",\r\n            }}\r\n          >\r\n            Instance Time\r\n          </h2>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"max-content\",\r\n            display: \"flex\",\r\n            padding: `0.5rem ${font_small}`,\r\n            width: \"100%\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\" }}>\r\n            <div\r\n              style={{\r\n                paddingRight: style == \"small\" ? \"1.2rem\" : \"2rem\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Widget\r\n                src={`vow_owner_123.near/widget/Instance_time_share`}\r\n                props={{ accountId: \"vow_owner_123.near\" }}\r\n              />\r\n            </div>\r\n            <span\r\n              style={{\r\n                backgroundColor: state.is_on\r\n                  ? \"rgb(217, 252, 239)\"\r\n                  : \"rgb(255, 229, 229)\",\r\n                textAlign: \"center\",\r\n                borderRadius: \"16px\",\r\n                fontSize: font_small,\r\n                color: state.is_on ? \"rgb(0, 179, 125)\" : \"rgb(255, 71, 71)\",\r\n                fontWeight: \"500\",\r\n                padding: \"0.5rem 1rem\",\r\n              }}\r\n            >\r\n              {state.is_on ? \"on\" : \"off\"}\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ fontSize: font_big }}>{finalData.time_zone}</div>\r\n        </div>\r\n        <div\r\n          className=\"p-3\"\r\n          style={{\r\n            position: \"relative\",\r\n            border: \"1.5px solid rgb(206, 212, 218)\",\r\n            borderRadius: \"24px\",\r\n            wordWrap: \"anywhere\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <h3\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontSize: \"1.2rem\",\r\n              marginBottom: \"1.2rem\",\r\n            }}\r\n          >\r\n            Schedule\r\n          </h3>\r\n          {finalData.value._data.map((week, index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  paddingTop: font_small,\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div style={{ fontSize: font_small }}>{`${days[index]}`}</div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  {week.on_off == \"on\" ? (\r\n                    week.data.map((y) => (\r\n                      <p\r\n                        style={{ paddingRight: \"0.7rem\", fontSize: font_small }}\r\n                      >\r\n                        {getFormatedTime(y._from)}~{getFormatedTime(y._to)}\r\n                      </p>\r\n                    ))\r\n                  ) : (\r\n                    <span\r\n                      style={{\r\n                        backgroundColor: \"#FFE5E5\",\r\n                        textAlign: \"center\",\r\n                        borderRadius: \"16px\",\r\n                        marginRight: font_small,\r\n                        fontSize: font_small,\r\n                        letterSpacing: \"-0.025rem\",\r\n                        color: \"#FF4747\",\r\n                        fontWeight: \"500\",\r\n                        padding: \"0.5rem 2rem\",\r\n                      }}\r\n                    >\r\n                      Off\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vow_owner_123.near/widget/Instance_time_card"}