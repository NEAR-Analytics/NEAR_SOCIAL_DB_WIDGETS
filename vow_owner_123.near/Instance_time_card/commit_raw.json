{"tx_hash": "14df885WBYJm66eicRjxt6hN3G2b752Sd8FeQNkjFuhd", "action_id_social": "DRB3s3xWnVpLzEF46BJR7FCTBzhj3RQj4bhkvyVF5pyh-0-widget", "block_id": 84208589, "block_timestamp": "2023-01-31 13:51:12.222", "signer_id": "vow_owner_123.near", "widget_name": "Instance_time_card", "source_code": "const accountId = props.accountId;\nconst data = Social.index(\"Instance_time\", \"schedule\");\nif (!data) {\n  return \"Loading datas\";\n}\nvar sortedData = data.sort((d1, d2) => d1.blockHeight - d2.blockHeight);\nvar finalData = {};\n\nfor (let i = 0; i < sortedData.length; i++) {\n  if (sortedData[i].accountId == accountId) {\n    var time_zone = sortedData[i].value._time_zone ?? \"(UTC+00:00) UTC\";\n    var zone = time_zone.split(\" \")[0].split(\"UTC\")[1].split(\":\");\n    var hour = parseInt(zone[0]);\n    var utc_offset = hour + (parseInt(zone[1]) / 60) * ((hour > 0) * 2 - 1);\n    var times = sortedData[i].value._data;\n    var temp = [];\n    var flag = false;\n    for (var j = 0; j < times.length; j++) {\n      const time = times[j] + utc_offset;\n      if (time > 168) {\n        temp.push(time - 168);\n        flag = true;\n      } else if (time < 0) {\n        temp.push(time + 168);\n        flag = true;\n      } else temp.push(time);\n    }\n    const final = sortAndRemoveRepeated(flag, temp);\n    for (var m = 0; m < final.length - 1; m += 2) {\n      const _from = final[m];\n      const _to = final[m + 1];\n      for (var o = 1; o < 7; o++) {\n        if (o * 24 > _from && o * 24 < _to) {\n          final.push(o * 24, o * 24);\n        }\n      }\n    }\n    var sortedTimeDataNew = final.sort((d2, d1) => d2 - d1);\n    var weeklyData = [];\n    for (var t = 0; t < 7; t++) {\n      var dailyData = [];\n      var exist = false;\n      for (var p = 0; p < sortedTimeDataNew.length - 1; p += 2) {\n        var _from = sortedTimeDataNew[p];\n        var _to = sortedTimeDataNew[p + 1];\n        if (_to > t * 24 && _to <= (t + 1) * 24) {\n          dailyData.push({\n            _from: _from - t * 24,\n            _to: _to - t * 24,\n          });\n          exist = true;\n        }\n      }\n      if (!exist) weeklyData.push({ on_off: \"off\", data: [] });\n      else weeklyData.push({ on_off: \"on\", data: dailyData });\n    }\n    finalData = {\n      schedule: weeklyData,\n      time_zone: time_zone,\n      is_on: sortedData[i].value._is_on,\n    };\n  }\n}\n\nconsole.log(\"*****\", accountId, finalData);\n\nconst sortAndRemoveRepeated = (flag, data) => {\n  var temp = data;\n  const flag1 = data.indexOf(0);\n  if (flag) temp.push(0, 168);\n  var sortedTimeData = temp.sort((d2, d1) => d2 - d1);\n\n  var final = [];\n  for (var k = 0; k < sortedTimeData.length; k++) {\n    var repeated = false;\n    for (var l = 0; l < sortedTimeData.length; l++) {\n      if (k != l && sortedTimeData[k] == sortedTimeData[l]) {\n        repeated = true;\n      }\n    }\n    if (!repeated) {\n      if (\n        !(\n          (flag1 && sortedTimeData[k] == 0) ||\n          (flag1 && sortedTimeData[k] == 168)\n        )\n      )\n        final.push(sortedTimeData[k]);\n    }\n  }\n  return final;\n};\n\nState.init({\n  showQuestionsByThisUser: false,\n  descriptionHeightLimited: true,\n  poll: {},\n  polls: [{}],\n  profile: {},\n  pollsByThisCreator: [{}],\n  answers: [{}],\n});\n\nfunction sliceString(string, newStringLength) {\n  if (string.length > newStringLength) {\n    return string.slice(0, newStringLength) + \"...\";\n  }\n  return string;\n}\n\nconst renderQuestionsByThisCreator = () => {\n  return <></>;\n};\n\nfunction showDescription(description) {\n  if (state.descriptionHeightLimited && description.length > 501) {\n    return description.slice(0, 500) + \"...\";\n  } else {\n    return description;\n  }\n}\n\nreturn (\n  <div>\n    <div className=\"d-flex content-align-start justify-content-between\">\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"1000px\",\n          height: \"1000px\",\n          margin: \"2rem 0.5rem 2rem 2rem\",\n          borderRadius: \"18px\",\n          background: \"white\",\n          boxShadow: \"0px 8px 28px rgba(43, 68, 106, 0.05)\",\n        }}\n      >\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"d-flex\">\n            <Widget\n              src=\"mob.near/widget/ProfileImage\"\n              props={{\n                profile,\n                question: state.poll.accountId,\n                className: \"float-start d-inline-block me-2\",\n                style: {\n                  width: \"3.5rem\",\n                  aspectRatio: \"1\",\n                  marginLeft: \"1rem\",\n                  borderRadius: \"100%\",\n                  overflow: \"hidden\",\n                },\n              }}\n            />\n            <div>\n              <p style={{ margin: \"0\", fontWeight: \"300\" }}>Created by</p>\n              <p style={{ fontWeight: \"500\" }}>\n                {sliceString(context.accountId, 18)}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex my-3\">\n          <div\n            style={{\n              height: \"inherit\",\n              backgroundColor: \"#AAC8F7\",\n              width: \"0.5rem\",\n              minWidth: \"5px\",\n              marginRight: \"0.5rem\",\n              borderRadius: \"8px\",\n            }}\n          >\n            {/*Decorative div, do not delete*/}\n          </div>\n          <h2\n            style={{\n              fontWeight: \"700\",\n              fontSize: \"2rem\",\n              letterSpacing: \"0.1px\",\n              color: \"#010A2D\",\n              wordWrap: \"anywhere\",\n            }}\n          >\n            Instance Time\n          </h2>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"max-content\",\n            display: \"flex\",\n            padding: \"0.5rem 1rem\",\n            width: \"100%\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                paddingRight: \"2rem\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <Widget\n                src={`vow_owner_123.near/widget/Instance_time_share`}\n                props={{ accountId: \"vow_owner_123.near\" }}\n              />\n            </div>\n            <span\n              style={{\n                backgroundColor:\n                  d.is_on == \"on\" ? \"rgb(217, 252, 239)\" : \"rgb(255, 229, 229)\",\n                textAlign: \"center\",\n                borderRadius: \"16px\",\n                fontSize: \"0.8rem\",\n                color:\n                  d.is_on == \"on\" ? \"rgb(0, 179, 125)\" : \"rgb(255, 71, 71)\",\n                fontWeight: \"500\",\n                padding: \"0.5rem 1rem\",\n              }}\n            >\n              {d.is_on ?? \"off\"}\n            </span>\n          </div>\n\n          <div>{\"d.time_zone\"}</div>\n        </div>\n        <div\n          className=\"p-3\"\n          style={{\n            position: \"relative\",\n            border: \"1.5px solid rgb(206, 212, 218)\",\n            borderRadius: \"24px\",\n            wordWrap: \"anywhere\",\n            width: \"100%\",\n          }}\n        >\n          <h3\n            style={{\n              fontWeight: \"700\",\n              fontSize: \"1.2rem\",\n              marginBottom: \"1.2rem\",\n            }}\n          >\n            Schedule\n          </h3>\n          <p style={{ fontSize: \"0.9rem\" }}>\n            {showDescription(state.poll.value.description)}\n          </p>\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"-1.125rem\",\n              left: \"0\",\n              right: \"0\",\n              marginRight: \"auto\",\n              marginLeft: \"auto\",\n              textAlign: \"center\",\n            }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vow_owner_123.near/widget/Instance_time_card"}