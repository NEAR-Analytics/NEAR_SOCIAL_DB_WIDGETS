{"tx_hash": "5T6dbr3q6r4MrHfodLH9ajB9dWp5gdr3Ri7oXzGr7mmZ", "action_id_social": "H6wVf7cRsD8QDZpJWVUhACRd6JS2k9kUvkDXWcn3Qxs7-0-widget", "block_id": 88592336, "block_timestamp": "2023-04-01 16:52:02.850", "signer_id": "saidulbadhon.near", "widget_name": "SearchPage.Searchbar", "source_code": "const allMetadata =\r\n  Social.get(\r\n    [\"*/widget/*/metadata/name\", \"*/widget/*/metadata/tags/*\"],\r\n    \"final\"\r\n  ) || {};\r\nconst keys = Social.keys([\"*/widget/*\"], \"final\", { values_only: true }) || {};\r\n\r\nconst requiredTag = props.filterTag;\r\nconst boostedTag = props.boostedTag;\r\nconst inputTerm = props.term;\r\n\r\nconst computeResults = (term) => {\r\n  const terms = (term || \"\")\r\n    .toLowerCase()\r\n    .split(/[^\\w._\\/-]/)\r\n    .filter((s) => !!s.trim());\r\n\r\n  const matchedWidgets = [];\r\n\r\n  const limit = props.limit ?? 30;\r\n\r\n  const MaxSingleScore = 1;\r\n  const MaxScore = MaxSingleScore * 4;\r\n\r\n  const computeScore = (s) => {\r\n    s = s.toLowerCase();\r\n    return (\r\n      terms\r\n        .map((term) => {\r\n          const pos = s.indexOf(term);\r\n          return pos >= 0 ? Math.exp(-pos) : 0;\r\n        })\r\n        .reduce((s, v) => s + v, 0) / terms.length\r\n    );\r\n  };\r\n\r\n  Object.entries(keys).forEach(([accountId, data]) => {\r\n    Object.keys(data.widget).forEach((componentId) => {\r\n      const widgetSrc = `${accountId}/widget/${componentId}`;\r\n      const widgetSrcScore = computeScore(widgetSrc);\r\n      const componentIdScore = computeScore(componentId);\r\n      const metadata = allMetadata[accountId].widget[componentId].metadata;\r\n      const name = metadata.name || componentId;\r\n      if (requiredTag && !(metadata.tags && requiredTag in metadata.tags)) {\r\n        return;\r\n      }\r\n      const boosted =\r\n        boostedTag && metadata.tags && boostedTag in metadata.tags;\r\n      const tags = Object.keys(metadata.tags || {}).slice(0, 10);\r\n      const nameScore = computeScore(name);\r\n      const tagsScore = Math.min(\r\n        MaxSingleScore,\r\n        tags.map(computeScore).reduce((s, v) => s + v, 0)\r\n      );\r\n      const score =\r\n        (widgetSrcScore + componentIdScore + nameScore + tagsScore) / MaxScore;\r\n      if (score > 0) {\r\n        matchedWidgets.push({\r\n          score,\r\n          accountId,\r\n          widgetName: componentId,\r\n          widgetSrc,\r\n          name,\r\n          tags,\r\n          boosted,\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  matchedWidgets.sort(\r\n    (a, b) => (b.boosted ? 2 : 0) + b.score - (a.boosted ? 2 : 0) - a.score\r\n  );\r\n  const result = matchedWidgets.slice(0, limit);\r\n\r\n  State.update({\r\n    term,\r\n    result,\r\n  });\r\n\r\n  if (props.onChange) {\r\n    props.onChange({ term, result });\r\n  }\r\n};\r\n\r\nif (props.term && props.term !== state.oldTerm) {\r\n  State.update({\r\n    oldTerm: props.term,\r\n  });\r\n  if (props.term !== state.term) {\r\n    computeResults(props.term);\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  position: relative;\r\n\r\n  .bi-search {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 18px;\r\n      z-index: 100;\r\n      font-size: 14px;\r\n      line-height: 40px;\r\n      color: #687076;\r\n  }\r\n\r\n  .input-group {\r\n      height: 100%;\r\n  }\r\n\r\n  input {\r\n    padding: 0 14px 0 42px;\r\n    border: 1px solid #D0D5DD !important;\r\n    background: #FFFFFF;\r\n    border-radius: 100px;\r\n\r\n    margin: 8px;\r\n    width: calc(100% - 16px)\";\r\n    paddingBlock: 0.5;\r\n    paddingInline: 1;\r\n    flex: 1;\r\n    borderRadius: 1;\r\n    color: theme.textColor;\r\n    backgroundColor: theme.ui2;\r\n\r\n  }\r\n\r\n  button {\r\n      border-color: #D0D5DD !important;\r\n      border-radius: 0 100px 100px 0 !important;\r\n      border-left: none !important;\r\n      background: #fff !important;\r\n      color: #687076 !important;\r\n\r\n      &:hover, &:focus {\r\n          color: #000 !important;\r\n      }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n      width: 100%;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <Wrapper>\r\n    <i className=\"bi bi-search\"></i>\r\n    <div className=\"input-group\">\r\n      <input\r\n        type=\"text\"\r\n        className={`form-control ${state.term ? \"border-end-0\" : \"\"}`}\r\n        value={state.term ?? \"\"}\r\n        onChange={(e) => computeResults(e.target.value)}\r\n        placeholder={props.placeholder ?? `Search components`}\r\n      />\r\n\r\n      {state.term && (\r\n        <button\r\n          className=\"btn btn-outline-secondary border border-start-0\"\r\n          type=\"button\"\r\n          onClick={() => computeResults(\"\")}\r\n        >\r\n          <i className=\"bi bi-x\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n\r\n    {props.debug && <pre>{JSON.stringify(state.result, undefined, 2)}</pre>}\r\n  </Wrapper>\r\n);\r\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/saidulbadhon.near/widget/SearchPage.Searchbar", "branch.draft": NaN}