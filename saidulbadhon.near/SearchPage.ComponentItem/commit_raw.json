{"tx_hash": "2M1Nt9iwuUymzLF5F8a8QdRHFJUrEJLcdP4iHNNp7nNf", "action_id_social": "DTk9612WShBrJnHQjvADPyai9uzt59KF16MCQeH7bKRJ-0-widget", "block_id": 88890958, "block_timestamp": "2023-04-05 17:03:19.461", "signer_id": "saidulbadhon.near", "widget_name": "SearchPage.ComponentItem", "source_code": "const [accountId, widget, widgetName] = props.src.split(\"/\");\r\nconst metadata = Social.get(\r\n  `${accountId}/widget/${widgetName}/metadata/**`,\r\n  \"final\"\r\n);\r\nconst tags = Object.keys(metadata.tags || {});\r\nconst detailsUrl = `/#/components/${accountId}/widget/${widgetName}/details`;\r\nconst appUrl = `/#/components/${accountId}/widget/${widgetName}`;\r\nconst accountUrl = `/#/adminalpha.near/widget/ProfilePage?accountId=${accountId}`;\r\n\r\nfunction makeUpperCase(sentence) {\r\n  let words = sentence.split(/[\\s-]+/); // split on spaces or hyphens\r\n  for (let i = 0; i < words.length; i++) {\r\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\r\n    if (words[i].includes(\"-\")) {\r\n      // capitalize after hyphen\r\n      let hyphenIndex = words[i].indexOf(\"-\");\r\n      words[i] =\r\n        words[i].substr(0, hyphenIndex + 1) +\r\n        words[i][hyphenIndex + 1].toUpperCase() +\r\n        words[i].substr(hyphenIndex + 2);\r\n    }\r\n  }\r\n  return words.join(\" \");\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  gap: 8px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  position: relative;\r\n  padding: 8px 8px;\r\n\r\n  background-color: ${props.theme.backgroundColor};\r\n  &:hover{\r\n    background-color: ${props.theme.ui2};\r\n    outline:none;\r\n    border:none;\r\n  }\r\n`;\r\n\r\nconst TopSection = styled.div`\r\n  width: 100%;\r\n  height:100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width: 75px;\r\n  min-width:75px;\r\n  height:75px;\r\n  aspect-ratio: 1 / 1;\r\n  cursor: pointer;\r\n\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  zindex: 9;\r\n\r\n  img {\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst BottomSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${props.theme.buttonColor};\r\n  color: ${props.theme.buttonTextColor};\r\n  width: 100%;\r\n  height:30px;\r\n  width:30px;\r\n  outline:none;\r\n  transition: all .2s ease-in-out;\r\n\r\n  border: none;\r\n  font-weight: 600;\r\n  border-radius: 4px;\r\n\r\n  &:hover{\r\n    background-color: ${props.theme.buttonColor}cc;\r\n    outline:none;\r\n    border:none;\r\n  }\r\n  \r\n  &:active{\r\n    background-color: ${props.theme.buttonColor}aa;\r\n  }\r\n`;\r\nconst Button2 = styled.button`\r\n  background-color: ${props.theme.buttonColor}22;\r\n  color: ${props.theme.buttonColor};\r\n  width: 100%;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius:4px;\r\n\r\n  outline:none;\r\n  transition: all .2s ease-in-out;\r\n\r\n  border: none;\r\n  font-weight: 600;\r\n\r\n  &:hover{\r\n    background-color: ${props.theme.buttonColor}44;\r\n  color: ${props.theme.buttonColor};\r\n    outline:none;\r\n    border:none;\r\n  }\r\n  \r\n  &:active{\r\n    background-color: ${props.theme.buttonColor};\r\n   color: ${props.theme.buttonTextColor};\r\n }\r\n`;\r\n\r\nreturn (\r\n  <MainContainer>\r\n    <Logo\r\n      onClick={() =>\r\n        props?.onDetailsUrlClick(`${accountId}/widget/${widgetName}`)\r\n      }\r\n    >\r\n      <Widget\r\n        src=\"mob.near/widget/Image\"\r\n        props={{\r\n          image: metadata.image,\r\n          fallbackUrl:\r\n            \"https://ipfs.near.social/ipfs/bafkreifc4burlk35hxom3klq4mysmslfirj7slueenbj7ddwg7pc6ixomu\",\r\n          alt: metadata.name,\r\n        }}\r\n      />\r\n    </Logo>\r\n\r\n    <TopSection>\r\n      <p\r\n        href={detailsUrl}\r\n        style={{\r\n          fontSize: 14,\r\n          fontWeight: 600,\r\n          color: props.theme.textColor,\r\n          textDecoration: \"none\",\r\n          padding: 0,\r\n          margin: 0,\r\n          wordBreak: \"break-all\",\r\n          textAlign: \"left\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() =>\r\n          props?.onDetailsUrlClick(`${accountId}/widget/${widgetName}`)\r\n        }\r\n      >\r\n        {metadata.name || widgetName}\r\n      </p>\r\n\r\n      <p\r\n        style={{\r\n          fontSize: 13,\r\n          fontWeight: 500,\r\n          color: props.theme.textColor3,\r\n          textDecoration: \"none\",\r\n          padding: 0,\r\n          margin: 0,\r\n          wordBreak: \"break-all\",\r\n          textAlign: \"left\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() =>\r\n          props?.onDetailsUrlClick(`${accountId}/widget/${widgetName}`)\r\n        }\r\n      >\r\n        @{accountId}\r\n      </p>\r\n\r\n      <Widget\r\n        src=\"saidulbadhon.near/widget/SearchPage.ComponentItem.TimeAgo\"\r\n        props={{\r\n          blockHeight: props.blockHeight,\r\n          keyPath: `${accountId}/widget/${widgetName}`,\r\n          style: {\r\n            color: props.theme.textColor3,\r\n            margin: 0,\r\n            fontSize: 11,\r\n            fontWeight: 400,\r\n          },\r\n          theme: props.theme,\r\n        }}\r\n      />\r\n\r\n      {tags.length > 0 && tags.length > 0 && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: 4,\r\n            flexWrap: \"wrap\",\r\n            marginTop: 8,\r\n\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n          {tags.map((tag, index) => {\r\n            return (\r\n              index <= 1 && (\r\n                <p\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    backgroundColor:\r\n                      props.theme.name === \"dark\"\r\n                        ? \"rgba(255,255,255,.075)\"\r\n                        : \"rgba(0,0,0,.075)\",\r\n                    color: props.theme.textColor,\r\n                    padding: \"0px 3px\",\r\n                    fontWeight: 500,\r\n                    borderRadius: 4,\r\n                    fontSize: 11,\r\n                  }}\r\n                >\r\n                  {makeUpperCase(tag)}\r\n                </p>\r\n              )\r\n            );\r\n          })}\r\n          {tags.length >= 2 && (\r\n            <p\r\n              style={{\r\n                marginBottom: 0,\r\n                backgroundColor:\r\n                  props.theme.name === \"dark\"\r\n                    ? \"rgba(255,255,255,.075)\"\r\n                    : \"rgba(0,0,0,.075)\",\r\n                color: props.theme.textColor,\r\n                padding: \"0px 3px\",\r\n                fontWeight: 500,\r\n                borderRadius: 4,\r\n                fontSize: 11,\r\n              }}\r\n              title={tags?.map((element, index) => {\r\n                if (index >= 2) {\r\n                  return ` ${makeUpperCase(element)}`;\r\n                }\r\n              })}\r\n            >\r\n              +{tags.length - 2} more\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </TopSection>\r\n\r\n    <BottomSection>\r\n      <Button\r\n        onClick={() =>\r\n          props?.onCopyButtonClick(`${accountId}/widget/${widgetName}`)\r\n        }\r\n      >\r\n        <i class=\"bi bi-clipboard-check\"></i>\r\n      </Button>\r\n\r\n      <a href={appUrl} target=\"_blank\">\r\n        <Button2\r\n          type=\"button\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"top\"\r\n          title=\"Open Component\"\r\n        >\r\n          <i class=\"bi bi-box-arrow-up-right\"></i>\r\n          {/*Open*/}\r\n        </Button2>\r\n      </a>\r\n    </BottomSection>\r\n  </MainContainer>\r\n);\r\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/saidulbadhon.near/widget/SearchPage.ComponentItem", "branch.draft": NaN}