{"tx_hash": "GHujctZQbebzS7UWUeJkXYe3jtXza7mrNDm9F3EZyah7", "action_id_social": "6iZfwt14tg3iNJVD2Kg5uPMRLdMdhJGeQNfGo1pnb39J-0-widget", "block_id": 89290835, "block_timestamp": "2023-04-10 22:32:09.262", "signer_id": "dorgon108.near", "widget_name": "SearchPopup", "source_code": "const SEARCH_API_KEY = props.searchApiKey ?? \"0e42c01107b8f555a41bcc0fa7f2a4df\";\nconst APPLICATION_ID = props.appId ?? \"B6PI9UKKJT\";\nconst INDEX = props.index ?? \"prod_near-social-feed\";\nconst API_URL =\n  props.apiUrl ??\n  `https://${APPLICATION_ID}-dsn.algolia.net/1/indexes/${INDEX}/query?`;\nconst INITIAL_PAGE = props.initialPage ?? 0;\nconst facets = props.facets ?? [\"All\", \"Users\", \"Apps\", \"Components\", \"Posts\"];\n\nconst showHeader = props.showHeader ?? true;\nconst showSearchBar = props.showSearchBar ?? true;\nconst showPagination = props.showPagination ?? true;\nconst userId = props.accountId ?? context.accountId;\n\nconst componentsUrl = `/#/calebjacob.near/widget/ComponentsPage`;\nconst peopleUrl = `/#/calebjacob.near/widget/PeoplePage`;\n// Styling Specifications\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-bottom: 48px;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst Search = styled.div``;\n\nconst Facets = styled.div`\n  overflow: auto;\n`;\n\nconst H1 = styled.h1`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 39px;\n  color: #11181c;\n  margin: 0;\n`;\n\nconst H2 = styled.h2`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  color: #687076;\n  margin: 0;\n`;\n\nconst H3 = styled.h3`\n  color: #687076;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nconst Group = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst GroupHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181c;\n  }\n\n  &[href] {\n    color: #006adc;\n    outline: none;\n    font-weight: 600;\n\n    &:hover,\n    &:focus {\n      color: #006adc;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst Items = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  gap: 12px;\n`;\n\nconst Item = styled.div``;\n\nconst onSearchChange = ({ term }) => {\n  console.log(\"search change\");\n  props.writeStateTerm(term);\n  props.updateSearchHits({ term, pageNumber: INITIAL_PAGE });\n};\n\nconst onSearchChangeFun = onSearchChange;\nconst termVal = props.term;\nconst facetsVal = props.facets;\nconst onFacetClickFun = props.onFacetClick;\nconst defaultFacetVal = props.facets[0];\nconst onSearchResultClickFun = props.onSearchResultClick;\nconst onPageChangeFun = props.onPageChange;\nconst disableInsightsFun = props.disableInsights;\n\nfunction logConditionals() {\n  console.log(\"showSearchBar:\", showSearchBar);\n  console.log(\"state.search:\", state.search);\n  console.log(\"paginate?\", state.paginate?.hitsTotal === 0);\n  console.log(\"state.search?.profiles:\", state.search?.profiles.length > 0);\n  console.log(\"state.search?\", state.search?.components.length > 0);\n  console.log(\n    \"state.search?.postsAndComment\",\n    state.search?.postsAndComments.length > 0\n  );\n  console.log(\n    \"showPagination && state.paginate && state.paginate.hitsTotal > state.paginate.hitsPerPage:\",\n    showPagination &&\n      state.paginate &&\n      state.paginate.hitsTotal > state.paginate.hitsPerPage\n  );\n  console.log(\"!disableInsightsFun:\", !disableInsightsFun);\n  console.log(\"child state is:\", state.search);\n}\nreturn (\n  <Wrapper>\n    {showSearchBar && (\n      <Search>\n        <Widget\n          src=\"chaotictempest.near/widget/SearchPill\"\n          props={{\n            onChange: onSearchChange,\n            term: termVal,\n          }}\n        />\n      </Search>\n    )}\n\n    {state.search && (\n      <Facets>\n        <Widget\n          src=\"chaotictempest.near/widget/Facets\"\n          props={{\n            facets: facetsVal,\n            onFacetClick: onFacetClickFun,\n            defaultFacet: defaultFacetVal,\n          }}\n        />\n      </Facets>\n    )}\n\n    {logConditionals()}\n\n    {state.paginate?.hitsTotal == 0 && (\n      <H2>No matches were found for \"{state.term}\".</H2>\n    )}\n\n    {props.search?.profiles.length > 0 && (\n      <Group>\n        <GroupHeader>\n          <H3>People</H3>\n          <Text as=\"a\" href={peopleUrl} small>\n            View All\n          </Text>\n        </GroupHeader>\n\n        <Items>\n          {state.search.profiles.map((profile, i) => (\n            <Item key={profile.accountId}>\n              <Widget\n                src=\"chaotictempest.near/widget/AccountProfileCard\"\n                props={{\n                  accountId: profile.accountId,\n                  onClick: () =>\n                    onSearchResultClickFun({\n                      searchPosition: profile.searchPosition,\n                      objectID: `${profile.accountId}/profile`,\n                      eventName: \"Clicked Profile After Search\",\n                    }),\n                }}\n              />\n            </Item>\n          ))}\n        </Items>\n      </Group>\n    )}\n\n    {state.search?.components.length > 0 && (\n      <Group>\n        <GroupHeader>\n          <H3>Components</H3>\n          <Text as=\"a\" href={componentsUrl} small>\n            View All\n          </Text>\n        </GroupHeader>\n\n        <Items>\n          {state.search.components.map((component, i) => (\n            <Item key={component.accountId + component.widgetName}>\n              <Widget\n                src=\"chaotictempest.near/widget/ComponentCard\"\n                props={{\n                  src: `${component.accountId}/widget/${component.widgetName}`,\n                  onClick: () =>\n                    onSearchResultClickFun({\n                      searchPosition: component.searchPosition,\n                      objectID: `${component.accountId}/widget/${component.widgetName}`,\n                      eventName: \"Clicked Component After Search\",\n                    }),\n                }}\n              />\n            </Item>\n          ))}\n        </Items>\n      </Group>\n    )}\n\n    {state.search?.postsAndComments.length > 0 && (\n      <Group>\n        <GroupHeader>\n          <H3>Posts and Comments</H3>\n        </GroupHeader>\n\n        <Items>\n          {state.search.postsAndComments.map((post, i) => (\n            <Item\n              key={`${post.accountId}/${post.postType}/${post.blockHeight}`}\n            >\n              <Widget\n                src=\"chaotictempest.near/widget/SearchPost\"\n                props={{\n                  accountId: post.accountId,\n                  blockHeight: post.blockHeight,\n                  content: post.postContent,\n                }}\n              />\n            </Item>\n          ))}\n        </Items>\n      </Group>\n    )}\n\n    {showPagination &&\n      state.paginate &&\n      state.paginate.hitsTotal > state.paginate.hitsPerPage && (\n        <Widget\n          src=\"chaotictempest.near/widget/Paginate\"\n          props={{\n            totalCount: state.paginate.hitsTotal,\n            pageSize: state.paginate.hitsPerPage,\n            onPageChange: onPageChangeFun,\n          }}\n        >\n          Hi\n        </Widget>\n      )}\n\n    {!disableInsightsFun && (\n      <Widget\n        src=\"chaotictempest.near/widget/Insights\"\n        props={{\n          event: state.event,\n          searchApiKey: SEARCH_API_KEY,\n          appId: APPLICATION_ID,\n          index: INDEX,\n        }}\n      />\n    )}\n  </Wrapper>\n);\n", "metadata": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dorgon108.near/widget/SearchPopup", "branch.draft.": NaN, "branch.draft.metadata": NaN, "branch": NaN}