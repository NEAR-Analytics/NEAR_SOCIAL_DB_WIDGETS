{"tx_hash": "5yqbQ33KLmsi3cmBL5cQCdFfnrkhAAGSeTwWnJLyJZnL", "action_id_social": "FE4GN5XbFL5koiVfhTuZGjkDB3NKaMTu59RqUYTJfCCH-0-widget", "block_id": 90027456, "block_timestamp": "2023-04-20 15:42:49.811", "signer_id": "dorgon108.near", "widget_name": "FIlterComponent", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst TagsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 0 15px;\n  max-width: calc(90px * 3 + 4px * 2 * 3);\n`;\n\nconst Row = styled.div`\n  display: flex;\n  width: 200%;\n  justify-content: flex-start;\n`;\n\nconst Title = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 19px;\n  line-height: 23px;\n`;\n\nconst SubRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px;\n`;\n\nconst SubTitle = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst StyledInput = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 8px;\n  gap: 6px;\n  width: 212px;\n  height: 32px;\n  background: #f8f9fa;\n  border-radius: 50px;\n`;\n\nconst SortBy = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SortOption = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: #687076;\n  cursor: pointer;\n  padding: 8px 12px 8px 8px;\n  gap: 8px;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nconst CheckboxContainer = styled.div`\n  width: 15px;\n  height: 15px;\n  position: relative;\n`;\n\nconst Checkbox = styled.div`\n  width: 100%;\n  height: 100%;\n  \n  position: absolute;\n  top: 0;\n  left: 0;\n  cursor: pointer;\n`;\n\nconst Tag = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 3px 8px;\n  gap: 3px;\n  width: auto;\n  max-width: 90px;\n  height: 24px;\n  background: #ffffff;\n  border: 1px solid #e6e8eb;\n  border-radius: 6px;\n  flex: none;\n  order: 2;\n  flex-grow: 0;\n  margin: 4px;\n`;\nconst CheckboxInput = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 10px;\n\n  & > input[type=\"checkbox\"] {\n    width: 40px;\n    height: 40px;\n    margin-right: 8px;\n  }\n`;\n\nconst CustomCheckbox = styled.span`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 1px solid black;\n  margin-right: 8px;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    display: none;\n    left: 5px;\n    top: 2px;\n    width: 4px;\n    height: 8px;\n    border: solid white;\n    border-width: 0 2px 2px 0;\n    transform: rotate(45deg);\n  }\n`;\n\nconst CheckboxGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  color: #878A8E;\n  gap: 16px;\n`;\n\nconst SubCheckboxGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  gap: 16px;\n`;\n\nlet tags = props.selectedTags ?? [];\n\n// Initialize the state\nState.init({\n  youFollow: false,\n  youDontFollow: false,\n  inputValue: \"\",\n  filteredTags: tags,\n  activeTags: [], // Add this line\n});\n\nconst updateFilteredTags = (inputValue) => {\n  State.update({\n    filteredTags: tags.filter((tag) => tag.includes(inputValue)),\n  });\n};\n\n// Add this function to update tags based on props.selectedTags\nconst updateTags = () => {\n  tags = props.selectedTags ?? [];\n  updateFilteredTags(state.inputValue);\n};\n\n// Call updateTags function to update tags\nupdateTags();\n\nconst toggleActiveTag = (tag) => {\n  const newActiveTags = state.activeTags.includes(tag)\n    ? state.activeTags.filter((t) => t !== tag)\n    : [...state.activeTags, tag];\n\n  State.update({ activeTags: newActiveTags });\n  props.onTagClick(newActiveTags);\n\n  // Call updateTags function to update tags\n  updateTags();\n};\n\nconst handleChange = (checkboxName) => {\n  console.log(\"called\", checkboxName);\n  props.onCheckboxChange(checkboxName, !props[checkboxName]);\n};\n\nreturn (\n  <Container>\n    <Row>\n      <Title>Filters</Title>\n    </Row>\n\n    <Row>\n      <SubRow>\n        <SubTitle>Tags</SubTitle>\n        <StyledInput>\n          <input\n            placeholder=\"Search Tags\"\n            type=\"text\"\n            style={{ width: \"100%\", background: \"transparent\", border: \"none\" }}\n            value={state.inputValue}\n            onChange={(e) => {\n              State.update({ inputValue: e.target.value });\n              updateFilteredTags(e.target.value);\n            }}\n          />\n        </StyledInput>\n      </SubRow>\n    </Row>\n    <Row>\n      <TagsContainer>\n        {\" \"}\n        {state.filteredTags.map((tag) => (\n          <Tag\n            key={tag}\n            onClick={() => toggleActiveTag(tag)}\n            style={{\n              borderColor: state.activeTags.includes(tag) ? \"blue\" : \"#E6E8EB\",\n            }}\n          >\n            {tag}\n          </Tag>\n        ))}\n      </TagsContainer>\n    </Row>\n    <Row>\n      <SubRow>\n        <SubTitle>People</SubTitle>\n        <SubRow>\n          <CheckboxInput>\n            <input\n              type=\"checkbox\"\n              style={{\n                backgroundColor: props.showFollowed ? \"black\" : \"white\",\n                width: \"40px\",\n                height: \"40px\",\n              }}\n              checked={props.showFollowed}\n              onChange={() => handleChange(\"showFollowed\")}\n            />\n            <label>Show Followed</label>\n          </CheckboxInput>\n        </SubRow>\n        <SubRow>\n          <CheckboxInput>\n            <input\n              type=\"checkbox\"\n              style={{\n                backgroundColor: props.showNotFollowed ? \"black\" : \"white\",\n                width: \"40px\",\n                height: \"40px\",\n              }}\n              checked={props.showNotFollowed}\n              onChange={() => handleChange(\"showNotFollowed\")}\n            />\n\n            <label>Show Not Followed</label>\n          </CheckboxInput>\n        </SubRow>\n      </SubRow>\n    </Row>\n    <Row></Row>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dorgon108.near/widget/FIlterComponent"}