{"tx_hash": "22TxZyAHEQrMk4fSJTz99ejHZUVcksmzVkgoMubBRxzy", "action_id_social": "EwYBzG7y5Hm5gC7NnYMJY3aBUhrtwj3NpFMpxNFYq1zY-0-widget", "block_id": 87255119, "block_timestamp": "2023-03-14 05:49:06.371", "signer_id": "dorgon108.near", "widget_name": "testImport", "source_code": "initState({\n  nameText: initSearchText,\n  testResult: false,\n  testRun: false,\n});\n\nconst getResult = () => {\n  State.update({\n    testRun: true,\n\n    testResult: Near.view(\n      \"check-contract.nearsocialexamples.near\",\n      \"account_participation\",\n      { account_name: state.nameText }\n    ),\n  });\n};\n\nconst testContract = () => {\n  State.update({\n    testResult: Near.call(\n      \"check-contract.nearsocialexamples.near\",\n      \"evaluate_hello_near\",\n      {\n        contract_name: state.nameText,\n      },\n      \"100000000000000\"\n    ),\n  });\n};\n\nconst textHandler = (contractName) => {\n  State.update({\n    nameText: contractName,\n  });\n};\n\nreturn (\n  <div style={{ textAlign: \"center\" }}>\n    <h1>NEAR Social Beginner's Tutorial</h1>\n    <ol style={{ textAlign: \"left\" }}>\n      <li>\n        Create a contract with the methods titled \"set_greeting\" and\n        \"get_greeting\".\n      </li>\n      <li>\n        In the state of your contract (where your class/struct is instantiated),\n        save a string.\n      </li>\n      <li>\n        The \"set_greeting\" and \"get_greeting\" methods should simply update and\n        return the value of the saved string.\n      </li>\n      <li>Deploy your contract onto a mainnet account.</li>\n      <li>\n        Enter the name of your mainnet account here to test your contract with a\n        random string.\n      </li>\n    </ol>\n    <br />\n    <input\n      onChange={(e) => textHandler(e.target.value)}\n      type=\"text\"\n      placeholder=\"Enter The name of your mainnet account here\"\n    />\n    <br />\n    <button onClick={testContract} style={{ margin: \"10px auto\" }}>\n      Run Test\n    </button>\n    <button onClick={getResult} style={{ margin: \"10px auto\" }}>\n      Get Result\n    </button>\n\n    {state.testRun ? (\n      state.testResult ? (\n        <p>The test passed!</p>\n      ) : (\n        <p>The test failed.</p>\n      )\n    ) : null}\n  </div>\n);\n", "metadata": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/dorgon108.near/widget/testImport", "branch.draft": NaN, "branch": NaN, "metadata.name": NaN}