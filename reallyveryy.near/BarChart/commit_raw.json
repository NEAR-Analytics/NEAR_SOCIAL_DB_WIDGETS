{"tx_hash": "76Vp3tsny4JJbgcZrY8dU1fQ3AgkeqJtSoFiuFJKtnfD", "action_id_social": "DXsddA2atjUmCg3eUttFATvFnxNRmXjkHrGq3nh8TBue-0-widget", "block_id": 87341405, "block_timestamp": "2023-03-15 09:40:34.802", "signer_id": "reallyveryy.near", "widget_name": "BarChart", "source_code": "// data  = number array or object\r\n// labels = string array, overwritten if data is object\r\nlet { title, data, labels, config, width, height } = props;\r\n\r\nlet { isDate, includeDate, startFromZero } = config;\r\n\r\nlet isObject = false;\r\nlet maxValue = undefined;\r\nlet minValue = undefined;\r\n\r\nif (!Array.isArray(data)) {\r\n  labels = Object.keys(data);\r\n  isObject = true;\r\n  for (const [key, value] of Object.entries(data)) {\r\n    if (maxValue == undefined) {\r\n      maxValue = value;\r\n    }\r\n\r\n    if (minValue == undefined) {\r\n      minValue = value;\r\n    }\r\n\r\n    maxValue = maxValue < value ? value : maxValue;\r\n    minValue = minValue > value ? value : minValue;\r\n  }\r\n} else {\r\n  for (const value of data) {\r\n    console.log({ value });\r\n    if (maxValue == undefined) {\r\n      maxValue = value;\r\n    }\r\n\r\n    if (minValue == undefined) {\r\n      minValue = value;\r\n    }\r\n\r\n    maxValue = maxValue < value ? value : maxValue;\r\n    minValue = minValue > value ? value : minValue;\r\n  }\r\n}\r\n\r\nstartFromZero = startFromZero && maxValue > 0;\r\nif (startFromZero) {\r\n  minValue = 0;\r\n}\r\n\r\nlet dataLength = labels.length;\r\n\r\nfunction toLocaleDecimal(x, minDecimal, maxDecimal) {\r\n  return x.toLocaleString(\"en\", {\r\n    minimumFractionDigits: minDecimal,\r\n    maximumFractionDigits: maxDecimal,\r\n  });\r\n}\r\n\r\nfunction formatDate(dateStr) {\r\n  const date = new Date(dateStr);\r\n  const year = date.getFullYear().toString().slice(-2);\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const month = months[date.getMonth()];\r\n  return `${year} - ${month}${includeDate ? ` - ${date.getDate()}` : \"\"}`;\r\n}\r\n\r\nlet Style = styled.div`\r\n\r\n      .barTextH{\r\n        transition: fill 0.2s;\r\n\r\n      }\r\n      .barTextH:hover{\r\n        fill: #ad610a;\r\n\r\n      }\r\n      .bar {\r\n        transition: fill 0.2s;\r\n      }\r\n\r\n      .bar:hover {\r\n        fill: #ffa726;\r\n      }\r\n\r\n      .bar-chart {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n        svg {\r\n          width: 80%;\r\n        }\r\n\r\n        rect {\r\n          shape-rendering: crispEdges;\r\n          fill: #61dafb;\r\n          stroke: #333;\r\n          stroke-width: 1;\r\n        }\r\n\r\n\r\n        `;\r\n\r\nmaxValue = maxValue * 1.1;\r\n\r\nreturn (\r\n  <>\r\n    <Style>\r\n      <div className=\"text-bg-light rounded-4 p-3 mb-4\">\r\n        {data !== null ? (\r\n          <p>\r\n            <div class=\"d-flex clearfix flex-wrap flex-column flex-sm-row\">\r\n              <div class=\"p-2\">\r\n                <div>\r\n                  <h2>{title}</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <hr />\r\n              <div className=\"bar-chart\">\r\n                <svg\r\n                  width={width}\r\n                  height={height}\r\n                  viewBox={`0 0 ${width} ${height + 200} `}\r\n                  preserveAspectRatio=\"xMidYMid meet\"\r\n                >\r\n                  {labels.map((label, i) => {\r\n                    let d = data[i];\r\n\r\n                    if (isObject) {\r\n                      d = data[label];\r\n                    }\r\n\r\n                    let barHeight =\r\n                      (startFromZero\r\n                        ? d / maxValue\r\n                        : (d - minValue) / (maxValue - minValue)) * height;\r\n                    let barWidth = width / labels.length;\r\n\r\n                    return (\r\n                      <g key={title + i.toString()} className=\"barTextH\">\r\n                        <rect\r\n                          className=\"bar\"\r\n                          x={i * barWidth}\r\n                          y={height - barHeight}\r\n                          width={barWidth - 2}\r\n                          height={barHeight}\r\n                          fill=\"#61dafb\"\r\n                        />\r\n                        <text\r\n                          className=\"text-primary-emphasis\"\r\n                          x={i * barWidth + barWidth / 2}\r\n                          y={height + 40}\r\n                          transform={`rotate(-75 ${\r\n                            i * barWidth + barWidth / 2\r\n                          } ${height + 40})`}\r\n                          textAnchor=\"middle\"\r\n                        >\r\n                          / {isDate ? formatDate(label) : label}\r\n                        </text>\r\n                        <text\r\n                          className=\"text-primary-emphasis\"\r\n                          x={i * barWidth + barWidth / 2}\r\n                          y={height + 90}\r\n                          transform={`rotate(-75 ${\r\n                            i * barWidth + barWidth / 2\r\n                          } ${height + 110})`}\r\n                          textAnchor=\"middle\"\r\n                        >\r\n                          {toLocaleDecimal(d, 2, 2)}\r\n                        </text>\r\n                      </g>\r\n                    );\r\n                  })}\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <hr />\r\n              <small className=\"fw-bold\">\r\n                Data is provided by{\" \"}\r\n                <a\r\n                  target=\"_blank\"\r\n                  style={{ color: \"inherit\" }}\r\n                  variant=\"caption\"\r\n                  rel=\"nofollow\"\r\n                  href=\"https://www.flipsidecrypto.com/\"\r\n                >\r\n                  Flipside Crypto\r\n                </a>\r\n              </small>\r\n            </div>\r\n          </p>\r\n        ) : (\r\n          <div>Loading ...</div>\r\n        )}\r\n      </div>\r\n    </Style>\r\n  </>\r\n);\r\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/reallyveryy.near/widget/BarChart", "metadata.name": "BarChart"}