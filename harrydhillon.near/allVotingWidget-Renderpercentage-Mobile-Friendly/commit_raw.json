{"tx_hash": "DXPQ3kFCfYpv5aWPN529vK3v6pUSW8Zp5RDbii6J1Lde", "action_id_social": "7HNrpSiqCJyXdb29F13eqdDPYpScutJU31C125dgE3HM-0-widget", "block_id": 92006023, "block_timestamp": "2023-05-16T17:32:59.553Z", "signer_id": "harrydhillon.near", "widget_name": "allVotingWidget-Renderpercentage-Mobile-Friendly", "source_code": "const ResponsiveText = styled.span`\n  @media screen and (max-width: 1024px)  {\n      font-size: 11px;\n  }\n`;\nconst ResponsiveTextOption = styled.span`\n  width:100px;\n  whitespace: pre-wrap;\n  @media screen and (max-width: 1024px)  {\n      font-size: 11px;\n  }\n`;\nconst TopMarginPercentage = styled.span`\n  margin: 0.5rem 0px 0.4rem 0.3rem;\n  @media screen and (max-width: 1024px)  {\n      margin: 0.6rem 0px 0.4rem 0.3rem;\n      font-size: 11px;\n  }\n`;\n\nreturn (\n  <div>\n    <div className=\"align-content-center\">\n      {/* Set the width of the next div to make the bar grow. At the same, use the same value to fill the span tag */}\n      {!props.canVote && (\n        <ResponsiveTextOption\n          style={{\n            fontWeight: \"500\",\n            lineHeight: \"2.5rem\",\n          }}\n        >\n          {props.option} \u2022\n        </ResponsiveTextOption>\n      )}\n      {!props.canVote ? (\n        <div\n          style={{\n            display: \"flex\",\n            alignContent: \"center\",\n            backgroundColor: `${props.getBgColor(props.optionNumber, false)}`,\n            color: `${props.getFontColor(props.optionNumber)}`,\n            width: \"100%\",\n            margin: \"0.3rem 0px\",\n            height: \"2.4rem\",\n            borderRadius: `${props.getBorderRadious(\n              props.questionNumber,\n              props.optionNumber\n            )}`,\n            overflow: \"hidden\",\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              height: \"100%\",\n              padding: \"0.01em 22px 0.01em 11px\",\n              display: \"block\",\n              width: `${props.calculatePercentageOfOption(\n                props.countVotes(props.questionNumber, props.questionType),\n                props.optionNumber\n              )}%`,\n              textAlign: \"center\",\n              overflow: \"visible\",\n              whiteSpace: \"nowrap\",\n              textAlign: \"left\",\n              backgroundColor: `${props.getBgColor(props.optionNumber, true)}`,\n              borderRadius: \"4px\",\n            }}\n          >\n            <ResponsiveText\n              className=\"text-secondary\"\n              style={{\n                fontWeight: \"400\",\n              }}\n            >\n              (\n              {\n                props.countVotes(props.questionNumber, props.questionType)[\n                  props.optionNumber\n                ]\n              }{\" \"}\n              votes)\n            </ResponsiveText>\n          </div>\n          <TopMarginPercentage\n            style={{\n              minWidth: \"max-content\",\n              fontWeight: \"500\",\n              position: \"absolute\",\n              right: \"1.7rem\",\n            }}\n          >\n            {props.calculatePercentageOfOption(\n              props.countVotes(props.questionNumber, props.questionType),\n              props.optionNumber\n            )}\n            %\n          </TopMarginPercentage>\n        </div>\n      ) : (\n        <>\n          <input\n            className=\"form-check-input\"\n            id={`${props.questionNumber}-${props.optionNumber}`}\n            name={`${props.questionNumber}-${props.questionType}`}\n            key={`${props.questionNumber}-${props.optionNumber}-${props.state.vote}`}\n            style={props.getInputStyles(\n              props.questionType,\n              props.questionNumber,\n              props.optionNumber\n            )}\n            type={props.questionType == \"2\" ? \"checkbox\" : \"radio\"}\n            value={props.optionNumber}\n            checked={\n              props.questionType == \"2\"\n                ? props.state.vote[props.questionNumber].includes(\n                    props.optionNumber + \"\"\n                  )\n                : props.state.vote[props.questionNumber] ==\n                  props.optionNumber + \"\"\n            }\n            onClick={\n              props.questionType != \"2\" &&\n              props.clickRadioInputHandler(\n                props.questionNumber,\n                props.optionNumber\n              )\n            }\n            onChange={\n              props.questionType == \"2\" &&\n              props.clickCheckboxInputHandler(\n                props.questionNumber,\n                props.optionNumber\n              )\n            }\n          />\n          <label for={`${props.questionNumber}-${props.optionNumber}`}>\n            {props.option}\n          </label>\n        </>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/allVotingWidget-Renderpercentage-Mobile-Friendly", "__row_index": 56}