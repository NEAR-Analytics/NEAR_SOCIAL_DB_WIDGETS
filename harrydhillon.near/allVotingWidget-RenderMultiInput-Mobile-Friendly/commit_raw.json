{"tx_hash": "H9QbUqfZeJE4ZE31tha4zeYu9xRvL6M4wfpxECbxsvX7", "action_id_social": "GdBLQyepJKC3dYqRpZbFqPT5ifTxSJTMvbD2U49R3Asw-0-widget", "block_id": 92009164, "block_timestamp": "2023-05-16T18:31:17.896Z", "signer_id": "harrydhillon.near", "widget_name": "allVotingWidget-RenderMultiInput-Mobile-Friendly", "source_code": "const renderMultipleChoiceInput = ({\n  questionNumber,\n  questionType,\n  option,\n  optionNumber,\n}) => {\n  return (\n    <>\n      {console.log(questionNumber, questionType, props, \"final check v2\")}\n      {!props.canVote ? (\n        <Widget\n          src=\"harrydhillon.near/widget/allVotingWidget-Renderpercentage-Mobile-Friendly\"\n          props={{\n            state: props.state,\n            questionNumber: questionNumber,\n            questionType: questionType,\n            option: option,\n            optionNumber: optionNumber,\n            canVote: props.canVote,\n            getBgColor: props.getBgColor,\n            getFontColor: props.getFontColor,\n            countVotes: props.countVotes,\n            getBorderRadious: props.getBorderRadious,\n            calculatePercentageOfOption: props.calculatePercentageOfOption,\n            getBlockTimestamp: props.getBlockTimestamp,\n            clickRadioInputHandler: props.clickRadioInputHandler,\n            clickCheckboxInputHandler: props.clickCheckboxInputHandler,\n          }}\n        />\n      ) : (\n        <div className=\"d-flex align-content-center\">\n          <input\n            className=\"form-check-input\"\n            id={`${questionNumber}-${optionNumber}`}\n            name={`${questionNumber}-${questionType}`}\n            key={`${questionNumber}-${optionNumber}-${props.state.vote}`}\n            style={props.getInputStyles(\n              questionType,\n              questionNumber,\n              optionNumber\n            )}\n            type={questionType == \"2\" ? \"checkbox\" : \"radio\"}\n            value={optionNumber}\n            checked={\n              questionType == \"2\"\n                ? props.state.vote[questionNumber].includes(optionNumber + \"\")\n                : props.state.vote[questionNumber] == optionNumber + \"\"\n            }\n            onClick={\n              questionType != \"2\" &&\n              props.clickRadioInputHandler(questionNumber, optionNumber)\n            }\n            onChange={\n              questionType == \"2\" &&\n              props.clickCheckboxInputHandler(questionNumber, optionNumber)\n            }\n          />\n          <label for={`${questionNumber}-${optionNumber}`}>{option}</label>\n        </div>\n      )}\n    </>\n  );\n};\nreturn renderMultipleChoiceInput({\n  questionNumber: props.questionNumber,\n  questionType: props.questionType,\n  option: props.option,\n  optionNumber: props.optionNumber,\n});\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/allVotingWidget-RenderMultiInput-Mobile-Friendly", "__row_index": 14}