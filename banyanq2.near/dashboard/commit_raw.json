{"tx_hash": "6QgvorE9XoEdYVr1qG1W8rnLNnDcxRRXCfkgWake4uAP", "action_id_social": "Ay6ZqS8NVp76LmufLbzmdBNWqtqEqX1wL6pQ3XW7bfVN-0-widget", "block_id": 95029293, "block_timestamp": "2023-06-25T22:31:14.028Z", "signer_id": "banyanq2.near", "widget_name": "dashboard", "source_code": "const Text = styled.p`\n  font-family: \"FK Grotesk\", sans-serif;\n  font-size: ${(p) => p.size ?? \"18px\"};\n  line-height: ${(p) => p.lineHeight ?? \"1.5\"};\n  font-weight: ${(p) => p.weight ?? \"400\"};\n  color: ${(p) => p.color ?? \"#000\"};\n  margin: 0;\n`;\n// add nice header\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 24px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (max-width: 800px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\nlet accountId = props.accountId ?? \"banyanq2.near\";\nlet followerTarget = 100;\nlet builderTarget = 30;\nlet componentTarget = 30;\nlet nycSubscribers = Social.keys(`*/graph/follow/nycdao.near`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst accountWidgetCount = [];\nlet numberOfBuildersWhoDeployed = 0;\n\nlet accounts = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nif (accounts === null) {\n  return \"Loading...\";\n}\n\naccounts = Object.entries(accounts[accountId].graph.follow || {});\naccounts.sort((a, b) => b[1] - a[1]);\n\nfor (let i = 0; i < accounts.length; ++i) {\n  let accountId = accounts[i][0];\n  let widgets = Social.get(`${accountId}/widget/*`, \"final\", {\n    return_type: \"BlockHeight\",\n    values_only: true,\n  });\n  let widgetCount = 0;\n  if (widgets) {\n    widgetCount = Object.keys(widgets).length;\n    numberOfBuildersWhoDeployed++;\n  }\n  accountWidgetCount.push({\n    accountId: accountId,\n    count: widgetCount,\n  });\n}\n\nconst accountWidgetSort = accountWidgetCount.sort((a, b) => b.count - a.count);\nconst numAccounts = accountWidgetSort.length;\naccountWidgetSort = accountWidgetSort.slice(0, limit);\nconsole.log(accountWidgetSort);\n// add number of accounts with no widget\nconst totalWidgetCount = accountWidgetCount.reduce(\n  (sum, account) => sum + account.count,\n  0\n);\nlet nycFollowers = 0;\nif (nycSubscribers) {\n  nycFollowers = Object.keys(nycSubscribers).length;\n}\nlet numQualityComponents = 0;\n// make a list asnd then check length of that\nlet sfSubscribers = Social.keys(`*/graph/follow/sfdao.near`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nlet sfFollowers = 0;\nif (sfSubscribers) {\n  sfFollowers = Object.keys(sfSubscribers).length;\n}\nconst following = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nconst currentBuilderCount = following\n  ? Object.keys(following[accountId].graph.follow || {}).length\n  : null;\n\nconst Flex = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: \"nowrap\";\n\n    @media (max-width: 900px) {\n    flex-direction: column;\n    gap: var(--section-gap);\n    }\n`;\nlet componentsURL =\n  \"https://raw.githubusercontent.com/NEARBuilders/BuildDAO/main/tracker/q2components.json\";\nfunction loadComponents() {\n  const res = fetch(componentsURL);\n  return res.body && JSON.parse(res.body);\n}\n\nconst componentList = loadComponents();\nif (!componentList) {\n  return \"\u29d7 Loading Components...\";\n}\nnumQualityComponents = componentList.components.length;\nconsole.log(componentList);\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 1060px;\n  margin: 0 auto;\n  gap: var(--section-gap);\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: var(--section-gap) 24px;\n`;\nconst H1 = styled.h1`\n  font-family: \"FK Grotesk\", sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 90px;\n  line-height: 1;\n  text-align: center;\n  letter-spacing: -0.03em;\n  color: #000;\n  margin: 0;\n  max-width: 700px;\n\n  span {\n    display: inline-block;\n    background: #6CE89F;\n    border-radius: 20px;\n    position: relative;\n    padding: 0.1em 0.2em 0;\n\n    svg {\n      position: absolute;\n      bottom: -8px;\n      right: -10px;\n      width: 24px;\n    }\n  }\n\n  @media (max-width: 900px) {\n    font-size: 50px;\n\n    span {\n      border-radius: 12px;\n      svg {\n        position: absolute;\n        bottom: -6px;\n        right: -7px;\n        width: 16px;\n      }\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  --section-gap: 42px;\n  padding-top: 42px;\n\n  @media (max-width: 1160px) {\n    .line-rounded-corners {\n      display: none !important;\n    }\n  }\n\n  @media (max-width: 900px) {\n    padding-top: 0;\n  }\n`;\n\nreturn (\n  <div>\n    <Wrapper>\n      <Container>\n        <H1>\n          Banyan Q2{\" \"}\n          <span>\n            {\" \"}\n            Dashboard{\" \"}\n            <svg viewBox=\"0 0 26 24\" fill=\"none\" aria-hidden=\"true\">\n              <path\n                d=\"M24.3767 8.06326L1.51965 0.0649912C1.10402 -0.0830767 0.639031 0.026026 0.327308 0.340346C0.0181841 0.657263 -0.0831256 1.12225 0.0701378 1.53788L8.071 23.2519C8.23726 23.7013 8.66587 24 9.14385 24H9.14644C9.62702 24 10.0556 23.6961 10.2167 23.2441L13.734 13.495L24.3325 10.2349C24.8053 10.0895 25.13 9.65824 25.1378 9.16468C25.1482 8.67112 24.8391 8.22691 24.3715 8.06326H24.3767Z\"\n                fill=\"#323330\"\n              />\n            </svg>\n          </span>\n        </H1>\n        (Apr 1 - Jun 30)\n      </Container>\n    </Wrapper>\n    <div className=\"row p-2\">\n      <Widget\n        src=\"hackerhouse.near/widget/ProgressBar\"\n        props={{\n          infoTitle: \"Q2 Builders Who Shipped 1+ Component\",\n          numerator: numberOfBuildersWhoDeployed,\n          total: builderTarget,\n        }}\n      />\n      <Widget\n        src=\"hackerhouse.near/widget/ProgressBar\"\n        props={{\n          infoTitle: \"BOS Follower (NYC + SF) Target\",\n          numerator: nycFollowers + sfFollowers,\n          total: followerTarget,\n        }}\n      />\n      <Widget\n        src=\"hackerhouse.near/widget/ProgressBar\"\n        props={{\n          infoTitle: \"# Builders Listed Who Need to Ship\",\n          numerator: currentBuilderCount - numberOfBuildersWhoDeployed,\n          total: currentBuilderCount,\n        }}\n      />\n      <a href={componentsURL} rel=\"noopener noreferrer\" target=\"_blank\">\n        <Widget\n          src=\"hackerhouse.near/widget/ProgressBar\"\n          props={{\n            infoTitle: \"New Quality BOS Components \",\n            numerator: numQualityComponents,\n            total: componentTarget,\n          }}\n        />\n      </a>\n    </div>\n    <p> Current NYC Followers: {nycFollowers}</p>\n    <p> Current SF Followers: {sfFollowers}</p>\n    <h3 className=\"m-2\">Q2 BOS Builders</h3>\n    <div className=\"m-2\">Total Widgets: {totalWidgetCount}</div>{\" \"}\n    {accountWidgetCount.map((rank, index) => {\n      let accountId = rank.accountId;\n      return (\n        <div className=\"d-flex m-2\" key={accountId}>\n          <div className=\"me-4\" style={{ width: \"45%\" }}>\n            <Widget\n              src=\"chaotictempest.near/widget/AccountProfileCard\"\n              props={{ accountId }}\n            />\n          </div>\n          <div className=\"d-flex flex-column\" style={{ width: \"30%\" }}>\n            <div>\n              Rank:\n              <span\n                style={{\n                  backgroundColor: \"black\",\n                  borderRadius: \"5px\",\n                  padding: \"5px\",\n                  color: \"white\",\n                }}\n              >\n                {index + 1}\n              </span>\n            </div>\n            <div>\n              Widgets:{\" \"}\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                }}\n              >\n                {rank.count}\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    })}\n    <h2>City Node Accounts</h2>\n    <Widget\n      src=\"near/widget/AccountProfileCard\"\n      props={{ accountId: \"nycdao.near\" }}\n    />\n    <Widget\n      src=\"near/widget/AccountProfileCard\"\n      props={{ accountId: \"sfdao.near\" }}\n    />\n    <br />\n    // ADD COMPONENT MAPPING\n    <Flex>\n      <Text\n        size=\"14px\"\n        weight=\"600\"\n        style={{\n          textTransform: \"uppercase\",\n          letterSpacing: \"0.17em\",\n          textAlign: \"center\",\n        }}\n      >\n        Made Possible by\n      </Text>\n      <Widget src=\"hack.near/widget/banyan.logo\" />\n    </Flex>\n  </div>\n);\n// need to add profile tracker\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/banyanq2.near/widget/dashboard", "__row_index": 2}