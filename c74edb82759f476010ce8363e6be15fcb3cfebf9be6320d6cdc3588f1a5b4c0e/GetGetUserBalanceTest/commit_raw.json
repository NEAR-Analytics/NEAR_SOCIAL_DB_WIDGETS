{"tx_hash": "6pEUDg67rm4M3nr66KnDCv3YcUjXA5g2CMgoNSyArPEw", "action_id_social": "2R1fHCKmroDwv7P4cqG8XqQXcFdty3ixk2jZpPttXvCJ-0-widget", "block_id": 95114390, "block_timestamp": "2023-06-27T01:11:15.581Z", "signer_id": "c74edb82759f476010ce8363e6be15fcb3cfebf9be6320d6cdc3588f1a5b4c0e", "widget_name": "GetGetUserBalanceTest", "source_code": "// const props = {\n//   userAddress: Ethers.send(\"eth_requestAccounts\", [])[0],\n//   poolAddress: \"0x195def5dabc4a73c4a6a410554f4e53f3e55f1a9\",\n//   onError: (e) => console.log(\"error:\", e),\n//   onSuccess: (balance) => console.log(\"balance:\", balance),\n//   requestConnect: () => console.log(\"requestConnect:\", \"requestConnect\"),\n//   decimals: 18,\n//   getGetUserBalance: (getUserBalance) => {\n//     const balance = getUserBalance(props.poolAddress, props.userAddress);\n//     console.log(\"MY INNER BALANCE:\", balance);\n//   },\n// };\n////@ts-check\nlet missingProps = [];\n\nif (!props.userAddress) {\n  missingProps = missingProps.concat(\"userAddress\");\n  // return <Web3Connect connectLabel=\"Connect with Web3\" />;\n}\n\nif (!props.poolAddress) missingProps = missingProps.concat(\"poolAddress\");\n\nif (!props.onError) missingProps = missingProps.concat(\"onError\");\n\nif (!props.onSuccess) missingProps = missingProps.concat(\"onSuccess\");\n\nif (!props.requestConnect) missingProps = missingProps.concat(\"requestConnect\");\n\nif (!props.decimals) missingProps = missingProps.concat(\"decimals\");\nif (!props.getGetUserBalance)\n  missingProps = missingProps.concat(\"getGetUserBalance\");\nState.init({ missingProps });\n// State.update({ missingProps });\n\nif (state.missingProps.length > 0) {\n  return (\n    <div>\n      <h1>GetBalanceComponent missing props:</h1>\n      <pre>{JSON.stringify(state.missingProps, null, 2)}</pre>\n    </div>\n  );\n}\n\nconst erc20ABI =\n  // @ts-ignore\n  fetch(\"https://raw.githubusercontent.com/dredshep/dev/main/abi.json\").body;\n\n/**\n * @param {string} poolAddress\n * @param {string} userAddress\n */\nfunction getUserBalance(poolAddress, userAddress) {\n  if (!Ethers.provider()?.getSigner?.()) {\n    props.requestConnect();\n    return;\n  }\n  try {\n    const erc20 = new ethers.Contract(\n      poolAddress, // address\n      erc20ABI, // erc20 abi\n      Ethers.provider().getSigner()\n    );\n    const balance = erc20\n      .balanceOf(userAddress)\n      .then((balance) => {\n        const processedBalance = ethers.utils.formatUnits(\n          balance,\n          props.decimals\n        );\n        props.onSuccess(processedBalance);\n        return processedBalance;\n      })\n      .catch((e) => {\n        props.onError(e);\n      });\n    return balance;\n  } catch (e) {\n    props.onError(`Error in getUserBalance(). params:\n- poolAddress: ${poolAddress}\n- userAddress: ${userAddress}\n- error: ${e}`);\n  }\n}\n\nprops.getGetUserBalance(getUserBalance);\n\nreturn <>a</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/c74edb82759f476010ce8363e6be15fcb3cfebf9be6320d6cdc3588f1a5b4c0e/widget/GetGetUserBalanceTest", "__row_index": 0}