{"tx_hash": "7kRnkLD4Uwb5Adp2AErsFbpUvNXW98Sh7tCHBv5YgBXL", "action_id_social": "FgXS1XV1QMGvbN9qVDdGXZHkavvoydJd7sSoZCChisA2-0-widget", "block_id": 93467776, "block_timestamp": "2023-06-04T22:44:31.741Z", "signer_id": "jgodwill.near", "widget_name": "genadropExplore", "source_code": "const ownerId = \"minorityprogrammers.near\"; // attribution\r\ninitState({\r\n  inputCollectionSlug: \"genadrop-contract.nftgen.near\",\r\n  collectionSlug: \"genadrop-contract.nftgen.near\",\r\n  collectionData: {},\r\n  searchTerm: \"\",\r\n  nftData: [],\r\n  filteredNFTData: [],\r\n});\r\nconst fetchData = () => {\r\n  State.update({ nftData: [] });\r\n\r\n  let response = fetch(\"https://byz-multi-chain-01.hasura.app/v1/graphql\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"x-api-key\": \"ChRbeKE.c94220449dbb45973a67a614b1f590be\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Hasura-Client-Name\": \"near-social\",\r\n    },\r\n    body: JSON.stringify({\r\n      query: `\r\n        query MyQuery {\r\n      near {\r\n        collection(where: {slug: {_eq: \"${state.collectionSlug}\"}}) {\r\n          slug\r\n      cover_image\r\n      description\r\n      floor\r\n      usd_volume\r\n      volume\r\n      title\r\n      collection_size\r\n      nft_metas {\r\n        image\r\n        name\r\n        rarity\r\n        ranking\r\n        token_id\r\n        nft_state {\r\n          owner\r\n          staked\r\n          staked_owner\r\n        }\r\n        nft_state_lists(\r\n          where: {listed: {_eq: true}}\r\n          limit: 1\r\n          order_by: {list_contract: {name: desc}}\r\n        ) {\r\n          list_price\r\n          listed\r\n          list_contract {\r\n            name\r\n          }\r\n        }\r\n      }\r\n        }\r\n      }\r\n    }`,\r\n    }),\r\n  });\r\n\r\n  if (response) {\r\n    const data = response;\r\n    const collectionData = data.body.data.near.collection[0];\r\n    let nftData = collectionData.nft_metas;\r\n\r\n    // Sort NFTs based on list price (lowest to highest) and list status\r\n    nftData.sort((a, b) => {\r\n      const aListed = a.nft_state_lists && a.nft_state_lists[0];\r\n      const bListed = b.nft_state_lists && b.nft_state_lists[0];\r\n\r\n      if (aListed && bListed) {\r\n        return aListed.list_price - bListed.list_price;\r\n      } else if (aListed) {\r\n        return -1;\r\n      } else if (bListed) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n\r\n    console.log(collectionData, nftData);\r\n    State.update({ collectionData, nftData });\r\n  }\r\n};\r\nfetchData();\r\n\r\nconst updateInputCollectionSlug = (e) => {\r\n  State.update({ inputCollectionSlug: e.target.value });\r\n};\r\n\r\nconst handleFetchButtonClick = () => {\r\n  State.update({ collectionSlug: state.inputCollectionSlug });\r\n  fetchData();\r\n};\r\n\r\nconst updateCollectionSlug = (e) => {\r\n  State.update({ collectionSlug: e.target.value });\r\n};\r\n\r\nconst getRarityColor = (rarity) => {\r\n  if (rarity < 0.1) {\r\n    return \"#ee0000\";\r\n  } else if (rarity < 0.25) {\r\n    return \"#ff9900\";\r\n  } else if (rarity < 0.5) {\r\n    return \"#ffc300\";\r\n  } else {\r\n    return \"#61c700\";\r\n  }\r\n};\r\n\r\nconst seachInputHandler = (e) => {\r\n  const value = e.target.value.toLowerCase();\r\n  console.log(value);\r\n  const searched = state.nftData.filter((nft) =>\r\n    nft.name.toLowerCase().includes(value)\r\n  );\r\n  State.update({\r\n    searchTerm: value,\r\n    filteredNFTData: searched,\r\n  });\r\n};\r\n\r\nconst Stats = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-around;\r\n      width: \"100%\";\r\n      max-width: 800px;\r\n      gap: 20px;\r\n  `;\r\n\r\nconst Main = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px;\r\n  `;\r\n\r\nconst PageTitle = styled.h1`\r\n  text-align:center;\r\n  font-size: 4vw; \r\n  font-weight: bold; \r\n  margin-bottom: 20px; \r\n  color: #0f1d40;\r\n  `;\r\n\r\nconst NFTCard = styled.div`\r\n   display: flex;\r\n   flex-flow: column nowrap;\r\n   -ms-flex-flow:column nowrap;\r\n   align-items:center;\r\n  //  background-color: \"#f0f0f0\";\r\n   background: #fff;\r\n  // background: linear-gradient(180deg,#e4f1fb 0%, rgba(0,255,0,0) 180%);\r\n  // background: -webkit-linear-gradient(180deg,#e4f1fb 0%, rgba(0,255,0,0) 180%);\r\n  // background: -moz-linear-gradient(270deg,#e4f1fb 0%, rgba(0,255,0,0) 180%);\r\n   border-radius: 10px;\r\n   border: 1.41429px solid rgba(28,27,28,.1);\r\n   box-shadow: 5.65714px 5.65714px 11.3143px rgba(28,27,28,.04);\r\n   padding: 8px 0px;\r\n   background-color:#fff;\r\n   max-width: 350px;\r\n   margin: 0 auto;\r\n   &:hover &>div>img{\r\n     transform:scale(1.05);\r\n   }\r\n  `;\r\n\r\nconst NFTCardText = styled.div`\r\n  width: 100%;\r\n  // padding: 0px 1rem;\r\n  `;\r\n\r\nconst NFTCards = styled.div`\r\n  display: grid;\r\n  gap: 2rem;\r\n  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));\r\n  justify-content: center;\r\n  background: #e4f1fb;\r\n  background: linear-gradient(180deg,#e4f1fb 0%, rgba(0,255,0,0) 3%);\r\n  background: -webkit-linear-gradient(180deg,#e4f1fb 0%, rgba(0,255,0,0) 3%);\r\n  background: -moz-linear-gradient(270deg,#e4f1fb 0%, rgba(0,255,0,0) 3%);\r\n  padding: 20px 3rem 1rem 3rem;\r\n  width:100%;\r\n`;\r\n\r\nconst ImageCard = styled.div`\r\n  height:250px;\r\n  width: 96%;\r\n  border-radius: 0.5rem;\r\n  overflow:hidden;\r\n  margin-bottom: .4rem;\r\n  &>img{\r\n  object-fit: cover;\r\n  transition: all 0.3s ease-in-out;\r\n  }\r\n  &>img:hover{\r\n    transform:scale(1.05);\r\n  }\r\n`;\r\nconst InputContainer = styled.div`\r\n    width:80%;\r\n    max-width: 700px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    margin: 1rem auto 1rem auto;\r\n    &>input{\r\n        outline: none;\r\n    }\r\n    &>input:hover, &>input:focus{\r\n      border: 1px solid #0d99ff;\r\n      box-shadow: none;\r\n    }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(https://www.genadrop.com/static/media/banner-marketplace.e5c03bb6.svg);\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-positiion: center;\r\n  width: 100%;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst RankCard = styled.span`\r\n  background-color: rgba(28,27,28,.06);\r\n  border-radius: .5rem;\r\n  color: #000;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 8px;\r\n`;\r\n\r\nconst PriceArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #0d99ff;\r\n  &>*{\r\n  margin: 0px;\r\n  padding: 0px;\r\n  }\r\n  &>h6{\r\n    font-weight: 700;\r\n    font-size: 1.2rem;\r\n  }\r\n  &>span{\r\n  font-size: 1.2rem;\r\n  margin: 0px;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <div className=\"container-fluid\">\r\n    <Hero className=\"w-100\">\r\n      <PageTitle>\r\n        Find, Buy and Sell NEAR NFTs on <br />\r\n        \ud83d\udca7GenaDrop\r\n      </PageTitle>\r\n      <InputContainer>\r\n        <input\r\n          type=\"search\"\r\n          value={state.searchTerm}\r\n          placeholder=\"Search NFTs\"\r\n          onChange={seachInputHandler}\r\n        />\r\n      </InputContainer>\r\n    </Hero>\r\n    {state.nftData.length > 0 ? (\r\n      <NFTCards>\r\n        {state.searchTerm === \"\" ? (\r\n          state.nftData.map((nft) => (\r\n            <a\r\n              // href={`https://www.tradeport.xyz/near/collection/${state.collectionData.slug}/${nft.token_id}`}\r\n              target=\"_blank\"\r\n              href={`https://social.near.page/u/${nft.nft_state.owner}`}\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n            >\r\n              <NFTCard classNmae=\"card\">\r\n                <ImageCard>\r\n                  <img\r\n                    src={nft.image}\r\n                    alt={nft.name}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"rounded-3\"\r\n                  />\r\n                </ImageCard>\r\n                <NFTCardText>\r\n                  <hr />\r\n                  <div className=\"d-flex my-4 justify-content-between w-100 px-2\">\r\n                    <RankCard>Rank: {Math.round(nft.ranking)}</RankCard>\r\n                    <div>{nft.nft_state_lists[0].list_contract.name}</div>\r\n                  </div>\r\n                  <div className=\"px-2\">\r\n                    <h3\r\n                      style={{\r\n                        fontSize: \"18px\",\r\n                        margin: \"0 0 10px\",\r\n                        wordBreak: \"break-all\",\r\n                      }}\r\n                    >\r\n                      {nft.name}\r\n                    </h3>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      marginBottom: \"5px\",\r\n                    }}\r\n                    className=\"px-2\"\r\n                  >\r\n                    <div>\r\n                      <div style={{ color: \"#a4a9b6\" }}>Token ID</div>\r\n                      <p\r\n                        style={{\r\n                          fontSize: \"14px\",\r\n                          marginBottom: \"5px\",\r\n                          color: \"#0d99ff\",\r\n                        }}\r\n                      >\r\n                        {nft.token_id}\r\n                      </p>\r\n                    </div>\r\n                    {nft.nft_state && (\r\n                      <div>\r\n                        <div style={{ color: \"#a4a9b6\" }}>Owner</div>\r\n                        <p style={{ fontSize: \"14px\" }}>\r\n                          {nft.nft_state.owner.length > 12\r\n                            ? nft.nft_state.owner.slice(0, 12) + \"...\"\r\n                            : nft.nft_state.owner}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <p style={{ fontSize: \"14px\" }} className=\"px-2\">\r\n                    Collection: {nft.collection.slug}\r\n                  </p>\r\n                  <hr />\r\n                  <div className=\"px-2\">\r\n                    <div style={{ color: \"#a4a9b6\", fontSize: \"1.1rem\" }}>\r\n                      Price\r\n                    </div>\r\n                    {nft.nft_state_lists && nft.nft_state_lists[0] && (\r\n                      <PriceArea>\r\n                        <h6>\r\n                          {`${(\r\n                            nft.nft_state_lists[0].list_price /\r\n                            1000000000000000000000000\r\n                          ).toFixed(2)}N`}\r\n                        </h6>\r\n                        <span>{` ($${(\r\n                          (nft.nft_state_lists[0].list_price /\r\n                            1000000000000000000000000) *\r\n                          1.56\r\n                        ).toFixed(2)})`}</span>\r\n                      </PriceArea>\r\n                    )}\r\n                  </div>\r\n                </NFTCardText>\r\n              </NFTCard>\r\n            </a>\r\n          ))\r\n        ) : state.filteredNFTData.length > 0 ? (\r\n          state.filteredNFTData.map((nft) => (\r\n            <a\r\n              // href={`https://www.tradeport.xyz/near/collection/${state.collectionData.slug}/${nft.token_id}`}\r\n              target=\"_blank\"\r\n              href={`https://social.near.page/u/${nft.nft_state.owner}`}\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n            >\r\n              <NFTCard classNmae=\"card\">\r\n                <ImageCard>\r\n                  <img\r\n                    src={nft.image}\r\n                    alt={nft.name}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"rounded-3\"\r\n                  />\r\n                </ImageCard>\r\n                <NFTCardText>\r\n                  <hr />\r\n                  <div className=\"d-flex my-4 justify-content-between w-100 px-2\">\r\n                    <RankCard>Rank: {Math.round(nft.ranking)}</RankCard>\r\n                    <div>{nft.nft_state_lists[0].list_contract.name}</div>\r\n                  </div>\r\n                  <div className=\"px-2\">\r\n                    <h3\r\n                      style={{\r\n                        fontSize: \"18px\",\r\n                        margin: \"0 0 10px\",\r\n                        wordBreak: \"break-all\",\r\n                      }}\r\n                    >\r\n                      {nft.name}\r\n                    </h3>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      marginBottom: \"5px\",\r\n                    }}\r\n                    className=\"px-2\"\r\n                  >\r\n                    <div>\r\n                      <div style={{ color: \"#a4a9b6\" }}>Token ID</div>\r\n                      <p\r\n                        style={{\r\n                          fontSize: \"14px\",\r\n                          marginBottom: \"5px\",\r\n                          color: \"#0d99ff\",\r\n                        }}\r\n                      >\r\n                        {nft.token_id}\r\n                      </p>\r\n                    </div>\r\n                    {nft.nft_state && (\r\n                      <div>\r\n                        <div style={{ color: \"#a4a9b6\" }}>Owner</div>\r\n                        <p style={{ fontSize: \"14px\" }}>\r\n                          {nft.nft_state.owner.length > 12\r\n                            ? nft.nft_state.owner.slice(0, 12) + \"...\"\r\n                            : nft.nft_state.owner}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <p style={{ fontSize: \"14px\" }} className=\"px-2\">\r\n                    Collection: {nft.collection.slug}\r\n                  </p>\r\n                  <hr />\r\n                  <div className=\"px-2\">\r\n                    <div style={{ color: \"#a4a9b6\", fontSize: \"1.1rem\" }}>\r\n                      Price\r\n                    </div>\r\n                    {nft.nft_state_lists && nft.nft_state_lists[0] && (\r\n                      <PriceArea>\r\n                        <h6>\r\n                          {`${(\r\n                            nft.nft_state_lists[0].list_price /\r\n                            1000000000000000000000000\r\n                          ).toFixed(2)}N`}\r\n                        </h6>\r\n                        <span>{` ($${(\r\n                          (nft.nft_state_lists[0].list_price /\r\n                            1000000000000000000000000) *\r\n                          1.56\r\n                        ).toFixed(2)})`}</span>\r\n                      </PriceArea>\r\n                    )}\r\n                  </div>\r\n                </NFTCardText>\r\n              </NFTCard>\r\n            </a>\r\n          ))\r\n        ) : (\r\n          <div>No results found for \"{state.searchTerm}\".</div>\r\n        )}\r\n      </NFTCards>\r\n    ) : (\r\n      <div>No NFTs available.</div>\r\n    )}\r\n    <h4 className=\"text-center mt-5\">\r\n      \ud83d\udca7\r\n      <a href=\"https://genadrop.io\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        GenaDrop\r\n      </a>\r\n      <Widget\r\n        src=\"miraclx.near/widget/Attribution\"\r\n        props={{ authors: [ownerId], dep: true }}\r\n      />\r\n    </h4>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/genadropExplore", "__row_index": 7}