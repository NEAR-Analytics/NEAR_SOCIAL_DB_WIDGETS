{"tx_hash": "5d9ndmJFFUeLNVKKXRXdC6TV7u3dPK7PVZosi6JfxBt4", "action_id_social": "3qZ7Jgp3DNLzNVvfVyPUcFr9CJjxGWd2UB5QNsJBD3g2-0-widget", "block_id": 92512325, "block_timestamp": "2023-05-23T08:36:20.302Z", "signer_id": "jgodwill.near", "widget_name": "genadropExplore", "source_code": "initState({\n  inputCollectionSlug: \"genadrop-contract.nftgen.near\",\n  collectionSlug: \"genadrop-contract.nftgen.near\",\n  collectionData: {},\n  searchTerm: \"\",\n  nftData: [],\n  filteredNFTData: [],\n});\nconst fetchData = () => {\n  State.update({ nftData: [] });\n\n  let response = fetch(\"https://byz-multi-chain-01.hasura.app/v1/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"x-api-key\": \"ChRbeKE.c94220449dbb45973a67a614b1f590be\",\n      \"Content-Type\": \"application/json\",\n      \"Hasura-Client-Name\": \"near-social\",\n    },\n    body: JSON.stringify({\n      query: `\n        query MyQuery {\n      near {\n        collection(where: {slug: {_eq: \"${state.collectionSlug}\"}}) {\n          slug\n      cover_image\n      description\n      floor\n      usd_volume\n      volume\n      title\n      collection_size\n      nft_metas {\n        image\n        name\n        rarity\n        ranking\n        token_id\n        nft_state {\n          owner\n          staked\n          staked_owner\n        }\n        nft_state_lists(\n          where: {listed: {_eq: true}}\n          limit: 1\n          order_by: {list_contract: {name: desc}}\n        ) {\n          list_price\n          listed\n          list_contract {\n            name\n          }\n        }\n      }\n        }\n      }\n    }`,\n    }),\n  });\n\n  if (response) {\n    const data = response;\n    const collectionData = data.body.data.near.collection[0];\n    let nftData = collectionData.nft_metas;\n\n    // Sort NFTs based on list price (lowest to highest) and list status\n    nftData.sort((a, b) => {\n      const aListed = a.nft_state_lists && a.nft_state_lists[0];\n      const bListed = b.nft_state_lists && b.nft_state_lists[0];\n\n      if (aListed && bListed) {\n        return aListed.list_price - bListed.list_price;\n      } else if (aListed) {\n        return -1;\n      } else if (bListed) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    console.log(collectionData, nftData);\n    State.update({ collectionData, nftData });\n  }\n};\nfetchData();\n\nconst updateInputCollectionSlug = (e) => {\n  State.update({ inputCollectionSlug: e.target.value });\n};\n\nconst handleFetchButtonClick = () => {\n  State.update({ collectionSlug: state.inputCollectionSlug });\n  fetchData();\n};\n\nconst updateCollectionSlug = (e) => {\n  State.update({ collectionSlug: e.target.value });\n};\n\nconst getRarityColor = (rarity) => {\n  if (rarity < 0.1) {\n    return \"#ee0000\";\n  } else if (rarity < 0.25) {\n    return \"#ff9900\";\n  } else if (rarity < 0.5) {\n    return \"#ffc300\";\n  } else {\n    return \"#61c700\";\n  }\n};\n\nconst seachInputHandler = (e) => {\n  const value = e.target.value.toLowerCase();\n  console.log(value);\n  const searched = state.nftData.filter((nft) =>\n    nft.name.toLowerCase().includes(value)\n  );\n  State.update({\n    searchTerm: value,\n    filteredNFTData: searched,\n  });\n};\n\nconst Stats = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      width: \"100%\";\n      max-width: 800px;\n      gap: 20px;\n  `;\n\nconst Main = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n    margin-bottom: 20px;\n  `;\n\nconst PageTitle = styled.h1`\n  text-align:center;\n  font-size: 4rem; \n  font-weight: bold; \n  margin-bottom: 20px; \n  color: #0f1d40;\n  `;\n\nconst NFTCard = styled.div`\n   display: flex;\n   flex-flow: column nowrap;\n   -ms-flex-flow:column nowrap;\n   align-items:center;\n   background-color: \"#f0f0f0\";\n   border-radius: 10px;\n   border: 1.41429px solid rgba(28,27,28,.1);\n   box-shadow: 5.65714px 5.65714px 11.3143px rgba(28,27,28,.04);\n   padding: 8px;\n   text-align: center;\n   background-color:#fff;\n   max-width: 350px;\n   margin: 0 auto;\n   &:hover &>div>img{\n     transform:scale(1.05);\n   }\n  `;\nconst NFTCards = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));\n  justify-content: center;\n  background: #e4f1fb;\n  background: linear-gradient(180deg,#e4f1fb 0%, rgba(0,255,0,0) 3%);\n  background: -webkit-linear-gradient(180deg,#e4f1fb 0%, rgba(0,255,0,0) 3%);\n  background: -moz-linear-gradient(270deg,#e4f1fb 0%, rgba(0,255,0,0) 3%);\n  padding: 20px 1rem 1rem 1rem;\n  width:100%;\n`;\n\nconst ImageCard = styled.div`\n  height:250px;\n  width: 100%;\n  border-radius: 0.5rem;\n  overflow:hidden;\n  margin-bottom: 1rem;\n  &>img{\n  object-fit: cover;\n  transition: all 0.3s ease-in-out;\n  }\n  &>img:hover{\n    transform:scale(1.05);\n  }\n`;\nconst InputContainer = styled.div`\n    width:80%;\n    max-width: 500px;\n    display: flex;\n    align-items: center;\n    justify-content:center;\n    margin: 1rem auto 1rem auto;\n    &>input{\n        outline: none;\n    }\n    &>input:hover, &>input:focus{\n      border: 1px solid #0d99ff;\n      box-shadow: none;\n    }\n`;\n\nconst Hero = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n  background-image: url(https://www.genadrop.com/static/media/banner-marketplace.e5c03bb6.svg);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-positiion: center;\n  width: 100%;\n  padding: 2rem;\n`;\n\nreturn (\n  <div className=\"container-fluid\">\n    <Hero className=\"container-fluid\">\n      <PageTitle>\ud83d\udca7 GenaDrop NEAR NFTs</PageTitle>\n      <InputContainer>\n        <input\n          type=\"search\"\n          value={state.searchTerm}\n          placeholder=\"Search NFTs\"\n          onChange={seachInputHandler}\n        />\n      </InputContainer>\n    </Hero>\n    {/*{state.collectionData && (\n      <Main>\n        <Stats>\n          <div>\n            <p>USD Volume:</p>\n            <p>{Math.round(state.collectionData.usd_volume)}</p>\n          </div>\n          <div>\n            <p>Volume:</p>\n            <p>\n              {Math.round(\n                state.collectionData.volume / 1000000000000000000000000\n              )}{\" \"}\n              N\n            </p>\n          </div>\n          <div>\n            <p>Collection Size:</p>\n            <p>{state.collectionData.collection_size}</p>\n          </div>\n        </Stats>\n      </Main>\n    )}*/}\n    {state.nftData.length > 0 && (\n      <NFTCards>\n        {state.searchTerm === \"\"\n          ? state.nftData.map((nft) => (\n              <a\n                href={`https://www.tradeport.xyz/near/collection/${state.collectionData.slug}/${nft.token_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <NFTCard classNmae=\"card\">\n                  <ImageCard>\n                    <img\n                      src={nft.image}\n                      alt={nft.name}\n                      width=\"100%\"\n                      height=\"100%\"\n                      className=\"rounded-3\"\n                    />\n                  </ImageCard>\n                  <h3\n                    style={{\n                      fontSize: \"18px\",\n                      margin: \"0 0 10px\",\n                      wordBreak: \"break-all\",\n                    }}\n                  >\n                    {nft.name}\n                  </h3>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"5px\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        backgroundColor: \"#3f51b5\",\n                        borderRadius: \"20px\",\n                        color: \"#fff\",\n                        display: \"inline-block\",\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        padding: \"3px 8px\",\n                      }}\n                    >\n                      Rank: {Math.round(nft.ranking)}\n                    </span>\n                  </div>\n                  <p style={{ fontSize: \"14px\", marginBottom: \"5px\" }}>\n                    Token ID: {nft.token_id}\n                  </p>\n                  <p style={{ fontSize: \"14px\" }}>\n                    Collection: {nft.collection.slug}\n                  </p>\n                  {nft.nft_state_lists && nft.nft_state_lists[0] && (\n                    <p style={{ fontSize: \"14px\" }}>\n                      Price:{\" \"}\n                      {nft.nft_state_lists[0].list_price /\n                        1000000000000000000000000}\n                      {\"N \"}\n                      {nft.nft_state_lists[0].list_contract.name}\n                    </p>\n                  )}\n                  {nft.nft_state && (\n                    <p style={{ fontSize: \"14px\" }}>\n                      Owner:\n                      {nft.nft_state.owner.length > 20\n                        ? nft.nft_state.owner.slice(0, 20) + \"...\"\n                        : nft.nft_state.owner}\n                    </p>\n                  )}\n                </NFTCard>\n              </a>\n            ))\n          : state.filteredNFTData.map((nft) => (\n              <a\n                href={`https://www.tradeport.xyz/near/collection/${state.collectionData.slug}/${nft.token_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <NFTCard classNmae=\"card\">\n                  <ImageCard>\n                    <img\n                      src={nft.image}\n                      alt={nft.name}\n                      width=\"100%\"\n                      height=\"100%\"\n                      className=\"rounded-3\"\n                    />\n                  </ImageCard>\n                  <h3\n                    style={{\n                      fontSize: \"18px\",\n                      margin: \"0 0 10px\",\n                      wordBreak: \"break-all\",\n                    }}\n                  >\n                    {nft.name}\n                  </h3>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      marginBottom: \"5px\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        backgroundColor: \"#3f51b5\",\n                        borderRadius: \"20px\",\n                        color: \"#fff\",\n                        display: \"inline-block\",\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        padding: \"3px 8px\",\n                      }}\n                    >\n                      Rank: {Math.round(nft.ranking)}\n                    </span>\n                  </div>\n                  <p style={{ fontSize: \"14px\", marginBottom: \"5px\" }}>\n                    Token ID: {nft.token_id}\n                  </p>\n                  <p style={{ fontSize: \"14px\" }}>\n                    Collection: {nft.collection.slug}\n                  </p>\n                  {nft.nft_state_lists && nft.nft_state_lists[0] && (\n                    <p style={{ fontSize: \"14px\" }}>\n                      Price:{\" \"}\n                      {nft.nft_state_lists[0].list_price /\n                        1000000000000000000000000}\n                      {\"N \"}\n                      {nft.nft_state_lists[0].list_contract.name}\n                    </p>\n                  )}\n                  {nft.nft_state && (\n                    <p style={{ fontSize: \"14px\" }}>\n                      Owner:\n                      {nft.nft_state.owner.length > 20\n                        ? nft.nft_state.owner.slice(0, 20) + \"...\"\n                        : nft.nft_state.owner}\n                    </p>\n                  )}\n                </NFTCard>\n              </a>\n            ))}\n      </NFTCards>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/genadropExplore", "__row_index": 11}