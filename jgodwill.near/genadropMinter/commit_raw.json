{"tx_hash": "FZhbQvFi5ZN5q3FFDrCUbHYow8RxnsdXJii3pMLVR8Kh", "action_id_social": "68bkBTUaDTUgKGtDiHmqcqbSKTo251GvUmdQzjYaE7zu-0-widget", "block_id": 89053988, "block_timestamp": "2023-04-07 20:25:49.501", "signer_id": "jgodwill.near", "widget_name": "genadropMinter", "source_code": "let accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\n\nconst profile = socialGetr(`${accountId}/profile`);\n\nif (profile === null) {\n  IpfsImageUpload();\n  return \"Loading\";\n}\n\nconst handleMint = () => {\n  if (!(state.title && state.description && state.image.cid)) {\n    return;\n  }\n  const metadata = {\n    name: state.title,\n    description: state.description,\n    properties: [],\n    image: `ipfs://${state.image.cid}`,\n  };\n  console.log(\"come\", metadata);\n  asyncFetch(\"https://ipfs.near.social/add\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n    },\n    body: metadata,\n  }).then((res) => {\n    console.log(\"GO ON SOUN\", res);\n    const cid = res.body.cid;\n    const gas = 200000000000000;\n    const deposit = 10000000000000000000000;\n    Near.call([\n      {\n        contractName: \"genadrop-contract.nftgen.near\",\n        methodName: \"nft_mint\",\n        args: {\n          token_id: `${Date.now()}`,\n          metadata: {\n            title: state.title,\n            description: state.description,\n            media: `https://ipfs.io/ipfs/${state.image.cid}`,\n            reference: `ipfs://${cid}`,\n          },\n          receiver_id: accountId,\n        },\n        gas: gas,\n        deposit: deposit,\n      },\n    ]);\n  });\n};\n\ninitState({\n  title: \"\",\n  description: \"\",\n});\n\nconst onChangeTitle = (title) => {\n  State.update({\n    title,\n  });\n};\n\nconst onChangeDesc = (description) => {\n  State.update({\n    description,\n  });\n};\n\nconst ImageUploadCard = styled.div`\ndisplay:flex;\nflex-flow: column nowrap;\nalign-items: center;\n  width:80%;\n  border: 2px dashed #0d99ff;\n  border-radius: 1rem;\n  box-shadow: 4px 4px 45px 4px rgba(0,0,0,.2);\n  margin:0 auto;\n  padding:1rem;\n`;\nconst Main = styled.div`\n  font-family: \"SF Pro Display\",sans-serif;\n`;\n\nreturn (\n  <Main className=\"vh-100\">\n    {state.image.cid ? (\n      <div>\n        <div>Mint NFT on genadrop</div>\n        <div>\n          Title:\n          <input type=\"text\" onChange={(e) => onChangeTitle(e.target.value)} />\n        </div>\n        <div>\n          Description:\n          <input type=\"text\" onChange={(e) => onChangeDesc(e.target.value)} />\n        </div>\n        <div>Preview</div>\n        <div>\n          <img\n            src={`https://ipfs.io/ipfs/` + state.image.cid}\n            alt=\"uploaded image\"\n            width=\"400\"\n            height=\"300\"\n          />\n        </div>\n        <IpfsImageUpload\n          image={state.image}\n          className=\"btn btn-outline-secondary border-0 rounded-3\"\n        />\n        <div>\n          <button onClick={handleMint}>Mint</button>\n        </div>\n      </div>\n    ) : (\n      <div>\n        <h3>\n          Upload a image to create NFTs on any of our supported blockchains\n          super fast!\n        </h3>\n        <ImageUploadCard className=\"flex-grow-1\">\n          <IpfsImageUpload\n            image={state.image}\n            className=\"btn btn-outline-secondary border-0 rounded-3\"\n          />\n          <div>\n            <div>Drag and Drop your image file here</div>\n            <p>\n              We support .jpg, .jpeg, .png, .webp, .gif files and deploy to Near\n            </p>\n            <p>Max file size: 20mb</p>\n          </div>\n        </ImageUploadCard>\n      </div>\n    )}\n  </Main>\n);\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/genadropMinter", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.genadrop": NaN, "metadata.tags.ipfs": NaN, "metadata.tags.mint": NaN, "metadata.tags.nft": NaN, "metadata.tags.mintbase": NaN, "metadata.tags.nft-minter": NaN, "metadata.tags.onboard": NaN, "metadata.tags.onboard-dao": NaN, "metadata.tags.onboarddao": NaN, "metadata.tags.dapp": NaN, "branch.draft.": NaN, "branch.draft": NaN}