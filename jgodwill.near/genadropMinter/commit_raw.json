{"tx_hash": "7pLwLrBMDPemnmGVhF258KjMR9zBfvmsNTehb7Rs1MLV", "action_id_social": "5LRm5VFTBWmPTRYpDqj12o4d3xWp9YSPh2TipC39k6de-0-widget", "block_id": 91221630, "block_timestamp": "2023-05-06T10:20:17.202Z", "signer_id": "jgodwill.near", "widget_name": "genadropMinter", "source_code": "let accountId = context.accountId;\r\n\r\n// if (!accountId) {\r\n//   return \"Please sign in with NEAR wallet\";\r\n// }\r\n\r\nconst profile = socialGetr(`${accountId}/profile`);\r\n\r\nif (profile === null) {\r\n  IpfsImageUpload();\r\n  return \"Loading\";\r\n}\r\n\r\nconst handleMint = () => {\r\n  if (!state.image.cid) {\r\n    return;\r\n  }\r\n  if (!accountId) {\r\n    console.log(\"Please login\");\r\n    State.update({\r\n      showAlert: true,\r\n      toastMessage: \"Please log in before continuing\",\r\n    });\r\n    setTimeout(() => {\r\n      State.update({\r\n        showAlert: false,\r\n      });\r\n    }, 3000);\r\n  } else if (!state.title) {\r\n    console.log(\"Please Enter title\");\r\n    State.update({\r\n      showAlert: true,\r\n      toastMessage: \"Please enter a title before continuing\",\r\n    });\r\n    setTimeout(() => {\r\n      State.update({\r\n        showAlert: false,\r\n      });\r\n    }, 3000);\r\n  } else if (!state.description) {\r\n    console.log(\"Please Enter desc\");\r\n    State.update({\r\n      showAlert: true,\r\n      toastMessage: \"Please enter a description before continuing\",\r\n    });\r\n    setTimeout(() => {\r\n      State.update({\r\n        showAlert: false,\r\n      });\r\n    }, 3000);\r\n  } else {\r\n    const metadata = {\r\n      name: state.title,\r\n      description: state.description,\r\n      properties: [],\r\n      image: `ipfs://${state.image.cid}`,\r\n    };\r\n    console.log(\"come\", metadata);\r\n    asyncFetch(\"https://ipfs.near.social/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n      body: metadata,\r\n    }).then((res) => {\r\n      console.log(\"GO ON SOUN\", res);\r\n      const cid = res.body.cid;\r\n      const gas = 200000000000000;\r\n      const deposit = 10000000000000000000000;\r\n      Near.call([\r\n        {\r\n          contractName: \"genadrop-contract.nftgen.near\",\r\n          methodName: \"nft_mint\",\r\n          args: {\r\n            token_id: `${Date.now()}`,\r\n            metadata: {\r\n              title: state.title,\r\n              description: state.description,\r\n              media: `https://ipfs.io/ipfs/${state.image.cid}`,\r\n              reference: `ipfs://${cid}`,\r\n            },\r\n            receiver_id: accountId,\r\n          },\r\n          gas: gas,\r\n          deposit: deposit,\r\n        },\r\n      ]);\r\n    });\r\n  }\r\n};\r\n\r\ninitState({\r\n  title: \"\",\r\n  description: \"\",\r\n  showAlert: false,\r\n  toastMessage: \"\",\r\n});\r\n\r\nconst onChangeTitle = (title) => {\r\n  State.update({\r\n    title,\r\n  });\r\n};\r\n\r\nconst onChangeDesc = (description) => {\r\n  State.update({\r\n    description,\r\n  });\r\n};\r\n\r\nconst ImageUploadCard = styled.div`\r\ndisplay:flex;\r\nflex-flow: column nowrap;\r\nalign-items: center;\r\n  width:80%;\r\n  border: 2px dashed #0d99ff;\r\n  border-radius: 1rem;\r\n  box-shadow: 4px 4px 20px 6px rgba(0,0,0,.2);\r\n  margin:30px auto;\r\n  padding:1.5rem;\r\n  text-align: center;\r\n`;\r\nconst Main = styled.div`\r\nposition:relative;\r\n  font-family: \"SF Pro Display\",sans-serif;\r\n`;\r\n\r\n// const handleDrop = (event) => {\r\n//   event.preventDefault();\r\n\r\n//   const file = event.dataTransfer.files[0];\r\n//   const reader = new FileReader();\r\n\r\n//   reader.onloadend = () => {\r\n//     this.setState({\r\n//       file: file,\r\n//       previewUrl: reader.result,\r\n//       showPreview: true,\r\n//     });\r\n//   };\r\n\r\n//   reader.readAsDataURL(file);\r\n// };\r\n\r\nconst Heading = styled.p`\r\n  margin: 10px auto 10px auto;\r\n  font-size: 1em;\r\n  color:#0f1d40;\r\n  width:60%;\r\n  text-align: center;\r\n  font-family: \"SF Pro Display\",sans-serif;\r\n`;\r\n\r\nconst Toast = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-conten: center;\r\n  bottom: 60px;\r\n  right: 20px;\r\n  background-color: red;\r\n  color: #fff;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  z-index: 100;\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n  line-height:1;\r\n`;\r\n\r\nconst Elipse = styled.div`\r\nbackground-color:#eff3f9;\r\nheight: 100px;\r\nwidth: 100px;\r\nborder-radius: 50%;\r\n`;\r\n\r\nconst Text = styled.p`\r\nfont-size: .9rem;\r\ncolor: #525c76;\r\nline-height:1.rem;\r\nmargin: 3px;\r\n`;\r\n\r\nconst Card = styled.div`\r\npadding: 1em;\r\nborder: 1px solid #e5e8eb;\r\ngap: 2em;\r\nmargin: 10px auto;\r\nborder-radius: .7em;\r\n`;\r\n\r\nconst ImageCard = styled.div`\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n  height:fit-content;\r\n  max-height:500px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  border-radius: 1rem;\r\n  &>img{\r\n  object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  padding:.5em;\r\n  width:100%;\r\n  border: 1px solid #e5e8eb;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  background: #f4f5f6;\r\n  color: #525c76;\r\n  :focus{\r\n    border:1px solid #0d99ff;\r\n  }\r\n  ::placeholder {\r\n    color: palevioletred;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  display: block;\r\n  padding:.5em;\r\n  width:100%;\r\n  border: 1px solid #e5e8eb;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  background: #f4f5f6;\r\n  color: #525c76;\r\n  :focus{\r\n    border:1px solid #0d99ff;\r\n  }\r\n`;\r\nreturn (\r\n  <Main className=\"container-fluid\">\r\n    {!accountId && <p>Please sign in with NEAR wallet</p>}\r\n    <Heading className=\"text-center fs-2 fw-bold\">Mint NFT on genadrop</Heading>\r\n    {state.image.cid ? (\r\n      <div>\r\n        <Card className=\"d-flex flex-column align-items-center\">\r\n          <ImageCard>\r\n            <img\r\n              src={`https://ipfs.io/ipfs/` + state.image.cid}\r\n              alt=\"uploaded image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              className=\"rounded-3\"\r\n            />\r\n          </ImageCard>\r\n          <div>\r\n            <IpfsImageUpload\r\n              image={state.image}\r\n              className=\"btn btn-outline-primary border-0 rounded-3\"\r\n            />\r\n          </div>\r\n        </Card>\r\n        <Card>\r\n          <h5>Asset Detials</h5>\r\n          <Card>\r\n            Title:\r\n            <Input\r\n              type=\"text\"\r\n              onChange={(e) => onChangeTitle(e.target.value)}\r\n            />\r\n          </Card>\r\n          <Card>\r\n            Description:\r\n            <TextArea\r\n              type=\"text\"\r\n              onChange={(e) => onChangeDesc(e.target.value)}\r\n            />\r\n          </Card>\r\n        </Card>\r\n        <div className=\"d-flex justify-content-center mb-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={handleMint}\r\n          >\r\n            Mint\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <Heading>Upload an image to create an NFT on NEAR</Heading>\r\n        <ImageUploadCard className=\"flex-grow-1\">\r\n          <Elipse />\r\n          <IpfsImageUpload\r\n            image={state.image}\r\n            className=\"btn text-decoration-none link-primary pe-auto\"\r\n          />\r\n          <div>\r\n            {\r\n              //   <Heading\r\n              //   onDrop={handleDrop}\r\n              //   onDragOver={(event) => event.preventDefault()}\r\n              // >\r\n              //   Drag and Drop your image file here\r\n              // </Heading>\r\n            }\r\n            <Text>\r\n              We support .jpg, .jpeg, .png, .webp, .gif files and deploy to Near\r\n            </Text>\r\n            <Text>Max file size: 20mb</Text>\r\n          </div>\r\n        </ImageUploadCard>\r\n      </div>\r\n    )}\r\n    {state.showAlert && (\r\n      <Widget src=\"jgodwill.near/widget/genadrop-toast\" props={state} />\r\n    )}\r\n  </Main>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/genadropMinter", "__row_index": 29}