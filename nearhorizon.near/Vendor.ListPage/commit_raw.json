{"tx_hash": "3gU2izakgBeaERRF4RgPJgqQsj1BWMcPY2pf45cNj46u", "action_id_social": "Fc8heGKzYXYVevTySUXtFTSA5dopZH2fjU1PdfmK9MQ4-0-widget", "block_id": 94185314, "block_timestamp": "2023-06-14T14:49:02.889Z", "signer_id": "nearhorizon.near", "widget_name": "Vendor.ListPage", "source_code": "const ownerId = \"nearhorizon.near\";\nconst urlProps = props.urlProps ?? {};\nconst getFilters = () => {\n  if (urlProps.sort) {\n    Storage.set(\"vendors-sort\", urlProps.sort);\n  }\n\n  return [\"verified\", \"active\", \"type\", \"payment_type\", \"rate\", \"work\"].reduce(\n    (acc, key) =>\n      urlProps[key]\n        ? Object.assign(acc, {\n          [key]: new Set(urlProps[key].split(\",\")),\n        })\n        : acc,\n    {}\n  );\n};\n\nconst selected = () => {\n  const selectedKeys = Object.keys(state.filters);\n  return (\n    selectedKeys.length > 0 &&\n    selectedKeys.some((key) => state.filters[key].size > 0)\n  );\n};\n\nconst url = () => {\n  const urlString = \"\";\n\n  if (selected()) {\n    const selectedKeys = Object.keys(state.filters);\n\n    urlString += selectedKeys\n      .map((key) => {\n        const values = Array.from(state.filters[key]);\n        return `${key}=${values.join(\",\")}`;\n      })\n      .join(\"&\");\n  }\n\n  if (state.search) {\n    if (urlString.length > 0) {\n      urlString += \"&\";\n    }\n    urlString += `q=${state.search}`;\n  }\n\n  if (state.sort) {\n    urlString += `&sort=${state.sort}`;\n  }\n\n  return urlString;\n};\n\nState.init({\n  filters: getFilters(),\n  search: urlProps.q,\n  sort: urlProps.sort,\n  vendors: null,\n  vendorsIsFetched: false,\n});\n\nif (!state.vendorsIsFetched) {\n  asyncFetch(`https://api-op3o.onrender.com/data/vendors?${url()}`).then(\n    ({ body: vendors }) => State.update({ vendors, vendorsIsFetched: true })\n  );\n\n  return <>Loading...</>;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0;\n  width: 100%;\n  gap: 2em;\n\n  & > h1 {\n    font-family: \"FK Grotesk\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 40px;\n    color: #101828;\n  }\n`;\n\nreturn (\n  <Container>\n    <h1>Contributors</h1>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Filters`}\n      props={{\n        urlFilters: state.filters,\n        search: state.search,\n        entity: \"vendors\",\n        change: ({ filters, search }) => {\n          State.update({ filters, search, vendorsIsFetched: false });\n        },\n        filters: {\n          first: {\n            text: \"Verification\",\n            value: \"verified\",\n            options: [\n              { text: \"Verified\", value: \"true\" },\n              { text: \"Unverified\", value: \"false\" },\n            ],\n          },\n          second: [\n            {\n              text: \"Status\",\n              value: \"active\",\n              options: [\n                { text: \"Active\", value: \"true\" },\n                { text: \"Inactive\", value: \"false\" },\n              ],\n            },\n            {\n              text: \"Type\",\n              value: \"type\",\n              options: [\n                { text: \"Individual\", value: \"individual\" },\n                { text: \"Organization\", value: \"organization\" },\n              ],\n            },\n            {\n              text: \"Payment type\",\n              value: \"payment_type\",\n              options: [\n                { text: \"Fiat\", value: \"fiat\" },\n                { text: \"Crypto\", value: \"crypto\" },\n                { text: \"Credits\", value: \"credits\" },\n              ],\n            },\n            {\n              text: \"Rate\",\n              value: \"rate\",\n              options: [\n                { text: \"1-10\", value: \"1-10\" },\n                { text: \"10-100\", value: \"10-100\" },\n                { text: \"100-1000\", value: \"100-1000\" },\n              ],\n            },\n            {\n              text: \"Work type\",\n              value: \"work\",\n              options: [\n                { text: \"One time\", value: \"onetime\" },\n                { text: \"Short\", value: \"short\" },\n                { text: \"Long\", value: \"long\" },\n                { text: \"Full time\", value: \"fulltime\" },\n              ],\n            },\n          ],\n        },\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Vendor.ListSection`}\n      props={{\n        entity: \"vendors\",\n        count: state.vendors.length,\n        items: state.vendors,\n        renderItem: (accountId) => (\n          <Widget\n            src={`${ownerId}/widget/Vendor.Card`}\n            props={{ accountId, large: true }}\n          />\n        ),\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Vendor.ListPage", "__row_index": 0}