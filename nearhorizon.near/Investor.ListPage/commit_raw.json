{"tx_hash": "DJRCddp9jDmQSWLGH1XzZTYEswijajFYP3f9hUcaGssw", "action_id_social": "7xnWggu5AcfVw7kvFR1e2f2yXB7SHUD7QnBGiUR6LsQ6-0-widget", "block_id": 94185230, "block_timestamp": "2023-06-14T14:47:13.060Z", "signer_id": "nearhorizon.near", "widget_name": "Investor.ListPage", "source_code": "const ownerId = \"nearhorizon.near\";\nconst urlProps = props.urlProps ?? {};\nconst getFilters = () => {\n  if (urlProps.sort) {\n    Storage.set(\"investors-sort\", urlProps.sort);\n  }\n\n  return [\"vertical\"].reduce(\n    (acc, key) =>\n      urlProps[key]\n        ? Object.assign(acc, {\n          [key]: new Set(urlProps[key].split(\",\")),\n        })\n        : acc,\n    {}\n  );\n};\n\nconst selected = () => {\n  const selectedKeys = Object.keys(state.filters);\n  return (\n    selectedKeys.length > 0 &&\n    selectedKeys.some((key) => state.filters[key].size > 0)\n  );\n};\n\nconst url = () => {\n  const urlString = \"\";\n\n  if (selected()) {\n    const selectedKeys = Object.keys(state.filters);\n\n    urlString += selectedKeys\n      .map((key) => {\n        const values = Array.from(state.filters[key]);\n        return `${key}=${values.join(\",\")}`;\n      })\n      .join(\"&\");\n  }\n\n  if (state.search) {\n    if (urlString.length > 0) {\n      urlString += \"&\";\n    }\n    urlString += `q=${state.search}`;\n  }\n\n  if (state.sort) {\n    urlString += `&sort=${state.sort}`;\n  }\n\n  return urlString;\n};\n\nState.init({\n  filters: getFilters(),\n  search: urlProps.q,\n  sort: urlProps.sort,\n  investors: null,\n  investorsIsFetched: false,\n});\n\nif (!state.investorsIsFetched) {\n  asyncFetch(`https://api-op3o.onrender.com/data/investors?${url()}`).then(\n    ({ body: investors }) =>\n      State.update({ investors, investorsIsFetched: true })\n  );\n\n  return <>Loading...</>;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0;\n  width: 100%;\n  gap: 2em;\n\n  & > h1 {\n    font-family: \"FK Grotesk\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 40px;\n    color: #101828;\n  }\n`;\n\nreturn (\n  <Container>\n    <h1>Backers</h1>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Filters`}\n      props={{\n        urlFilters: state.filters,\n        search: state.search,\n        entity: \"investors\",\n        change: ({ filters, search }) => {\n          State.update({ filters, search, vendorsIsFetched: false });\n        },\n        filters: {\n          first: {\n            text: \"Vertical\",\n            value: \"vertical\",\n            options: [\n              { text: \"DeSci\", value: \"desci\" },\n              { text: \"DeFi\", value: \"defi\" },\n              { text: \"Gaming\", value: \"gaming\" },\n              { text: \"Metaverse\", value: \"metaverse\" },\n              { text: \"Commercial\", value: \"commercial\" },\n              {\n                text: \"Sports and Entertainment\",\n                value: \"sports-and-entertainment\",\n              },\n              { text: \"Infrastructure\", value: \"infrastructure\" },\n              { text: \"Social\", value: \"social\" },\n              { text: \"Social Impact\", value: \"social-impact\" },\n              { text: \"Creative\", value: \"creative\" },\n              { text: \"Education\", value: \"education\" },\n            ],\n          },\n          second: [],\n        },\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Investor.ListSection`}\n      props={{\n        entity: \"investors\",\n        count: state.investors.length,\n        items: state.investors,\n        renderItem: (accountId) => (\n          <Widget\n            src={`${ownerId}/widget/Investor.Card`}\n            props={{ accountId, large: true }}\n          />\n        ),\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Investor.ListPage", "__row_index": 0}