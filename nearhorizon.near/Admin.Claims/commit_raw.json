{"tx_hash": "Hqgw2dvG1F5iESKhi4K17AsLbcQEiY7nzGaBKwbjNnxp", "action_id_social": "7DSD5hf28zPrRLDra9pTczUA4dBwV6nzGegk6gGXSvtR-0-widget", "block_id": 93281281, "block_timestamp": "2023-06-02T11:40:14.387Z", "signer_id": "nearhorizon.near", "widget_name": "Admin.Claims", "source_code": "const ownerId = \"nearhorizon.near\";\nconst search = props.search ?? \"\";\n\nState.init({\n  items: [],\n  itemsIsFetched: false,\n});\n\nasyncFetch(\n  `https://api-op3o.onrender.com/data/claims?sort=timedesc&q=${search}`\n).then(({ body: items }) => State.update({ items, itemsIsFetched: true }));\n\nif (!state.itemsIsFetched) {\n  return <>Loading...</>;\n}\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/List`}\n    props={{\n      filter: ([projectId, accountId]) =>\n        state.items.some(\n          ([pId, aId]) => pId === projectId && aId === accountId\n        ),\n      items: state.items,\n      full: true,\n      createItem: ([projectId, accountId]) => (\n        <Widget\n          src={`${ownerId}/widget/Claim.Card`}\n          props={{ accountId, projectId }}\n        />\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Admin.Claims", "__row_index": 1}