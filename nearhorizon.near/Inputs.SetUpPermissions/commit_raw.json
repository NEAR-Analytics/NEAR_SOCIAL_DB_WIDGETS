{"tx_hash": "D3NH2dSQxXbw8GxvvZVXGQEx7o5LbRfAcsahUzN98hEd", "action_id_social": "8DrJHSjrevAWFjYXdFaCBQBVesnuhuqVZbd8wL7yNPvY-0-widget", "block_id": 91064826, "block_timestamp": "2023-05-04 08:09:22.674", "signer_id": "nearhorizon.near", "widget_name": "Inputs.SetUpPermissions", "source_code": "const ownerId = \"nearhorizon.near\";\n\nState.init({\n  following: [],\n  followingIsFetched: false,\n  value: (props.accountIds ?? \"\").split(\",\").map((name) => ({ name })),\n  accountsWithPermissions: [],\n  accountsWithPermissionsIsFetched: false,\n});\n\nconsole.log(state.value);\n\nif (!context.accountId) {\n  return <>Please sign in to continue</>;\n}\n\nif (!state.followingIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${context.accountId}/graph/follow/*`] },\n    \"final\",\n    false\n  ).then((data) => {\n    const following = (\n      Object.keys(data).length > 0\n        ? Object.keys(data[context.accountId]?.graph?.follow ?? {})\n        : []\n    ).map((name) => ({ name }));\n    State.update({\n      following,\n      followingIsFetched: true,\n    });\n  });\n}\n\nif (!state.accountsWithPermissionsIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"debug_get_permissions\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((data) =>\n    State.update({\n      accountsWithPermissions: data\n        .map(([info]) => info)\n        .filter((info) => \"AccountId\" in info)\n        .map(({ AccountId }) => AccountId),\n      accountsWithPermissionsIsFetched: true,\n    })\n  );\n}\n\n// if (!state.followingIsFetched || !state.accountsWithPermissionsIsFetched) {\n//   return <>Loading...</>;\n// }\n\nconst Accounts = styled.ul`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1.125em;\n  line-height: 1em;\n  color: #344054;\n`;\n\nconst Existing = styled.div`\n  padding: 1.5em 0;\n\n  h3 {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 1.5em;\n    line-height: 1.5em;\n    color: #344054;\n  }\n`;\n\nconst SaveButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em 1em;\n  background: #00ec97;\n  border-radius: 50px;\n  border: none;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1em;\n  text-align: center;\n  color: #11181c;\n`;\n\nconst grantPermissions = () => {\n  const accounts = state.value.map(({ name }) => name);\n\n  if (\n    !accounts.includes(context.accountId) &&\n    !state.accountsWithPermissions.includes(context.accountId)\n  ) {\n    accounts.push(context.accountId);\n  }\n\n  const transactions = accounts.map((accountId) => ({\n    contractName: \"social.near\",\n    methodName: \"grant_write_permission\",\n    args: { predecessor_id: accountId, keys: [context.accountId] },\n    deposit: \"1\",\n  }));\n\n  Near.call(transactions);\n};\n\nreturn (\n  <>\n    <Widget\n      src={`${ownerId}/widget/Inputs.MultiSelect`}\n      props={{\n        label: \"Accounts to add permissions to\",\n        placeholder: \"Add accounts\",\n        options: state.following,\n        value: state.value,\n        onChange: (value) => State.update({ value }),\n      }}\n    />\n\n    <SaveButton onClick={grantPermissions}>Grant permissions</SaveButton>\n\n    <Existing>\n      <h3>Existing permissions</h3>\n      <Accounts>\n        {state.accountsWithPermissions.map((accountId) => (\n          <li key={accountId}>{accountId}</li>\n        ))}\n      </Accounts>\n    </Existing>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Inputs.SetUpPermissions"}