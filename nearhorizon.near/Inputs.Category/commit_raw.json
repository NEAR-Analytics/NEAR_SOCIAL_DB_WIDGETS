{"tx_hash": "5thnwS2GSDKwom6UK9BppmPnq3A3Nz6z9GfPnXVsgs1w", "action_id_social": "DDAEx9D1C2kxe2ZE6iZfi1Q9ZVLLUdA2RUJ7e4qVbrwz-0-widget", "block_id": 91986157, "block_timestamp": "2023-05-16T11:19:28.216Z", "signer_id": "nearhorizon.near", "widget_name": "Inputs.Category", "source_code": "const ownerId = \"nearhorizon.near\";\n\n/** @type {{text:string;value:string}[]} */\nconst options = [\n  { text: \"DeSci\", value: \"desci\" },\n  { text: \"DeFi\", value: \"defi\" },\n  { text: \"Gaming\", value: \"gaming\" },\n  { text: \"Metaverse\", value: \"metaverse\" },\n  { text: \"Commercial\", value: \"commercial\" },\n  { text: \"Sports and Entertainment\", value: \"sports-and-entertainment\" },\n  { text: \"Infrastructure\", value: \"infrastructure\" },\n  { text: \"Social\", value: \"social\" },\n  { text: \"Social Impact\", value: \"social-impact\" },\n  { text: \"Creative\", value: \"creative\" },\n  { text: \"Education\", value: \"education\" },\n  { text: \"Other\", value: \"other\" },\n];\n\n/**\n * @param {string} old\n *\n * @returns {string[]}\n * */\nconst mapOldToNew = (old) => {\n  switch (old) {\n    case \"wallets\":\n      return [\"infrastructure\"];\n    case \"gaming/metaverse\":\n      return [\"gaming\", \"metaverse\"];\n    case \"nft\":\n      return [\"creative\"];\n    case \"dao\":\n      return [\"social-impact\"];\n    default:\n      return [old];\n  }\n};\n\n/**\n * @param {string} value\n *\n * @returns {{text:string;value:string}}\n * */\nconst mapValueToOption = (value) => {\n  const option = options.find((option) => option.value === value);\n  return option ?? { text: value, value };\n};\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Inputs.Select`}\n    props={{\n      label: \"Category *\",\n      noLabel: props.noLabel,\n      placeholder: \"Wallets\",\n      options,\n      value: props.category,\n      onChange: (category) => props.update(category),\n      validate: () => {\n        if (!props.category) {\n          props.setError(\"Please select a category\");\n        }\n\n        if (!options.find(({ value }) => props.category.value === value)) {\n          props.setError(\"Please select a valid category\");\n        }\n      },\n      error: props.error,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Inputs.Category", "__row_index": 8}