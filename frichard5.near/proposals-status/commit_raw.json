{"tx_hash": "5CWbMGKZeRy59k3MVpvPHa8eLbwKVNTDzLpGtFQXVoDA", "action_id_social": "5xAPc2Br7tya4hxdCz9tsZsQsfN2eANk6kfFiXvehXzE-0-widget", "block_id": 88942109, "block_timestamp": "2023-04-06 09:15:52.088", "signer_id": "frichard5.near", "widget_name": "proposals-status", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst apiUrl = `https://api.pikespeak.ai/daos/proposals/status/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nState.init({\n  proposalsStatus: [],\n});\n\nconst columns = [\n  {\n    id: \"status\",\n    label: \"Status\",\n  },\n  {\n    id: \"count\",\n    label: \"Count\",\n  },\n];\n\nconst GenericTable = (\n  <Widget\n    src={`${widgetProvider}/widget/generic_table`}\n    props={{\n      title: `${account} proposals`,\n      columns,\n      data: state.proposalsStatus,\n    }}\n  />\n);\n\nconst fetchTransfers = () => {\n  const proposalsStatus = fetch(apiUrl, {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  });\n  proposalsStatus.body &&\n    State.update({ proposalsStatus: proposalsStatus.body });\n};\nfetchTransfers();\n\nreturn <>{GenericTable}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/proposals-status"}