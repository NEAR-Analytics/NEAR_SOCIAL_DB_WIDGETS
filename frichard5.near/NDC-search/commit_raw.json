{"tx_hash": "2ZHCjNavuU1aAd45ffJLJv1JGjkPdXNiUzsHB6pPqjpy", "action_id_social": "9Vbr2sRciyvbotozdQUe61o4nF2oUWL39MQHGsut7b5R-0-widget", "block_id": 91010736, "block_timestamp": "2023-05-03 14:52:59.853", "signer_id": "frichard5.near", "widget_name": "NDC-search", "source_code": "const { account, widgetProvider, proposal_id, ftList } = props;\nconst apiProposalUrl = `https://api.pikespeak.ai/daos/proposal/${account}`;\nconst apiPolicyUrl = `https://api.pikespeak.ai/daos/policy`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nState.init({\n  input: \"\",\n});\n\nconst Input = (\n  <Widget\n    src={`${widgetProvider}/widget/NDC-input`}\n    props={{\n      buttonLabel: \"Search\",\n      placeholder: \"Enter an account address or a proposal id\",\n      sendInput: (i) => {\n        if (!isNaN(i)) {\n          State.update({ proposal_id: i, fetchingProposal: true });\n        }\n      },\n    }}\n  />\n);\n\nconst ProposalCard = (\n  <Widget\n    src={`${widgetProvider}/widget/NDC-proposal-card`}\n    props={{\n      proposal: state.proposal,\n      widgetProvider,\n      ftList,\n      council:\n        state.policy &&\n        state.proposal &&\n        state.policy\n          .filter((pol) => pol.dao_id === proposal.dao_id)\n          .map((pol) => {\n            return pol.state.policy.roles.find(\n              (r) => r.name === \"Council\" || r.name === \"council\"\n            ).kind;\n          })[0],\n      voteExpired:\n        state.policy &&\n        state.policy.filter((pol) => pol.dao_id === proposal.dao_id)[0].state\n          .policy.proposal_period,\n    }}\n  />\n);\n\nconst fetchProposal = (id) => {\n  const proposal = fetch(apiProposalUrl + `?id=${id}`, {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  });\n  proposal.body &&\n    State.update({\n      proposal: proposal.body.length ? proposal.body[0] : [],\n      fetchingProposal: false,\n    });\n};\n\nconst fetchPolicy = (daos) => {\n  const policy = asyncFetch(apiPolicyUrl + `?daos=${daos}`, {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  }).then(({ err, body, ok }) => {\n    if (ok) {\n      State.update({\n        council: body.state.policy.roles.find(\n          (r) => r.name === \"Council\" || r.name === \"council\"\n        ).kind,\n      });\n    }\n  });\n};\n\n!state.council && fetchPolicy([account]);\n\nfetchProposal(state.proposal_id);\n\nreturn (\n  <div>\n    {Input}\n    <div>pokpozad</div>\n    {!state.fetchingProposal && state.proposal && state.council && ProposalCard}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/NDC-search"}