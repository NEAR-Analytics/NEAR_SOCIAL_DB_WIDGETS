{"tx_hash": "8Tnz5mVWurGPNXumnLUALseTteXFdddKknZvKF4nQFq", "action_id_social": "C5vmsjmRVd7gzLgVZsQuDJoGSQT67rtdG2ocjTHFdBuk-0-widget", "block_id": 91641617, "block_timestamp": "2023-05-11T23:38:46.108Z", "signer_id": "frichard5.near", "widget_name": "NDC-add-proposal", "source_code": "const { widgetProvider, policy, account } = props;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst apiPolicyUrl = `https://api.pikespeak.ai/daos/policy`;\n\nState.init({\n  type: \"Vote\",\n});\n\nconst selectType = (e) => {\n  State.update({\n    type: e.target.value,\n  });\n};\n\nconst selectToken = (e) => {\n  State.update({\n    token: e.target.value,\n  });\n};\n\nconst getPayload = (type, data) => {\n  switch (type) {\n    case \"Vote\":\n      return {\n        proposal: {\n          description: data.description,\n          kind: \"Vote\",\n        },\n      };\n    case \"Transfer\":\n      return {\n        proposal: {\n          description: data.description,\n          kind: {\n            Transfer: {\n              token_id: \"\",\n              receiver_id: data.target,\n              amount: \"1000000000000000000000000000\",\n            },\n          },\n        },\n      };\n  }\n};\n\nconst sendProposal = () => {\n  Near.call([\n    {\n      contractName: account,\n      methodName: \"add_proposal\",\n      args: getPayload(state.type, state.data),\n      gas: \"300000000000000\",\n      deposit: \"100000000000000000000000\",\n    },\n  ]);\n};\n\nconst proposalTypes = [\n  \"Transfer\",\n  \"Vote\",\n  \"FunctionCall\",\n  \"AddBounty\",\n  \"BountyDone\",\n  \"AddMemberToRole\",\n  \"RemoveMemberFromRole\",\n].map((t) => {\n  return {\n    value: t,\n    label: t,\n  };\n});\n\nconst fetchPolicy = (params) => {\n  asyncFetch(forgeUrl(apiPolicyUrl, params), {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  }).then(({ err, body, ok }) => {\n    if (ok) {\n      State.update({\n        policy: body,\n      });\n    }\n  });\n};\n\nfetchPolicy({ daos: [account] });\nconsole.log(\"STATE\", state);\nconst ProposalCard = styled.div`\n    position: relative;\n    height: 400px;\n    width: 80%;\n    margin: 50px auto;\n    box-shadow: 3px 2px 24px rgba(68, 152, 224, 0.3);\n    overflow: auto;\n    border-radius: 4px;\n    padding: 20px;\n    background: white;\n    svg {\n        height: 20px;\n        &.approved-icon {\n            fill:#13a36e;\n        }\n        &.rejected-icon {\n            fill: #ff5e03;\n        }\n        &.not-voted-yet-icon {\n            fill:  rgb(140, 140, 140)\n        }\n    }\n`;\n\nconst ProposalForm = styled.div`\n\n`;\n\nconst InputText = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 10px;\n  width: fit-content;\n`;\n\nconst AmountSelector = styled.div`\n    display: flex;\n`;\n\nconsole.log(state);\nreturn (\n  <ProposalCard>\n    <Widget\n      src={`${widgetProvider}/widget/NDC-select`}\n      props={{\n        widgetProvider,\n        options: proposalTypes,\n        selectedOption: state.type,\n        onChange: selectType,\n        label: \"Type\",\n        id: \"proposal-type-selector\",\n      }}\n    />\n\n    <ProposalForm>\n      <InputText>\n        <label style={{ color: \"#8c8c8c\" }} for={id}>\n          {\"Description\"}\n        </label>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            State.update({\n              data: { ...state.data, description: e.target.value },\n            });\n          }}\n          placeholder={\"Describe your proposal here.\"}\n        />\n      </InputText>\n      {state.type === \"Transfer\" && (\n        <>\n          <AmountSelector>\n            <InputText>\n              <label style={{ color: \"#8c8c8c\" }} for={id}>\n                {\"Amount\"}\n              </label>\n              <input\n                type=\"text\"\n                onChange={(e) => {\n                  State.update({\n                    data: { ...state.data, amount: e.target.value },\n                  });\n                }}\n                placeholder={\"0\"}\n              />\n            </InputText>\n            <Widget\n              src={`${widgetProvider}/widget/NDC-select`}\n              props={{\n                widgetProvider,\n                options: [\"NEAR\"],\n                selectedOption: near,\n                onChange: selectToken,\n                label: \"Token\",\n                id: \"token-selector\",\n              }}\n            />\n          </AmountSelector>\n          <InputText>\n            <label style={{ color: \"#8c8c8c\" }} for={id}>\n              {\"Target\"}\n            </label>\n            <input\n              type=\"text\"\n              onChange={(e) => {\n                State.update({\n                  data: { ...state.data, target: e.target.value },\n                });\n              }}\n              placeholder={\"receiver.near\"}\n            />\n          </InputText>\n        </>\n      )}\n    </ProposalForm>\n\n    <button onClick={sendProposal}>Propose</button>\n  </ProposalCard>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/NDC-add-proposal", "__row_index": 4}