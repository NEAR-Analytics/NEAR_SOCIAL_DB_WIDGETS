{"tx_hash": "5RNDrYjHBAQCLmz3Lmj42kyBcpsG56oGV7EcD2JSTbUQ", "action_id_social": "DN1hwQdrPPS582qWDdAw1f1ETN4X3cqPVEkkmLLcZ5wL-0-widget", "block_id": 90025154, "block_timestamp": "2023-04-20 14:59:02.096", "signer_id": "frichard5.near", "widget_name": "ft_transfers", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"foundation.near\";\nconst ftList = props.ftList;\nconst apiUrl = `https://api.pikespeak.ai/account/ft-transfer/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst ftFormatter = (ftList) => {\n  return (data) => {\n    return (\n      <Widget\n        src={`${widgetProvider}/widget/table_ft_formatter`}\n        props={{\n          ftList,\n          ft: data[\"contract\"],\n          amount: data[\"amount\"],\n        }}\n      />\n    );\n  };\n};\n\nconst columns = [\n  {\n    id: \"timestamp\",\n    label: \"date\",\n    formatter: (data) => {\n      const milliTimestamp = Math.trunc(\n        Number(data[\"timestamp\"]) / Math.pow(10, 6)\n      );\n      return new Date(Number(milliTimestamp)).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      });\n    },\n  },\n  {\n    id: \"sender\",\n    label: \"sender\",\n    formatter: (d) => {\n      return (\n        <a\n          href={`https://explorer.near.org/accounts/${d.sender}`}\n          target=\"_blank\"\n        >\n          {d.sender}\n        </a>\n      );\n    },\n  },\n  {\n    id: \"receiver\",\n    label: \"receiver\",\n    formatter: (d) => {\n      return (\n        <a\n          href={`https://explorer.near.org/accounts/${d.receiver}`}\n          target=\"_blank\"\n        >\n          {d.receiver}\n        </a>\n      );\n    },\n  },\n  {\n    id: \"amount\",\n    label: \"amount\",\n    formatter: ftFormatter(ftList),\n  },\n  {\n    id: \"transaction_id\",\n    label: \"Tx id\",\n    formatter: (d) => {\n      return (\n        <a\n          href={`https://explorer.near.org/transactions/${d.transaction_id}`}\n          target=\"_blank\"\n        >\n          {d.transaction_id}\n        </a>\n      );\n    },\n  },\n];\n\nconst resPerPage = 10;\n\nState.init({\n  txs: [],\n  offset: 0,\n});\n\nconst nextPage = () => {\n  State.update({ offset: state.offset + resPerPage });\n};\n\nconst previousPage = () => {\n  State.update({ offset: state.offset - resPerPage });\n};\n\nconst GenericTable = (\n  <Widget\n    src={`${widgetProvider}/widget/generic_table`}\n    props={{\n      title: \"FT transfers\",\n      columns,\n      data: state.txs,\n      nextPage,\n      previousPage,\n      offset: state.offset,\n      resPerPage,\n    }}\n  />\n);\n\nconst fetchTransfers = (offset) => {\n  const nearTransfers = fetch(\n    apiUrl + `?offset=${offset}&limit=${resPerPage}`,\n    {\n      mode: \"cors\",\n      headers: {\n        \"x-api-key\": publicApiKey,\n      },\n    }\n  );\n  nearTransfers.body && State.update({ txs: nearTransfers.body });\n};\nfetchTransfers(state.offset);\n\nreturn <div>{GenericTable}</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/ft_transfers"}