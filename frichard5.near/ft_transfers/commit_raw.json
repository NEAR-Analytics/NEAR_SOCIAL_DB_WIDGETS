{"tx_hash": "2xgjJ1EYxcLZk6DXpCagPkSY5QtHDvN7diU7mN17rwVU", "action_id_social": "Fmr72SoyR1zSTKEFv7vG6hsYWyAifWcviBbhrEA1u3YU-0-widget", "block_id": 88803504, "block_timestamp": "2023-04-04 13:37:23.624", "signer_id": "frichard5.near", "widget_name": "ft_transfers", "source_code": "const user = \"frichard5.near\";\nconst account = props.account || \"foundation.near\";\nconst ftList = props.ftList;\nconst apiUrl = `https://api.pikespeak.ai/account/ft-transfer/${account}`;\nconst refUrl = \"https://api.stats.ref.finance/api/ft\";\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst columns = [\n  {\n    id: \"timestamp\",\n    label: \"date\",\n  },\n  {\n    id: \"sender\",\n    label: \"sender\",\n  },\n  {\n    id: \"receiver\",\n    label: \"receiver\",\n  },\n  {\n    id: \"amount\",\n    label: \"amount\",\n    formatter: (data) => {\n      return (\n        <Widget\n          src={`${user}/widget/table_ft_formatter`}\n          props={{\n            ftList,\n            ft: data[\"contract\"],\n            amount: data[\"amount\"],\n          }}\n        />\n      );\n    },\n  },\n  {\n    id: \"transaction_id\",\n  },\n];\n\nconst resPerPage = 10;\n\nState.init({\n  txs: [],\n  offset: 0,\n  ftList: [],\n});\n\nconst nextPage = () => {\n  State.update({ offset: state.offset + resPerPage });\n};\n\nconst previousPage = () => {\n  State.update({ offset: state.offset - resPerPage });\n};\n\nconst GenericTable = (\n  <Widget\n    src={`${user}/widget/generic_table`}\n    props={{\n      title: \"FT transfers\",\n      columns,\n      data: state.txs,\n      nextPage,\n      previousPage,\n      offset: state.offset,\n      resPerPage,\n    }}\n  />\n);\n\nif (!state.ftList.length) {\n  const ftList = fetch(refUrl);\n  State.update({ ftList });\n}\n\nconsole.log(\"FTLIST\", state.ftList);\n\nlet transactions = [];\nconst fetchTransfers = (offset) => {\n  const nearTransfers = fetch(\n    apiUrl + `?offset=${offset}&limit=${resPerPage}`,\n    {\n      mode: \"cors\",\n      headers: {\n        \"x-api-key\": publicApiKey,\n      },\n    }\n  );\n  nearTransfers.body && State.update({ txs: nearTransfers.body });\n};\nfetchTransfers(state.offset);\n\nreturn <div>{GenericTable}</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/ft_transfers"}