{"tx_hash": "6BgkXDJ7hio9WUYm199iCfwmpdQEYZLpMsQykPjvs1Af", "action_id_social": "FNvJPbgTfgfHXmJBQnrva2JfS3S68yw33cKsV8e6X7Jv-0-widget", "block_id": 91160972, "block_timestamp": "2023-05-05 15:06:23.963", "signer_id": "frichard5.near", "widget_name": "NDC-proposals-count-by-account", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst apiUrl = `https://api.pikespeak.ai/daos/top-proposers/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst resPerPage = 10;\n\nconst columns = [\n  {\n    id: \"account\",\n    label: \"Account\",\n    formatter: (d) => {\n      return (\n        <a\n          href={`https://explorer.near.org/accounts/${d.account}`}\n          target=\"_blank\"\n        >\n          {d.account}\n        </a>\n      );\n    },\n  },\n  {\n    id: \"total\",\n    label: \"Proposal count\",\n  },\n  {\n    id: \"total\",\n    label: \"Details\",\n    formatter: (d) => {\n      const setModal = (d) => {\n        return () => {\n          State.update({\n            isModalOpen: true,\n            currentProposerDetail: d.account,\n          });\n        };\n      };\n      return <button onClick={setModal(d)}>Show</button>;\n    },\n  },\n];\n\nState.init({\n  displayedProposers: [],\n  proposers: [],\n  offset: 0,\n});\n\nconst nextPage = () => {\n  const currentOffset = state.offset + resPerPage;\n  State.update({\n    offset: currentOffset,\n    displayedProposers: state.proposers.slice(\n      currentOffset,\n      resPerPage + currentOffset\n    ),\n  });\n};\n\nconst previousPage = () => {\n  const currentOffset = state.offset - resPerPage;\n  State.update({\n    offset: currentOffset,\n    displayedProposers: state.proposers.slice(\n      currentOffset,\n      resPerPage + currentOffset\n    ),\n  });\n};\n\nconst GenericTable = (\n  <Widget\n    src={`${widgetProvider}/widget/generic_table`}\n    props={{\n      title: \"Proposers\",\n      columns,\n      data: state.displayedProposers,\n      nextPage,\n      previousPage,\n      offset: state.offset,\n      resPerPage,\n    }}\n  />\n);\n\nconst ProposerDetails = (\n  <Widget\n    src={`${widgetProvider}/widget/NDC-proposer-detail`}\n    props={{\n      proposer: state.currentProposerDetail,\n      account,\n      widgetProvider,\n    }}\n  />\n);\n\nconst fetchTopProposers = () => {\n  const proposers = fetch(apiUrl, {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  });\n  proposers.body &&\n    State.update({\n      displayedProposers: proposers.body.slice(0, resPerPage),\n      proposers: proposers.body,\n    });\n};\n\nfetchTopProposers();\n\nconst toggleModal = (isOpen) => {\n  State.update({ isModalOpen: isOpen });\n};\n\nreturn (\n  <>\n    {state.currentProposerDetail && state.isModalOpen ? (\n      <Widget\n        src={`${widgetProvider}/widget/NDC-modal`}\n        props={{\n          isOpen: state.isModalOpen,\n          toggleModal,\n          component: ProposerDetails,\n        }}\n      />\n    ) : (\n      \"\"\n    )}\n    {GenericTable}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/NDC-proposals-count-by-account"}