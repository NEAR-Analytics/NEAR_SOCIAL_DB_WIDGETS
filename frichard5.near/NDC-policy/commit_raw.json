{"tx_hash": "9EkWWEbWhGWw65ja1oVP5FkqAJpg5PxQhXpeCLF9oUbA", "action_id_social": "9dUE8M3XdHskmLGpLt6KsVXDrhbtiJDuZkWPv3ayXy5t-0-widget", "block_id": 90503501, "block_timestamp": "2023-04-26 22:06:06.457", "signer_id": "frichard5.near", "widget_name": "NDC-policy", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst apiUrl = `https://api.pikespeak.ai/daos/policy/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst Label = styled.span`\n  color:#8c8c8c;\n  font-size: 11px;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n`;\n\nconst GeneralInfos = styled.div`\n    padding: 10px;\n    background: rgba(68, 152, 224, 0.1);\n    border-radius: 4px;\n    width: 49%;\n`;\n\nconst membersFormatter = (roles) => {\n  let memberList = [];\n  if (Array.isArray(roles.kind) && roles.kind.length) {\n    memberList = roles.kind.map((m) => {\n      return (\n        <a href={`https://explorer.near.org/accounts/${m}`} target=\"_blank\">\n          {m}\n        </a>\n      );\n    });\n  } else if (roles.kind.length) {\n    memberList = [roles.kind];\n  }\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>{memberList}</div>\n  );\n};\n\nconst permissionsFormatter = (roles) => {\n  const permissions = roles.permissions.map((p) => (\n    <div>{p.replace(\"*:\", \"\")}</div>\n  ));\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      {permissions}\n    </div>\n  );\n};\n\nconst columns = [\n  {\n    id: \"name\",\n    label: \"Name\",\n  },\n  {\n    id: \"kind\",\n    label: \"Members\",\n    formatter: membersFormatter,\n  },\n  {\n    id: \"permissions\",\n    label: \"Permissions\",\n    formatter: permissionsFormatter,\n  },\n];\n\nconst parseNano = (nano) => {\n  return Number(nano) / Math.pow(10, 9) / 86400;\n};\n\nconst parseNear = (near) => {\n  return (Number(near) / Math.pow(10, 24)).toFixed(2);\n};\n\nconst GenericTable = (\n  <Widget\n    src={`${widgetProvider}/widget/generic_table`}\n    props={{\n      title: `Roles and permissions`,\n      columns,\n      data: state.roles,\n    }}\n  />\n);\n\nconst fetchPolicy = () => {\n  const policy = fetch(apiUrl, {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  });\n  policy.body &&\n    State.update({\n      policy: policy.body.state.policy,\n      roles: policy.body.state.policy.roles,\n      config: policy.body.state.config,\n    });\n};\n\nif (!state.policy || state.account != account) fetchPolicy();\n\nreturn (\n  <div style={{ marginTop: \"40px\" }}>\n    {state.policy && (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <GeneralInfos>\n          <h2>Infos</h2>\n          <InfoWrapper>\n            <Label>Name</Label>\n            <span>{state.config.name}</span>\n          </InfoWrapper>\n          <InfoWrapper>\n            <Label>Purpose</Label>\n            <span>{state.config.purpose}</span>\n          </InfoWrapper>\n        </GeneralInfos>\n        <GeneralInfos>\n          <h2>Policy</h2>\n          <InfoWrapper>\n            <Label>Proposal period</Label>\n            <span>{parseNano(state.policy.proposal_period)} days</span>\n          </InfoWrapper>\n          <InfoWrapper>\n            <Label>Proposal bond</Label>\n            <span>{parseNear(state.policy.proposal_bond)} NEAR</span>\n          </InfoWrapper>\n          <InfoWrapper>\n            <Label>Bounty forgiveness period</Label>\n            <span>\n              {parseNano(state.policy.bounty_forgiveness_period)} days\n            </span>\n          </InfoWrapper>\n          <InfoWrapper>\n            <Label>Bounty bond</Label>\n            <span>{parseNear(state.policy.bounty_bond)} NEAR</span>\n          </InfoWrapper>\n        </GeneralInfos>\n      </div>\n    )}\n    {state.policy && GenericTable}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/NDC-policy"}