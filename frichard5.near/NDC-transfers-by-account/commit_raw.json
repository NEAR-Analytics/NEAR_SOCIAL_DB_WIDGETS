{"tx_hash": "mtpdAQXJfg3PeGWWTkFruf3Hd3iWivL51P4HFncdCrg", "action_id_social": "9gKoDrMysmfpY98uYSmB8VS25kQmzDEt8qJRVWrsnWSf-0-widget", "block_id": 90633736, "block_timestamp": "2023-04-28 15:12:56.750", "signer_id": "frichard5.near", "widget_name": "NDC-transfers-by-account", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst ftList = props.ftList;\nconst resPerPage = 10;\nconst apiUrl = `https://api.pikespeak.ai/daos/transfers-beneficiaries/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst columns = [\n  {\n    id: \"account\",\n    label: \"Beneficiary\",\n    formatter: (d) => {\n      return (\n        <a\n          href={`https://explorer.near.org/accounts/${d.account}`}\n          target=\"_blank\"\n        >\n          {d.account}\n        </a>\n      );\n    },\n  },\n  {\n    id: \"proposals\",\n    label: \"Transfers\",\n    formatter: (d) => {\n      return d.proposals.map((p) => {\n        return (\n          <Widget\n            src={`${widgetProvider}/widget/table_ft_formatter`}\n            props={{\n              ftList,\n              amount: p.kind.parsedAmount,\n              ft: p.kind.token_id,\n              isParsed: true,\n            }}\n          />\n        );\n      });\n    },\n  },\n  {\n    id: \"totalEstimatedValue\",\n    label: \"Estimated Value\",\n    formatter: (d) => {\n      return <span>$ {d.totalEstimatedValue.toFixed(2)}</span>;\n    },\n  },\n];\n\nState.init({\n  offset: 0,\n  account,\n  displayedRank: [],\n});\n\nconst nextPage = () => {\n  const currentOffset = state.offset + resPerPage;\n  console.log(\n    state.offset,\n    state.ranking.slice(currentOffset, resPerPage + currentOffset)\n  );\n  State.update({\n    offset: currentOffset,\n    displayedRank: [\n      ...state.ranking.slice(currentOffset, resPerPage + currentOffset),\n    ],\n  });\n};\n\nconst previousPage = () => {\n  console.log(\"previous\", state);\n  const currentOffset = state.offset - resPerPage;\n  State.update({\n    offset: currentOffset,\n    displayedRank: state.ranking.slice(\n      currentOffset,\n      resPerPage + currentOffset\n    ),\n  });\n};\n\nconst fetchTransfersBeneficiaries = () => {\n  const beneficiaries = fetch(apiUrl, {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  });\n  beneficiaries.body &&\n    State.update({\n      ranking: beneficiaries.body,\n      displayedRank: beneficiaries.body.slice(0, resPerPage),\n    });\n};\n\n!state.displayedRank.length && fetchTransfersBeneficiaries();\n\nconsole.log(\"ranking\", state.displayedRank);\n\nconst GenericTable = (\n  <Widget\n    src={`${widgetProvider}/widget/generic_table`}\n    props={{\n      title: \"Transfers beneficiaries ranking\",\n      columns,\n      data: state.displayedRank,\n      nextPage,\n      previousPage,\n      offset: state.offset,\n      resPerPage,\n    }}\n  />\n);\n\nreturn (\n  <div>\n    {state.displayedRank.length ? GenericTable : \"\"}\n    {state.ranking && state.ranking.length === 0 && (\n      <span>No Transfer Proposal Beneficiaries</span>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/NDC-transfers-by-account"}