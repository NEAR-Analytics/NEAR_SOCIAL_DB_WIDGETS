{"tx_hash": "62Wu3hKWFRWXkrUtWLWoB1ZKBv1VtUALoY5DNaa9Eht8", "action_id_social": "DJMXPe2gEiW5y4zMqCWDajVuzfZXd7jxydY4hx14d8Ye-0-widget", "block_id": 88956174, "block_timestamp": "2023-04-06 13:40:29.644", "signer_id": "frichard5.near", "widget_name": "generic_table", "source_code": "const Table = styled.table`\n    display: \"table\";\n    width: \"100%\";\n    borderCollapse: \"separate\";\n    borderSpacing: \"0px\";\n    fontSize: \"14px\";\n    td {\n        textOverflow: \"ellipsis\";\n        overflow: \"hidden\";\n        whiteSpace: \"nowrap\";\n        padding: \"16px\";\n        maxWidth: \"130px\";\n        borderBottom: \"1px solid rgb(81, 81, 81)\";\n    }\n`;\n\nconst columns = props.columns || [\n  { label: \"props columns missing\", id: \"data\" },\n];\nconst data = props.data || [{ data: \"no data props\" }];\nconst { title, nextPage, previousPage, offset, resPerPage } = props;\n\nconst formatRow = (data, column) => {\n  return column.formatter ? column.formatter(data) : <td>{data[column.id]}</td>;\n};\n\nlet rows = [];\n\ndata &&\n  data.forEach((d) => {\n    rows.push(<tr>{columns.map((c) => formatRow(d, c))}</tr>);\n  });\n\nreturn (\n  <div>\n    {title && <h2>{title}</h2>}\n    <Table>\n      <tr>\n        {columns.map((c) => (\n          <th>{c.label}</th>\n        ))}\n      </tr>\n      {rows}\n    </Table>\n    {nextPage && previousPage && resPerPage && (\n      <div>\n        {offset ? (\n          <button onClick={previousPage}>previous {resPerPage}</button>\n        ) : (\n          \"\"\n        )}\n        {data.length === resPerPage ? (\n          <button onClick={nextPage}>next {resPerPage}</button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/generic_table"}