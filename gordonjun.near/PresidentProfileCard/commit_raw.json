{"tx_hash": "G8cD7U2qyFrZCtFPRE9bpXoXzApWiD1XvmyE6tLhJ2qM", "action_id_social": "qbJjKSHSjfJjGFbuWbzNagZe9tLKmsG6wFxm4z3v5pd-0-widget", "block_id": 94985188, "block_timestamp": "2023-06-25T08:43:21.968Z", "signer_id": "gordonjun.near", "widget_name": "PresidentProfileCard", "source_code": "const accountId = props.accountId ?? \"gordonjun.near\";\nconst tag = props.tag;\nconst daoId = props.daoId ?? \"bbclan.near\";\n\nlet daoFollowers = Social.keys(`*/graph/follow/${daoId}`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\ndaoFollowers = Object.entries(daoFollowers || {}).map(\n  ([accountId]) => accountId\n);\n\nlet keys = [];\n\nif (tag) {\n  let taggedWidgetsDict = {};\n  for (let i = 0; i < daoFollowers.length; i++) {\n    let taggedWidgets = Social.keys(\n      `${daoFollowers[i]}/widget/*/metadata/tags/${tag}`,\n      \"final\"\n    );\n    taggedWidgetsDict = Object.assign(taggedWidgetsDict, taggedWidgets);\n  }\n\n  if (taggedWidgetsDict === null) {\n    return \"Loading tags\";\n  }\n\n  keys = Object.entries(taggedWidgetsDict)\n    .map((kv) => Object.keys(kv[1].widget).map((w) => `${kv[0]}/widget/${w}`))\n    .flat();\n\n  if (!keys.length) {\n    return `No widgets found by tag #${tag}`;\n  }\n} else {\n  for (let i = 0; i < daoFollowers.length; i++) {\n    let userWidgetkeys = Social.keys(`${daoFollowers[i]}/widget/*`, \"final\", {\n      values_only: true,\n    });\n    let userWidget = Object.entries(userWidgetkeys)\n      .map((kv) => Object.keys(kv[1].widget).map((w) => `${kv[0]}/widget/${w}`))\n      .flat();\n\n    keys.push(...userWidget);\n  }\n}\n\nconst data = Social.keys(keys, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data === null) {\n  return \"Loading widgets\";\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].widget).map((kv) => ({\n        accountId,\n        widgetName: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderTag = (tag, tagBadge) => (\n  <a href={makeLink(accountId, tag)}>{tagBadge}</a>\n);\n\nconst renderItem = (a) => {\n  return (\n    <a\n      href={`#/${a.accountId}/widget/${a.widgetName}`}\n      className=\"text-decoration-none\"\n      key={JSON.stringify(a)}\n    >\n      <Widget\n        src=\"mob.near/widget/WidgetImage\"\n        props={{\n          tooltip: true,\n          accountId: a.accountId,\n          widgetName: a.widgetName,\n        }}\n      />\n    </a>\n  );\n};\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\nreturn (\n  <div className=\"d-flex flex-wrap gap-1 my-3\">\n    {state.allItems\n      .slice(0, props.limit ? parseInt(props.limit) : 999)\n      .map(renderItem)}\n  </div>\n);\n", "metadata": {"image": {"ipfs_cid": "bafkreicmrdnvktikwyu47pkrlhbmjzjupcv3lg52jlxpmgaxyqkhh7kxwa"}, "tags": {"app": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gordonjun.near/widget/PresidentProfileCard", "__row_index": 5}