{"tx_hash": "ANC8Fp4kD7EDYfmQQWCMEKq4nuBJgL1EHYNxK9FFWHhM", "action_id_social": "6KgmwHJeA2AiLh5TQphA2Ug2g7mt74pEgXcWwCokf7c8-1-widget", "block_id": 88235987, "block_timestamp": "2023-03-27 14:33:06.112", "signer_id": "chess-game.near", "widget_name": "ChessGameLobby", "source_code": "const { accountId } = context;\nconst contractId = \"app.chess-game.near\";\nconst chessGameWidget = \"chess-game.near/widget/ChessGame\";\n\nconst LobbyView = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 500px;\n    margin: 0 auto;\n\n    > * {\n        margin: 0.4rem 0;\n    }\n`;\nconst Button = styled.button`\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-radius: 4px;\n    font-size: ${(props) => (props.fontSize ? props.fontSize : \"1rem\")};\n`;\nconst Disclaimer = styled.div`\n    margin-top: 1rem;\n    font-style: italic;\n    font-size: 1.2rem;\n`;\n\nconst isRegistered = Near.view(contractId, \"storage_balance_of\", {\n  account_id: accountId,\n});\n\nconst registerAccount = () => {\n  Near.call(\n    contractId,\n    \"storage_deposit\",\n    {},\n    undefined,\n    \"50000000000000000000000\"\n  );\n};\n\nif (!isRegistered) {\n  return (\n    <LobbyView>\n      <h1>Chess On Chain</h1>\n      <Disclaimer>\n        You need to pay storage deposit of 0.05N first before being allowed to\n        play Chess On Chain\n      </Disclaimer>\n      <Button onClick={registerAccount} fontSize=\"1.2rem\">\n        Register Account\n      </Button>\n    </LobbyView>\n  );\n}\n\nState.init({\n  game_id: null,\n  difficulty: \"Easy\",\n});\n\nconst gameIds = Near.view(contractId, \"get_game_ids\", {\n  account_id: accountId,\n});\n\nconst GameSelector = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n\n    > * {\n        margin: 1rem;\n    }\n`;\nconst GameCreator = styled.div`\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    > * {\n        margin: 0.2rem 0;\n    }\n\n    h2 {\n        margin-bottom: 1.2rem;\n    }\n`;\n\nconst selectGame = (gameId) => () => {\n  State.update({\n    game_id: gameId,\n  });\n};\nconst returnToLobby = () => {\n  State.update({\n    game_id: null,\n  });\n};\nconst resign = () => {\n  Near.call(contractId, \"resign\", {\n    game_id: state.game_id,\n  });\n};\nconst createAiGame = () => {\n  Near.call(contractId, \"create_ai_game\", {\n    difficulty: state.difficulty,\n  });\n};\nconst selectDifficulty = (event) => {\n  State.update({\n    difficulty: event.target.value,\n  });\n};\n\nconst renderGameIds = () =>\n  gameIds.map((gameId) => {\n    const gameInfo = Near.view(contractId, \"game_info\", {\n      game_id: gameId,\n    });\n    return (\n      <Button onClick={selectGame(gameId)}>\n        <div>ID: {gameId[0]}</div>\n        <div>VS: AI ({gameInfo.black.Ai})</div>\n      </Button>\n    );\n  });\n\nreturn (\n  <LobbyView>\n    <h1>Chess On Chain</h1>\n    {state.game_id ? (\n      <>\n        <Button onClick={returnToLobby}>Return To Lobby</Button>\n        <Button onClick={resign}>Resign</Button>\n        <Widget\n          src={chessGameWidget}\n          props={Object.assign({}, { game_id: state.game_id })}\n        />\n      </>\n    ) : (\n      <>\n        {gameIds.length > 0 && (\n          <>\n            <h2>Select Game:</h2>\n            <GameSelector>{renderGameIds()}</GameSelector>\n          </>\n        )}\n        <GameCreator>\n          <h2>Create New AI Game:</h2>\n          <span>Difficulty:</span>\n          <select onChange={selectDifficulty} value={state.difficulty}>\n            <option value=\"Easy\">Easy</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Hard\">Hard</option>\n          </select>\n          <span>\n            <i>Higher difficulties consume more gas!</i>\n          </span>\n          <Button onClick={createAiGame} fontSize=\"1.4rem\">\n            Create\n          </Button>\n        </GameCreator>\n      </>\n    )}\n    <Disclaimer>\n      If you won or lost a game it will no longer be displayed. You can check\n      the most recent transactions status on{\" \"}\n      <a\n        target=\"_blank\"\n        href=\"https://explorer.near.org/accounts/app.chess-game.near\"\n      >\n        Near Explorer\n      </a>{\" \"}\n      or{\" \"}\n      <a\n        target=\"_blank\"\n        href=\"https://nearblocks.io/address/app.chess-game.near\"\n      >\n        Nearblocks\n      </a>\n      . Game results and history will be displayed once we implemented an\n      indexer and an API!\n    </Disclaimer>\n  </LobbyView>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chess-game.near/widget/ChessGameLobby", "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.game": NaN}