{"tx_hash": "BLzRKHQzAjdvrqjnVXV2C7YUBscsiSMnMjNgAZeqhLYS", "action_id_social": "6S2YSXzXir4oHoN3ECUaxwL8ZUeanZ6WJf67G6sJUCvJ-0-widget", "block_id": 88978014, "block_timestamp": "2023-04-06 20:31:42.345", "signer_id": "chess-game.near", "widget_name": "ChessBoard", "source_code": "const { board } = props;\nif (!board) return \"board prop required\";\n\nconst assetType = props.assetType || \"default\";\n\nconst assets = {\n  default: {\n    bp: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/p-black.svg\",\n    wp: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/P-white.svg\",\n    bn: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/n-black.svg\",\n    wn: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/N-white.svg\",\n    bb: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/b-black.svg\",\n    wb: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/B-white.svg\",\n    br: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/r-black.svg\",\n    wr: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/R-white.svg\",\n    bq: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/q-black.svg\",\n    wq: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/Q-white.svg\",\n    bk: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/k-black.svg\",\n    wk: \"https://raw.githubusercontent.com/nikfrank/react-chess-pieces/master/src/K-white.svg\",\n  },\n  hk: {\n    bp: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-bp.png\",\n    wp: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-wp.png\",\n    bn: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-bn.png\",\n    wn: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-wn.png\",\n    bb: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-bb.png\",\n    wb: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-wb.png\",\n    br: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-br.png\",\n    wr: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-wr.png\",\n    bq: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-bq.png\",\n    wq: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-wq.png\",\n    bk: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-bk.png\",\n    wk: \"https://arweave.net/OqbQKrKHNPuIqJ-hsuzRpu-JNI4S04Zbb9qJW2j7RQQ/chess-hk-wk.png\",\n  },\n};\n\nconst fieldSize = \"4rem\";\nconst Board = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nconst BoardRow = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nconst Legend = styled.div`\n  flex: 1 1 0;\n  max-width: ${fieldSize};\n  aspect-ratio: 1 / 1;\n  font-size: 1.6rem;\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst renderPiece = (piece) => {\n  switch (piece) {\n    case \" \":\n      return \"\";\n    case \"p\":\n      return <img alt=\"black pawn\" src={assets[assetType].bp} />;\n    case \"P\":\n      return <img alt=\"white pawn\" src={assets[assetType].wp} />;\n    case \"n\":\n      return <img alt=\"black knight\" src={assets[assetType].bn} />;\n    case \"N\":\n      return <img alt=\"white knight\" src={assets[assetType].wn} />;\n    case \"b\":\n      return <img alt=\"black bishop\" src={assets[assetType].bb} />;\n    case \"B\":\n      return <img alt=\"white bishop\" src={assets[assetType].wb} />;\n    case \"r\":\n      return <img alt=\"black rook\" src={assets[assetType].br} />;\n    case \"R\":\n      return <img alt=\"white rook\" src={assets[assetType].wr} />;\n    case \"q\":\n      return <img alt=\"black queen\" src={assets[assetType].bq} />;\n    case \"Q\":\n      return <img alt=\"white queen\" src={assets[assetType].wq} />;\n    case \"k\":\n      return <img alt=\"black king\" src={assets[assetType].bk} />;\n    case \"K\":\n      return <img alt=\"white king\" src={assets[assetType].wk} />;\n    default:\n      return \"\";\n  }\n};\n\nconst renderBoard = (board) => {\n  const boardRes = board.reverse().map((row, rowIndex) => {\n    const res = row.split(\"\").map((c, colIndex) => {\n      const background = (rowIndex + colIndex) % 2 === 0 ? \"#ddd\" : \"#555\";\n      const Field = styled.span`\n        flex: 1 1 auto;\n        max-width: ${fieldSize};\n        aspect-ratio: 1 / 1;\n        background: ${background};\n        position: relative;\n\n        img {\n          min-width: 100%;\n          min-height: 100%;\n          max-width: 100%;\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          right: 0;\n        }\n        `;\n      return <Field>{renderPiece(c)}</Field>;\n    });\n    res.unshift(<Legend>{8 - rowIndex}</Legend>);\n    return <BoardRow>{res}</BoardRow>;\n  });\n  boardRes.push(\n    <BoardRow>\n      <Legend></Legend>\n      <Legend>A</Legend>\n      <Legend>B</Legend>\n      <Legend>C</Legend>\n      <Legend>D</Legend>\n      <Legend>E</Legend>\n      <Legend>F</Legend>\n      <Legend>G</Legend>\n      <Legend>H</Legend>\n    </BoardRow>\n  );\n  return boardRes;\n};\n\nreturn <Board>{renderBoard(board)}</Board>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chess-game.near/widget/ChessBoard"}