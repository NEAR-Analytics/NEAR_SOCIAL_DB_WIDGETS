{"tx_hash": "89tZsdiwn6fpwHC5iGeJE1vZahwP73JiPG7uCUed9VgV", "action_id_social": "5zigwm8n9rSPAKecVQ8XjvYgGu5v4hsXKTFNF9gZDefF-0-widget", "block_id": 93897264, "block_timestamp": "2023-06-10T15:21:47.409Z", "signer_id": "ethpraguedemo.near", "widget_name": "Progress-Pool-Grantees", "source_code": "const Content = styled.div`\n  .post {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #eceef0;\n  margin-bottom: 72px;\n  overflow: auto;\n  scroll-behavior: smooth;\n\n  @media (max-width: 1200px) {\n    background: #f8f9fa;\n    border-top: 1px solid #eceef0;\n    margin: 0 -12px 48px;\n\n    > * {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled.a`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n  text-align: center;\n  text-decoration: none !important;\n\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: \"\";\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #59e692;\n  }\n`;\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n    console.log(\"2.: \", state);\n  }\n}\n\nconst proposalContract = \"0x6daA072A660814fa3c96961dfa11eee8A39a74b3\";\n\nconst proposalAbi = [\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"_hackathonEndTime\", type: \"uint256\" },\n      { internalType: \"address\", name: \"_votingTokenAddress\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  { inputs: [], name: \"not_in_proposalPeriod\", type: \"error\" },\n  { inputs: [], name: \"not_in_votingPeriod\", type: \"error\" },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalSubmitted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"proposalOwner\",\n        type: \"address\",\n      },\n      { indexed: false, internalType: \"uint8\", name: \"accept\", type: \"uint8\" },\n    ],\n    name: \"VoteCasted\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"SUBMISSION_PERIOD\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TRANSITION_PERIOD\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"VOTING_PERIOD\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"proposalIndex\", type: \"uint256\" },\n          { internalType: \"uint8\", name: \"decision\", type: \"uint8\" },\n        ],\n        internalType: \"structProposalVoting.Vote[]\",\n        name: \"_votes\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"castedVotes\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"hackathonEndTime\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"proposals\",\n    outputs: [\n      { internalType: \"string\", name: \"description\", type: \"string\" },\n      { internalType: \"address\", name: \"proposalOwner\", type: \"address\" },\n      { internalType: \"uint256\", name: \"votes\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"accepted\", type: \"bool\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalsCount\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"string\", name: \"_description\", type: \"string\" }],\n    name: \"submitProposal\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingToken\",\n    outputs: [{ internalType: \"contractIERC20\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\n// HELPER FUNCTIONS\n\nconst submitDescription = (strDescription, _referral) => {\n  if (!strDescription) {\n    return console.log(\"Description is missing\");\n  }\n  const proposal = new ethers.Contract(\n    proposalContract,\n    proposalAbi,\n    Ethers.provider().getSigner()\n  );\n\n  proposal.submitProposal(strDescription).then((transactionHash) => {\n    console.log(\"transactionHash is \" + transactionHash);\n    // add to proposal list\n  });\n};\n\n// FETCH CSS\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\n// OUTPUT UI\n\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nreturn (\n  <Theme>\n    <Content>\n      <Tabs>\n        <TabsButton\n          href={`https://near.org/embed/ethpraguedemo.near/widget/Progress-Pool`}\n          selected={state.selectedTab === \"overview\"}\n        >\n          For Voters\n        </TabsButton>\n\n        <TabsButton\n          href={`https://near.org/embed/ethpraguedemo.near/widget/Progress-Pool-Grantees`}\n          selected={state.selectedTab === \"apps\"}\n        >\n          For Grantees\n        </TabsButton>\n\n        <TabsButton\n          href={`https://near.org/embed/ethpraguedemo.near/widget/Progress-Pool-Proposals`}\n          selected={state.selectedTab === \"nfts\"}\n        >\n          Proposals\n        </TabsButton>\n      </Tabs>\n    </Content>\n\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Grantees</div>\n      <div class=\"SubHeader\">Submit a proposal and get funding.</div>\n\n      <div class=\"LidoStakeForm\">\n        <div class=\"LidoStakeFormInputContainer\">\n          <span class=\"LidoStakeFormInputContainerSpan1\"></span>\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              disabled={!state.sender}\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={state.strDescription}\n              onChange={(e) => State.update({ strDescription: e.target.value })}\n              placeholder=\"Description\"\n            />\n          </span>\n        </div>\n        {!!state.sender ? (\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() =>\n              submitDescription(state.strDescription, state.sender)\n            }\n          >\n            <span>Submit Proposal</span>\n          </button>\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Web3\"\n          />\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/ethpraguedemo.near/widget/Progress-Pool-Grantees", "__row_index": 5}