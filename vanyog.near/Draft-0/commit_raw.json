{"tx_hash": "8NHaHif6yC1ejPBnWA7mVQ4FPW7xL4c37Btw8MajJiKL", "action_id_social": "3omGJtzGZFRZzqn9QWjp8u7SouNojD45zFtbZUUMxddN-1-widget", "block_id": 83368145, "block_timestamp": "2023-01-20 07:39:09.605", "signer_id": "vanyog.near", "widget_name": "Draft-0", "source_code": "const accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\n\nconst token = Near.view(\"v1.pembrock.near\", \"get_tokens\", {\n  from_index: 0,\n  limit: 100,\n});\n\nconst note = Social.get(`${accountId}/experimental/note`);\n\nif (note === null) {\n  return \"Loading\";\n}\n\nState.init({ note: note || \"\" });\n\nreturn (\n  <div className=\"d-flex \">\n    <div className=\"ml-2\">\n      <div className=\"mb-2\">\n        <h4>Notepad</h4>\n        <textarea\n          type=\"text\"\n          rows={10}\n          className=\"form-control\"\n          value={state.note}\n          onChange={(e) => State.update({ note: e.target.value })}\n        />\n      </div>\n\n      <CommitButton data={{ experimental: { note: state.note } }}>\n        Save note\n      </CommitButton>\n    </div>\n\n    <div>\n      <Markdown text={state.note} />\n      // test\n    </div>\n  </div>\n);\n", "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/vanyog.near/widget/Draft-0", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.image": NaN, "metadata.tags.near-analytics": NaN, "metadata.tags.near-social": NaN, "metadata.tags.post": NaN, "metadata.image.nft.contractId": NaN, "metadata.image.nft.tokenId": NaN, "metadata": NaN, "metadata.tags.canto-test": NaN, "metadata.image.url": NaN, "metadata.tags.awesome": NaN, "metadata.tags.font": NaN, "metadata.tags.icons": NaN, "metadata.tags.graph": NaN, "metadata.tags.list": NaN, "metadata.tags.rank": NaN, "metadata.tags.app": NaN, "branch.draft.": NaN, "metadata.tags.ethdenver2023": NaN, "metadata.tags.hackathon": NaN, "metadata.tags.widget": NaN, "metadata.tags.astrodao": NaN, "metadata.tags.dao": NaN, "metadata.tags.meta-pool": NaN, "metadata.tags.staking": NaN, "metadata.tags.validators": NaN, "metadata.tags.vote": NaN}