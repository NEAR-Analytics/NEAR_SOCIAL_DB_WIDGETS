{"tx_hash": "D5hneG3YXXVjjGgLAZAr8JPdTVGBH3zAuWXigTMvkVrb", "action_id_social": "HTFRW6ryQ4WGeAyGw5F3i3feGMVoPDW3NcoUT4SnPWVL-0-widget", "block_id": 83304331, "block_timestamp": "2023-01-19 11:25:31.573", "signer_id": "vanyog.near", "widget_name": "JackWikiTest", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\n\nif (profile === null) {\n  return \"Loadig\";\n}\n\nconst test = Social.keys(\"*/articles\", \"final\");\nconst test2 = Social.keys(\"*/widget/JackWikiTest_CreateArticle\", \"final\");\n\nconsole.log(\"test2\", test2);\n\nconst testArray = Object.keys(test);\nconst resultArticles = [];\n\n// TODO make better checks for data\n!resultArticles.length &&\n  testArray &&\n  testArray.forEach((item, index, arr) => {\n    const data = JSON.parse(Social.get(`${item}/articles`));\n\n    if (Array.isArray(data)) resultArticles.push(...data);\n  });\nconsole.log(\"resultArticles\", resultArticles);\n\nconst initialBody = `# Markdown heading level 1\n\nThis is a markdown paragraph. So, here are a few examples of markdown syntax and what it looks like.\n\n1. markdown\n2. ordered\n3. list`;\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nconst initialCreateArticleState = {\n  articleId: \"\",\n  articleBody: initialBody,\n  errorId: \"\",\n  errorBody: \"\",\n};\n\nState.init({\n  currentTab: \"loadarticles\",\n  createArticle: initialCreateArticleState,\n});\n\nconst getArticleData = () => {\n  const args = {\n    articleId: state.createArticle.articleId,\n    author: accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: Date.now(),\n    body: state.articleBody,\n    version: 0,\n    navigation_id: null,\n  };\n  return args;\n};\n\n// === SAVE HANDLER ===\nconst saveHandler = (e) => {\n  State.update({ ...state, createArticle: { errorId: \"\", errorBody: \"\" } });\n  if (state.createArticle.articleId && state.createArticle.articleBody) {\n    const isArticleIdDublicated =\n      articles &&\n      articles.some(\n        (articleId) => articleId.toLowerCase() === state.articleId.toLowerCase()\n      );\n\n    if (!isArticleIdDublicated) {\n      console.log(\"SAVE ARTICLE\");\n      const newArticle = getArticleData();\n\n      Social.set({ articles: JSON.stringify([...state.articles, newArticle]) });\n    } else {\n      State.update({ ...state, errorId: errTextDublicatedId });\n    }\n  } else {\n    if (!state.articleId) {\n      State.update({ ...state, errorId: errTextNoId });\n    }\n    if (!state.articleBody) {\n      State.update({ ...state, errorBody: errTextNoBody });\n    }\n  }\n};\n\n// === CANCEL HANDLER ===\nconst cancelHandler = () => {\n  State.update({\n    ...state,\n    createArticle: {\n      articleId: \"\",\n      articleBody: \"\",\n      errorId: null,\n      errorBody: null,\n    },\n  });\n};\n\nconst description = profile.description;\n\nconst pills = [\n  { id: \"articles\", title: \"Articles\" },\n  { id: \"authors\", title: \"Authors\" },\n  { id: \"create\", title: \"Create Article\" },\n];\n\nconst handleArticle = (e, article) => {\n  console.log(\"click article\");\n  console.log(\"article:\", article);\n  State.update({ ...state, article: article, authorId: undefined });\n};\n\nconst handleAuthor = (e, authorId) => {\n  console.log(\"click author\");\n  State.update({ ...state, articleId: undefined, authorId });\n};\n\nconst getDate = (timestamp) => {\n  console.log(\"timestamp\", timestamp);\n  const date = new Date(Number(timestamp));\n  return date.toDateString();\n};\n\nconst saveArticle = (args) => {\n  console.log(\"save article\");\n};\n\nconst getAuthors = () => {\n  const authors = Array.from(resultArticles, ({ author }) => author);\n  const uniqAuthors = Array.from(new Set(authors));\n  console.log(\"authors\", authors);\n  console.log(\"uniqAuthors\", uniqAuthors);\n\n  return (\n    <ul>\n      <li>total authors: {uniqAuthors.length} </li>\n      {uniqAuthors.map((author) => (\n        <li>\n          <a\n            href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${author}`}\n          >\n            {author}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\nreturn (\n  <>\n    <ul className=\"nav nav-pills nav-fill mb-4\" id=\"pills-tab\" role=\"tablist\">\n      {pills.map(({ id, title }, i) => (\n        <li className=\"nav-item\" role=\"presentation\" key={i}>\n          <button\n            className={`nav-link ${i === 0 ? \"active\" : \"\"}`}\n            id={`pills-${id}-tab`}\n            data-bs-toggle=\"pill\"\n            data-bs-target={`#pills-${id}`}\n            type=\"button\"\n            role=\"tab\"\n            aria-controls={`pills-${id}`}\n            aria-selected={i === 0}\n            onClick={() => {\n              const key = `load${id}`;\n\n              State.update({\n                articleId: undefined,\n                authorId: undefined,\n                currentTab: key,\n              });\n              console.log(\"state\", state);\n            }}\n          >\n            {title}\n          </button>\n        </li>\n      ))}\n    </ul>\n\n    <div className=\"tab-content\" id=\"pills-tabContent\">\n      <div\n        className=\"tab-pane fade show active\"\n        id=\"pills-main\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-main-tab\"\n      >\n        {state.currentTab === \"loadarticles\" && (\n          <div>\n            hello\n            {console.log(\"state\", state)}\n            <ul>\n              {resultArticles &&\n                resultArticles.map((article, index, articles) => (\n                  <li key={article}>\n                    #{\" \"}\n                    <a\n                      href=\"#\"\n                      onClick={(e) => handleArticle(e, articles[index])}\n                    >\n                      {index + 1} {article.articleId}\n                    </a>\n                  </li>\n                ))}\n            </ul>\n            )\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"tab-pane fade\"\n        id=\"pills-authors\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-authors-tab\"\n      >\n        {state.currentTab === \"loadauthors\" && (\n          <div>{resultArticles && getAuthors()}</div>\n        )}\n      </div>\n\n      <div\n        className=\"tab-pane fade\"\n        id=\"pills-create\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-create-tab\"\n      >\n        {state.currentTab === \"loadcreate\" && (\n          <div>\n            <h1 className=\"mb-3\"> Create Article</h1>\n            <div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                  onClick={saveHandler}\n                >\n                  Save Article\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={cancelHandler}\n                >\n                  Cancel / Clear\n                </button>\n              </div>\n              <div class=\"d-flex flex-column pt-3\">\n                <label for=\"inputArticleId\">\n                  Input article id (case-sensitive, without spaces):\n                </label>\n                <label for=\"inputArticleId\" class=\"small text-danger\">\n                  {state.errorId}\n                </label>\n                <input\n                  className=\"form-control mt-2\"\n                  id=\"inputArticleId\"\n                  value={state.articleId}\n                  onChange={(e) => {\n                    State.update({\n                      ...state,\n                      articleId: e.target.value.replace(/\\s+/g, \"\"),\n                    });\n                  }}\n                />\n              </div>\n              <div class=\"d-flex flex-column pt-3\">\n                <label for=\"textareaArticleBody\">\n                  Input article body (in makrdown format):\n                </label>\n                <label for=\"textareaArticleBody\" class=\"small text-danger\">\n                  {state.errorBody}\n                </label>\n                <textarea\n                  id=\"textareaArticleBody\"\n                  type=\"text\"\n                  value={state.articleBody}\n                  rows={10}\n                  className=\"form-control mt-2\"\n                  onChange={(e) => {\n                    State.update({ ...state, articleBody: e.target.value });\n                  }}\n                />\n              </div>\n              <div class=\"pt-3\">\n                Article preview:\n                <Markdown text={state.articleBody} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vanyog.near/widget/JackWikiTest"}