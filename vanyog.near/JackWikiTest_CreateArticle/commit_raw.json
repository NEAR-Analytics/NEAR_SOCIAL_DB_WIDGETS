{"tx_hash": "6Da6DSapjzEKLwJhAwGEQyGRZWfNwNX38MEiLr2U7zWk", "action_id_social": "HRwNgicGAm8PKRr7NeLD8VNGN69satCpTPNwXawQbjmw-0-widget", "block_id": 83297588, "block_timestamp": "2023-01-19 09:18:45.792", "signer_id": "vanyog.near", "widget_name": "JackWikiTest_CreateArticle", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\n\nif (profile === null) {\n  return \"Loading \";\n}\n\nconst initialBody = `# Markdown heading level 1\n\nThis is a markdown paragraph. So, here are a few examples of markdown syntax and what it looks like.\n\n1. markdown\n2. ordered\n3. list`;\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nconst initialState = {\n  articleId: \"\",\n  articleBody: initialBody,\n  errorId: \"\",\n  errorBody: \"\",\n};\n\nState.init(initialState);\n\nconst getArticleData = () => {\n  const args = {\n    articleId: state.articleId,\n    author: accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: Date.now(),\n    body: state.articleBody,\n    version: 0,\n    navigation_id: null,\n  };\n  return args;\n};\n\n// === SAVE HANDLER ===\nconst saveHandler = (e) => {\n  State.update({ ...state, errorId: \"\", errorBody: \"\" });\n\n  if (state.articleId && state.articleBody) {\n    const test = Social.keys(\"*/articles\", \"final\");\n    const testArray = Object.keys(test);\n    const articles = [];\n\n    // TODO make better checks for data\n    testArray &&\n      testArray.forEach((item, index) => {\n        const data = JSON.parse(Social.get(`${item}/articles`));\n\n        if (Array.isArray(data)) articles.push(...data);\n      });\n    console.log(\"articles. \", articles);\n\n    const isArticleIdDublicated =\n      articles &&\n      articles.some(\n        ({ articleId }) =>\n          articleId.toLowerCase() === state.articleId.toLowerCase()\n      );\n\n    console.log(\"isArticleIdDublicated\", isArticleIdDublicated);\n\n    if (!isArticleIdDublicated) {\n      console.log(\"SAVE ARTICLE\");\n      const newArticle = {\n        articleId: state.articleId,\n        author: accountId,\n        lastEditor: accountId,\n        timeLastEdit: Date.now(),\n        timeCreate: Date.now(),\n        body: state.articleBody,\n        version: 0,\n        navigation_id: null,\n      };\n\n      console.log(\n        \"article: \",\n        articles.filter(({ author }) => author === accountId)\n      );\n      const currentAuthorArticles = articles.filter(\n        ({ author }) => author === accountId\n      );\n      const arrayOfArticles = [...currentAuthorArticles, newArticle];\n\n      console.log(\"arrayOfArticles\", arrayOfArticles);\n      Social.set({ articles: JSON.stringify(arrayOfArticles) });\n    } else {\n      State.update({ ...state, errorId: errTextDublicatedId });\n    }\n  } else {\n    if (!state.articleId) {\n      State.update({ ...state, errorId: errTextNoId });\n    }\n    if (!state.articleBody) {\n      State.update({ ...state, errorBody: errTextNoBody });\n    }\n  }\n};\n\n// === CANCEL HANDLER ===\nconst cancelHandler = () => {\n  State.update({\n    articleId: \"\",\n    articleBody: \"\",\n    errorId: null,\n    errorBody: null,\n  });\n};\n\nreturn (\n  <div>\n    <h1 className=\"mb-3\"> Create Article</h1>\n    <div>\n      <div>\n        <button type=\"submit\" className=\"btn btn-success\" onClick={saveHandler}>\n          Save Article\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={cancelHandler}\n        >\n          Cancel / Clear\n        </button>\n      </div>\n      <div class=\"d-flex flex-column pt-3\">\n        <label for=\"inputArticleId\">\n          Input article id (case-sensitive, without spaces):\n        </label>\n        <label for=\"inputArticleId\" class=\"small text-danger\">\n          {state.errorId}\n        </label>\n        <input\n          className=\"form-control mt-2\"\n          id=\"inputArticleId\"\n          value={state.articleId}\n          onChange={(e) => {\n            State.update({\n              ...state,\n              articleId: e.target.value.replace(/\\s+/g, \"\"),\n            });\n          }}\n        />\n      </div>\n      <div class=\"d-flex flex-column pt-3\">\n        <label for=\"textareaArticleBody\">\n          Input article body (in makrdown format):\n        </label>\n        <label for=\"textareaArticleBody\" class=\"small text-danger\">\n          {state.errorBody}\n        </label>\n        <textarea\n          id=\"textareaArticleBody\"\n          type=\"text\"\n          value={state.articleBody}\n          rows={10}\n          className=\"form-control mt-2\"\n          onChange={(e) => {\n            State.update({ ...state, articleBody: e.target.value });\n          }}\n        />\n      </div>\n      <div class=\"pt-3\">\n        Article preview:\n        <Markdown text={state.articleBody} />\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vanyog.near/widget/JackWikiTest_CreateArticle"}