{"tx_hash": "H2kaq1S3pzecwutZzQzZmemW1z5Me7DWswEtgW3dYsDN", "action_id_social": "98S3CjqxhZtbaDyEpJ6MX8yTtSLAyRy9wU7TLq8boGGi-0-widget", "block_id": 87131601, "block_timestamp": "2023-03-12 13:52:22.851", "signer_id": "ciencia.near", "widget_name": "Kudos", "source_code": "State.init({\r\n  input: \"\",\r\n  url: \"\",\r\n  commentMap: \"\",\r\n  onChange: ({ content }) => {\r\n    State.update({ content });\r\n  },\r\n});\r\nconst widgetOwner = \"mob.near\";\r\nconst widgetName = \"Kudos\";\r\nconst widgetPath = `webuidl.near/widget/${widgetName}`;\r\nconst metadata = props.metadata ?? Social.getr(`${widgetPath}/metadata`);\r\n\r\nconst card = {\r\n  background: \"linear-gradient(to right, #4deeea, #f000ff)\",\r\n  border: \"1px solid black\",\r\n  borderRadius: \"5px\",\r\n  textAlign: \"center\",\r\n  color: \"white\",\r\n  padding: \"10px\",\r\n};\r\n\r\nconst button = {\r\n  borderRadius: \"5px\",\r\n  margin: \"5px 0\",\r\n  padding: \"8px\",\r\n  textAlign: \"center\",\r\n  background: \"linear-gradient(to left, #FFD50D, #4498E0)\",\r\n  border: \"2px solid black\",\r\n  fontWeight: \"bold\",\r\n};\r\n\r\nconst imgWH = {\r\n  width: \"25px\",\r\n  height: \"25px\",\r\n};\r\n\r\nconst urlPrefix = \"https://\";\r\nconst accountId = props.accountId ?? \"*\";\r\n\r\nconst data = Social.index(\"kudo\", \"answer\");\r\nif (!data) {\r\n  return \"Loading answers\";\r\n}\r\nconst upvotes = Social.index(\"kudo\", \"upvote\");\r\nif (!upvotes) {\r\n  return \"Loading upvotes\";\r\n}\r\nconst blackList = [\"webuidl.near\"];\r\nconst whiteListData = data.filter((d) => !blackList.includes(d.accountId));\r\nconst sortedData = whiteListData.sort(\r\n  (d1, d2) => d2.blockHeight - d1.blockHeight\r\n);\r\n\r\nlet upvotesMap = {};\r\nfor (let i = 0; i < upvotes.length; i++) {\r\n  const vote = upvotes[i];\r\n  const upvoteBlockHeight = vote.value.blockHeight;\r\n  if (!upvotesMap[upvoteBlockHeight]) {\r\n    upvotesMap[upvoteBlockHeight] = 0;\r\n  }\r\n  upvotesMap[upvoteBlockHeight] += 1;\r\n}\r\nconsole.log(upvotesMap);\r\n\r\nconst finalData = sortedData;\r\n\r\n/* BEGIN Common.componse  */\r\nconst composeData = () => {\r\n  const data = {\r\n    post: {\r\n      main: JSON.stringify(state.content),\r\n    },\r\n    index: {\r\n      post: JSON.stringify({\r\n        key: \"main\",\r\n        value: {\r\n          type: \"md\",\r\n        },\r\n      }),\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    type: \"social\",\r\n    path: `${context.accountId}/post/main`,\r\n  };\r\n\r\n  const notifications = state.extractMentionNotifications(\r\n    state.content.text,\r\n    item\r\n  );\r\n\r\n  if (notifications.length) {\r\n    data.index.notify = JSON.stringify(\r\n      notifications.length > 1 ? notifications : notifications[0]\r\n    );\r\n  }\r\n\r\n  const hashtags = state.extractHashtags(state.content.text);\r\n\r\n  if (hashtags.length) {\r\n    data.index.hashtag = JSON.stringify(\r\n      hashtags.map((hashtag) => ({\r\n        key: hashtag,\r\n        value: item,\r\n      }))\r\n    );\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\n/* END Common.componse  */\r\n\r\n/* BEGIN CommentButton  */\r\n\r\nfunction startCommentTo(blockHeight) {\r\n  console.log(1);\r\n  let cm = JSON.parse(state.commentMap);\r\n  console.log(2);\r\n  if (!cm) cm = [];\r\n  console.log(3);\r\n  cm[blockHeight] = 1;\r\n  console.log(4);\r\n  State.update({ commentMap: JSON.stringify(cm) });\r\n  console.log(5);\r\n}\r\n\r\nconst RenderCommentInput = (blockHeight) => {\r\n  console.log(21);\r\n  let cm = JSON.parse(state.commentMap);\r\n  return cm[blockHeight] == 1 ? (\r\n    <div>\r\n      <p>Comment</p>\r\n      <textarea\r\n        style={{\r\n          backgroundColor: \"rgb(230, 230, 230)\",\r\n          border: \"1px solid #ced4da\",\r\n          borderRadius: \"0.375rem\",\r\n        }}\r\n        rows=\"1\"\r\n        value={state.url}\r\n      />\r\n      <CommitButton style={button}>Comment</CommitButton>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\n/* END CommentButton  */\r\n\r\nreturn (\r\n  <div>\r\n    <div className=\"d-inline-block\" style={{ width: \"10em\", height: \"10em\" }}>\r\n      <Widget\r\n        src=\"mob.near/widget/Image\"\r\n        props={{\r\n          image: metadata.image,\r\n          className: \"w-100 h-100 shadow\",\r\n          style: { objectFit: \"cover\", borderRadius: \"2em\" },\r\n          thumbnail: false,\r\n          fallbackUrl:\r\n            \"https://ipfs.near.social/ipfs/bafkreido7gsk4dlb63z3s5yirkkgrjs2nmyar5bxyet66chakt2h5jve6e\",\r\n          alt: widgetName,\r\n        }}\r\n      />\r\n    </div>\r\n    <br />\r\n    <br />\r\n    <p>An accolade, a Thank You, a Job Well Done. Give em a Kudo!\ud83d\udc4f </p>\r\n    <Widget\r\n      src={`${widgetOwner}/widget/Common.Compose`}\r\n      props={{\r\n        onChange: state.onChange,\r\n        onHelper: ({ extractMentionNotifications, extractHashtags }) => {\r\n          State.update({ extractMentionNotifications, extractHashtags });\r\n        },\r\n        composeButton: (onCompose) => (\r\n          <CommitButton\r\n            disabled={!state.content}\r\n            force\r\n            className=\"btn btn-dark rounded-3\"\r\n            data={composeData}\r\n            onCommit={() => {\r\n              onCompose();\r\n            }}\r\n          >\r\n            Kudos!\r\n          </CommitButton>\r\n        ),\r\n      }}\r\n    />\r\n    {state.content && (\r\n      <div className=\"mt-3\">\r\n        <Widget\r\n          src=\"mob.near/widget/MainPage.Post\"\r\n          props={{\r\n            accountId: context.accountId,\r\n            content: state.content,\r\n            blockHeight: \"now\",\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    <div className=\"d-flex flex-column w-75 justify-content-around\">\r\n      <textarea\r\n        style={{\r\n          backgroundColor: \"rgb(230, 230, 230)\",\r\n          border: \"1px solid #ced4da\",\r\n          borderRadius: \"0.375rem\",\r\n        }}\r\n        rows=\"2\"\r\n        value={state.input}\r\n        onChange={(e) => {\r\n          State.update({ input: e.target.value });\r\n        }}\r\n      />\r\n      <p>Url:</p>\r\n      <textarea\r\n        style={{\r\n          backgroundColor: \"rgb(230, 230, 230)\",\r\n          border: \"1px solid #ced4da\",\r\n          borderRadius: \"0.375rem\",\r\n        }}\r\n        rows=\"1\"\r\n        value={state.url}\r\n        onChange={(e) => {\r\n          State.update({ url: e.target.value });\r\n        }}\r\n      />\r\n    </div>\r\n    <CommitButton\r\n      style={button}\r\n      data={{\r\n        index: {\r\n          kudo: JSON.stringify(\r\n            {\r\n              key: \"answer\",\r\n              value: {\r\n                answer: state.input,\r\n                url: state.url,\r\n              },\r\n            },\r\n            undefined,\r\n            0\r\n          ),\r\n        },\r\n      }}\r\n      onCommit={() => {\r\n        State.update({\r\n          reloadData: true,\r\n        });\r\n      }}\r\n    >\r\n      Kudos!\r\n    </CommitButton>\r\n    <br />\r\n    <br />\r\n    <div>\r\n      {sortedData\r\n        ? sortedData.map((d) => (\r\n            <div style={card}>\r\n              <Widget\r\n                src=\"mob.near/widget/ProfileImage\"\r\n                props={{\r\n                  accountId: d.accountId,\r\n                  className: \"d-inline-block\",\r\n                  style: { width: \"1.5em\", height: \"1.5em\" },\r\n                }}\r\n              />\r\n              <a\r\n                href={`#/mob.near/widget/ProfilePage?accountId=${d.accountId}`}\r\n              >\r\n                {d.accountId}\r\n              </a>\r\n              I BuiDL... <b>{d.value.answer}&nbsp;&nbsp;&nbsp;</b>\r\n              <b>\r\n                <a href={`${urlPrefix}${d.value.url}`} target=\"_blank\">\r\n                  {d.value.url}\r\n                </a>\r\n                &nbsp;&nbsp;&nbsp;\r\n              </b>\r\n              <Widget\r\n                src=\"mob.near/widget/CommentButton\"\r\n                props={{\r\n                  accountId: d.accountId,\r\n                  onClick: () => startCommentTo(d.blockHeight),\r\n                }}\r\n              />\r\n              <Widget\r\n                src=\"mob.near/widget/FollowButton\"\r\n                props={{ accountId: d.accountId }}\r\n              />\r\n              {RenderCommentInput(d.blockHeight)}\r\n              <div>\r\n                <CommitButton\r\n                  data={{\r\n                    index: {\r\n                      kudo: JSON.stringify(\r\n                        {\r\n                          key: \"upvote\",\r\n                          value: {\r\n                            blockHeight: d.blockHeight,\r\n                          },\r\n                        },\r\n                        undefined,\r\n                        0\r\n                      ),\r\n                    },\r\n                  }}\r\n                >\r\n                  Upvote\r\n                </CommitButton>\r\n                <span>\r\n                  {upvotesMap[d.blockHeight] ? upvotesMap[d.blockHeight] : 0}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        : \"Loading...\"}\r\n    </div>\r\n  </div>\r\n);\r\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciencia.near/widget/Kudos", "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.great-job": NaN, "metadata.tags.kudo": NaN, "metadata.tags.lets-go": NaN, "metadata.tags.well-done": NaN, "metadata": NaN}