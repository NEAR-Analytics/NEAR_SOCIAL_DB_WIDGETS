{"tx_hash": "3UxaH4u4PsG5zCx4Ht9NtVgGQruogi4eKstthACxhMCP", "action_id_social": "22z6cknE5av9AjpMRTL1Uneuj48hF3S4SNcPkJNKDPJ2-0-widget", "block_id": 80496099, "block_timestamp": "2022-12-12 16:39:21.254", "signer_id": "djwine_official.near", "widget_name": "Leaderboard", "source_code": "// A COMMON READ-ONLY WIDGET CONSISTS OF THE FOLLOWING PARTS:\n\n/* ============================================================\n   PREPARING INPUT DATA\n   taking data from passed in {properties} or {context}\n   ============================================================ */\n\nconst loading = context.loading;\nif (loading) return \"Loading\";\n\n/* ============================================================\n   FETCHING DATA\n   fetching the data from the SocialDB contract.\n   ============================================================ */\n\nlet graph = Social.index(\"graph\", \"follow\");\nconsole.log(\"graph\", graph);\n// graph.forEach((i) => console.log(i));\n\n// ============================================================\n// PROCESSING DATA\n// filtering the data, sorting it, etc.\n\nlet follows = graph.map((g) => ({\n  follower: g.accountId,\n  followed: g.value.accountId,\n  blockHeight: g.blockHeight,\n}));\n\nconsole.log(\"follows\", follows);\n\nlet followed = follows\n  .reduce((acc, i) => {\n    let result = acc.findIndex((el) => el.followed === i.followed);\n    if (result === -1) {\n      acc.push({ followed: i.followed, count: 1 });\n    } else {\n      let el = {\n        followed: i.followed,\n        count: acc[result].count + 1,\n      };\n      acc[result] = el;\n    }\n    return acc;\n  }, [])\n  .sort((a, b) => b.count - a.count);\n\nconsole.log(\"followed\", followed);\n\nlet followers = follows\n  .reduce((acc, i) => {\n    let result = acc.findIndex((el) => el.follower === i.follower);\n    if (result === -1) {\n      acc.push({ follower: i.follower, count: 1 });\n    } else {\n      let el = {\n        follower: i.follower,\n        count: acc[result].count + 1,\n      };\n      acc[result] = el;\n    }\n    return acc;\n  }, [])\n  .sort((a, b) => b.count - a.count);\n\nconsole.log(\"followers\", followers);\n\n// ============================================================\n// RENDERING DATA\n// rendering the data using JSX components\nreturn (\n  <>\n    <h1 class=\"mb-4\">Leaderboard</h1>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <Widget\n            src=\"djwine_official.near/widget/ProfileTable\"\n            props={{\n              title: \"Followed\",\n              data: followed,\n              key: {\n                id: \"followed\",\n                label: \"Account\",\n                url: \"https://near.social/#/mob.near/widget/ProfilePage?accountId=\",\n              },\n              value: {\n                id: \"count\",\n                label: \"Followed by\",\n              },\n            }}\n          />\n        </div>\n        <div class=\"col\">\n          <Widget\n            src=\"djwine_official.near/widget/ProfileTable\"\n            props={{\n              title: \"Followers\",\n              data: followers,\n              key: {\n                id: \"follower\",\n                label: \"Account\",\n                url: \"https://near.social/#/mob.near/widget/ProfilePage?accountId=\",\n              },\n              value: {\n                id: \"count\",\n                label: \"Following\",\n              },\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/djwine_official.near/widget/Leaderboard"}