{"tx_hash": "3ZwRTVdxGj69DbsTw5zjYfrmr5njocWqrtXE61XLbyVk", "action_id_social": "7vxqUGRqTS9dZyx8RhcLddSXa4pDxeU8E5gQbj4a6gqK-1-widget", "block_id": 80272783, "block_timestamp": "2022-12-09 16:32:33.033", "signer_id": "djwine_official.near", "widget_name": "Leaderboard", "source_code": "console.log(\"context\", context);\n\nconst accountId = context.accountId;\nconst loading = context.loading;\n\nif (loading) return \"Loading\";\nif (!accountId) return \"Please sign in with NEAR wallet to use this widget\";\n\nlet profile = Social.getr(`${accountId}/profile`);\n// console.log(\"profile\", profile);\n\nlet graph = Social.index(\"graph\", \"follow\");\n// console.log(\"graph\");\n// graph.forEach((i) => console.log(i));\n\nlet follows = graph.map((g) => [g.accountId, g.value.accountId, g.blockHeight]);\n\nlet followers = graph\n  .map((g) => g.accountId)\n  .reduce((acc, i) => {\n    let result = acc.findIndex((el) => el.accountId === i);\n    if (result === -1) {\n      acc.push({ accountId: i, follows: 1 });\n    } else {\n      let el = {\n        accountId: i,\n        follows: acc[result].follows + 1,\n      };\n      acc[result] = el;\n    }\n\n    return acc;\n  }, [])\n  .sort((a, b) => b.follows - a.follows);\n\nreturn (\n  <>\n    <h1>Leaderboard</h1>\n    <div className=\"table-responsive\">\n      <table className=\"table table-striped\">\n        <thead>\n          <th>Account</th>\n          <th>Other Accounts Followed</th>\n        </thead>\n\n        <tbody>\n          {followers.map((pool) => (\n            <tr className=\"align-middle\">\n              <th scope=\"row\">{pool.accountId}</th>\n              <td>{pool.follows}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/djwine_official.near/widget/Leaderboard"}