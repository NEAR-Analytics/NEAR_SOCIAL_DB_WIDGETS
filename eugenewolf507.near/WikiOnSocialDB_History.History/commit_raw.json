{"tx_hash": "H3xMi3v8UKZZhbHFzsMQzVpaK8Lcpn9evEuQ8qFn6szf", "action_id_social": "5nfhETj4ZHWsNEPPsrfUjqXimG5jcCR5X6sSSyQz8W5o-0-widget", "block_id": 86229884, "block_timestamp": "2023-02-28 09:25:40.448", "signer_id": "eugenewolf507.near", "widget_name": "WikiOnSocialDB_History.History", "source_code": "/*\n---props---\ncount(count: number)?: function,\n*/\nconst authorForWidget = \"eugenewolf507.near\";\nconst addressForArticles = \"wikiTest2Article\";\n\n// if (typeof props.widgetPath !== \"string\")\n//   return \"send {widgetPath} as string in props\";\n\nState.init({\n  selectedTab: \"code\",\n  selectedBlockHeight: null,\n});\n\n// ========== GET INDEX ARRAY FOR ARTICLES ==========\nconst postsIndex = Social.index(addressForArticles, \"main\", {\n  order: \"desc\",\n  accountId: undefined,\n});\n// ========== GET ALL ARTICLES ==========\nconst resultArticles =\n  postsIndex &&\n  postsIndex.reduce((acc, { accountId, blockHeight }) => {\n    const postData = Social.get(\n      `${accountId}/${addressForArticles}/main`,\n      blockHeight\n    );\n    const postDataWithBlockHeight = { ...JSON.parse(postData), blockHeight };\n    return [...acc, postDataWithBlockHeight];\n  }, []);\n// ========== FIND ALL VERSIONS OF ONE ARTICLE ==========\nconst filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (article.articleId === \"FirstNewDBTest\") {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nif (filteredArticles === null) return \"loading...\";\n\nlet blocksChanges =\n  filteredArticles &&\n  filteredArticles.map((item) => ({\n    blockHeight: item.blockHeight,\n    lastEditor: item.lastEditor,\n  }));\n\n// === END ===\n\nif (props.count) props.count(blocksChanges.length);\n\n// if (blocksChanges) blocksChanges = blocksChanges?.sort((a, b) => b - a);\n\nif (!state.selectedBlockHeight) state.selectedBlockHeight = blocksChanges[0];\n\nfunction getDatastringFromBlockHeight(blockHeight) {\n  const block = Near.block(blockHeight);\n  const date = new Date(block.header.timestamp_nanosec / 1e6);\n  return date.toDateString() + \" \" + date.toLocaleTimeString();\n}\n\nconst renderBlockChangesLink = (blockHeight) => {\n  return (\n    <div>\n      <button\n        className={`list-group-item list-group-item-action ${\n          state.selectedBlockHeight.blockHeight != blockHeight\n            ? \"\"\n            : \"list-group-item-info\"\n        }`}\n        onClick={() => {\n          State.update({ selectedBlockHeight: blockHeight });\n        }}\n      >\n        #{blockHeight.blockHeight} *{\" \"}\n        {getDatastringFromBlockHeight(blockHeight.blockHeight)}\n      </button>\n    </div>\n  );\n};\n\nfunction blockHeightToWidgetCode(blockHeightObject) {\n  const index = blocksChanges.findIndex(\n    (el) => el.blockHeight == blockHeightObject.blockHeight\n  );\n  return (\n    <Widget\n      style={{ minHeight: \"200px\" }}\n      key={blockHeightObject.blockHeight}\n      src={`${authorForWidget}/widget/WikiOnSocialDB_History.ArticleHistoryCard`}\n      props={{\n        pathToWidget: `${blockHeightObject.lastEditor}/${addressForArticles}/main`,\n        currentBlockHeight: blockHeightObject.blockHeight,\n        prevBlockHeight: blocksChanges[index + 1].blockHeight,\n      }}\n    />\n  );\n}\n\nfunction blockHeightToWidgetRender(blockHeight) {\n  const index = blocksChanges.findIndex((el) => el.blockHeight == blockHeight);\n  return (\n    <Widget\n      style={{ minHeight: \"200px\" }}\n      key={blockHeight}\n      src={`bozon.near/widget/WidgetHistory.RenderCode`}\n      props={{\n        pathToWidget: `${\n          blocksChanges[index + 1].lastEditor\n        }/${addressForArticles}/main`,\n        currentBlockHeight: blockHeight,\n        prevBlockHeight: blocksChanges[index + 1].blockHeight,\n      }}\n    />\n  );\n}\n\n//styles forked from calebjacob.near/widget/Activity\nconst Tabs = styled.div`\n  display: flex;\n  padding: 0 12px;\n  height: 48px;\n  border-bottom: 1px solid #ECEEF0;\n`;\n\nconst TabsButton = styled.button`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n\n  &:hover {\n    color: #11181C;\n  }\n\n  &::after {\n    content: '';\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 12px;\n    right: 12px;\n    height: 3px;\n    background: #0091FF;\n  }\n`;\n\nreturn (\n  <div>\n    {/* === START === */}\n    <button onClick={handler}>GET DATA (delete thos button)</button>\n    {/* === END === */}\n\n    {!blocksChanges ? (\n      <div>incorrent widget path</div>\n    ) : (\n      <div>\n        <div div class=\"card mb-3\">\n          <h3 class=\"card-header\">{blocksChanges.length} Commits</h3>\n          <div class=\"list-group\">\n            {blocksChanges\n              .slice(0, 5)\n              .map((height) => renderBlockChangesLink(height))}\n            <div class=\"collapse\" id=\"collapseExample\">\n              {blocksChanges\n                .slice(5)\n                .map((height) => renderBlockChangesLink(height))}\n            </div>\n            {blocksChanges.length > 5 && (\n              <button\n                class=\"list-group-item active\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseExample\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseExample\"\n              >\n                Show all\n              </button>\n            )}\n          </div>\n        </div>\n\n        <Tabs>\n          <TabsButton\n            type=\"button\"\n            onClick={() =>\n              State.update({\n                selectedTab: \"code\",\n              })\n            }\n            selected={state.selectedTab == \"code\"}\n          >\n            Code\n          </TabsButton>\n\n          <TabsButton\n            type=\"button\"\n            onClick={() =>\n              State.update({\n                selectedTab: \"render\",\n              })\n            }\n            selected={state.selectedTab == \"render\"}\n          >\n            Render\n          </TabsButton>\n        </Tabs>\n\n        {state.selectedTab == \"code\" && (\n          <div>{blockHeightToWidgetCode(state.selectedBlockHeight)}</div>\n        )}\n\n        {state.selectedTab == \"render\" && (\n          <div>{blockHeightToWidgetRender(state.selectedBlockHeight)}</div>\n        )}\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/WikiOnSocialDB_History.History"}