{"tx_hash": "5KzVXQV1p27EuSDJHjSF2ZTLLpraGUSJX2eeewpFi3BM", "action_id_social": "8m1rodaibiU727agGbM85E39LYqACdRXSgcJt5FXMgV2-0-widget", "block_id": 83392219, "block_timestamp": "2023-01-20 15:20:21.319", "signer_id": "eugenewolf507.near", "widget_name": "Jack2WikiTest", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\n\nif (profile === null) {\n  return \"Loadig\";\n}\n\nconst test = Social.keys(\"*/wikiTest/articles\", \"final\");\nconsole.log(\"test \", test);\n\nconst test4 = Near.view(\"social.near\", \"get\", {\n  keys: [\"vanjule.near/**\", \"vanyog.near/**\"],\n});\nconsole.log(\"test4\", test4);\n\nconst testArray = test && Object.keys(test);\nconst resultArticles = [];\n\n// TODO make better checks for  data\n!resultArticles.length &&\n  testArray &&\n  testArray.forEach((item, index, arr) => {\n    console.log(\"item\", item);\n    const data = Near.view(\"social.near\", \"get\", {\n      keys: [`${item}/wikiTest/articles/**`],\n    });\n    console.log(\"data\", data[item].wikiTest.articles);\n    const articles = data && Object.keys(data[item].wikiTest.articles);\n    const array =\n      data &&\n      articles.map((key) => {\n        return data[item].wikiTest.articles[key];\n      });\n    data && resultArticles.push(...array);\n  });\nresultArticles.length &&\n  resultArticles.sort((a, b) => {\n    return Number(b.timeLastEdit) - Number(a.timeLastEdit);\n  });\n\nconst filteredArticles = [];\nresultArticles.length &&\n  resultArticles.forEach((article, index) => {\n    if (\n      !filteredArticles.some(({ articleId }) => articleId === article.articleId)\n    ) {\n      filteredArticles.push(article);\n    }\n  });\n\nconsole.log(\"resultArticles  \", resultArticles);\nconsole.log(\"filteredArticles\", filteredArticles);\n\nconst initialBody = `# Markdown heading level 1\n\nThis is a markdown paragraph. So, here are a few examples of markdown syntax and what it looks like.\n\n1. markdown\n2. ordered\n3. list`;\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nconst initialCreateArticleState = {\n  articleId: \"\",\n  articleBody: initialBody,\n  errorId: \"\",\n  errorBody: \"\",\n};\n\nState.init({\n  currentTab: \"loadarticles\",\n  createArticle: initialCreateArticleState,\n});\n\nconst getArticleData = () => {\n  const args = {\n    articleId: state.createArticle.articleId,\n    author: accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: Date.now(),\n    body: state.createArticle.articleBody,\n    version: 0,\n    navigation_id: null,\n  };\n  return args;\n};\n\n// === SAVE HANDLER ===\nconst saveHandler = (e) => {\n  State.update({\n    ...state,\n    createArticle: { ...state.createArticle, errorId: \"\", errorBody: \"\" },\n  });\n  if (state.createArticle.articleId && state.createArticle.articleBody) {\n    // TODO check it automaticle\n    const isArticleIdDublicated = false;\n\n    if (!isArticleIdDublicated) {\n      console.log(\"SAVE ARTICLE\");\n      const newArticle = getArticleData();\n\n      Social.set({\n        wikiTest: { articles: { [newArticle.articleId]: { ...newArticle } } },\n      });\n    } else {\n      State.update({\n        ...state,\n        createArticle: { ...state.createArticle, errorId: errTextDublicatedId },\n      });\n    }\n  } else {\n    if (!state.createArticle.articleId) {\n      State.update({\n        ...state,\n        createArticle: { ...state.createArticle, errorId: errTextNoId },\n      });\n    }\n    if (!state.createArticle.articleBody) {\n      State.update({\n        ...state,\n        createArticle: { ...state.createArticle, errorBody: errTextNoBody },\n      });\n    }\n  }\n};\n\n// === CANCEL HANDLER ===\nconst cancelHandler = () => {\n  State.update({\n    ...state,\n    createArticle: {\n      articleId: \"\",\n      articleBody: \"\",\n      errorId: null,\n      errorBody: null,\n    },\n  });\n};\n\nconst description = profile.description;\n\nconst pills = [\n  { id: \"articles\", title: \"Articles\" },\n  { id: \"authors\", title: \"Authors\" },\n  { id: \"create\", title: \"Create Article\" },\n];\n\nconst handleArticle = (e, article) => {\n  State.update({ ...state, article: article, authorId: undefined });\n};\n\nconst handleAuthor = (e, authorId) => {\n  console.log(\"click author\");\n  State.update({ ...state, article: undefined, authorId });\n};\n\nconst getDate = (timestamp) => {\n  console.log(\"timestamp\", timestamp);\n  const date = new Date(Number(timestamp));\n  return date.toDateString();\n};\n\nconst saveArticle = (args) => {\n  console.log(\"SAVE ARTICLE\", state);\n  const newArticleData = {\n    ...state.article,\n    body: state.note,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    version: Number(state.article.version) + 1,\n  };\n  console.log(\"newArticleData\", newArticleData);\n\n  Social.set({\n    wikiTest: {\n      articles: { [state.article.articleId]: { ...newArticleData } },\n    },\n  });\n};\n\nconst getDateLastEdit = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  const dateString = `${date.toLocaleDateString()} / ${date.toLocaleTimeString()}`;\n  return dateString;\n};\n\nconst getAuthors = () => {\n  const authors = Array.from(resultArticles, ({ author }) => author);\n  const uniqAuthors = Array.from(new Set(authors));\n\n  console.log(\"authors\", authors);\n  console.log(\"uniqAuthors\", uniqAuthors);\n\n  return (\n    <>\n      <h6>Total authors: {uniqAuthors.length}</h6>\n      <ul>\n        {uniqAuthors.map((author) => (\n          <li>\n            <a\n              href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${author}`}\n            >\n              {author}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nreturn (\n  <>\n    <ul className=\"nav nav-pills nav-fill mb-4\" id=\"pills-tab\" role=\"tablist\">\n      {pills.map(({ id, title }, i) => (\n        <li className=\"nav-item\" role=\"presentation\" key={i}>\n          <button\n            className={`nav-link ${i === 0 ? \"active\" : \"\"}`}\n            id={`pills-${id}-tab`}\n            data-bs-toggle=\"pill\"\n            data-bs-target={`#pills-${id}`}\n            type=\"button\"\n            role=\"tab\"\n            aria-controls={`pills-${id}`}\n            aria-selected={i === 0}\n            onClick={() => {\n              const key = `load${id}`;\n\n              State.update({\n                ...state,\n                article: undefined,\n                authorId: undefined,\n                note: undefined,\n                editArticle: false,\n                currentTab: key,\n              });\n              console.log(\"state\", state);\n            }}\n          >\n            {title}\n          </button>\n        </li>\n      ))}\n    </ul>\n    <div className=\"tab-content\" id=\"pills-tabContent\">\n      <div\n        className=\"tab-pane fade show active\"\n        id=\"pills-main\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-main-tab\"\n      >\n        {state.currentTab === \"loadarticles\" && (\n          <div>\n            {!state.article && (\n              <ul>\n                {resultArticles &&\n                  filteredArticles.map((article, index) => (\n                    <li key={article.articleId}>\n                      #{\" \"}\n                      <a href=\"\" onClick={(e) => handleArticle(e, article)}>\n                        {index + 1} {article.articleId}{\" \"}\n                        <small>\n                          (author: {article.author}\n                          {getDateLastEdit(article.timeLastEdit)})\n                        </small>\n                      </a>\n                    </li>\n                  ))}\n              </ul>\n            )}\n\n            {state.article && (\n              <div>\n                <h4>Article: {state.article.articleId}</h4>\n                <button\n                  onClick={() => {\n                    State.update({\n                      ...state,\n                      note: undefined,\n                      article: undefined,\n                      editArticle: false,\n                    });\n                  }}\n                >\n                  {\" \"}\n                  Back to articles{\" \"}\n                </button>\n                <button\n                  onClick={() => {\n                    State.update({ ...state, editArticle: true });\n                  }}\n                >\n                  Edit Article{\" \"}\n                </button>\n                {state.editArticle && (\n                  <>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => {\n                        if (!state.note || article.body === state.note) return;\n\n                        const args = {\n                          article_id: state?.articleId,\n                          body: state.note,\n                          navigation_id: null,\n                        };\n\n                        saveArticle(args);\n                      }}\n                    >\n                      Save Article{\" \"}\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger\"\n                      onClick={() => {\n                        State.update({\n                          ...state,\n                          editArticle: false,\n                          note: undefined,\n                        });\n                      }}\n                    >\n                      Cancel{\" \"}\n                    </button>\n\n                    <textarea\n                      id=\"textarea1\"\n                      type=\"text\"\n                      rows={10}\n                      className=\"form-control mt-2\"\n                      value={state.note || state.article.body}\n                      onChange={(e) => {\n                        console.log(\"newState\", state);\n                        State.update({ ...state, note: e.target.value });\n                      }}\n                    />\n                  </>\n                )}\n                <Markdown text={state.note || state.article.body} />\n                <div className=\"mt-5 alert alert-secondary\">\n                  <div>\n                    Created by{\" \"}\n                    <a\n                      href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${state.article.author}`}\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      {state.article.author}\n                    </a>\n                    <br />\n                    Last edit by{\" \"}\n                    <a\n                      href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${state.article.lastEditor}`}\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      {state.article.lastEditor}\n                    </a>\n                    <br />\n                    Edited on {getDate(state.article.timeLastEdit)}\n                    <br />\n                    Edit versions: {state.article.version}\n                  </div>\n                  {buttons}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"tab-pane fade\"\n        id=\"pills-authors\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-authors-tab\"\n      >\n        {state.currentTab === \"loadauthors\" && (\n          <div>{resultArticles && getAuthors()}</div>\n        )}\n      </div>\n\n      <div\n        className=\"tab-pane fade\"\n        id=\"pills-create\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-create-tab\"\n      >\n        {state.currentTab === \"loadcreate\" && (\n          <div>\n            <h1 className=\"mb-3\"> Create Article</h1>\n            <div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                  onClick={saveHandler}\n                >\n                  Save Article\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={cancelHandler}\n                >\n                  Cancel / Clear\n                </button>\n              </div>\n              <div class=\"d-flex flex-column pt-3\">\n                <label for=\"inputArticleId\">\n                  Input article id (case-sensitive, without spaces):\n                </label>\n                <label for=\"inputArticleId\" class=\"small text-danger\">\n                  {state.errorId}\n                </label>\n                <input\n                  className=\"form-control mt-2\"\n                  id=\"inputArticleId\"\n                  value={state.createArticle.articleId}\n                  onChange={(e) => {\n                    State.update({\n                      ...state,\n                      createArticle: {\n                        ...state.createArticle,\n                        articleId: e.target.value.replace(/\\s+/g, \"\"),\n                      },\n                    });\n                  }}\n                />\n              </div>\n              <div class=\"d-flex flex-column pt-3\">\n                <label for=\"textareaArticleBody\">\n                  Input article body (in makrdown format):\n                </label>\n                <label for=\"textareaArticleBody\" class=\"small text-danger\">\n                  {state.errorBody}\n                </label>\n                <textarea\n                  id=\"textareaArticleBody \"\n                  type=\"text\"\n                  value={state.createArticle.articleBody}\n                  rows={10}\n                  className=\"form-control mt-2\"\n                  onChange={(e) => {\n                    State.update({\n                      ...state,\n                      createArticle: {\n                        ...state.createArticle,\n                        articleBody: e.target.value,\n                      },\n                    });\n                  }}\n                />\n              </div>\n              <div class=\"pt-3\">\n                Article preview:\n                <Markdown text={state.createArticle.articleBody} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/Jack2WikiTest"}