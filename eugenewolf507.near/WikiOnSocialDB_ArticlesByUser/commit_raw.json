{"tx_hash": "7y9kAN1HenXS6jgaAywr7g2K8hki8Xvbn5e7NZmj5Lki", "action_id_social": "CX2J84aaqERzAsxk3hJapRuWWwsMucs1SELq3Dp4bum3-0-widget", "block_id": 84646118, "block_timestamp": "2023-02-06 19:17:35.460", "signer_id": "eugenewolf507.near", "widget_name": "WikiOnSocialDB_ArticlesByUser", "source_code": "const addressForArticles = \"wikiTest\";\nconst authorForWidget = \"eugenewolf507.near\";\nconst mOKEDAYTHOR = \"vanyog.near\";\nconst accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst getDateLastEdit = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  const dateString = `${date.toLocaleDateString()} / ${date.toLocaleTimeString()}`;\n  return dateString;\n};\n\nconst wikiTestData = Social.get(`*/${addressForArticles}/articles/**`, \"final\");\nconst wikiTestArr = wikiTestData && Object.values(wikiTestData);\nconst resultArticles =\n  wikiTestArr &&\n  wikiTestArr.reduce(\n    (acc, account) =>\n      acc.concat(Object.values(account[addressForArticles].articles)),\n    []\n  );\n\nresultArticles.length &&\n  resultArticles.sort((a, b) => {\n    return Number(b.timeLastEdit) - Number(a.timeLastEdit);\n  });\n\nconst filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (acc.some(({ articleId }) => articleId === article.articleId)) {\n      return acc;\n    } else {\n      return [...acc, article];\n    }\n  }, []);\n\nconst filteredArticlesByUser =\n  filteredArticles.length &&\n  filteredArticles.reduce((acc, article) => {\n    console.log(article.author, article.author === mOKEDAYTHOR);\n    if (article.author === mOKEDAYTHOR) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nconsole.log(filteredArticlesByUser);\nreturn (\n  <div>\n    Author:\n    {mOKEDAYTHOR}\n    <ol>\n      {filteredArticlesByUser &&\n        filteredArticlesByUser.map((article, index) => (\n          <li key={article.articleId}>\n            <a href=\"\">\n              {article.articleId}{\" \"}\n              <small>\n                (last edited:\n                {getDateLastEdit(article.timeLastEdit)})\n              </small>\n            </a>\n          </li>\n        ))}\n    </ol>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/WikiOnSocialDB_ArticlesByUser"}