{"tx_hash": "HUc14NPx3VqQqCop72zUay2x4BQodBkyYWK99U9ys5js", "action_id_social": "DADBFHZ1uyASmhnyfEm275WDhGrcFoBWLbSMqftVQskR-0-widget", "block_id": 84626901, "block_timestamp": "2023-02-06 12:35:16.490", "signer_id": "eugenewolf507.near", "widget_name": "WikiOnSocialDB", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst addressForArticles = \"wikiTest\";\n\nconst wikiTestData = Social.get(`*/${addressForArticles}/articles/**`, \"final\");\nconst wikiTestArr = wikiTestData && Object.values(wikiTestData);\nconst resultArticles =\n  wikiTestArr &&\n  wikiTestArr.reduce(\n    (acc, account) =>\n      acc.concat(Object.values(account[addressForArticles].articles)),\n    []\n  );\n\nresultArticles.length &&\n  resultArticles.sort((a, b) => {\n    return Number(b.timeLastEdit) - Number(a.timeLastEdit);\n  });\n\nconst filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (!acc.some(({ articleId }) => articleId === article.articleId)) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nState.init({\n  currentTab: \"loadarticles\",\n});\n\nconst description = profile.description;\n\nconst pills = [\n  { id: \"articles\", title: \"Articles\" },\n  { id: \"authors\", title: \"Authors\" },\n  { id: \"create\", title: \"Create Article\" },\n];\n\nconst handleArticle = (e, article) => {\n  State.update({ ...state, article: article, authorId: undefined });\n};\n\nconst handleAuthor = (e, authorId) => {\n  State.update({ ...state, article: undefined, authorId });\n};\n\nconst getDate = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  return date.toDateString();\n};\n\nconst saveArticle = (args) => {\n  const newArticleData = {\n    ...state.article,\n    body: state.note,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    version: Number(state.article.version) + 1,\n  };\n  Social.set({\n    [addressForArticles]: {\n      articles: { [state.article.articleId]: { ...newArticleData } },\n    },\n  });\n};\n\nconst getDateLastEdit = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  const dateString = `${date.toLocaleDateString()} / ${date.toLocaleTimeString()}`;\n  return dateString;\n};\n\nreturn (\n  <>\n    <ul className=\"nav nav-pills nav-fill mb-4\" id=\"pills-tab\" role=\"tablist\">\n      {pills.map(({ id, title }, i) => (\n        <li className=\"nav-item\" role=\"presentation\" key={i}>\n          <button\n            className={`nav-link ${i === 0 ? \"active\" : \"\"}`}\n            id={`pills-${id}-tab`}\n            data-bs-toggle=\"pill\"\n            data-bs-target={`#pills-${id}`}\n            type=\"button\"\n            role=\"tab\"\n            aria-controls={`pills-${id}`}\n            aria-selected={i === 0}\n            onClick={() => {\n              const key = `load${id}`;\n\n              State.update({\n                ...state,\n                article: undefined,\n                authorId: undefined,\n                note: undefined,\n                editArticle: false,\n                currentTab: key,\n              });\n            }}\n          >\n            {title}\n          </button>\n        </li>\n      ))}\n    </ul>\n    <div className=\"tab-content\" id=\"pills-tabContent\">\n      <div\n        className=\"tab-pane fade show active\"\n        id=\"pills-main\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-main-tab\"\n      >\n        {/* === ALL ARTICLES LIST === */}\n        {state.currentTab === \"loadarticles\" && (\n          <div>\n            {!state.article && (\n              <Widget\n                src=\"testwiki.near/widget/WikiOnSocialDB_AllArticlesList\"\n                props={{\n                  filteredArticles,\n                  getDateLastEdit,\n                  handleArticle,\n                  state,\n                }}\n              />\n            )}\n            {/* === ONE ARTICLE === */}\n            {state.article && (\n              <div>\n                <Widget\n                  src=\"testwiki.near/widget/WikiOnSocialDB_OneArticle\"\n                  props={{\n                    getDate,\n                    article: state.article,\n                    addressForArticles,\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {/* === AUTHORS === */}\n      <div\n        className=\"tab-pane fade\"\n        id=\"pills-authors\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-authors-tab\"\n      >\n        {state.currentTab === \"loadauthors\" && (\n          <Widget\n            src=\"testwiki.near/widget/WikiOnSocialDB_Authors\"\n            props={{\n              filteredArticles,\n            }}\n          />\n        )}\n      </div>\n      {/* === CREATE ARTICLE === */}\n      <div\n        className=\"tab-pane fade\"\n        id=\"pills-create\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-create-tab\"\n      >\n        {state.currentTab === \"loadcreate\" && (\n          <Widget\n            src=\"testwiki.near/widget/WikiOnSocialDB_CreateArticle\"\n            props={{\n              author: accountId,\n              address: addressForArticles,\n            }}\n          />\n        )}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/WikiOnSocialDB"}