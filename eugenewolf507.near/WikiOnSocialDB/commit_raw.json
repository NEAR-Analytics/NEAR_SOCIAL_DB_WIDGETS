{"tx_hash": "7evgyTm5V9Q5D7r9DKkxgJKpDJa2xUrfPrTEbQoQtawN", "action_id_social": "55MTECy24yXf2W52vUXZ1fB3s1ecC5GJfsT4uHzi5Ks9-0-widget", "block_id": 84701637, "block_timestamp": "2023-02-07 14:42:05.685", "signer_id": "eugenewolf507.near", "widget_name": "WikiOnSocialDB", "source_code": "const addressForArticles = \"wikiTest\";\nconst authorForWidget = \"eugenewolf507.near\";\nconst accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst wikiTestData = Social.get(`*/${addressForArticles}/articles/**`, \"final\");\nconst wikiTestArr = wikiTestData && Object.values(wikiTestData);\nconst resultArticles =\n  wikiTestArr &&\n  wikiTestArr.reduce(\n    (acc, account) =>\n      acc.concat(Object.values(account[addressForArticles].articles)),\n    []\n  );\n\nresultArticles.length &&\n  resultArticles.sort((a, b) => {\n    return Number(b.timeLastEdit) - Number(a.timeLastEdit);\n  });\n\nconst filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (!acc.some(({ articleId }) => articleId === article.articleId)) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nState.init({\n  currentTab: \"loadarticles\",\n});\n\nconst description = profile.description;\n\nconst handleArticle = (e, article) => {\n  State.update({ ...state, article: article, authorId: undefined });\n};\n\nconst handleAuthor = (e, authorId) => {\n  State.update({ ...state, article: undefined, authorId });\n};\n\nconst getDate = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  return date.toDateString();\n};\n\nconst saveArticle = (args) => {\n  const newArticleData = {\n    ...state.article,\n    body: state.note,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    version: Number(state.article.version) + 1,\n  };\n  Social.set({\n    [addressForArticles]: {\n      articles: { [state.article.articleId]: { ...newArticleData } },\n    },\n  });\n};\n\nconst getDateLastEdit = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  const dateString = `${date.toLocaleDateString()} / ${date.toLocaleTimeString()}`;\n  return dateString;\n};\n\nreturn (\n  <>\n    <Widget\n      src={`${authorForWidget}/widget/WikiOnSocialDB_MainNavigation`}\n      props={{ currentNavPill: \"articles\" }}\n    />\n    <div className=\"tab-content\" id=\"pills-tabContent\">\n      <div\n        className=\"tab-pane fade show active\"\n        id=\"pills-main\"\n        role=\"tabpanel\"\n        aria-labelledby=\"pills-main-tab\"\n      >\n        {/* === ALL ARTICLES LIST === */}\n        {state.currentTab === \"loadarticles\" && (\n          <div>\n            {!state.article && (\n              <Widget\n                src={`${authorForWidget}/widget/WikiOnSocialDB_AllArticlesList`}\n                props={{\n                  filteredArticles,\n                  getDateLastEdit,\n                  handleArticle,\n                  state,\n                }}\n              />\n            )}\n            {/* === ONE ARTICLE === */}\n            {state.article && (\n              <div>\n                <Widget\n                  src={`${authorForWidget}/widget/WikiOnSocialDB_OneArticle`}\n                  props={{\n                    getDate,\n                    article: state.article,\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/WikiOnSocialDB"}