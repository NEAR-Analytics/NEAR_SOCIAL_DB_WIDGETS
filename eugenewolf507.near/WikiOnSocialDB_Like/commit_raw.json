{"tx_hash": "Bw8usQwumSsHqKQTHqYo9ZnoEeByXCDeXkgawGCBbGzc", "action_id_social": "4WudXuDLCUuUEP7Ya1k7fXx2Xo1vdEJjES9u6ed9vRW6-0-widget", "block_id": 93686436, "block_timestamp": "2023-06-07T20:37:23.743Z", "signer_id": "eugenewolf507.near", "widget_name": "WikiOnSocialDB_Like", "source_code": "// TODO - optimise all handlers with repeating state update show: false - combine all emojies into array and render it from array via map\n// \"\u2764\ufe0f Positive\"\nconst initialEmoji = \"\ud83e\udd0d Like\";\nconst item = props.item;\n\nif (!item) {\n  return \"\";\n}\n\nState.init({\n  emoji: initialEmoji,\n  show: false,\n  loading: false,\n});\n\nconst mainButtonStyles = {\n  border: 0,\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"start\",\n  borderRadius: \"5px\",\n  paddingLeft: \"12px\",\n  width: \"8em\",\n  height: \"2.5em\",\n};\n\nconst smallButtonStyles = {\n  border: 0,\n  color: \"DeepSkyBlue\",\n  background: \"rgba(0, 191, 255, 0.1)\",\n};\n\n// ===============\nconst likes = Social.index(\"like\", item);\n\nconst doesUserVoted = () => {\n  const resObject = likes.find(\n    (item) => item.accountId === \"eugenewolf507.near\"\n    // (item) => item.accountId === \"testwiki.near\"\n  );\n  State.update({ emoji: resObject.value.type });\n};\n\n// const testArray = [\n//   {\n//     accountId: \"eugenewolf507.near\",\n//     blockHeight: 93610551,\n//     value: {\n//       type: \"\ud83d\ude80 Ship it\",\n//     },\n//   },\n//   {\n//     accountId: \"testwiki.near\",\n//     blockHeight: 93611581,\n//     value: {\n//       type: \"\ud83d\udcaf Definitely\",\n//     },\n//   },\n//   {\n//     accountId: \"alex.near\",\n//     blockHeight: 93610551,\n//     value: {\n//       type: \"\ud83d\ude80 Ship it\",\n//     },\n//   },\n// ];\n\nconst getLikesStats = (acc, likeObj) => {\n  if (likeObj.value.type === initialEmoji) {\n    return acc;\n  }\n  if (!acc.hasOwnProperty(likeObj.value.type)) {\n    acc[likeObj.value.type] = {};\n    acc[likeObj.value.type].quantity = 0;\n    acc[likeObj.value.type].emoji = likeObj.value.type.slice(0, 2);\n    acc[likeObj.value.type].accounts = [];\n  }\n  acc[likeObj.value.type].quantity += 1;\n  acc[likeObj.value.type].accounts = [\n    likeObj.accountId,\n    ...acc[likeObj.value.type].accounts,\n  ];\n\n  return acc;\n};\nconst countLikes = (arr) => Object.values(arr.reduce(getLikesStats, {}));\nconst likesCount = countLikes(likes);\nconsole.log(likesCount);\n\nif (likes) {\n  console.log(likes);\n  doesUserVoted();\n}\n\n// =================\n\nconst handleOnMouseEnter = (e) => {\n  State.update({ show: true });\n};\nconst handleOnMouseLeave = (e) => {\n  State.update({ show: false });\n};\n\nconst clickHandler = (emojiMessage) => {\n  if (state.loading) {\n    return;\n  }\n  //   if (state.emoji === initialEmoji) {\n  //     State.update({ emoji: \"\u2764\ufe0f Positive\" });\n  //   } else {\n  //     State.update({ emoji: initialEmoji });\n  //   }\n  // ================== START ==================\n  State.update({\n    loading: true,\n  });\n  const emojiToWrite =\n    emojiMessage === initialEmoji && state.emoji === initialEmoji\n      ? \"\u2764\ufe0f Positive\"\n      : emojiMessage;\n  const data = {\n    index: {\n      like: JSON.stringify({\n        key: item,\n        value: {\n          type: emojiToWrite,\n        },\n      }),\n    },\n  };\n  Social.set(data, {\n    onCommit: () => {\n      State.update({ emoji: emojiToWrite, loading: false, show: false });\n      //   State.update({ loading: false, show: false });\n    },\n    onCancel: () => State.update({ loading: false, show: false }),\n  });\n  // ================== END ==================\n};\n\nconst overlay = (\n  <div\n    className=\"border m-3 p-3 rounded-4 bg-white shadow\"\n    style={{ maxWidth: \"25em\", zIndex: 1070 }}\n    onMouseEnter={handleOnMouseEnter}\n    onMouseLeave={handleOnMouseLeave}\n  >\n    <button\n      onClick={() => clickHandler(\"\u2764\ufe0f Positive\")}\n      style={smallButtonStyles}\n    >\n      \u2764\ufe0f\n    </button>\n    <button\n      onClick={() => clickHandler(\"\ud83d\udc40 Thinking\")}\n      style={smallButtonStyles}\n    >\n      \ud83d\udc40\n    </button>\n    <button\n      onClick={() => clickHandler(\"\ud83d\ude4f Thank you\")}\n      style={smallButtonStyles}\n    >\n      \ud83d\ude4f\n    </button>\n    <button onClick={() => clickHandler(\"\ud83d\ude01 LOL\")} style={smallButtonStyles}>\n      \ud83d\ude01\n    </button>\n    <button\n      onClick={() => clickHandler(\"\ud83d\udc4e Negative\")}\n      style={smallButtonStyles}\n    >\n      \ud83d\udc4e\n    </button>\n    <button\n      onClick={() => clickHandler(\"\ud83d\ude80 Ship it\")}\n      style={smallButtonStyles}\n    >\n      \ud83d\ude80\n    </button>\n    <button\n      onClick={() => clickHandler(\"\ud83d\udcaf Definitely\")}\n      style={smallButtonStyles}\n    >\n      \ud83d\udcaf\n    </button>\n    <button onClick={() => clickHandler(\"\ud83d\udc4d Like\")} style={smallButtonStyles}>\n      \ud83d\udc4d\n    </button>\n  </div>\n);\n\nreturn (\n  <>\n    <OverlayTrigger\n      show={state.show}\n      trigger={[\"hover\", \"focus\"]}\n      delay={{ show: 250, hide: 300 }}\n      placement=\"auto\"\n      overlay={overlay}\n    >\n      <button\n        onClick={() => clickHandler(initialEmoji)}\n        onMouseEnter={handleOnMouseEnter}\n        onMouseLeave={handleOnMouseLeave}\n        style={{\n          ...mainButtonStyles,\n          backgroundColor:\n            state.emoji === initialEmoji\n              ? \"transparent\"\n              : \"rgba(0, 191, 255, 0.1)\",\n          color: state.emoji === initialEmoji ? \"#000\" : \"DeepSkyBlue\",\n        }}\n      >\n        {state.emoji}\n      </button>\n    </OverlayTrigger>\n    {likesCount &&\n      likesCount.map((item) => (\n        <span className=\"ps-3\">\n          {item.quantity} {item.emoji}{\" \"}\n        </span>\n      ))}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/WikiOnSocialDB_Like", "__row_index": 26}