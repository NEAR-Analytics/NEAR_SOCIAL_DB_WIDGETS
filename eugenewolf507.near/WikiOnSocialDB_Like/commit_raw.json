{"tx_hash": "D1LnSenEDmrTUcxDHNYMMrAJgMkEQ1p4hH6XjemuoATB", "action_id_social": "GYs2BaVnGnYwafbQjscq5snhZ2n1S3TW2Vf6xgT5zwfc-0-widget", "block_id": 94063643, "block_timestamp": "2023-06-12T20:19:53.743Z", "signer_id": "eugenewolf507.near", "widget_name": "WikiOnSocialDB_Like", "source_code": "const authorForWidget = \"eugenewolf507.near\";\n// \"\u2764\ufe0f Positive\"\nconst initialEmoji = \"\ud83e\udd0d Like\";\nconst emojiArray = [\n  \"\u2764\ufe0f Positive\",\n  \"\ud83d\ude4f Thank you\",\n  \"\ud83d\udcaf Definitely\",\n  \"\ud83d\udc40 Thinking\",\n  \"\ud83d\udd25 Awesome\",\n  \"\ud83d\udc4d Like\",\n  \"\ud83d\ude4c Celebrate\",\n  \"\ud83d\udc4f Applause\",\n  \"\u26a1 Lightning\",\n];\nconst item = props.item;\nconst accountThatIsLoggedIn = context.accountId;\n\nif (!item) {\n  return \"\";\n}\n\nState.init({\n  emoji: initialEmoji,\n  show: false,\n  loading: false,\n  likes: [],\n  unfilteredLikes: [],\n});\n// console.log(state);\n\n// =============== CSS Styles ===============\n\nconst mainButtonStyles = {\n  border: 0,\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"start\",\n  borderRadius: \"5px\",\n  paddingLeft: \"12px\",\n  width: \"8em\",\n  height: \"2.5em\",\n};\n\nconst Button = styled.button`\n  /*background: ${(props) =>\n    props.checked ? \"rgba(0, 191, 255, 0.1)\" : \"transparent\"};*/\n  background: transparent;\n  /*color: ${(props) => (props.checked ? \"DeepSkyBlue\" : \"#000\")};*/\n  display: inline-flex;\n  align-items: center;\n  justify-content: start;\n  width: 8em;\n  height: 2.5em;\n  padding: 6px 12px;\n  margin-top: 2px;\n  border: 0;\n  border-radius: .375rem;\n  :hover {\n    background: #d3d4d5;\n    outline: 1px solid #C6C7C8;\n  }\n`;\n\nconst smallButtonStyles = {\n  border: 0,\n  color: \"DeepSkyBlue\",\n  background: \"rgba(0, 191, 255, 0.1)\",\n  marginRight: \"4px\",\n};\n\n// =============== Get Likes ===============\nState.update({\n  unfilteredLikes: Social.index(\"like\", item, {\n    order: \"desc\",\n    subscribe: true,\n  }),\n});\n\n// arrayLastLikeForEachUser of {accountId, blockHeight, value: {type: \"\ud83d\ude01 LOL\"}}\nconst uniqueAccounts = {};\nconst arrayLastLikeForEachUser =\n  state.unfilteredLikes &&\n  state.unfilteredLikes.filter((obj) => {\n    if (!uniqueAccounts[obj.accountId]) {\n      uniqueAccounts[obj.accountId] = true;\n      return true;\n    }\n    return false;\n  });\n\nconst updateEmojiIfUserVoted = () => {\n  const resObject = arrayLastLikeForEachUser.find(\n    (item) => item.accountId === accountThatIsLoggedIn\n  );\n  if (resObject) {\n    State.update({ emoji: resObject.value.type });\n  }\n};\n\narrayLastLikeForEachUser && updateEmojiIfUserVoted();\n\n//likesCount - array of objects {quantity: 1, emoji: '\ud83d\ude01', accounts: []}\nconst getLikesStats = (acc, likeObj) => {\n  if (likeObj.value.type === initialEmoji) {\n    return acc;\n  }\n  if (!acc.hasOwnProperty(likeObj.value.type)) {\n    acc[likeObj.value.type] = {};\n    acc[likeObj.value.type].quantity = 0;\n    acc[likeObj.value.type].emoji = likeObj.value.type.slice(0, 2);\n    acc[likeObj.value.type].accounts = [];\n  }\n  acc[likeObj.value.type].quantity += 1;\n  acc[likeObj.value.type].accounts = [\n    likeObj.accountId,\n    ...acc[likeObj.value.type].accounts,\n  ];\n\n  return acc;\n};\nconst countLikes = (arr) => Object.values(arr.reduce(getLikesStats, {}));\nconst likesCount =\n  arrayLastLikeForEachUser && countLikes(arrayLastLikeForEachUser);\nState.update({ likes: likesCount });\n\n// ================= Mouse Handlers ===============\n\nconst handleOnMouseEnter = (e) => {\n  State.update({ show: true });\n};\nconst handleOnMouseLeave = (e) => {\n  State.update({ show: false });\n};\n\nconst clickHandler = (emojiMessage) => {\n  if (state.loading) {\n    return;\n  }\n\n  State.update({\n    loading: true,\n  });\n  const emojiToWrite =\n    emojiMessage === initialEmoji && state.emoji === initialEmoji\n      ? emojiArray[0]\n      : emojiMessage;\n\n  const data = {\n    index: {\n      like: JSON.stringify({\n        key: item,\n        value: {\n          type: emojiToWrite,\n        },\n      }),\n    },\n  };\n  Social.set(data, {\n    onCommit: () => {\n      State.update({ emoji: emojiToWrite, loading: false, show: false });\n    },\n    onCancel: () => State.update({ loading: false, show: false }),\n  });\n};\n\n// =============== JSX ===============\n\nconst overlay = (\n  <div\n    className=\"border m-3 p-3 rounded-4 bg-white shadow\"\n    style={{ maxWidth: \"27em\", zIndex: 1070 }}\n    onMouseEnter={handleOnMouseEnter}\n    onMouseLeave={handleOnMouseLeave}\n  >\n    {emojiArray &&\n      emojiArray.map((item) => (\n        <button onClick={() => clickHandler(item)} style={smallButtonStyles}>\n          {item.slice(0, 2)}\n        </button>\n      ))}\n  </div>\n);\n\nreturn (\n  <span className=\"ps-2\">\n    {/* DELETE */}\n    <Button>\ud83d\ude80 Ship it</Button>\n    <Button checked={state.emoji !== initialEmoji}>\ud83d\ude80 Ship it</Button>\n    {/* DELETE */}\n    <OverlayTrigger\n      show={state.show}\n      trigger={[\"hover\", \"focus\"]}\n      delay={{ show: 250, hide: 300 }}\n      placement=\"auto\"\n      overlay={overlay}\n    >\n      <button\n        onClick={() => clickHandler(initialEmoji)}\n        onMouseEnter={handleOnMouseEnter}\n        onMouseLeave={handleOnMouseLeave}\n        style={{\n          ...mainButtonStyles,\n          backgroundColor:\n            state.emoji === initialEmoji\n              ? \"transparent\"\n              : \"rgba(0, 191, 255, 0.1)\",\n          color: state.emoji === initialEmoji ? \"#000\" : \"DeepSkyBlue\",\n        }}\n      >\n        {state.emoji}\n      </button>\n    </OverlayTrigger>\n    {state.likes &&\n      state.likes.map((item) => (\n        <span className=\"ps-3\">\n          <Widget\n            src={`${authorForWidget}/widget/WikiOnSocialDB_TooltipProfiles`}\n            props={{ accounts: item.accounts, emoji: item.emoji }}\n          />\n        </span>\n      ))}\n  </span>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/eugenewolf507.near/widget/WikiOnSocialDB_Like", "__row_index": 0}