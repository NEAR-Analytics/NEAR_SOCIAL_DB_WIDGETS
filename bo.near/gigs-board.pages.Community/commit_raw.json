{"tx_hash": "45u4rEVeBZKyZoaiyQ5nZh1s6JVYT8DWfqbPKd2jYSX8", "action_id_social": "FuMRxwUuJrNf149pmRrHCVoZSKyVEq8sUorGjctzNQqr-0-widget", "block_id": 88360857, "block_timestamp": "2023-03-29 11:00:03.923", "signer_id": "bo.near", "widget_name": "gigs-board.pages.Community", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId || \"devgovgigs.near\".split(\"/\", 1)[0];\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n  const linkPropsQuery = Object.entries(linkProps)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n  return `#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst Scroll = styled.div`\n   {\n    z-index: -1;\n    margin-top: calc(-24px + 100px + 25px + 200px);\n  }\n`;\n\nif (!props.overviewId) {\n  return;\n}\nconst overviewPost = Near.view(nearDevGovGigsContractAccountId, \"get_post\", {\n  post_id: Number(props.overviewId),\n});\nif (!overviewPost) {\n  return <div>Loading ...</div>;\n}\n\nif (!props.eventsId) {\n  return;\n}\nconst eventsPost = Near.view(nearDevGovGigsContractAccountId, \"get_post\", {\n  post_id: Number(props.eventsId),\n});\nif (!eventsPost) {\n  return <div>Loading ...</div>;\n}\n\ninitState({\n  tab: \"Overview\",\n});\n\nfunction switchTab(tab) {\n  State.update({ tab });\n}\n\nconst discussionsRequiredLabels = [\"community\", props.label];\nconst sponsorshipRequiredLabels = [\"funding-funded\", props.label];\n\nconst postIdsWithLabels = (labels) => {\n  const ids = labels\n    .map(\n      (label) =>\n        Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n          label,\n        }) ?? []\n    )\n    .map((ids) => new Set(ids))\n    .reduce((previous, current) => {\n      console.log(previous, current);\n      let res = new Set();\n      for (let id of current) {\n        if (previous.has(id)) {\n          res.add(id);\n        }\n      }\n      return res;\n    });\n  return [...ids];\n};\n\nconst discussionRequiredPosts = postIdsWithLabels(discussionsRequiredLabels);\nconst sponsorshipRequiredPosts = postIdsWithLabels(sponsorshipRequiredLabels);\nconsole.log(sponsorshipRequiredPosts);\n\nreturn (\n  <>\n    {widget(\"components.layout.Banner\")}\n    {widget(\"components.layout.CommunityHeader\", {\n      title: props.title,\n      icon: props.icon,\n      desc: props.desc,\n      switchTab,\n    })}\n    <Scroll>\n      {state.tab === \"Overview\" ? (\n        <div>\n          <Markdown\n            class=\"card-text\"\n            text={overviewPost.snapshot.description}\n          ></Markdown>\n        </div>\n      ) : state.tab === \"Discussions\" ? (\n        <div>\n          <div class=\"row mb-2\">\n            <div class=\"col\">\n              <small class=\"text-muted\">\n                Required labels:\n                {discussionsRequiredLabels.map((label) => (\n                  <a href={href(\"Feed\", { label })} key={label}>\n                    <span class=\"badge text-bg-primary me-1\">{label}</span>\n                  </a>\n                ))}\n              </small>\n            </div>\n          </div>\n          {widget(\"components.layout.Controls\")}\n          <div class=\"row\">\n            <div class=\"col\">\n              {discussionRequiredPosts.map((postId) =>\n                widget(\"components.posts.Post\", { id: postId }, postId)\n              )}\n            </div>\n          </div>\n        </div>\n      ) : state.tab === \"Sponsorship\" ? (\n        <div>\n          <div class=\"row mb-2\">\n            <div class=\"col\">\n              <small class=\"text-muted\">\n                Post Type: <b>Sponsorship</b>\n              </small>\n            </div>\n            <div class=\"col\">\n              <small class=\"text-muted\">\n                Required labels:\n                {sponsorshipRequiredLabels.map((label) => (\n                  <a href={href(\"Feed\", { label })} key={label}>\n                    <span class=\"badge text-bg-primary me-1\">{label}</span>\n                  </a>\n                ))}\n              </small>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"card\">\n                <div class=\"card-body border-secondary\">\n                  <h6 class=\"card-title\">\n                    Funded ({sponsorshipRequiredPosts.length})\n                  </h6>\n                  <div class=\"row\">\n                    {sponsorshipRequiredPosts.map((postId) => (\n                      <div class=\"col-3\">\n                        {widget(\n                          \"components.posts.CompactPost\",\n                          { id: postId },\n                          postId\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : state.tab === \"Events\" ? (\n        <div>\n          <Markdown\n            class=\"card-text\"\n            text={eventsPost.snapshot.description}\n          ></Markdown>\n        </div>\n      ) : (\n        <div>Loading ...</div>\n      )}\n    </Scroll>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bo.near/widget/gigs-board.pages.Community"}