{"tx_hash": "GNokixVkhWBy8TVAZhjWDkMG12zgkyStDTd8L7bTZDCD", "action_id_social": "DZxhUpK9EAoZYEvx6eYTCxPSLi9TWZhGpAgs7sQ8thTA-0-widget", "block_id": 88686548, "block_timestamp": "2023-04-03 00:25:04.647", "signer_id": "weige.near", "widget_name": "ref-swap-getEstimate", "source_code": "const shrinkToken = (value, decimals) => {\n  return new Big(value || 0).div(new Big(10).pow(decimals || 24));\n};\n\nconst expandToken = (value, decimals) => {\n  return new Big(value).mul(new Big(10).pow(decimals));\n};\n\nconst {\n  tokenIn: tokenInFromProps,\n  tokenOut: tokenOutFromProps,\n  amountIn,\n  loadRes,\n} = props;\n\nconst tokenIn =\n  tokenInFromProps.id === \"NEAR\"\n    ? { ...tokenInFromProps, id: \"wrap.near\" }\n    : tokenInFromProps;\n\nconst tokenOut =\n  tokenOutFromProps.id === \"NEAR\"\n    ? { ...tokenOutFromProps, id: \"wrap.near\" }\n    : tokenOutFromProps;\n\nconst FEE_DIVISOR = 10000;\n\nconst REF_FI_CONTRACT_ID = \"v2.ref-finance.near\";\n\nconst getSinglePoolEstimate = (tokenIn, tokenOut, pool, amountIn) => {\n  const allocation = amountIn;\n\n  const amount_with_fee =\n    Number(allocation) * (FEE_DIVISOR - pool.total_fee || pool.fee || 0);\n\n  console.log(pool, amountIn, amount_with_fee, \"pool\");\n\n  const in_balance = shrinkToken(\n    pool.amounts[pool.token_account_ids[0] === tokenIn.id ? 0 : 1],\n    tokenIn.decimals\n  );\n\n  const out_balance = shrinkToken(\n    pool.amounts[pool.token_account_ids[0] === tokenIn.id ? 1 : 0],\n\n    tokenOut.decimals\n  );\n\n  console.log(in_balance.toFixed(), out_balance.toFixed(), \"balance\");\n\n  const estimate = new Big(\n    (\n      (amount_with_fee * Number(out_balance)) /\n      (FEE_DIVISOR * Number(in_balance) + amount_with_fee)\n    ).toString()\n  ).toFixed();\n\n  console.log(estimate, \"estima\");\n\n  return {\n    estimate,\n    pool,\n    tokenIn,\n    tokenOut,\n  };\n};\n\nconst getStablePoolDetail = (pool_id, pool_kind) => {\n  if (pool_kind === \"RATED_SWAP\") {\n    const pool_info = Near.view(REF_FI_CONTRACT_ID, \"get_rated_pool\", {\n      pool_id: Number(pool_id),\n    });\n    return {\n      ...pool_info,\n      id: pool_id,\n    };\n  } else {\n    const pool_info = Near.view(REF_FI_CONTRACT_ID, \"get_stable_pool\", {\n      pool_id: Number(pool_id),\n    });\n    return {\n      ...pool_info,\n      id: pool_id,\n      rates: pool_info.c_amounts.map((_) => expandToken(\"1\", 18).toFixed()),\n    };\n  }\n};\n\nconst returnNull = () => {\n  loadRes({});\n  return <div />;\n};\n\nconst wrapOperation =\n  [tokenIn, tokenOut].every((meta) => meta.id === \"wrap.near\") &&\n  !![tokenIn, tokenOut].find((meta) => meta.symbol === \"NEAR\");\n\nconsole.log(wrapOperation, tokenIn, tokenOut, \"wrap operation1\");\nif (wrapOperation) {\n  loadRes({\n    estimate: amountIn,\n    tokenIn,\n    tokenOut,\n    pool: \"wrap\",\n  });\n\n  return <div />;\n}\n\nif (tokenIn.id === tokenOut.id) return returnNull();\n\nif (!poolRes) return returnNull();\n\nState.init({\n  topPools: JSON.parse(\n    fetch(\"https://indexer.ref.finance/list-top-pools\")?.body || `{}`\n  ),\n});\n\nconsole.log(topPools, \"top pools\");\n\nif (!state.topPools) return returnNull();\n\nconst poolThisPair = state.topPools.find(\n  (p) =>\n    p.token_account_ids.includes(tokenIn.id) &&\n    p.token_account_ids.includes(tokenOut.id)\n);\n\nif (!poolThisPair) {\n  return returnNull();\n}\n\nif (poolThisPair.pool_kind === \"SIMPLE_POOL\") {\n  const res = getSinglePoolEstimate(tokenIn, tokenOut, poolThisPair, amountIn);\n\n  loadRes(res);\n} else {\n  const stablePoolDetail = getStablePoolDetail(\n    poolThisPair.id,\n    poolThisPair.pool_kind\n  );\n\n  const STABLE_LP_TOKEN_DECIMALS =\n    poolThisPair.pool_kind === \"STABLE_SWAP\" ? 18 : 24;\n\n  return (\n    <Widget\n      src=\"weige.near/widget/ref-stable-swap-algorithm\"\n      props={{\n        loadRes: loadRes,\n        tokenIn,\n        tokenOut,\n        stablePool: stablePoolDetail,\n        stablePoolDecimal: STABLE_LP_TOKEN_DECIMALS,\n        amountIn: amountIn,\n        pool: poolThisPair,\n      }}\n    />\n  );\n}\n\nreturn <div />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/weige.near/widget/ref-swap-getEstimate"}