{"tx_hash": "9mvarUcR5FY5YHWNiDXsjEamJ1xRfrmoYDq8Kq9yNXBb", "action_id_social": "5Jacm9ZgjFyAoE3u5yr4N6VAhuhzcfDY5aZcLkN2ATL-0-widget", "block_id": 90718340, "block_timestamp": "2023-04-29 17:52:07.610", "signer_id": "ref-admin.near", "widget_name": "LiNEAR.Stake", "source_code": "/** state init start */\nState.init({\n  inputValue: \"\",\n  inputError: \"\",\n});\n/** state init end */\n\n// load config\nconst config = props.config;\nif (!config) {\n  return \"Component not be loaded. Missing `config` props\";\n}\n\n/** common lib start */\nconst accountId = props.accountId || context.accountId;\nconst isSignedIn = !!accountId;\nconst NEAR_DECIMALS = 24;\nconst BIG_ROUND_DOWN = 0;\n\nfunction isValid(a) {\n  if (!a) return false;\n  if (isNaN(Number(a))) return false;\n  if (a === \"\") return false;\n  return true;\n}\n\n/** common lib end */\nfunction getNearBalance(accountId) {\n  const account = fetch(config.nodeUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: accountId,\n      },\n    }),\n  });\n  const { amount, storage_usage } = account.body.result;\n  const COMMON_MIN_BALANCE = 0.05;\n  if (!amount) return \"-\";\n  const availableBalance = Big(amount || 0).minus(\n    Big(storage_usage).mul(Big(10).pow(19))\n  );\n  const balance = availableBalance\n    .div(Big(10).pow(NEAR_DECIMALS))\n    .minus(COMMON_MIN_BALANCE);\n  return balance.lt(0) ? \"0\" : balance.toFixed(5, BIG_ROUND_DOWN);\n}\n\nconst nearBalance = getNearBalance(accountId);\n\n/** events start */\nconst onChange = (e) => {\n  // Has user signed in?\n  if (!isSignedIn) {\n    State.update({\n      inputError: \"Sign in please\",\n    });\n    return;\n  }\n  const targetValue = e.target.value;\n  if (targetValue !== \"\" && !targetValue.match(/^\\d*(\\.\\d*)?$/)) {\n    return;\n  }\n  let stakeAmount = targetValue.replace(/^0+/, \"0\"); // remove prefix 0\n  // limit 24 decimals\n  const most24DecimalsPattern = /^-?\\d+(\\.\\d{0,24})?/;\n  let values = stakeAmount.match(most24DecimalsPattern);\n  if (values) {\n    stakeAmount = values[0];\n  }\n  if (\n    nearBalance &&\n    (isNaN(Number(stakeAmount)) ||\n      stakeAmount === \"\" ||\n      Big(stakeAmount).lt(1) ||\n      Big(stakeAmount).gt(Big(nearBalance)))\n  ) {\n    if (\n      isNaN(Number(stakeAmount)) ||\n      stakeAmount === \"\" ||\n      Big(stakeAmount).lt(1)\n    ) {\n      State.update({\n        inputValue: stakeAmount,\n        inputError: \"Stake at least 1 NEAR\",\n      });\n    } else {\n      State.update({\n        inputValue: stakeAmount,\n        inputError: `Max is ${nearBalance} NEAR`,\n      });\n    }\n    return;\n  }\n  State.update({\n    inputValue: stakeAmount,\n    inputError: \"\",\n  });\n};\n\nconst onClickMax = () => {\n  if (\n    isNaN(Number(nearBalance)) ||\n    nearBalance === \"\" ||\n    Big(nearBalance).lt(1)\n  ) {\n    State.update({\n      inputValue: nearBalance,\n      inputError: \"Stake at least 1 NEAR\",\n    });\n    return;\n  } else {\n    State.update({\n      inputValue: nearBalance,\n      inputError: \"\",\n    });\n  }\n};\n\nconst onClickStake = async () => {\n  const stakeAmount = state.inputValue;\n  if (\n    nearBalance &&\n    (isNaN(Number(stakeAmount)) ||\n      stakeAmount === \"\" ||\n      Big(stakeAmount).lt(1) ||\n      Big(stakeAmount).gt(Big(nearBalance)))\n  ) {\n    if (\n      isNaN(Number(stakeAmount)) ||\n      stakeAmount === \"\" ||\n      Big(stakeAmount).lt(1)\n    ) {\n      State.update({ inputError: \"Stake at least 1 NEAR\" });\n    } else if (Big(stakeAmount).gt(Big(nearBalance))) {\n      State.update({\n        inputError: `Max is ${nearBalance} NEAR`,\n      });\n    } else setInputError(\"\");\n    return;\n  }\n  Near.call(\n    config.contractId,\n    \"deposit_and_stake\",\n    {},\n    undefined,\n    Big(state.inputValue).mul(Big(10).pow(NEAR_DECIMALS)).toFixed(0)\n  );\n  // check and update balance\n  const interval = setInterval(() => {\n    const balance = getNearBalance(accountId);\n    if (balance !== nearBalance) {\n      clearInterval(interval);\n      State.update({\n        inputValue: \"\",\n        inputError: \"\",\n        nearBalance: balance,\n      });\n    }\n  }, 500);\n};\n/** events end */\n\nconst disabledStakeButton =\n  !isValid(state.inputValue) || Big(state.inputValue).eq(0) || state.inputError;\n\nconst linearPrice = Big(\n  Near.view(config.contractId, \"ft_price\", `{}`) ?? \"0\"\n).div(Big(10).pow(24));\n\nconst youWillReceive = (\n  linearPrice.lte(0)\n    ? Big(0)\n    : Big(isValid(state.inputValue) ? state.inputValue : 0).div(linearPrice)\n).toFixed(5, BIG_ROUND_DOWN);\n\nconst StakeFormWrapper = styled.div`\n  width: 100%;\n  max-width: 500px;\n  padding-top: 10px;\n  background: #1A2E33;\n  border-radius: 16px;\n  margin-top:20px;\n  padding-bottom:20px;\n  .contentArea{\n    background: #142427;\n    border-radius: 16px;\n    padding:20px 30px;\n  }\n`;\n\nreturn (\n  <StakeFormWrapper>\n    <Widget\n      src={`${config.ownerId}/widget/stake-bannerIcon`}\n      props={{\n        firstIconName: \"NEAR\",\n        firstIconUrl:\n          \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\",\n        secondIconName: \"LiNEAR\",\n        secondIconUrl:\n          \"https://ipfs.near.social/ipfs/bafkreie2nqrjdjka3ckf4doocsrip5hwqrxh37jzwul2nyzeg3badfl2pm\",\n        componentType: \"liNEAR\",\n      }}\n    ></Widget>\n    <div class=\"contentArea\">\n      <Widget\n        src={`${config.ownerId}/widget/LiNEAR.Input`}\n        props={{\n          placeholder: \"0\",\n          value: state.inputValue,\n          onChange,\n          onClickMax,\n          inputError: state.inputError,\n          balance: nearBalance,\n        }}\n      />\n      <Widget\n        src={`${config.ownerId}/widget/LiNEAR.Button`}\n        props={{\n          onClick: onClickStake,\n          disabled: disabledStakeButton,\n          text: \"Stake\",\n        }}\n      />\n      <Widget\n        src={`${config.ownerId}/widget/LiNEAR.Message.YouWillReceive`}\n        props={{ text: `${youWillReceive} LiNEAR` }}\n      />\n    </div>\n    <Widget\n      src={`${config.ownerId}/widget/LiNEAR.Tab`}\n      props={{\n        updateTabName: props.updateTabName,\n        tabName: \"stake\",\n      }}\n    ></Widget>\n  </StakeFormWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-admin.near/widget/LiNEAR.Stake"}