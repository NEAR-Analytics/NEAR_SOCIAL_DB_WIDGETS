{"tx_hash": "79bo6nCTD1kDr8iFJ6gdbLLve3ub6hLwCMw4kMcdUtHG", "action_id_social": "7LCm8vCquFGdp9rvRuDMSMiFh3JhJ1VEi9uUf6QZAap7-0-widget", "block_id": 90547217, "block_timestamp": "2023-04-27 11:59:30.872", "signer_id": "ref-admin.near", "widget_name": "ref-components-page", "source_code": "const limitPerPage = 18;\nlet components = [];\nlet totalApps = 0;\nlet totalComponents = 0;\nconst componentsUrl = \"#/near/widget/ComponentsPage\";\nconst searchRequiredTag = state.selectedTab === \"apps\" ? \"app\" : null;\nconst searchPlaceholder = \"Search\";\n\nState.init({\n  currentPage: 0,\n  selectedTab: props.tab || \"all\",\n  filters: [],\n  counts: {\n    Chain: 0,\n    Infrastructure: 0,\n    Dapps: 0,\n    NFT: 0,\n  },\n});\n\nif (props.tab && props.tab !== state.selectedTab) {\n  State.update({\n    selectedTab: props.tab,\n  });\n}\n\nconst tagsData = Social.get(\"*/widget/*/metadata/tags/*\", \"final\");\n\nconsole.log(tagsData, \"tagsdata\");\n\nconst data = Social.keys(\"*/widget/*\", \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data) {\n  const result = [];\n\n  Object.keys(data).forEach((accountId) => {\n    return Object.keys(data[accountId].widget).forEach((widgetName) => {\n      totalComponents++;\n\n      if (state.selectedTab === \"apps\") {\n        const hasAppTag =\n          tagsData[accountId].widget[widgetName]?.metadata?.tags[\"app\"] === \"\";\n        if (!hasAppTag) return;\n        totalApps++;\n      }\n\n      result.push({\n        accountId,\n        widgetName,\n        blockHeight: data[accountId].widget[widgetName],\n      });\n    });\n  });\n\n  result.sort((a, b) => b.blockHeight - a.blockHeight);\n  components = result.slice(0, state.currentPage * limitPerPage + limitPerPage);\n}\n\nfunction onSearchChange({ result, term }) {\n  if (term.trim()) {\n    State.update({ searchResults: result || [] });\n  } else {\n    State.update({ searchResults: null });\n  }\n}\n\nconst items = state.searchResults || components;\n\nconsole.log(items);\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-bottom: 48px;\n  padding-top: 48px;\n  background: #101011;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst H1 = styled.h1`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 39px;\n  color: #11181c;\n  margin: 0;\n`;\n\nconst H2 = styled.h2`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  color: #687076;\n  margin: 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181c;\n  }\n\n  &[href] {\n    display: inline-flex;\n    gap: 0.25rem;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst Items = styled.div`\n  display: grid;\n  width: 100%;\n    grid-template-columns: repeat(auto-fill, 165px);\n\n  gap: 20px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (max-width: 800px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst Item = styled.div``;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  \n  \n`;\n\nconsole.log(state.filters);\n\nreturn (\n  <Wrapper className=\"\">\n    <Widget\n      src=\"ref-admin.near/widget/ref-component-search\"\n      props={{\n        limit: 21,\n        onChange: onSearchChange,\n        placeholder: searchPlaceholder,\n        filterTag: searchRequiredTag,\n      }}\n    />\n\n    <ContentWrapper>\n      <Widget\n        src=\"ref-admin.near/widget/ref-component-left-bar\"\n        props={{\n          filters: state.filters,\n          counts: state.counts,\n          updateFilters: (newFilters) => {\n            State.update({\n              filters: newFilters,\n            });\n          },\n        }}\n      />\n      {state.searchResults?.length === 0 && (\n        <Text>No components matched your search.</Text>\n      )}\n\n      {items.length > 0 && (\n        <Items>\n          {items.map((component, i) => (\n            <Widget\n              key={component.accountId + component.widgetName}\n              src=\"ref-admin.near/widget/ref-component-card\"\n              props={{\n                src: `${component.accountId}/widget/${component.widgetName}`,\n                blockHeight: component.blockHeight,\n              }}\n            />\n          ))}\n        </Items>\n      )}\n    </ContentWrapper>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-admin.near/widget/ref-components-page"}