{"tx_hash": "HcV6sCTdbsUaJxgbYr2ALQTifEALihmG8LtX6QDWSyBW", "action_id_social": "3CJ9oDa2FapYbp8m2jT1waoCix4fDDCZQfGKkGAysShP-0-widget", "block_id": 95055232, "block_timestamp": "2023-06-26T06:34:41.291Z", "signer_id": "cavies.near", "widget_name": "DataProvider", "source_code": null, "metadata": null, "branch": {"draft": {"": "// onLoad\nconst { onLoad, targetState, updateState } = props;\n\n// Define constants value\nconst API = \"https://prod-pocket-api.hamsterbox.xyz/api\";\nconst POCKET_ABI_URL =\n  \"https://raw.githubusercontent.com/CaviesLabs/hamsterpocket-assets/main/pocketchef.json\";\nconst WHITELIST_ENDPOINT = `${API}/whitelist`;\nconst LIST_POCKET_ENDPOINT = `${API}/pool/decimals-formatted?limit=&offset=0&chainId=bnb&statuses=POOL_STATUS%3A%3AACTIVE&statuses=POOL_STATUS%3A%3ACLOSED&sortBy=DATE_START_DESC`;\n\n// Define state reducer\nconst useState = (stateName, defaultValue) => {\n  return [\n    targetState[stateName] || defaultValue,\n    (value) => {\n      updateState({\n        [stateName]: value,\n      });\n    },\n  ];\n};\n\n// Define methods to be exposed\nconst fetchPockets = (ownerAddress) => {\n  const [, setPocket] = useState(\"pockets\", []);\n\n  return new Promise((resolve) => {\n    asyncFetch(`${LIST_POCKET_ENDPOINT}&ownerAddress=${ownerAddress}`).then(\n      (result) => {\n        setPocket(result.body);\n        return resolve(result.body);\n      }\n    );\n  });\n};\n\nif (onLoad) {\n  onLoad({\n    useState,\n    fetchPockets,\n  });\n}\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/cavies.near/widget/DataProvider", "__row_index": 13}