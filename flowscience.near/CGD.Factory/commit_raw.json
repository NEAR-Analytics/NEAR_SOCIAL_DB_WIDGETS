{"tx_hash": "7SnEdiWedGQVPYk1UPsrxHhZHuAJ9cyn3sLwKNY95NQm", "action_id_social": "6g8yahKmKYwU9NUoQjt3qPoGGpCwssdjnqJQpBpNxDUB-0-widget", "block_id": 95244254, "block_timestamp": "2023-06-28T18:02:01.532Z", "signer_id": "flowscience.near", "widget_name": "CGD.Factory", "source_code": "//add an input box to upload a dataset to IPFS\n//add a feature to post in CGD as a proposal & specify who can vote to approve (e.g. cofounders)\n\nconst accountId = props.accountId ?? context.accountId;\n\nconst defaultPolicy = [accountId];\n\nState.init({\n  name: \"\",\n  purpose: \"\",\n});\n\nconst dao_config = {\n  purpose: state.purpose,\n  bond: \"100000000000000000000000\",\n  vote_period: \"604800000000000\",\n  grace_period: \"86400000000000\",\n  policy: {\n    roles: [\n      {\n        name: \"council\",\n        slug: \"council\",\n        kind: {\n          Group: [accountId],\n        },\n        permissions: [\n          \"*:Finalize\",\n          \"policy:AddProposal\",\n          \"add_bounty:AddProposal\",\n          \"bounty_done:AddProposal\",\n          \"transfer:AddProposal\",\n          \"vote:AddProposal\",\n          \"remove_member_from_role:AddProposal\",\n          \"add_member_to_role:AddProposal\",\n          \"config:AddProposal\",\n          \"call:AddProposal\",\n          \"upgrade_remote:AddProposal\",\n          \"upgrade_self:AddProposal\",\n          \"set_vote_token:AddProposal\",\n          \"policy:VoteApprove\",\n          \"policy:VoteReject\",\n          \"policy:VoteRemove\",\n          \"add_bounty:VoteApprove\",\n          \"add_bounty:VoteReject\",\n          \"add_bounty:VoteRemove\",\n          \"bounty_done:VoteApprove\",\n          \"bounty_done:VoteReject\",\n          \"bounty_done:VoteRemove\",\n          \"transfer:VoteApprove\",\n          \"transfer:VoteReject\",\n          \"transfer:VoteRemove\",\n          \"vote:VoteApprove\",\n          \"vote:VoteReject\",\n          \"vote:VoteRemove\",\n          \"remove_member_from_role:VoteApprove\",\n          \"remove_member_from_role:VoteReject\",\n          \"remove_member_from_role:VoteRemove\",\n          \"add_member_to_role:VoteApprove\",\n          \"add_member_to_role:VoteReject\",\n          \"add_member_to_role:VoteRemove\",\n          \"call:VoteApprove\",\n          \"call:VoteReject\",\n          \"call:VoteRemove\",\n          \"config:VoteApprove\",\n          \"config:VoteReject\",\n          \"config:VoteRemove\",\n          \"set_vote_token:VoteApprove\",\n          \"set_vote_token:VoteReject\",\n          \"set_vote_token:VoteRemove\",\n          \"upgrade_self:VoteApprove\",\n          \"upgrade_self:VoteReject\",\n          \"upgrade_self:VoteRemove\",\n          \"upgrade_remote:VoteApprove\",\n          \"upgrade_remote:VoteReject\",\n          \"upgrade_remote:VoteRemove\",\n        ],\n        vote_policy: {},\n      },\n      {\n        name: \"all\",\n        slug: \"all\",\n        kind: \"Everyone\",\n        permissions: [\n          \"policy:AddProposal\",\n          \"add_bounty:AddProposal\",\n          \"bounty_done:AddProposal\",\n          \"transfer:AddProposal\",\n          \"vote:AddProposal\",\n          \"remove_member_from_role:AddProposal\",\n          \"add_member_to_role:AddProposal\",\n          \"config:AddProposal\",\n          \"call:AddProposal\",\n          \"upgrade_remote:AddProposal\",\n          \"upgrade_self:AddProposal\",\n          \"set_vote_token:AddProposal\",\n          \"vote:VoteApprove\",\n          \"vote:VoteReject\",\n          \"vote:VoteRemove\",\n        ],\n        vote_policy: {},\n      },\n    ],\n    default_vote_policy: {\n      weight_kind: \"RoleWeight\",\n      quorum: \"0\",\n      threshold: [1, 2],\n    },\n    proposal_bond: \"100000000000000000000000\",\n    proposal_period: \"604800000000000\",\n    bounty_bond: \"100000000000000000000000\",\n    bounty_forgiveness_period: \"604800000000000\",\n  },\n  config: {\n    name: state.name,\n    purpose: state.purpose,\n    metadata: \"\",\n  },\n};\n\nconst dao_args = Buffer.from(JSON.stringify(dao_config), \"utf-8\").toString(\n  \"base64\"\n);\n\nconst handleCreate = () => {\n  Near.call([\n    {\n      contractName: \"sputnik-dao.near\",\n      methodName: \"create\",\n      args: {\n        name: state.name,\n        args: dao_args,\n      },\n      deposit: \"7000000000000000000000000\",\n      gas: \"200000000000000\",\n    },\n  ]);\n};\n\nconst onChangeName = (name) => {\n  State.update({\n    name,\n  });\n};\n\nconst onChangePurpose = (purpose) => {\n  State.update({\n    purpose,\n  });\n};\n\nreturn (\n  <div className=\"mb-3\">\n    <h3>DAO Factory</h3>\n    <div className=\"mb-2\">\n      Name:\n      <input type=\"text\" onChange={(e) => onChangeName(e.target.value)} />\n    </div>\n    <div className=\"mb-2\">\n      Purpose:\n      <input type=\"text\" onChange={(e) => onChangePurpose(e.target.value)} />\n    </div>\n    <button className=\"btn btn-outline-success mt-3\" onClick={handleCreate}>\n      Create DAO\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/CGD.Factory", "__row_index": 1}