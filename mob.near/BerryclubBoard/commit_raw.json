{"tx_hash": "FYFNYgtzB6e1H6CUaGLs5omkK1LmrHPoMY8QLncYShiw", "action_id_social": "prhaHhBWRa7SifuBnqx9fmgwUiyWC7YGSiLAyBqoBHy-0-widget", "block_id": 79696430, "block_timestamp": "2022-12-01 20:01:39.958", "signer_id": "mob.near", "widget_name": "BerryclubBoard", "source_code": "const blockHeight = props.blockHeight\n  ? parseInt(props.blockHeight)\n  : \"optimistic\";\n\nconst Cell = styled.div`\n  width: 8px;\n  height: 8px;\n  padding: 0px;\n  margin: 0px;\n  overflow: hidden;\n  display: inline-block;\n`;\n\nconst Line = styled.div`\n  height: 8px;\n  padding: 0px;\n  margin: 0px;\n  display: block;\n`;\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\n\nconst lines = [];\nfor (let i = 0; i < BoardHeight; ++i) {\n  lines.push(i);\n}\n\nconst args = { lines };\nconst encodedLines = Near.view(\n  \"berryclub.ek.near\",\n  \"get_lines\",\n  args,\n  blockHeight\n);\n\nif (encodedLines === null) {\n  return \"Loading\";\n}\n\nif (!encodedLines) {\n  return \"Block not found\";\n}\n\nconst intToColor = (c) => `#${c.toString(16).padStart(6, \"0\")}`;\n\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, \"base64\");\n  let pixels = [];\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    pixels.push(<Cell style={{ backgroundColor: intToColor(color) }} />);\n  }\n  return pixels;\n};\n\nreturn (\n  <div>\n    {encodedLines.map((line) => (\n      <Line>{decodeLine(line)}</Line>\n    ))}\n  </div>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/BerryclubBoard", "metadata.description": "Renders the board from [Berryclub](https://berryclub.io) at a given block height.\n\nProps: \n\n- `blockHeight` - the block height for the image", "metadata.image.ipfs_cid": "bafkreiajuloevll3vi3h3i6xaeqcjibiz44midldjesxao7te34qu5jzh4", "metadata.linktree.website": "berryclub.io", "metadata.name": "Berryclub Board", "metadata.tags.art": "", "metadata.tags.berryclub": "", "metadata.tags.board": "", "metadata": NaN}