{"tx_hash": "8ugMGFgZ7xMyt1aw5jDhh5DfuN2qHS5wEwEQzUc1zfcC", "action_id_social": "2Fieb2oaY2HsikdwWikUMKaYNftXAe5raGWdPCxZX9ZU-0-widget", "block_id": 78973028, "block_timestamp": "2022-11-21 23:42:35.333", "signer_id": "mob.near", "widget_name": "NftImage", "source_code": "const nft = props.nft ?? {\n  contractId: props.contractId,\n  tokenId: props.tokenId,\n};\nconst contractId = nft.contractId;\nconst tokenId = nft.tokenId;\nconst className = props.className ?? \"img-fluid\";\nconst style = props.style;\nconst alt = props.alt;\nconst thumbnail = props.thumbnail;\nconst fallbackUrl = props.fallbackUrl;\n\nconst nftMetadata = Near.view(contractId, \"nft_metadata\");\nconst nftToken = Near.view(contractId, \"nft_token\", {\n  token_id: tokenId,\n});\n\nlet imageUrl = fallbackUrl;\n\nif (nftMetadata && nftToken) {\n  let tokenMetadata = nftToken.metadata;\n  let tokenMedia = tokenMetadata.media || \"\";\n\n  const ownerId = nftToken.owner_id[\"Account\"]\n    ? nftToken.owner_id[\"Account\"]\n    : nftToken.owner_id;\n\n  imageUrl =\n    tokenMedia.startsWith(\"https://\") ||\n    tokenMedia.startsWith(\"http://\") ||\n    tokenMedia.startsWith(\"data:image\")\n      ? tokenMedia\n      : nftMetadata.base_uri\n      ? `${nftMetadata.base_uri}/${tokenMedia}`\n      : tokenMedia.startsWith(\"Qm\")\n      ? `https://ipfs.near.social/ipfs/${tokenMedia}`\n      : tokenMedia;\n\n  if (\n    !tokenMedia &&\n    tokenMetadata.reference &&\n    nftMetadata.base_uri === \"https://arweave.net\"\n  ) {\n    const res = fetch(`${nftMetadata.base_uri}/${tokenMetadata.reference}`);\n    imageUrl = res.body.media;\n  }\n\n  if (!imageUrl) {\n    imageUrl = fallbackUrl;\n  }\n}\n\nconst replaceIpfs = () => {\n  if (!state.imageUrl && imageUrl) {\n    const match =\n      /^https?:\\/\\/[^\\/]+\\/ipfs\\/(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/.*)?$/g.exec(\n        imageUrl\n      );\n    if (match) {\n      State.update({\n        imageUrl: `https://ipfs.near.social/ipfs/${match[1]}${match[2] || \"\"}`,\n      });\n    }\n  }\n};\n\nconst thumb = (imageUrl) =>\n  thumbnail ? `https://i.near.social/${thumbnail}/${imageUrl}` : imageUrl;\n\nreturn (\n  <img\n    className={className}\n    style={style}\n    src={state.imageUrl ? thumb(state.imageUrl) : thumb(imageUrl)}\n    alt={alt}\n    onError={replaceIpfs}\n  />\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/NftImage", "metadata.description": NaN, "metadata.image.nft.contractId": NaN, "metadata.image.nft.tokenId": NaN, "metadata.name": NaN}