{"tx_hash": "8sTbtqqXa3Ua5JwQFq5yAx7MX7VHG8tFnzyX3kJAzXjQ", "action_id_social": "JBNgWavN4QfqcGi2kuhTiGKVPUDaTcc5TJXTuafoxyk8-0-widget", "block_id": 79694191, "block_timestamp": "2022-12-01 19:18:33.076", "signer_id": "mob.near", "widget_name": "NftImage", "source_code": "const nft = props.nft ?? {\n  contractId: props.contractId,\n  tokenId: props.tokenId,\n};\nconst contractId = nft.contractId;\nconst tokenId = nft.tokenId;\nconst className = props.className ?? \"img-fluid\";\nconst style = props.style;\nconst alt = props.alt;\nconst thumbnail = props.thumbnail;\nconst fallbackUrl = props.fallbackUrl;\nconst loadingUrl =\n  props.loadingUrl ??\n  \"https://ipfs.near.social/ipfs/bafkreidoxgv2w7kmzurdnmflegkthgzaclgwpiccgztpkfdkfzb4265zuu\";\n\nState.init({\n  contractId,\n  tokenId,\n  imageUrl: null,\n});\n\nif (contractId !== state.contractId || tokenId !== tokenId) {\n  State.update({\n    contractId,\n    tokenId,\n    imageUrl: null,\n  });\n}\n\nconst nftMetadata = Near.view(contractId, \"nft_metadata\");\nconst nftToken = Near.view(contractId, \"nft_token\", {\n  token_id: tokenId,\n});\n\nlet imageUrl = null;\n\nif (nftMetadata && nftToken) {\n  let tokenMetadata = nftToken.metadata;\n  let tokenMedia = tokenMetadata.media || \"\";\n\n  imageUrl =\n    tokenMedia.startsWith(\"https://\") ||\n    tokenMedia.startsWith(\"http://\") ||\n    tokenMedia.startsWith(\"data:image\")\n      ? tokenMedia\n      : nftMetadata.base_uri\n      ? `${nftMetadata.base_uri}/${tokenMedia}`\n      : tokenMedia.startsWith(\"Qm\") || tokenMedia.startsWith(\"ba\")\n      ? `https://ipfs.near.social/ipfs/${tokenMedia}`\n      : tokenMedia;\n\n  if (\n    !tokenMedia &&\n    tokenMetadata.reference &&\n    nftMetadata.base_uri === \"https://arweave.net\"\n  ) {\n    const res = fetch(`${nftMetadata.base_uri}/${tokenMetadata.reference}`);\n    imageUrl = res.body.media;\n  }\n\n  if (!imageUrl) {\n    imageUrl = false;\n  }\n}\n\nconst rex =\n  /^(?:https?:\\/\\/)(?:[^\\/]+\\/ipfs\\/)?(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(?:\\.[^\\/]+)(\\/.*)?$/g;\nrex.lastIndex = 0;\n\nconst replaceIpfs = (imageUrl) => {\n  if (state.oldUrl !== imageUrl && imageUrl) {\n    const match = rex.exec(imageUrl);\n    if (match) {\n      const newImageUrl = `https://ipfs.near.social/ipfs/${match[1]}${\n        match[2] || \"\"\n      }`;\n      if (newImageUrl !== imageUrl) {\n        State.update({\n          oldUrl: imageUrl,\n          imageUrl: newImageUrl,\n        });\n        return;\n      }\n    }\n  }\n  if (state.imageUrl !== false) {\n    State.update({\n      imageUrl: false,\n    });\n  }\n};\n\nconst thumb = (imageUrl) =>\n  thumbnail ? `https://i.near.social/${thumbnail}/${imageUrl}` : imageUrl;\n\nconst img = state.imageUrl !== null ? state.imageUrl : imageUrl;\nconst src = img !== false ? img : fallbackUrl;\n\nreturn (\n  <img\n    className={className}\n    style={style}\n    src={src !== null ? thumb(src) : loadingUrl}\n    alt={alt}\n    onError={() => replaceIpfs(img)}\n  />\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/NftImage", "metadata.description": NaN, "metadata.image.nft.contractId": NaN, "metadata.image.nft.tokenId": NaN, "metadata.name": NaN}