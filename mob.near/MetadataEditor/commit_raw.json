{"tx_hash": "9Qe42RpdXqUyK9iZYVpfsFQP9W7x8JSkmGk1eD8Zij4H", "action_id_social": "DLC6oPMdh92Jg48GJmL7kTHnrbohVicX2XiYwyX5ssDz-0-widget", "block_id": 77887572, "block_timestamp": "2022-11-07 02:02:58.045", "signer_id": "mob.near", "widget_name": "MetadataEditor", "source_code": "const initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\n\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n});\n\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree) > 0\n      ? state.linktree\n      : undefined,\n  image: options.image ? state.image : undefined,\n  backgroundImage: options.backgroundImage ? state.backgroundImage : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n};\n\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\n\nreturn (\n  <>\n    {options.name && (\n      <div className=\"mb-2\">\n        {options.name.label ?? \"Name\"}\n        <input type=\"text\" value={state.metadata.name} />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-2\">\n        {options.image.label ?? \"Image\"}\n        <Widget\n          src=\"mob.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.image,\n            onChange: (image) => State.update({ image }),\n          }}\n        />\n      </div>\n    )}\n    {options.backgroundImage && (\n      <div className=\"mb-2\">\n        {options.backgroundImage.label ?? \"Background image\"}\n        <Widget\n          src=\"mob.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.backgroundImage,\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-2\">\n        {options.description.label ?? \"Description\"}\n        <span className=\"text-secondary\"> (supports markdown)</span>\n        <textarea\n          className=\"form-control\"\n          rows={5}\n          value={state.metadata.description}\n          onChange={(e) => {\n            state.metadata.description = e.target.value;\n            State.update();\n          }}\n        />\n      </div>\n    )}\n    {options.tags && (\n      <div className=\"mb-2\">\n        {options.tags.label ?? \"Tags\"}\n        <Widget\n          src=\"mob.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </div>\n    )}\n    {options.linktree &&\n      (options.linktree.links ?? []).map((link) => (\n        <div className=\"mb-2\">\n          {link.label}\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">{link.prefix}</span>\n            <input type=\"text\" value={state.linktree[link.name]} />\n          </div>\n        </div>\n      ))}\n  </>\n);\n", "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/MetadataEditor", "metadata": NaN, "branch.draft.": NaN, "branch.draft": NaN, "metadata.tags.app": NaN}