{"tx_hash": "EMCJuiN92H5cKpVJgfXhyRBK8D7no4zChq9rLrR48s2W", "action_id_social": "miDxh2EkEWkFrxAmgiHveDjaiKcUJ7QTCS86eBR1ctN-0-widget", "block_id": 78027804, "block_timestamp": "2022-11-09 01:28:22.229", "signer_id": "mob.near", "widget_name": "LastWidgetsByTag", "source_code": "const accountId = props.accountId ?? \"*\";\nconst tag = props.tag;\n\nconst taggedWidgets = Social.keys(\n  `${accountId}/widget/*/metadata/tags/${tag}`,\n  \"final\"\n);\n\nif (taggedWidgets === null) {\n  return \"Loading tags\";\n}\n\nconst allWidgets = Object.entries(taggedWidgets)\n  .map((kv) => Object.keys(kv[1].widget).map((w) => `${kv[0]}/widget/${w}`))\n  .flat();\n\nif (!allWidgets.length) {\n  return `No widgets found by tag #${tag}`;\n}\n\nconst data = Social.keys(allWidgets, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data === null) {\n  return \"Loading widgets\";\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].widget).map((kv) => ({\n        accountId,\n        widgetName: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderItem = (a) => (\n  <div className=\"mb-3\" key={JSON.stringify(a)} style={{ minHeight: \"10em\" }}>\n    <Widget src=\"mob.near/widget/WidgetMetadata\" props={a} />\n  </div>\n);\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\nreturn (\n  <div className=\"px-2 mx-auto\" style={{ maxWidth: \"42em\" }}>\n    <Widget\n      src=\"mob.near/widget/ItemFeed\"\n      props={{ items: state.allItems, renderItem }}\n    />\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/LastWidgetsByTag", "metadata.description": NaN, "metadata.name": NaN, "metadata.tags.feed": NaN, "metadata.tags.filter": NaN, "metadata.tags.tag": NaN, "metadata.tags.widget": NaN}