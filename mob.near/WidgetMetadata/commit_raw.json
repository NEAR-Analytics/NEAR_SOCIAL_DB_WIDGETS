{"tx_hash": "6GV2ATXGupqomQdRwwp5Hkk7mmZCAEjfzRTM4iDPdka8", "action_id_social": "51ffzotVgMaRHZ4d3at6ouCNc1yS8KLEQWSCJd2mwPbN-0-widget", "block_id": 77889170, "block_timestamp": "2022-11-07 02:34:40.227", "signer_id": "mob.near", "widget_name": "WidgetMetadata", "source_code": "const accountId = props.accountId;\nconst widgetName = props.widgetName;\nconst widgetPath = `${accountId}/widget/${widgetName}`;\nconst metadata = props.metadata ?? Social.getr(`${widgetPath}/metadata`);\n\nconst name = metadata.name ?? widgetName;\nconst description = metadata.description;\nconst image = metadata.image;\nconst tags = Object.keys(metadata.tags ?? {});\n\nconst linktree = Object.entries(metadata.linktree ?? {});\nlinktree.push([\"path\", widgetPath]);\nconst linktreeElements = {\n  website: {\n    prefix: \"https://\",\n    icon: \"bi-globe2\",\n  },\n  path: {\n    prefix: \"#/\",\n    icon: \"bi-box-arrow-up-right\",\n  },\n};\n\nconst linktreeObjects = linktree.map((o) => {\n  const key = o[0];\n  let value = o[1];\n  if (!value) {\n    return null;\n  }\n  const e = linktreeElements[key];\n  if (e.prefix) {\n    value = value && value.replace(e.prefix, \"\");\n  }\n  const icon = e.icon ? (\n    <i className={`bi ${e.icon ?? \"\"} text-secondary me-1`}></i>\n  ) : (\n    \"\"\n  );\n  return e.prefix ? (\n    <div className=\"text-truncate\">\n      <a className=\"text-decoration-none\" href={`${e.prefix}${value}`}>\n        {icon}\n        {value}\n      </a>\n    </div>\n  ) : (\n    <div className=\"text-truncate\">\n      {key}: {icon}\n      {value}\n    </div>\n  );\n});\n\nreturn (\n  <div className=\"card shadow my-3 overflow-hidden\">\n    <div className=\"row g-0\">\n      <div className=\"my-auto text-center\" style={{ maxWidth: \"12em\" }}>\n        <div\n          className=\"d-inline-block\"\n          style={{ width: \"10em\", height: \"10em\" }}\n        >\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image,\n              className: \"w-100 h-100 rounded\",\n              imageStyle: { objectFit: \"cover\" },\n              thumbnail: false,\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreierd2p26vdlmkwaihxsi44dzw5gh6np5tovnyfzin2mgzuuestfom\",\n              alt: widgetName,\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"col py-1\">\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <h5 className=\"card-title\">{name}</h5>\n            <div className=\"card-text\">\n              <Markdown text={description} />\n\n              {tags.length > 0 && (\n                <div>\n                  {tags.map((tag) => (\n                    <span className=\"me-1 mb-1 badge bg-secondary\">#{tag}</span>\n                  ))}\n                </div>\n              )}\n            </div>\n          </li>\n          <li className=\"list-group-item\">{linktreeObjects}</li>\n          <li className=\"list-group-item text-truncate\">\n            <span className=\"text-secondary me-1\">By</span>\n            <Widget src=\"mob.near/widget/ProfileLine\" props={{ accountId }} />\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/WidgetMetadata", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.card": NaN, "metadata.tags.metadata": NaN, "metadata.tags.widget": NaN, "metadata": NaN}