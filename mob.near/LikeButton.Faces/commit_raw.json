{"tx_hash": "7bJbCgV5Kk8j2pCKQaApvS5ihvvGCwRd3CnNKyLJJDAy", "action_id_social": "4CCTAaQTwPiJA9UW3yUZ5GnEpDR1CDzEJ53xfFdervNd-0-widget", "block_id": 81348573, "block_timestamp": "2022-12-24 09:40:32.220", "signer_id": "mob.near", "widget_name": "LikeButton.Faces", "source_code": "const accountId = context.accountId;\n\nconst likesByUsers = props.likesByUsers || {};\nconst limit = props.limit ?? 3;\n\nlet likes = Object.keys(likesByUsers).reverse();\n\nconst graphLikes = [];\nconst nonGraph = [];\n\nconst graph =\n  (accountId &&\n    Social.keys(`${accountId}/graph/follow/*`, \"final\")[accountId].graph\n      .follow) ||\n  {};\n\nlikes.forEach((accountId) => {\n  if (accountId in graph) {\n    graphLikes.push(accountId);\n  } else {\n    nonGraph.push(accountId);\n  }\n});\n\nlet faces = [...graphLikes, ...nonGraph];\n\nif (faces.length < limit + 3) {\n  limit = faces.length;\n}\n\nconst renderFaces = faces.splice(0, limit);\n\nconst Faces = styled.span`\n  .face {\n    display: inline-block;\n    position:relative;\n    margin: -0.1em;\n    height: 1.5em;\n    width: 1.5em;\n    min-width: 1.5em;\n    vertical-align: top;\n    img {\n        object-fit: cover;\n        border-radius: 50%;\n        width: 100%;\n        height: 100%;\n    }\n  }\n`;\n\nconst numLikes = likes.length - limit;\n\nreturn (\n  <>\n    <Faces>\n      {renderFaces.map((accountId, i) => (\n        <Widget\n          key={i}\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            metadata,\n            accountId,\n            widgetName,\n            style: { zIndex: 10 - i },\n            className: \"face\",\n            tooltip: true,\n            imageStyle: {},\n            imageClassName: \"\",\n          }}\n        />\n      ))}\n    </Faces>\n    {numLikes > 0 ? (\n      <OverlayTrigger\n        placement=\"auto\"\n        overlay={\n          <Tooltip>\n            <div\n              className=\"text-truncate text-start\"\n              style={{ maxWidth: \"12em\" }}\n            >\n              {faces.slice(0, 10).map((account_id, i) => (\n                <Fragment key={i}>\n                  {account_id}\n                  <br />\n                </Fragment>\n              ))}\n              {faces.length > 10 ? \"...\" : \"\"}\n            </div>\n          </Tooltip>\n        }\n      >\n        <span className=\"text-muted ms-1\">\n          and {numLikes} other{numLikes === 1 ? \"\" : \"s\"}\n        </span>\n      </OverlayTrigger>\n    ) : (\n      \"\"\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/LikeButton.Faces"}