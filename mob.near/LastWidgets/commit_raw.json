{"tx_hash": "iA7Sg1fjTeT6qTfjXX67qfooQK7RCnj2NBFQ44cs54G", "action_id_social": "UGhAh5C16uAeWLzzscTmvQhM3bVC4D8Q3zFCKmcZRcN-0-widget", "block_id": 78031955, "block_timestamp": "2022-11-09 02:48:36.292", "signer_id": "mob.near", "widget_name": "LastWidgets", "source_code": "const accountId = props.accountId;\nconst tag = props.tag;\n\nconst makeLink = (accountId, tag) => {\n  const args = [];\n  if (accountId) {\n    args.push(`accountId=${accountId}`);\n  }\n  if (tag) {\n    args.push(`tag=${tag}`);\n  }\n  return `#/mob.near/widget/LastWidgets${args.length > 0 ? \"?\" : \"\"}${args.join(\n    \"&\"\n  )}`;\n};\n\nconst render = (content) => {\n  return (\n    <div className=\"px-2 mx-auto\" style={{ maxWidth: \"42em\" }}>\n      {(accountId || tag) && (\n        <div className=\"mb-2\">\n          Filter:\n          {accountId && (\n            <a\n              href={makeLink(undefined, tag)}\n              className=\"btn btn-outline-primary\"\n            >\n              <Widget\n                src=\"mob.near/widget/ProfileLine\"\n                props={{ accountId, link: false }}\n              />\n              <i className=\"bi bi-x-square\"></i>\n            </a>\n          )}\n          {tag && (\n            <a\n              href={makeLink(accountId, undefined)}\n              className=\"btn btn-outline-primary\"\n            >\n              <span className=\"badge text-bg-secondary\">#{tag}</span>\n              <i className=\"bi bi-x-square\"></i>\n            </a>\n          )}\n        </div>\n      )}\n      {content}\n    </div>\n  );\n};\n\nlet keys = `${accountId ?? \"*\"}/widget/*`;\n\nif (tag) {\n  const taggedWidgets = Social.keys(\n    `${accountId ?? \"*\"}/widget/*/metadata/tags/${tag}`,\n    \"final\"\n  );\n\n  if (taggedWidgets === null) {\n    return render(\"Loading tags\");\n  }\n\n  keys = Object.entries(taggedWidgets)\n    .map((kv) => Object.keys(kv[1].widget).map((w) => `${kv[0]}/widget/${w}`))\n    .flat();\n\n  if (!keys.length) {\n    return render(`No widgets found by tag #${tag}`);\n  }\n}\n\nconst data = Social.keys(keys, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data === null) {\n  return render(\"Loading\");\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].widget).map((kv) => ({\n        accountId,\n        widgetName: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderTag = (tag, tagBadge) => (\n  <a href={makeLink(accountId, tag)}>{tagBadge}</a>\n);\n\nconst renderItem = (a) => {\n  return (\n    <div className=\"mb-3\" key={JSON.stringify(a)} style={{ minHeight: \"10em\" }}>\n      <Widget\n        src=\"mob.near/widget/WidgetMetadata\"\n        props={{\n          accountId: a.accountId,\n          widgetName: a.widgetName,\n          blockHeight: a.blockHeight,\n          renderTag,\n          profileLink: makeLink(a.accountId, tag),\n        }}\n      />\n    </div>\n  );\n};\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\nreturn render(\n  <Widget\n    src=\"mob.near/widget/ItemFeed\"\n    props={{ items: state.allItems, renderItem }}\n  />\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/LastWidgets", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.feed": NaN, "metadata.tags.widget": NaN, "metadata": NaN, "metadata.tags.tag": NaN}