{"tx_hash": "GDxt2aXPAcB3BSwaVgKbw81zXV2P6kXwh8DwKqKXXVV5", "action_id_social": "AxZ4chq4c82soDGgigJrpGveR5VG8pQfSw3KaamERGtG-0-widget", "block_id": 90940960, "block_timestamp": "2023-05-02 16:23:47.716", "signer_id": "mob.near", "widget_name": "WebSocketEvents", "source_code": "const eventsFilter = {\n  status: \"SUCCESS\",\n  account_id: \"contract.main.burrow.near\",\n  event: {\n    standard: \"burrow\",\n  },\n};\n\nfunction startWebSocket(processEvents) {\n  const scheduleReconnect = (timeOut) => {\n    if (state.reconnectTimeout) {\n      clearTimeout(state.reconnectTimeout);\n      state.reconnectTimeout = null;\n    }\n    state.reconnectTimeout = setTimeout(() => {\n      startWebSocket(processEvents);\n    }, timeOut);\n    State.update();\n  };\n\n  let ws = state.ws;\n\n  if (ws) {\n    ws.close();\n    return;\n  }\n\n  ws = new WebSocket(\"wss://events.near.stream/ws\");\n\n  ws.onopen = () => {\n    console.log(`Connection to WS has been established`);\n    ws.send(\n      JSON.stringify({\n        secret: \"near-social-events\",\n        filter: eventsFilter,\n        fetch_past_events: 100,\n      })\n    );\n  };\n  ws.onclose = () => {\n    State.update({ ws: null });\n    console.log(`WS Connection has been closed`);\n    scheduleReconnect(1);\n  };\n  ws.onmessage = (e) => {\n    const data = JSON.parse(e.data);\n    processEvents(data.events);\n  };\n  ws.onerror = (err) => {\n    State.update({ ws: null });\n    console.log(\"WebSocket error\", err);\n  };\n\n  State.update({ ws });\n}\n\nfunction processEvent(event) {\n  return {\n    time: new Date(parseFloat(event.block_timestamp) / 1e6),\n    accountId: event.event.data[0].account_id,\n    event: event.event.event,\n    data: event.event.data[0],\n  };\n}\n\nfunction processEvents(events) {\n  events = events.flatMap(processEvent);\n  events.reverse();\n\n  State.update((prevState) => {\n    const prevActions = prevState.actions || [];\n    const actions = [\n      ...events.filter(\n        (event) =>\n          prevState.length === 0 ||\n          event.time.getTime() > prevActions[0].time.getTime()\n      ),\n      ...prevActions,\n    ];\n    Object.assign(prevState, { actions: actions.slice(0, 500) });\n  });\n}\n\nif (state.ws === undefined) {\n  startWebSocket(processEvents);\n}\n\nreturn <div>Hello World</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/WebSocketEvents"}