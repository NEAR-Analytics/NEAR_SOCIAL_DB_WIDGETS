{"tx_hash": "HJSSWUJF4R9nJvH4FqfwE2KABNAk6x8jzooHjTbFypY5", "action_id_social": "13yyAVt5iwkVDiorxu9PSpvTNHroHpjQ43SjajtGMss1-0-widget", "block_id": 95172119, "block_timestamp": "2023-06-27T19:21:28.860Z", "signer_id": "klngrs.near", "widget_name": "PalaceCubeMap", "source_code": "const src = `\n<div id=\"canvas-container\" style=\"height:100%;\"></div>\n\n        <style>\n        body {\n            height:100%;\n        }\n        </style>\n\t\n\t\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/4.3.6/iframeResizer.contentWindow.js\"></script>\n\n        <!-- Import maps polyfill -->\n\t\t<!-- Remove this when import maps will be widely supported -->\n        <script async src=\"https://ga.jspm.io/npm:es-module-shims@1.7.3/dist/es-module-shims.js\"></script>\n\n\t\t<script type=\"importmap\">\n\t\t\t{\n\t\t\t\t\"imports\": {\n\t\t\t\t\t\"three\": \"https://unpkg.com/three@0.153.0/build/three.module.js\",\n\t\t\t\t\t\"orbit-controls\": \"https://unpkg.com/three@0.153.0/examples/jsm/controls/OrbitControls.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\n\n\t\t<script type=\"module\">\n\n\t\t\timport * as THREE from 'three';\n\t\t\timport { OrbitControls } from 'orbit-controls';\n\n\t\t\t// import OrbitControls from 'three-orbitcontrols';\n\n\t\t\t// import _THREE from 'three-orbitcontrols';\n\n\t\t\t// const OrbitControls = _THREE.OrbitControls;\n\n\t\t\tlet camera, controls;\n\t\t\tlet renderer;\n\t\t\tlet scene;\n\n\t\t\tinit();\n\t\t\tanimate();\n\n\t\t\tfunction init() {\n\n\t\t\t\tconst container = document.getElementById( 'canvas-container' );\n\n\t\t\t\trenderer = new THREE.WebGLRenderer();\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\n\t\t\t\tscene = new THREE.Scene();\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 0.1, 100 );\n\t\t\t\tcamera.position.z = 0.01;\n\n\t\t\t\tcontrols = new OrbitControls( camera, renderer.domElement );\n\t\t\t\tcontrols.enableZoom = false;\n\t\t\t\tcontrols.enablePan = false;\n\t\t\t\tcontrols.enableDamping = true;\n\t\t\t\tcontrols.rotateSpeed = - 0.25;\n\n\t\t\t\tconst textures = getTexturesFromAtlasFile( 'https://raw.githubusercontent.com/klngrs/three.js/dev/examples/textures/cube/sun_temple_stripe.jpg', 6 );\n\n\t\t\t\tconst materials = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmaterials.push( new THREE.MeshBasicMaterial( { map: textures[ i ] } ) );\n\n\t\t\t\t}\n\n\t\t\t\tconst skyBox = new THREE.Mesh( new THREE.BoxGeometry( 1, 1, 1 ), materials );\n\t\t\t\tskyBox.geometry.scale( 1, 1, - 1 );\n\t\t\t\tscene.add( skyBox );\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize );\n\n\t\t\t}\n\n\t\t\tfunction getTexturesFromAtlasFile( atlasImgUrl, tilesNum ) {\n\n\t\t\t\tconst textures = [];\n\n\t\t\t\tfor ( let i = 0; i < tilesNum; i ++ ) {\n\n\t\t\t\t\ttextures[ i ] = new THREE.Texture();\n\n\t\t\t\t}\n\n\t\t\t\tnew THREE.ImageLoader()\n\t\t\t\t\t.load( atlasImgUrl, ( image ) => {\n\n\t\t\t\t\t\tlet canvas, context;\n\t\t\t\t\t\tconst tileWidth = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\t\tcanvas = document.createElement( 'canvas' );\n\t\t\t\t\t\t\tcontext = canvas.getContext( '2d' );\n\t\t\t\t\t\t\tcanvas.height = tileWidth;\n\t\t\t\t\t\t\tcanvas.width = tileWidth;\n\t\t\t\t\t\t\tcontext.drawImage( image, tileWidth * i, 0, tileWidth, tileWidth, 0, 0, tileWidth, tileWidth );\n\t\t\t\t\t\t\ttextures[ i ].colorSpace = THREE.SRGBColorSpace;\n\t\t\t\t\t\t\ttextures[ i ].image = canvas;\n\t\t\t\t\t\t\ttextures[ i ].needsUpdate = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\treturn textures;\n\n\t\t\t}\n\n\t\t\tfunction onWindowResize() {\n\n\t\t\t\tconsole.log(window.innerWidth, window.innerHeight)\n\t\t\t\tvar canvasContainer = document.getElementById(\"canvas-container\");\n\t\t\t\tvar canvas = canvasContainer.firstChild;\n\t\t\t\tcanvasContainer.style.height = canvas.style.height = window.innerHeight + \"px\";\n\t\t\t\tcanvasContainer.style.width = canvas.style.width = window.innerWidth + \"px\";\n\t\t\t\tcanvas.style.margin = \"auto\";\n\t\t\t\tcanvas.style.width = \"auto\";\n\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t}\n\n\t\t\tfunction animate() {\n\n\t\t\t\trequestAnimationFrame( animate );\n\n\t\t\t\tcontrols.update(); // required when damping is enabled\n\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t}\n\n\t\t</script>\n\n\n`;\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${(props) => (props.primary ? \"palevioletred\" : \"white\")};\n  color: ${(props) => (props.primary ? \"white\" : \"palevioletred\")};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 10px;\n`;\n//\nreturn (\n  <div className=\"iframeContainer container\">\n    <iframe\n      onLoad={() => console.log(\"iframe loaded\")}\n      className=\"vh-70 w-100\"\n      style={{}}\n      srcDoc={src}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/klngrs.near/widget/PalaceCubeMap", "__row_index": 12}