{"tx_hash": "6axBd41AJ89FmX2mLLPLrSAAr2N6c2m6JztFDAq6Nv24", "action_id_social": "7VWmNqbpaqVNr1oa8sgR7C9EryNZtnikt9SWHtfdLjyM-0-widget", "block_id": 80724406, "block_timestamp": "2022-12-15 19:02:00.401", "signer_id": "jakmeier.near", "widget_name": "CanvasParty", "source_code": "State.init({\n  form: {},\n  submitted: false,\n  updates: [],\n  playerPos: { x: 0, y: 0 },\n});\n\nconst playerSession = (accountId) => {\n  return Social.get(accountId + \"/canvasParty/session/**\", \"optimistic\", {\n    subscribe: true, // refresh once in 5s\n  });\n};\n\nconst onlineState = playerSession(context.accountId);\nconsole.log(onlineState);\n\nconst main = () => {\n  if (onlineState) {\n    if (onlineState.otherPlayer !== \"\") {\n      const otherPlayer = onlineState.otherPlayer;\n      const otherPlayerState = playerSession(otherPlayer);\n      if (onlineState.activePlayer === \"\") {\n        if (otherPlayerState.otherPlayer === context.accountId) {\n          return playing(onlineState, otherPlayerState);\n        } else {\n          return waiting(onlineState);\n        }\n      } else {\n        return playing(onlineState, otherPlayerState);\n      }\n    } else {\n      return noGame();\n    }\n  } else {\n    return noState();\n  }\n};\n\nconst noState = () => {\n  //return <h2>Loading...</h2>;\n  return noGame();\n};\n\nconst noGame = () => {\n  if (!state.submitted) {\n    return home();\n  } else {\n    const otherPlayer = state.form.accountId;\n    const otherPlayerState = playerSession(otherPlayer);\n    if (otherPlayerState === null) {\n      return <h2>Searching your friend...</h2>;\n    }\n    if (otherPlayerState && otherPlayerState.otherPlayer == context.accountId) {\n      return startGameScreen(otherPlayer, context.accountId);\n    } else {\n      return openLobbyScreen(otherPlayer);\n    }\n  }\n};\n\nconst home = () => {\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        padding: \"10px\",\n      }}\n    >\n      <h2>Join a Canvas Party!</h2>\n      <p>The game currently supports 2-player mode only.</p>\n      <p>\n        Both players need to type in their friends ID for the game to start.\n      </p>\n\n      <label>\n        Account ID of friend:\n        <input\n          type=\"text\"\n          value={state.form.accountId}\n          onChange={(e) => {\n            const accountId = e.target.value\n              .toLowerCase()\n              .replace(/[^a-z0-9_.-]/g, \"\");\n            state.form = { accountId };\n            State.update();\n          }}\n        />\n      </label>\n      <div style={{ margin: \"20px 0\" }}>\n        <button\n          style={{ width: \"100%\" }}\n          onClick={() => {\n            state.submitted = true;\n            State.update();\n          }}\n        >\n          Connect\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst openLobbyScreen = (otherPlayer) => {\n  return (\n    <div>\n      <h2>Host a Canvas Party!</h2>\n      <p>{otherPlayer} is not here, yet.</p>\n      <CommitButton\n        style={{ width: \"360px\" }}\n        data={{\n          canvasParty: {\n            session: {\n              pixels: [],\n              otherPlayer,\n              activePlayer,\n              start: null,\n            },\n          },\n        }}\n      >\n        Open New Party\n      </CommitButton>\n      <button\n        onClick={() => {\n          state.submitted = false;\n          State.update();\n        }}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nconst startGameScreen = (otherPlayer, activePlayer) => {\n  return (\n    <div>\n      <h2>Join a Canvas Party!</h2>\n      <p>{otherPlayer} is hosting a party for you!</p>\n      <CommitButton\n        style={{ width: \"360px\" }}\n        data={{\n          canvasParty: {\n            session: {\n              pixels: [],\n              otherPlayer,\n              activePlayer,\n              start: Date.now(),\n              word: words[Date.now() % 100],\n            },\n          },\n        }}\n      >\n        Join\n      </CommitButton>\n      <button\n        onClick={() => {\n          state.submitted = false;\n          State.update();\n        }}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nconst waiting = (onlineState) => {\n  return (\n    <div>\n      <h2>You are alone :(</h2>\n      <p>Waiting for {onlineState.otherPlayer} to join.</p>\n      <p>They have to type in {context.accountId} and click play.</p>\n      <CommitButton\n        style={{ width: \"360px\" }}\n        data={{\n          canvasParty: {\n            session: {\n              pixels: [],\n              otherPlayer: \"\",\n              activePlayer: \"\",\n              start: null,\n            },\n          },\n        }}\n      >\n        Cancel Party\n      </CommitButton>\n    </div>\n  );\n};\n\nconst playing = (mySession, theirSession) => {\n  // no idea how that happened but no time to debug ^.^\n  if (typeof mySession.pixels === \"string\") {\n    mySession.pixels = JSON.parse(mySession.pixels);\n  }\n  if (typeof theirSession.pixels === \"string\") {\n    theirSession.pixels = JSON.parse(theirSession.pixels);\n  }\n  if (\n    theirSession.activePlayer === context.accountId &&\n    mySession.activePlayer !== context.accountId &&\n    mySession.pixels.length < theirSession.pixels.length\n  ) {\n    // they finished their turn, need to update our session\n    mySession.activePlayer = context.accountId;\n    mySession.pixels = theirSession.pixels;\n    mySession.start = theirSession.start;\n    mySession.word = theirSession.word;\n  }\n  if (theirSession.activePlayer === \"gameover\") {\n    mySession.activePlayer = \"gameover\";\n  }\n  return (\n    <div>\n      <Widget\n        src=\"jakmeier.near/widget/CanvasPartyGame\"\n        props={{ session: mySession }}\n      />\n      <CommitButton\n        style={{ width: \"360px\" }}\n        data={{\n          canvasParty: {\n            session: {\n              otherPlayer: \"\",\n              activePlayer: \"\",\n              start: null,\n            },\n          },\n        }}\n      >\n        Exit Party\n      </CommitButton>\n    </div>\n  );\n};\n\nconst words = [\n  \"Airplane\",\n  \"Apple\",\n  \"Arrow\",\n  \"Atom\",\n  \"Avocado\",\n  \"Battery\",\n  \"Bicycle\",\n  \"Binoculars\",\n  \"Bow\",\n  \"Bridge\",\n  \"Cactus\",\n  \"Carrot\",\n  \"Chicken\",\n  \"Clock\",\n  \"Cloud\",\n  \"Cocktail\",\n  \"Coconut\",\n  \"Coin\",\n  \"Compass\",\n  \"Computer\",\n  \"Coral\",\n  \"Crocodile\",\n  \"Dice\",\n  \"Ear\",\n  \"Egg\",\n  \"Eggplant\",\n  \"Eiffel tower\",\n  \"Elephant\",\n  \"Eraser\",\n  \"Eye\",\n  \"Eyebrow\",\n  \"Fire hydrant\",\n  \"Fireworks\",\n  \"Fish\",\n  \"Flag\",\n  \"Floppy disk\",\n  \"Flower\",\n  \"Forest\",\n  \"Fountain\",\n  \"Guitar\",\n  \"Helicopter\",\n  \"Horse\",\n  \"House\",\n  \"Island\",\n  \"Keyboard\",\n  \"Kiwi\",\n  \"Lantern\",\n  \"Leaf\",\n  \"Lighthouse\",\n  \"Lightning\",\n  \"Map\",\n  \"Matchbox\",\n  \"Moon\",\n  \"Motorbike\",\n  \"Mountain\",\n  \"Mustache\",\n  \"Nail\",\n  \"Nose\",\n  \"Octopus\",\n  \"Pac-Man\",\n  \"Palm tree\",\n  \"Pasta\",\n  \"Pencil\",\n  \"Pie\",\n  \"Pineapple\",\n  \"Pipe\",\n  \"Popcorn\",\n  \"Potato\",\n  \"River\",\n  \"Rock\",\n  \"Rocket\",\n  \"Ruler\",\n  \"Sailboat\",\n  \"Satelite\",\n  \"Screw\",\n  \"Smile\",\n  \"Snowflake\",\n  \"Spoon\",\n  \"Stamp\",\n  \"Star\",\n  \"Stop sign\",\n  \"Sunflower\",\n  \"Sword\",\n  \"Table\",\n  \"Thermometer\",\n  \"Toast\",\n  \"Tongue\",\n  \"Tooth\",\n  \"Tornado\",\n  \"Tower\",\n  \"Traffic light\",\n  \"Tree\",\n  \"Violin\",\n  \"Volcano\",\n  \"Watch\",\n  \"Water melon\",\n  \"Waterfall\",\n  \"Windmill\",\n  \"Wine glass\",\n  \"Yin and Yang\",\n];\n\n// putting this here at the endto avoid hoisting errors\nreturn main();\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jakmeier.near/widget/CanvasParty", "metadata.image.url": NaN, "metadata.name": NaN, "metadata.tags.app": NaN}