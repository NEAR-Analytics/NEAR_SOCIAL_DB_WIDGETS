{"tx_hash": "J9zmQbZrPcTY89Fb92pwZMUq6HoGq8iGwXGCL7efwt6C", "action_id_social": "6QETMfSZYvbXUmcEjGmupUoTnQpsmwPqBo52puQdzxR8-0-widget", "block_id": 81325213, "block_timestamp": "2022-12-24 02:18:53.424", "signer_id": "jakmeier.near", "widget_name": "MapView", "source_code": "// Array of objects defined as [{x,y,tile}]\nconst OBJECTS = props.objects;\n// Set this to all tiles that have no object.\nconst EMPTY_TILE = props.empty ?? \" \";\n\n// Coordinates to select view from global map.\nconst X = props.x ?? 0;\nconst Y = props.y ?? 0;\nconst W = props.width;\nconst H = props.height;\n\n// Offset, useful to use x,y as center instead of top-left.\nconst OFFSET_X = props.offset.x ?? 0;\nconst OFFSET_Y = props.offset.y ?? 0;\n\n// Props checks.\nif (!Array.isArray(OBJECTS)) {\n  return \"props.objects not set to an array\";\n}\nif (typeof W !== \"number\") {\n  return \"props.width not set\";\n}\nif (typeof H !== \"number\") {\n  return \"props.height not set\";\n}\n\n// Select a view of the map, store it as 2D array of tiles and insert pixels.\nconst mapView = () => {\n  const map = Array.from(Array(W), () => new Array(H).fill(EMPTY_TILE));\n  const left = X - OFFSET_X;\n  const top = Y - OFFSET_Y;\n\n  OBJECTS.forEach((obj) => {\n    const x = obj.x - left;\n    const y = obj.y - top;\n    if (map[x] && map[x][y]) {\n      map[x][y] = obj.tile;\n    }\n  });\n\n  return map;\n};\n\nreturn (\n  <Widget\n    src=\"jakmeier.near/widget/TileGrid\"\n    props={{\n      tiles: mapView(),\n      ...props,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jakmeier.near/widget/MapView"}