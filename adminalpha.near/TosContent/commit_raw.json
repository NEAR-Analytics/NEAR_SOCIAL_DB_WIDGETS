{"tx_hash": "DcHT5MAgMJMsgAM2wkFkh4ctLyavjS1TbLW3hXe3DpQg", "action_id_social": "C2JcaGyZmsVFwJfqvVbWshsSJ45v5uheNXWRwqVGXLzn-0-widget", "block_id": 86471799, "block_timestamp": "2023-03-03 15:19:22.882", "signer_id": "adminalpha.near", "widget_name": "TosContent", "source_code": "//options: default, terms, privacy, community\nState.init({ show: \"default\", terms: null, privacy: null, community: null });\n\nconst termsCid = \"QmZ2vbq3crEb4AzaVZED85mHreccBR8r3XRy9Zjvb3gjBA\";\nconst privacyCid = \"QmZ4R87C4RS85nvXYVAC1YXWdWCszRe3WCCi3FoGvbBPkZ\";\n// const communityCid = \"QmX8f9iiPJG6YtQQA2zZcwi7UF3PigwudnEzwfoLgArCyQ\";\n\n// using web3.storage gateway since near.social is failing to resolve\n// NOTE: this gateway has a 200req/hr/ip rate limit\n// https://web3.storage/docs/concepts/w3link/#rate-limits\n// asyncFetch(`https://${termsCid}.ipfs.w3s.link/terms.md`).then((res) => {\n//   State.update({ terms: res.body });\n// });\n\n// now using infura\nasyncFetch(`https://alphanear.infura-ipfs.io/ipfs/${termsCid}`).then((res) => {\n  State.update({ terms: res.body });\n});\nasyncFetch(`https://alphanear.infura-ipfs.io/ipfs/${privacyCid}`).then(\n  (res) => {\n    State.update({ privacy: res.body });\n  }\n);\n// asyncFetch(`https://alphanear.infura-ipfs.io/ipfs/${communityCid}`).then(\n//   (res) => {\n//     State.update({ community: res.body });\n//   }\n// );\n\nconst Wrapper = styled.div`\n`;\n\nconst DocBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5rem;\n  border: solid 1px lightgrey;\n  border-radius: 0.75rem;\n  padding: 1rem;\n  cursor: pointer;\n  &:hover {\n    color: #26A65A;\n    border-color: #26A65A;\n  }\n`;\n\nconst DocTitle = styled.div`\ndisplay: flex;\nflex-direction: row;\ncolumn-gap: 0.5rem;\nfont-weight: bold;\nalign-items: center;\n`;\n\nconst DocSummary = styled.span`\ncolor: grey\n`;\n\nconst Arrow = styled.i`\n  color: #26A65A;\n  font-size: 1.25rem;\n`;\n\n// const DocFullDisplay = styled.div`\n//   display: flex;\n//   flex\n// `;\n\nconst DocContent = styled.div`\n  overflow-y: scroll;\n`;\n\nreturn (\n  <Wrapper className=\"d-flex flex-column gap-3 justify-content-center\">\n    {state.show === \"default\" && (\n      <>\n        <h3>Terms of Service and Privacy Policy</h3>\n        <p>\n          Please read and agree to the following terms and policies to continue\n          using alpha.near.org:\n        </p>\n        <DocBox\n          onClick={() => {\n            State.update({ show: \"terms\" });\n          }}\n        >\n          <DocTitle>\n            Terms of Service\n            <Arrow className=\"bi bi-arrow-right\" />\n          </DocTitle>\n          <DocSummary>\n            Details on acceptable ways to engage with our software during Alpha\n            Testing\n          </DocSummary>\n        </DocBox>\n        <DocBox\n          onClick={() => {\n            State.update({ show: \"privacy\" });\n          }}\n        >\n          <DocTitle>\n            Privacy Policy\n            <Arrow className=\"bi bi-arrow-right\" />\n          </DocTitle>\n          <DocSummary>\n            Details on our privacy policy during Alpha Testing\n          </DocSummary>\n        </DocBox>\n        {/*\n        <DocBox\n          onClick={() => {\n            State.update({ show: \"community\" });\n          }}\n        >\n          <DocTitle>\n            Community Guidelines\n            <Arrow className=\"bi bi-arrow-right\" />\n          </DocTitle>\n          <DocSummary>Summary</DocSummary>\n        </DocBox>\n        */}\n      </>\n    )}\n    {state.show === \"terms\" && (\n      <>\n        <button\n          onClick={() => {\n            State.update({ show: \"default\" });\n            props.expand(false);\n          }}\n          className=\"btn btn-outline-success\"\n          style={{ width: \"6rem\" }}\n        >\n          <i className=\"bi bi-arrow-left\" />\n          Back\n        </button>\n        <DocContent>\n          {state.terms ? <Markdown text={state.terms} /> : <p>Loading...</p>}\n        </DocContent>\n      </>\n    )}\n    {state.show === \"privacy\" && (\n      <>\n        <button\n          onClick={() => {\n            State.update({ show: \"default\" });\n          }}\n          className=\"btn btn-outline-success\"\n          style={{ width: \"6rem\" }}\n        >\n          <i className=\"bi bi-arrow-left\" />\n          Back\n        </button>\n        <DocContent>\n          {state.privacy ? (\n            <Markdown text={state.privacy} />\n          ) : (\n            <p>Loading...</p>\n          )}\n        </DocContent>\n      </>\n    )}\n    {/*\n    {state.show === \"community\" && (\n      <>\n        <button\n          onClick={() => {\n            State.update({ show: \"default\" });\n          }}\n          className=\"btn btn-outline-success\"\n          style={{ width: \"6rem\" }}\n        >\n          <i className=\"bi bi-arrow-left\" />\n          Back\n        </button>\n        <DocContent>\n          {state.community ? (\n            <Markdown text={state.community} />\n          ) : (\n            <p>Loading...</p>\n          )}\n        </DocContent>\n      </>\n    )}\n    */}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/adminalpha.near/widget/TosContent"}