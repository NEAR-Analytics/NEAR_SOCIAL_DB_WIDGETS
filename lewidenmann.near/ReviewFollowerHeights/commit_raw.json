{"tx_hash": "BBATxpsP9tHgkp5S8EHUj94eQanECfVno957MRAe3oah", "action_id_social": "7AMRCjXLTrfDJnvVa1BS8imVh3LdoPTqQrNaNUbJtSy2-0-widget", "block_id": 80717169, "block_timestamp": "2022-12-15 16:40:16.235", "signer_id": "lewidenmann.near", "widget_name": "ReviewFollowerHeights", "source_code": "const contractId = \"proof_of_height.lewidenmann.near\";\nconst accountId = context.accountId;\nif (!accountId) {\n  return \"Please login to use Proof of Height\";\n}\n\nState.init({\n  currentFollowerIndex: 0,\n  hasFinishedReviewing: false,\n});\n\nconst follows = Social.get(`${accountId}/graph/follow/**`);\n\nconsole.log(\"this account follows\", follows);\n\nconst followers = follows\n  ? Object.keys(follows)\n      .map((f) => {\n        console.log(\"a follower\", f);\n        return {\n          accountId: f,\n          height: Near.view(contractId, \"get_height_inches\", { account_id: f }),\n        };\n      })\n      .filter((f) => f.height)\n      .filter((f) => {\n        const voted = Near.view(contractId, \"get_who_voted_for\", {\n          account_id: f.accountId,\n        });\n        console.log(\"who voted for\", f.accountId, \":\", voted);\n        return voted ? !voted.includes(accountId) : true;\n      })\n  : [];\n\nconsole.log(\"followers with a height\", followers);\n\nconst reviewOptions = [\n  {\n    display: \"Definitely Yes\",\n    className: \"btn-success\",\n    value: 2,\n    enum: \"DefinitelyYes\",\n  },\n  {\n    display: \"Yes\",\n    className: \"btn-primary\",\n    value: 1,\n    enum: \"Yes\",\n  },\n  {\n    display: \"No\",\n    className: \"btn-warning\",\n    value: -1,\n    enum: \"No\",\n  },\n  {\n    display: \"Definitely No\",\n    className: \"btn-danger\",\n    value: -2,\n    enum: \"DefinitelyNo\",\n  },\n];\n\nconst currentFollower = followers[state.currentFollowerIndex];\n\nfunction displayHeight(height) {\n  const feet = Math.floor(height / 12);\n  const inches = height - feet * 12;\n  return `${feet}\u2032${inches}\u2033`;\n}\n\nfunction submitHeightReview(follower, option) {\n  console.log(\"Option selected:\", follower, option);\n  Near.call(contractId, \"vote\", {\n    account_id: follower.accountId,\n    vote: option.enum,\n  });\n  nextFollower();\n}\n\nfunction skipHeightReview() {\n  nextFollower();\n}\n\nfunction nextFollower() {\n  const nextIndex = state.currentFollowerIndex + 1;\n\n  if (nextIndex < followers.length) {\n    State.update({\n      currentFollowerIndex: nextIndex,\n    });\n  } else {\n    State.update({\n      hasFinishedReviewing: true,\n    });\n  }\n}\n\nreturn (\n  <div class=\"card\">\n    {state.hasFinishedReviewing ? (\n      <div className=\"p-3\">\n        <h5>Review Your Followers&apos; Heights</h5>\n\n        <hr />\n\n        <div class=\"alert alert-success m-0\" role=\"alert\">\n          You have reviewed all of your followers&apos; heights.\n        </div>\n      </div>\n    ) : (\n      <div>\n        <div className=\"p-3\">\n          <h5>\n            {`Review Your Followers' Heights (${\n              state.currentFollowerIndex + 1\n            } of ${followers.length})`}\n          </h5>\n\n          <hr />\n\n          <h6 className=\"mb-3\">Is this user&apos;s height accurate?</h6>\n\n          <div className=\"d-flex flex-row\" style={{ gap: \"1rem\" }}>\n            <Widget\n              src=\"mob.near/widget/Profile\"\n              props={{ accountId: currentFollower.accountId }}\n            />\n            <h1 style={{ borderLeft: \"1px solid\", paddingLeft: \"1rem\" }}>\n              {displayHeight(currentFollower.height)}\n            </h1>\n          </div>\n        </div>\n\n        <div\n          className=\"card-footer p-3\"\n          style={{ gap: \"1rem\", display: \"block\" }}\n        >\n          <div\n            className=\"d-flex flex-column flex-md-row align-items-start\"\n            style={{ gap: \"1rem\" }}\n          >\n            <div\n              className=\"btn-group\"\n              style={{ gap: \"0.25rem\", marginRight: \"auto\" }}\n            >\n              {reviewOptions.map((option) => {\n                return (\n                  <button\n                    type=\"button\"\n                    className={`btn ${option.className}`}\n                    onClick={() => {\n                      submitHeightReview(currentFollower, option);\n                    }}\n                  >\n                    {option.display}\n                  </button>\n                );\n              })}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={skipHeightReview}\n            >\n              Skip\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lewidenmann.near/widget/ReviewFollowerHeights"}