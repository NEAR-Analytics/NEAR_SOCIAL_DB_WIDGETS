{"tx_hash": "7iqpxyihtN1xYkWd7UshU83mXeumVoUNyvA5xNBkicZ3", "action_id_social": "64w8vuvfPcjddysx2osGRC4rx3Cq4a6TePqsq35JK7V9-0-widget", "block_id": 83826896, "block_timestamp": "2023-01-26 09:19:10.235", "signer_id": "events_v1.near", "widget_name": "app__frame", "source_code": "const VERSION = '0.0.2';\n\nconst accountId = context.accountId;\nif (!accountId) {\n  return 'Please connect your NEAR wallet to continue.';\n}\n\nconst appOwner = props.appOwner;\nif (!appOwner) {\n  return 'props.appOwner is required';\n}\n\nconst appName = props.appName;\nif (!appName) {\n  return 'props.appName is required';\n}\n\nconst entryRoute = props.entryRoute;\nif (!entryRoute) {\n  return 'props.entryRoute is required';\n}\n\nconst entryProps = props.entryProps || {};\nconst entryLayout = props.entryLayout || 'default';\nconst entryLayoutProps = props.entryLayoutProps || {};\n\nconst env = {\n  app: {\n    owner: appOwner,\n    name: appName,\n  },\n  VERSION,\n};\n\n// TODO: get layers from URL\nState.init({\n  env,\n  renderCycles: state ? state.renderCycles + 1 : 1,\n  layers: [\n    {\n      name: entryRoute,\n      props: entryProps,\n      layout: entryLayout,\n      layoutProps: entryLayoutProps,\n    },\n  ],\n});\n\nif (!state) {\n  return '';\n}\n\nfunction slugFromName(name) {\n  // console.log('slugFromName', name);\n  return name.split('.').join('__');\n}\n\nfunction layoutFromName(name) {\n  // console.log('layoutFromName', name);\n  return `${appOwner}/widget/app__layouts__${slugFromName(name)}`;\n}\n\nconst Select = styled.select`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n`;\n\nconst Button = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  transition: all 0.5s ease;\n\n  &:hover {\n    background-color: #3e8e41;\n  }\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n`;\n\nconst Components = {\n  Select,\n  Button,\n  Loading,\n};\n\nfunction rerender() {\n  // HACK: force a re-render\n  State.update({\n    renderCycles: state.renderCycles + 1,\n  });\n}\n\nfunction push(name, props, layout, layoutProps) {\n  console.log('push', name, props, layout, layoutProps);\n  const layer = {\n    name,\n    props: props || {},\n    layout: layout || 'default',\n    layoutProps: layoutProps || {},\n  };\n  const newLayers = [...state.layers, layer];\n\n  State.update({\n    layers: newLayers,\n  });\n\n  rerender();\n}\n\n// pop from the stack, ensure we always have at least one layer\nfunction pop() {\n  State.update({\n    layers: state.layers.length > 1 ? state.layers.slice(0, -1) : state.layers,\n  });\n\n  rerender();\n}\n\nconst routing = {\n  push,\n  pop,\n};\n\nfunction renderComponent(name, props, layout, layoutProps) {\n  console.log('renderComponent', name, props, layout, layoutProps);\n  const _layoutName = layout || 'default';\n  const componentProps = {\n    ...(props || {}),\n    routing,\n    engine: {\n      renderComponent,\n      rerender,\n    },\n    Components,\n    accountId,\n    VERSION,\n    layout: _layoutName,\n    layoutProps: layoutProps || {},\n  };\n  const layoutKey = layoutProps && layoutProps.key ? layoutProps.key : null;\n  const widgetKey = props && props.key ? props.key : name;\n  const key = layoutKey || widgetKey;\n\n  return (\n    <Widget\n      src={layoutFromName(_layoutName)}\n      key={key}\n      props={{\n        ...componentProps,\n        component: {\n          src: `${APP_OWNER}/widget/${APP_NAME}__${slugFromName(name)}`,\n          props: componentProps,\n        },\n      }}\n    />\n  );\n}\n\nreturn (\n  <>\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n        backgroundColor: 'white',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        padding: 0,\n        zIndex: 10000,\n        overflow: 'auto',\n      }}\n    >\n      <div id=\"app-state\" data-state={JSON.stringify(state)}></div>\n\n      {renderComponent(\n        state.layers[state.layers.length - 1].name,\n        state.layers[state.layers.length - 1].props,\n        state.layers[state.layers.length - 1].layout,\n        state.layers[state.layers.length - 1].layoutProps\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v1.near/widget/app__frame"}