{"tx_hash": "6EwvcCUCxRDqiJDksJ9C1Pc51z1ChWeAUCTdzxAtNZYG", "action_id_social": "AJk7QgwqxPCyAFLnZTSBqboBXHSDarVxQ1GRmLG98TvR-0-widget", "block_id": 84136643, "block_timestamp": "2023-01-30 14:35:00.723", "signer_id": "events_v1.near", "widget_name": "events__show", "source_code": "const EVENTS_CONTRACT = 'events_v1.near';\nconst TGAS_300 = '300000000000000';\n\nconst eventId = props.event_id;\nif (!eventId) {\n  return props.__engine.helpers.propIsRequiredMessage('event_id');\n}\n\nconst event = Near.view(EVENTS_CONTRACT, 'get_event', {\n  event_id: props.event_id,\n});\nif (!event) {\n  return 'Loading';\n}\n\nprops.controller.setLayout('container', {\n  back: true,\n  title: event.name,\n});\n\nfunction removeEvent() {\n  const contract = EVENTS_CONTRACT;\n  const method = 'remove_event';\n  const args = {\n    event_id: event.id,\n  };\n  const gas = TGAS_300;\n  const deposit = '0';\n  Near.call(contract, method, args, gas, deposit);\n}\n\nfunction editEvent() {\n  props.__engine.push('edit', { event_id: props.event_id });\n}\n\nconst PageTitle = props.__engine.Components.PageTitle;\nconst Container = props.__engine.Components.Container;\nconst InfoBar = props.__engine.Components.InfoBar;\nconst TextHeader = props.__engine.Components.TextHeader;\nconst Text = props.__engine.Components.Text;\nconst InlineTag = props.__engine.Components.InlineTag;\nconst InfoBarItem = props.__engine.Components.InfoBarItem;\nconst InfoBarLink = props.__engine.Components.InfoBarLink;\n\nconst startDate = new Date(event.start_date);\nconst endDate = new Date(event.end_date);\nconst datesAreEqual = startDate.toDateString() === endDate.toDateString();\n\nconsole.log('event', event);\n\nreturn (\n  <>\n    {/* Header Images */}\n    <div\n      style={{\n        position: 'relative',\n        backgroundColor: 'black',\n        minHeight: '200px',\n        maxHeight: '50vh',\n        height: '400px',\n        borderBottom: '0.3vw solid black',\n      }}\n    >\n      {props.__engine.renderComponent('components.event_image_slider', {\n        event,\n        mode: 'banner',\n      })}\n\n      <div\n        style={{\n          position: 'absolute',\n          left: '0',\n          bottom: '0',\n          transform: 'translate(10%, 33%)',\n          padding: '4px',\n          width: '14vw',\n          height: '14vw',\n          minWidth: '200px',\n          minHeight: '200px',\n          background: 'white',\n          borderRadius: 14,\n          border: '0.3vw solid black',\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            borderRadius: 10,\n          }}\n        >\n          {props.__engine.renderComponent('components.event_image_slider', {\n            event,\n            mode: 'tile',\n          })}\n        </div>\n      </div>\n    </div>\n\n    {/* title */}\n    <div style={{ marginTop: '8vw', paddingTop: '45px' }}>\n      <Container>\n        <PageTitle>{event.name}</PageTitle>\n      </Container>\n    </div>\n\n    {/* info bar with condensed info */}\n\n    <InfoBar>\n      <InfoBarItem>\n        <Text>\n          <i className=\"bi bi-calendar\"></i>\n\n          {datesAreEqual ? (\n            <>\n              {startDate.getDate()}{' '}\n              {startDate.toLocaleString('default', { month: 'short' })}{' '}\n              {startDate.getFullYear()}\n            </>\n          ) : (\n            <>\n              {startDate.getDate()}{' '}\n              {startDate.toLocaleString('default', { month: 'short' })}{' '}\n              {startDate.getFullYear()} - {endDate.getDate()}{' '}\n              {endDate.toLocaleString('default', { month: 'short' })}{' '}\n              {endDate.getFullYear()}\n            </>\n          )}\n        </Text>\n      </InfoBarItem>\n\n      <InfoBarItem>\n        <Text>\n          <i className=\"bi bi-geo\"></i>\n          {event.location}\n        </Text>\n      </InfoBarItem>\n\n      <InfoBarItem>\n        <i className=\"bi bi-tag\"></i>\n\n        <InlineTag>{event.category}</InlineTag>\n      </InfoBarItem>\n    </InfoBar>\n\n    {/* link bar */}\n    <InfoBar>\n      {props.__engine.accountId === event.account_id ? (\n        <>\n          <InfoBarLink\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              editEvent();\n            }}\n            onKeyDown={() => {\n              if (event.key === 'Enter') {\n                editEvent();\n              }\n            }}\n          >\n            Edit\n          </InfoBarLink>\n\n          <InfoBarLink\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              removeEvent();\n            }}\n            onKeyDown={() => {\n              if (event.key === 'Enter') {\n                removeEvent();\n              }\n            }}\n          >\n            Delete\n          </InfoBarLink>\n        </>\n      ) : null}\n\n      {event.links.map((link, idx) => {\n        return (\n          <InfoBarLink\n            href={link.url}\n            key={idx}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            onMouseEnter={(e) => {\n              e.target.style.textDecoration = 'underline';\n            }}\n            onMouseLeave={(e) => {\n              e.target.style.textDecoration = 'none';\n            }}\n          >\n            {/* TODO: for each link type find and display icon */}\n            {link.text}\n          </InfoBarLink>\n        );\n      })}\n    </InfoBar>\n\n    <div\n      style={{\n        marginTop: '20px',\n      }}\n    >\n      <Container>\n        <TextHeader>Description</TextHeader>\n        <Text>{event.description}</Text>\n      </Container>\n\n      <p>{event.type}</p>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events_v1.near/widget/events__show"}