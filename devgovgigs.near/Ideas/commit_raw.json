{"tx_hash": "BgvrbVjCLccfpmHptDc8H2RK4dnBEw3bBS7gEoqPGXdx", "action_id_social": "79RBXf83Hg3VdbrUQdwJrxDYVZHXzkMRfp3xQBR2Dea3-0-widget", "block_id": 85180877, "block_timestamp": "2023-02-14 01:30:05.897", "signer_id": "devgovgigs.near", "widget_name": "Ideas", "source_code": "const ownerId = \"devgovgigs.near\";\nconst postId = \"Root\";\n\nconsole.log(\"props\", props);\n\nconst defaultSelectedBoard = \"mnwtransition\";\n\ninitState({\n  recency: props.recency,\n  label: props.label,\n  selectedBoardId: props.selectedBoardId ?? null,\n  selectedPost: props.postId,\n});\n\nif (context.accountId) {\n  let grantNotify = Near.view(\"social.near\", \"is_write_permission_granted\", {\n    predecessor_id: ownerId,\n    key: context.accountId + \"/index/notify\",\n  });\n  if (grantNotify === null) {\n    return \"Initializing ...\";\n  }\n  if (grantNotify === false) {\n    Near.call(\n      \"social.near\",\n      \"grant_write_permission\",\n      {\n        predecessor_id: ownerId,\n        keys: [context.accountId + \"/index/notify\"],\n      },\n      30_000_000_000_000n,\n      1n\n    );\n  }\n}\n\n// // A workaround for weird VM behavior. It does not call initState when the same\n// // widget is reopened in the same tab.\n// if (state.selectedPost != props.postId) {\n//   State.update({ selectedPost: props.postId });\n// }\n// if (state.label != props.label) {\n//   State.update({ label: props.label });\n// }\n\nconst defaultSelectedLabels = props.label ? [{ name: props.label }] : [];\n\nconst home = \"https://near.social/#/devgovgigs.near/widget/Ideas\";\n\nconst labels = Near.view(ownerId, \"get_all_labels\");\nif (!labels) {\n  return <div>Loading ...</div>;\n}\nconst wrappedLabels = labels.map((l) => {\n  return { name: l };\n});\n\nconst onHomeClick = () => {\n  State.update({\n    recency: null,\n    label: null,\n    selectedBoardId: null,\n    selectedPost: null,\n  });\n};\n\nconst onRecentClick = () => {\n  State.update({\n    recency: \"all\",\n    label: null,\n    selectedBoardId: null,\n    selectedPost: null,\n  });\n};\n\nconst onRecurrentClick = () => {\n  State.update({\n    recency: null,\n    label: \"recurrent\",\n    selectedBoardId: null,\n    selectedPost: null,\n  });\n};\n\nconst onLabelSelected = (selectedLabels) => {\n  if (selectedLabels.length == 1) {\n    console.log(\"Selected label %s\", selectedLabels[0].name);\n    State.update({\n      label: selectedLabels[0].name,\n      recency: null,\n      selectedPost: null,\n      selectedBoardId: null,\n    });\n  } else {\n    console.log(\"Unselected label\");\n    State.update({\n      recency: props.recency,\n      label: null,\n      selectedBoardId: null,\n      selectedPost: null,\n    });\n  }\n};\n\nconst onBoardsClick = () => {\n  State.update({\n    selectedBoardId:\n      props.selectedBoardId == null ? null : defaultSelectedBoard,\n    selectedPost: null,\n  });\n};\n\n// TODO: Sort ideas based on how much in total USD equivalent was pledged through sponsorships.\n// TODO: Sort ideas based on a criteria that includes social activity, like attestations.\n\nconst Card = styled.div`\n  &:hover {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n\n`;\n\nconst editorsFooter = props.isPreview ? null : (\n  <div class=\"row\" id={`accordion${postId}`}>\n    <div\n      class=\"collapse\"\n      id={`collapseCommentEditor${postId}`}\n      data-bs-parent={`#accordion${postId}`}\n    >\n      <Widget\n        src={`${ownerId}/widget/PostEditor`}\n        props={{\n          postType: \"Comment\",\n          parentId: null,\n          referral: props.referral,\n        }}\n      />\n    </div>\n    <div\n      class=\"collapse\"\n      id={`collapseIdeaEditor${postId}`}\n      data-bs-parent={`#accordion${postId}`}\n    >\n      <Widget\n        src={`${ownerId}/widget/PostEditor`}\n        props={{\n          postType: \"Idea\",\n          parentId: null,\n          referral: props.referral,\n        }}\n      />\n    </div>\n    <div\n      class=\"collapse\"\n      id={`collapseSubmissionEditor${postId}`}\n      data-bs-parent={`#accordion${postId}`}\n    >\n      <Widget\n        src={`${ownerId}/widget/PostEditor`}\n        props={{\n          postType: \"Submission\",\n          parentId: null,\n          referral: props.referral,\n        }}\n      />\n    </div>\n    <div\n      class=\"collapse\"\n      id={`collapseAttestationEditor${postId}`}\n      data-bs-parent={`#accordion${postId}`}\n    >\n      <Widget\n        src={`${ownerId}/widget/PostEditor`}\n        props={{\n          postType: \"Attestation\",\n          parentId: null,\n          referral: props.referral,\n        }}\n      />\n    </div>\n    <div\n      class=\"collapse\"\n      id={`collapseSponsorshipEditor${postId}`}\n      data-bs-parent={`#accordion${postId}`}\n    >\n      <Widget\n        src={`${ownerId}/widget/PostEditor`}\n        props={{\n          postType: \"Sponsorship\",\n          parentId: null,\n          referral: props.referral,\n        }}\n      />\n    </div>\n  </div>\n);\n\nconst controls = (\n  <div class=\"card border-secondary mb-2\">\n    <div class=\"nav navbar navbar-expand-lg bg-body-tertiary\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar-brand\">\n          <Widget\n            src=\"mob.near/widget/ProfileImage\"\n            props={{\n              metadata,\n              accountId,\n              widgetName,\n              style: { height: \"2.5em\", width: \"2.5em\", minWidth: \"2.5em\" },\n              className: \"me-2\",\n            }}\n          />\n        </div>\n        <div class=\"nav navbar-brand h1\">Create</div>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link active\"\n                aria-current=\"page\"\n                href=\"#\"\n                data-bs-toggle=\"collapse\"\n                href={`#collapseIdeaEditor${postId}`}\n                role=\"button\"\n                aria-expanded=\"false\"\n                aria-controls={`collapseIdeaEditor${postId}`}\n              >\n                <i class=\"bi-lightbulb-fill\"> </i>\n                Idea\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link active\"\n                href=\"#\"\n                data-bs-toggle=\"collapse\"\n                href={`#collapseSubmissionEditor${postId}`}\n                role=\"button\"\n                aria-expanded=\"false\"\n                aria-controls={`collapseSubmissionEditor${postId}`}\n              >\n                <i class=\"bi-rocket-fill\"> </i>\n                Solution\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link active\"\n                href=\"#\"\n                data-bs-toggle=\"collapse\"\n                href={`#collapseAttestationEditor${postId}`}\n                role=\"button\"\n                aria-expanded=\"false\"\n                aria-controls={`collapseAttestationEditor${postId}`}\n              >\n                <i class=\"bi-check-circle-fill\"> </i>\n                Attestation\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link active\"\n                href=\"#\"\n                data-bs-toggle=\"collapse\"\n                href={`#collapseSponsorshipEditor${postId}`}\n                role=\"button\"\n                aria-expanded=\"false\"\n                aria-controls={`collapseSponsorshipEditor${postId}`}\n              >\n                <i class=\"bi-cash-coin\"> </i>\n                Sponsorship\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    {editorsFooter}\n  </div>\n);\n\nconst navbar = (\n  <div class=\"card border-secondary\">\n    <div class=\"nav navbar navbar-expand-lg bg-body-tertiary\">\n      <div class=\"container-fluid\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item \">\n            <a\n              class=\"nav-link active button\"\n              onClick={onHomeClick}\n              role=\"button\"\n            >\n              <i class=\"bi-house-fill\"> </i>\n              Home\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" onClick={onRecentClick} role=\"button\">\n              <i class=\"bi-fire\"> </i>\n              Recent\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" onClick={onRecurrentClick} role=\"button\">\n              <i class=\"bi-repeat\"> </i> Recurrent\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" onClick={onBoardsClick} role=\"button\">\n              <i class=\"bi-kanban\"> </i>\n              Boards\n            </a>\n          </li>\n       \t  <li class=\"nav-item\">\n            <a\n              class=\"nav-link active\"\n              href=\"https://near.social/#/devgovgigs.near/widget/TeamsList\"\n              target=\"_blank\"\n              title=\"View teams and permissions\"\n              role=\"button\"\n            >\n              <i class=\"bi-people-fill\"> </i>\n              Teams\n            </a>\n          </li>\n\n          <li class=\"nav-item active ms-2\">\n            <Typeahead\n              clearButton\n              id=\"basic-typeahead-single\"\n              labelKey=\"name\"\n              onChange={onLabelSelected}\n              options={wrappedLabels}\n              placeholder=\"Search\"\n              defaultSelected={defaultSelectedLabels}\n            />\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n);\n\nreturn (\n  <div>\n    {controls}\n    {navbar}\n    {state.selectedBoardId != null ? (\n      <Widget\n        src={`${ownerId}/widget/KanbanBoardList`}\n        props={{ selectedBoardId: state.selectedBoardId }}\n      />\n    ) : state.selectedPost ? (\n      <Widget\n        src={`${ownerId}/widget/Post`}\n        props={{ id: state.selectedPost,\n          referral: props.referral,\n  }}\n      />\n    ) : (\n      <Widget\n        src={`${ownerId}/widget/IdeasList`}\n        props={{\n          recency: state.recency,\n          label: state.label,\n          referral: props.referral,\n}}\n      />\n    )}\n  </div>\n);\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/devgovgigs.near/widget/Ideas", "metadata.description": "A place for ideas, where they are proposed, discussed, validated, sponsored, and implemented.", "metadata.image.ipfs_cid": "bafkreifynesvgrnghleag5c7vgshkp7h4uegzwdhjyjqqans4t3hdpuhii", "metadata.linktree.website": NaN, "metadata.name": "Developer Governance Gigs", "metadata.tags.developer-governance": "", "metadata.tags.app": "", "branch.draft.": NaN, "branch.draft": NaN, "metadata.image.url": NaN}