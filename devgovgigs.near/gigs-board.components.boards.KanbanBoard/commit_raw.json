{"tx_hash": "EVB7NApgKPyZGXo7CWomSMdJVsz231XM4XTT3BYqgHd", "action_id_social": "BHs2CPEbm2Fc7f35ByGgdXta741w7XHG3xWE9cCHSV2Z-0-widget", "block_id": 87947316, "block_timestamp": "2023-03-23 14:12:54.995", "signer_id": "devgovgigs.near", "widget_name": "gigs-board.components.boards.KanbanBoard", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n  const linkPropsQuery = Object.entries(linkProps)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n  return `#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst requiredLabels = props.requiredLabels ?? [\"near-social\"];\nconst excludedLabels = props.excludedLabels ?? [\"nft\"];\nconst columns = props.columns ?? [\n  { label: \"widget\", title: \"Widget\" },\n  { label: \"integration\", title: \"Integration\" },\n  { label: \"feature-request\", title: \"Feature Request\" },\n];\n\nconst labelsToIdSet = (labels) => {\n  const ids = labels.map(\n    (label) =>\n      Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n        label,\n      }) ?? []\n  );\n  const idsFlat = ids.flat(1);\n  return new Set(idsFlat);\n};\n\nconst requiredPostsSet = labelsToIdSet(requiredLabels);\nconst excludedPostsSet = labelsToIdSet(excludedLabels);\n\nconst postsPerLabel = columns.map((column) => {\n  let allIds = (\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label: column.label,\n    }) ?? []\n  ).reverse();\n  if (requiredLabels.length > 0) {\n    return {\n      ...column,\n      posts: allIds.filter(\n        (i) => requiredPostsSet.has(i) && !excludedPostsSet.has(i)\n      ),\n    };\n  } else {\n    // No extra filtering is required.\n    return { ...column, posts: allIds };\n  }\n});\n\nreturn (\n  <div>\n    <div class=\"row mb-2\">\n      {props.boardId ? (\n        <div class=\"col\">\n          <small class=\"text-muted\">\n            <a\n              class=\"card-link\"\n              href={href(\"Boards\", { selectedBoardId: props.boardId })}\n              role=\"button\"\n              target=\"_blank\"\n              title=\"Link to this board\"\n            >\n              <div class=\"hstack gap-3\">\n                <div class=\"bi bi-share\"></div>\n                <div>Link to this board</div>\n              </div>\n            </a>\n          </small>\n        </div>\n      ) : null}\n\n      {requiredLabels.length > 0 ? (\n        <div class=\"col\">\n          <small class=\"text-muted\">\n            Required labels:\n            {requiredLabels.map((label) => (\n              <a href={href(\"Feed\", { label })} key={label}>\n                <span class=\"badge text-bg-primary me-1\">{label}</span>\n              </a>\n            ))}\n          </small>\n        </div>\n      ) : null}\n      {excludedLabels.length > 0 ? (\n        <div class=\"col\">\n          <small class=\"text-muted\">\n            Excluded labels:\n            {excludedLabels.map((label) => (\n              <a href={href(\"Feed\", { label })} key={label}>\n                <span class=\"badge text-bg-primary me-1\">{label}</span>\n              </a>\n            ))}\n          </small>\n        </div>\n      ) : null}\n    </div>\n    <div class=\"row\">\n      {postsPerLabel.map((column) => (\n        <div class=\"col-3\" key={column.label}>\n          <div class=\"card\">\n            <div class=\"card-body border-secondary\">\n              <h6 class=\"card-title\">\n                {column.title}({column.posts.length})\n              </h6>\n              {column.posts.map((postId) =>\n                widget(\"components.posts.CompactPost\", { id: postId }, postId)\n              )}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devgovgigs.near/widget/gigs-board.components.boards.KanbanBoard"}