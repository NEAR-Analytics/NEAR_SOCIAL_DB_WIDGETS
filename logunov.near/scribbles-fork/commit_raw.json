{"tx_hash": "BBgdf77AtzzyibzoGrnFLLv417JRoVuRNYydm5ZGodMS", "action_id_social": "7hJr1aPLHmzmoD8keyBVqc9r7EqkqHBoiWWTcWhzvQFg-0-widget", "block_id": 80786620, "block_timestamp": "2022-12-16 15:08:06.277", "signer_id": "logunov.near", "widget_name": "scribbles-fork", "source_code": "const accountId = context.accountId;\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\n\nconst inodes = Social.get(`${accountId}/scribbles/inode/**`, \"final\");\nconsole.log(inodes);\n\nif (!inodes) {\n  return (\n    <>\n      <CommitButton type=\"button\" data={{}}>\n        Refresh\n      </CommitButton>\n    </>\n  );\n}\n\nconst db_next_inode = parseInt(\n  Social.get(`${accountId}/scribbles/next_inode`, \"final\")\n);\n\nconst scribbles = [];\nconst parent_inodes = {};\n\nfunction traverse(inode, path, fs_map) {\n  if (inodes[inode].entries) {\n    fs_map = {};\n    Object.entries(inodes[inode].entries).map(([filename, other_inode]) => {\n      fs_map[filename] = traverse(parseInt(other_inode), path + `${filename}/`);\n      parent_inodes[parseInt(other_inode)] = inode;\n    });\n    return fs_map;\n  } else {\n    console.log(path, inodes[inode].data);\n    return inodes[inode].data;\n  }\n}\n\nscribbles = traverse(0, \"/\");\nconsole.log(\"scribbles: \");\nconsole.log(scribbles);\nconsole.log(parent_inodes);\n\nState.init({\n  fs: {\n    root: 0,\n    inodes: inodes,\n    parent_inodes: parent_inodes,\n    next_inode: db_next_inode,\n    new_filename: \"\",\n    new_data: \"\",\n  },\n  selectedINodeIndex: 0,\n  showEditView: false,\n  editView: {\n    editViewText: \"\",\n    fileName: null,\n  },\n  dir: \"/\",\n});\n\nif (state.showEditView) {\n  return (\n    <>\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          onClick={() =>\n            State.update({\n              fs: { ...state.fs, root: state.fs.parent_inodes[state.fs.root] },\n              showEditView: false,\n              editView: { ...state.editView, editViewText: \"\", fileName: null },\n            })\n          }\n        >\n          Back\n        </button>\n        <h5>{state.editView.fileName}</h5>\n      </div>\n      <textarea\n        class=\"form-control\"\n        id=\"notetext\"\n        rows=\"10\"\n        value={state.editView.editViewText}\n        onChange={(e) =>\n          State.update({\n            editView: { ...state.editView, editViewText: e.target.value },\n          })\n        }\n      ></textarea>\n      <CommitButton\n        data={{\n          scribbles: state.dir\n            .split(\"/\")\n            .filter((a) => !!a)\n            .reduceRight((acc, curr) => ({ [curr]: acc }), {\n              [state.editView.fileName]: state.editView.editViewText,\n            }),\n        }}\n      >\n        Submit note\n      </CommitButton>\n    </>\n  );\n}\n// let currDir = state.dir\n//   .split(\"/\")\n//   .filter((a) => !!a)\n//   .reduce((acc, curr) => acc[curr], scribbles);\n// if (currDir == \"**FOLDER**\") {\n//   currDir = {};\n// }\n\nreturn (\n  <>\n    root = {JSON.stringify(state.fs.root)}\n    next_inode = {state.fs.next_inode}\n    parent_inodes = {JSON.stringify(state.fs.parent_inodes)}\n    <div class=\"input-group mb-3\" style={{ marginTop: 20 }}>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Note name\"\n        aria-describedby=\"basic-addon2\"\n        value={state.editView.fileName}\n        onChange={(e) => {\n          if (e.data != \" \") {\n            State.update({\n              editView: { ...state.editView, fileName: e.target.value },\n            });\n          }\n        }}\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          disabled={!state.editView.fileName}\n          onClick={() =>\n            State.update({\n              showEditView: true,\n              editView: { ...state.editView, editViewText: \"\" },\n            })\n          }\n        >\n          Add note\n        </button>\n      </div>\n    </div>\n    <div class=\"input-group mb-3\" style={{ marginTop: 20 }}>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Folder name\"\n        aria-describedby=\"basic-addon2\"\n        value={state.folderName}\n        onChange={(e) => {\n          if (e.data != \" \") {\n            State.update({\n              folderName: e.target.value,\n            });\n          }\n        }}\n      />\n      <div class=\"input-group-append\">\n        <CommitButton\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          disabled={!state.folderName}\n          data={{\n            scribbles: state.dir\n              .split(\"/\")\n              .filter((a) => !!a)\n              .reduceRight((acc, curr) => ({ [curr]: acc }), {\n                [state.folderName]: \"**FOLDER**\",\n              }),\n          }}\n        >\n          Add Folder\n        </CommitButton>\n      </div>\n    </div>\n    <div class=\"input-group-append\">\n      <button\n        class=\"btn btn-outline-secondary\"\n        type=\"button\"\n        onClick={() =>\n          State.update({\n            fs: { ...state.fs, root: state.fs.parent_inodes[state.fs.root] },\n            dir: state.dir\n              .split(\"/\")\n              .filter((a) => !!a)\n              .slice(0, -1)\n              .join(\"/\"),\n          })\n        }\n      >\n        ..\n      </button>\n    </div>\n    <ul class=\"list-group\">\n      {Object.entries(state.fs.inodes[state.fs.root].entries)\n        .map(([filename, index]) => [filename, parseInt(index)])\n        .map(([filename, index]) => (\n          <li\n            class={`list-group-item ${\n              index === state.selectedINodeIndex ? \"active\" : \"\"\n            }`}\n            onClick={() =>\n              state.selectedINodeIndex === index\n                ? state.fs.inodes[index].type === \"1\"\n                  ? State.update({\n                      fs: { ...state.fs, root: index },\n                      dir: state.dir + `${filename}/`,\n                    })\n                  : State.update({\n                      showEditView: true,\n                      editView: {\n                        editViewText: currDir[str],\n                        fileName: filename,\n                      },\n                    })\n                : State.update({ selectedINodeIndex: index })\n            }\n            style={{ cursor: \"pointer\" }}\n          >\n            {filename}\n          </li>\n        ))}\n    </ul>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/logunov.near/widget/scribbles-fork"}