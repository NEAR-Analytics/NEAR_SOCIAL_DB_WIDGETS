{"tx_hash": "ELXyBmYC7LrfFa6636p35m3tvjuxVUTrjNuv9mPtEJ5R", "action_id_social": "HoC5wHfJnBkkmKTejLPZDbThzy8WDK5DjjSFXAFUFF3c-1-widget", "block_id": 91096109, "block_timestamp": "2023-05-04 18:16:01.713", "signer_id": "yairnava.near", "widget_name": "ToDoList", "source_code": "const todolistContract = \"0xbA494aEa8295B5640Efb4FF9252df8D388e655dc\";\n\nconst todolistAbi = fetch(\n  \"https://gateway.pinata.cloud/ipfs/QmVgbfZJiXk1JRtNTkCTMUQtFhhCpaeD4aUiHFmZiKnPd7?_gl=1*jgy6f*rs_ga*ZWExOWRjODgtOWM4Ny00MzE1LTlhMGQtMDc1NDFhZjA2YWQy*rs_ga_5RMPXG14TE*MTY4MzIxOTg2NS4yLjEuMTY4MzIyMDkzMy42MC4wLjA.\"\n);\n\nif (!todolistAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(todolistAbi.body);\n\nconst submitTask = () => {\n  if (state.strTask == \"\") {\n    return console.log(\"El nombre de la tarea no debe estar vacia\");\n  }\n\n  const contract = new ethers.Contract(\n    todolistContract,\n    todolistAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract.add_task(state.strTask).then((transactionHash) => {\n    console.log(\"transactionHash is \" + transactionHash);\n    const contract = new ethers.Contract(\n      todolistContract,\n      todolistAbi.body,\n      Ethers.provider().getSigner()\n    );\n    contract.get_tasks().then((res) => {\n      State.update({ user_tasks: res });\n    });\n  });\n};\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nif (state.tasks === undefined && state.sender) {\n  const contract = new ethers.Contract(\n    todolistContract,\n    todolistAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contract.get_tasks().then((res) => {\n    State.update({ user_tasks: res });\n  });\n}\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/Qmdpe64Mm46fvWNVaCroSGa2JKgauUUUE5251Cx9nTKNrs\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Lista de Tareas</div>\n\n      {!!state.sender ? (\n        <>\n          <div class=\"SubHeader\">Crear nueva tarea </div>\n          <div class=\"LidoStakeFormInputContainer\">\n            <span class=\"LidoStakeFormInputContainerSpan2\">\n              <input\n                class=\"LidoStakeFormInputContainerSpan2Input\"\n                value={state.strTask}\n                onChange={(e) => State.update({ strTask: e.target.value })}\n                placeholder=\"Nombre nueva tarea\"\n              />\n            </span>\n          </div>\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => submitTask()}\n          >\n            <span>Guardar</span>\n          </button>\n          <div>\n            <div class=\"SubHeader\">Tareas creadas: </div>\n            {state.user_tasks.length > 0 ? (\n              <ul>\n                {state.user_tasks.map((item) => {\n                  return <li>{item[0]}</li>;\n                })}\n              </ul>\n            ) : (\n              <span>No hay tareas guardadas</span>\n            )}\n          </div>\n        </>\n      ) : (\n        <Web3Connect\n          className=\"LidoStakeFormSubmitContainer\"\n          connectLabel=\"Connect with Web3\"\n        />\n      )}\n    </div>\n  </Theme>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yairnava.near/widget/ToDoList", "metadata.description": "Example BOS + Aurora", "metadata.name": "ToDoList", "metadata.tags.ethdenver2023": null, "metadata.tags.example": ""}