{"tx_hash": "AfmVvwLouXaPwNJn23KHDRL1piqpxKp6Buiky4SAo96v", "action_id_social": "6TuHuVtzVtFSDE8voD7zjnnwbj8i4UeLtfkYpERJbjfv-0-widget", "block_id": 95025040, "block_timestamp": "2023-06-25T21:12:20.559Z", "signer_id": "yairnava.near", "widget_name": "Burrito-Virtual-Pet-Interact", "source_code": "const virtualPetContract = \"0x559bB1D9a4236e6Fc3D3314c8832Ddf5476606C2\";\n\nconst virtualPetAbi = fetch(\n  \"https://indigo-fluttering-emu-841.mypinata.cloud/ipfs/QmcNGm5jYV5fp4KqUZ3ew7F5kkPP7tnr6xP8vx5hPmEjhA\"\n);\n\nif (!virtualPetAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(virtualPetAbi.body);\n\nState.init({\n  inputTokenId: 0,\n  tokenId: 0,\n  isBusy: false,\n});\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nconst getSender = () => {\n  console.log(\"getSender()\");\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nconst _castData = (data) => {\n  console.log(\"_castData()\");\n  return {\n    tokenId: data[0],\n    image: data[1],\n    name: data[2],\n    happiness: data[3].toNumber(),\n    hunger: data[4].toNumber(),\n    sleep: data[5].toNumber(),\n    currentActivity: data[6],\n    isHungry: data[7],\n    isSleepy: data[8],\n    isBored: data[9],\n  };\n};\n\nconst getNft = () => {\n  console.log(\"getNft()\");\n  State.update({\n    tokenId: state.inputTokenId,\n  });\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract.getTokenInfoById(state.inputTokenId).then((res) => {\n    const petInfo = [res].map(_castData);\n    console.log(petInfo);\n    State.update({\n      firstSearch: false,\n      pet: petInfo[0],\n      currentActivity: petInfo[0].currentActivity,\n      currentImg: _getCurrentImg(petInfo[0]),\n      isBusy: false,\n    });\n  });\n};\n\nconst _getCurrentImg = (petInfo) => {\n  if (petInfo.isHungry) {\n    console.log(\"isHungry\");\n    return _getIsHungryImg(petInfo.image);\n  } else if (petInfo.isSleepy) {\n    console.log(\"isSleepy\");\n    return _getIsSleepyImg(petInfo.image);\n  } else if (petInfo.isBored) {\n    console.log(\"isBored\");\n    return _getIsBoredImg(petInfo.image);\n  } else if (!petInfo.isHungry && !petInfo.isSleepy && !petInfo.isBored) {\n    console.log(\"It's fine\");\n    return _getIdleImg(petInfo.image);\n  }\n};\n\nconst _getIdleImg = (img) => {\n  console.log(\"_getIdleImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/3XjzdRA\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/44f1awc\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/3pieQYu\";\n  }\n};\n\nconst _getPlayImg = (img) => {\n  console.log(\"_getPlayImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/3qRhh4w\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/3qRhh4w\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/3qRhh4w\";\n  }\n};\n\nconst _getEatImg = (img) => {\n  console.log(\"_getEatImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/3peflmc\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/3JrypV0\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/43aHF7b\";\n  }\n};\n\nconst _getSleepImg = (img) => {\n  console.log(\"_getSleepImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/44a09FA\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/44dtlvh\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/3Ps9UuB\";\n  }\n};\n\nconst _getIsBoredImg = (img) => {\n  console.log(\"_getIsBoredImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/43T4jlC\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/3plbDr8\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/3CH3ksL\";\n  }\n};\n\nconst _getIsHungryImg = (img) => {\n  console.log(\"_getIsHungryImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/3Xj02Fs\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/46hm4wp\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/3JsFFzP\";\n  }\n};\n\nconst _getIsSleepyImg = (img) => {\n  console.log(\"_getIsSleepyImg()\");\n  console.log(img);\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://pin.ski/3phdTQ0\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://pin.ski/3NJSw3e\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://pin.ski/3CMf6lD\";\n  }\n};\n\nconst play = () => {\n  console.log(\"play()\");\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contract.play(state.tokenId).then((res) => {\n    State.update({\n      currentImg: _getPlayImg(state.pet.image),\n      isBusy: true,\n    });\n    setTimeout(() => {\n      getNft();\n    }, \"20000\");\n  });\n};\n\nconst eat = () => {\n  console.log(\"eat()\");\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract.eat(state.tokenId).then((res) => {\n    State.update({\n      currentImg: _getEatImg(state.pet.image),\n      isBusy: true,\n    });\n    setTimeout(() => {\n      getNft();\n    }, \"20000\");\n  });\n};\n\nconst sleep = () => {\n  console.log(\"sleep()\");\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract.doze(state.tokenId).then((res) => {\n    State.update({\n      currentImg: _getSleepImg(state.pet.image),\n      isBusy: true,\n    });\n    setTimeout(() => {\n      getNft();\n    }, \"20000\");\n  });\n};\n\nconst back = () => {\n  console.log(\"back()\");\n  State.update({\n    tokenId: 0,\n    pet: null,\n  });\n};\n\nconst ItemBackground = styled.div`\n        width: 100%;\n        //height: 100vh;\n        display: flex;\n        justify-content: center;\n        margin-bottom: -50px;\n        //background-image: url('https://pin.ski/444ghZP');\n        background-repeat: no-repeat;\n        background-size: cover;\n        `;\n\nconst ItemContainer = styled.div`\n        margin-top: 30px;\n        box-sizing: border-box;\n        min-width: 500px;\n        max-width: 600px;\n        width: 100%;\n        padding: 0px 32px;\n        position: relative;\n        `;\n\nconst ItemTitle = styled.h3`\n        font-weight: 900;\n        text-align: center;\n        color: white;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 1rem;\n        `;\n\nconst ItemImage = styled.img`\n            width: 40px;\n            margin-right: 15px;\n        `;\n\nconst ItemHeader = styled.div`\n        background: #64473f;\n        font-weight: 400;\n        font-size: 12px;\n        line-height: 1.6em;\n        border-radius: 20px;\n        margin: 0px;\n        padding: 20px;\n        box-shadow: none;\n        color: rgb(255, 255, 255);\n        `;\n\nconst ItemBodySelect = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding-inline: 10px;\n        box-shadow: none;\n        background-image: url('https://pin.ski/42WiqFe');\n        background-repeat: no-repeat;\n        background-size: cover;        \n        color: #feb75b;\n        min-height: 500px;\n        max-height: auto;\n        border: solid 5px;\n        `;\n\nconst ItemBodyPlay = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding-inline: 10px;\n        box-shadow: none;\n        background-image: url('https://pin.ski/43Xw8cv');\n        background-repeat: no-repeat;\n        background-size: cover;        \n        color: #feb75b;\n        min-height: 500px;\n        max-height: auto;\n        border: solid 5px;\n        `;\n\nconst ItemPetsSection = styled.div`\n        gap: 3rem  7rem !important;\n        display: grid;\n        gap: 10px;\n        grid-template-columns: repeat(auto-fit, 160px);\n        justify-content: center;\n        min-height: 500px;\n        max-height: 550px;\n        align-content: end;\n        `;\n\nconst ItemPet = styled.div`\n    display: flex !important;\n    width: 100%;\n    display: flex !important;\n    justify-content: center;\n    cursor: pointer;\n  `;\nconst ItemPetAction = styled.div`\n    gap: 0.25rem !important;\n    padding: 1rem !important;\n    flex-direction: column !important;\n    display: flex !important;\n    border: solid 3px;\n    border-radius: 20px;\n    color: black;\n    background: rgb(0 0 0 / 40%);\n    align-items: center;\n    cursor: pointer;\n  `;\nconst ItemPetImg = styled.img`\n    height: 400px;\n  `;\n\nconst ItemMintButton = styled.button`\n        background: #f54866;\n        color: white;\n        font-weight: 700;\n        padding: 10px 15px;\n        border-radius: 1rem;\n        border: none;\n        font-size: 14px;\n        &:hover {\n            background: rgb(146 0 0);\n        }\n        `;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lexend:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQNCGVCwmkPxcKqDdubvb8Goy5xP8md2MfWCAix7HxgGE\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Lexend;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\n\nconst Theme = state.theme;\nreturn (\n  <Theme>\n    <ItemBackground>\n      <ItemContainer>\n        <ItemHeader>\n          <ItemTitle class=\"row\">\n            <div class=\"col-4\" style={{ \"text-align\": \"left\" }}>\n              <ItemImage src=\"https://pin.ski/3phJiSm\"></ItemImage>\n            </div>\n            <div\n              class=\"col-4\"\n              style={{\n                \"text-shadow\":\n                  \"black 1px 0px 0px, black 0px 1px 0px, black -1px 0px 0px, black 0px -1px 0px\",\n              }}\n            >\n              {state.pet.name}\n            </div>\n            <div class=\"col-4\" style={{ \"text-align\": \"right\" }}>\n              {state.sender ? (\n                state.tokenId == 0 ? (\n                  <a href=\"#/yairnava.near/widget/Burrito-Virtual-Pet-Mint\">\n                    <ItemMintButton\n                      onClick={async () => {\n                        mint();\n                      }}\n                    >\n                      Mint Burrito\n                    </ItemMintButton>\n                  </a>\n                ) : (\n                  <ItemMintButton\n                    onClick={async () => {\n                      back();\n                    }}\n                  >\n                    Back\n                  </ItemMintButton>\n                )\n              ) : null}\n            </div>\n          </ItemTitle>\n        </ItemHeader>\n        {state.sender ? (\n          state.tokenId == 0 ? (\n            <ItemBodySelect>\n              <div class=\"m-5\">\n                <div style={{ \"text-align\": \"center\" }}>\n                  <img\n                    src=\"https://pin.ski/46lsieQ\"\n                    style={{\n                      height: \"230px\",\n                      background: \"#ffe5bc\",\n                      \"border-radius\": \"10px\",\n                    }}\n                  ></img>\n                </div>\n                <br />\n                <div class=\"container\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-4\">\n                      <input\n                        placeholder=\"Token Id\"\n                        onChange={(e) =>\n                          State.update({ inputTokenId: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <br />\n                  <div style={{ \"text-align\": \"center\" }}>\n                    <ItemMintButton\n                      onClick={async () => {\n                        getNft();\n                      }}\n                    >\n                      Get NFT\n                    </ItemMintButton>\n                  </div>\n                </div>\n              </div>\n            </ItemBodySelect>\n          ) : (\n            <div\n              style={{\n                background: \"rgb(242, 167, 115)\",\n                \"border-radius\": \"20px\",\n              }}\n            >\n              <ItemBodyPlay>\n                <div\n                  class=\"row\"\n                  style={{\n                    \"text-align\": \"center\",\n                    background: \"rgb(242, 167, 115)\",\n                    \"margin-inline\": \"-10px\",\n                    \"border-radius\": \"1px 1px 0px 0px\",\n                  }}\n                >\n                  <div\n                    class=\"col-4\"\n                    style={{\n                      color: \"black\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      style={{ height: \"50px\", \"margin-right\": \"10px\" }}\n                      src=\"https://pin.ski/3CHsZ4j\"\n                    ></img>\n                    <label style={{ \"font-weight\": \"900\" }}>\n                      {state.pet.happiness}\n                    </label>\n                  </div>\n                  <div\n                    class=\"col-4\"\n                    style={{\n                      color: \"black\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      style={{ height: \"50px\", \"margin-right\": \"10px\" }}\n                      src=\"https://pin.ski/3CK6dsM\"\n                    ></img>\n                    <label style={{ \"font-weight\": \"900\" }}>\n                      {state.pet.hunger}\n                    </label>\n                  </div>\n                  <div\n                    class=\"col-4\"\n                    style={{\n                      color: \"black\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      style={{ height: \"50px\", \"margin-right\": \"10px\" }}\n                      src=\"https://pin.ski/3piVHFO\"\n                    ></img>\n                    <label style={{ \"font-weight\": \"900\" }}>\n                      {state.pet.sleep}\n                    </label>\n                  </div>\n                </div>\n                <ItemPetsSection>\n                  <ItemPet>\n                    <>\n                      <ItemPetImg src={state.currentImg}></ItemPetImg>\n                    </>\n                  </ItemPet>\n                </ItemPetsSection>\n              </ItemBodyPlay>\n              <div\n                style={{\n                  \"text-align\": \"center\",\n                  \"margin-inline\": \"5px\",\n                  \"margin-top\": \"7px\",\n                  \"padding-bottom\": \"7px\",\n                  height: \"68.33px\",\n                }}\n              >\n                {!state.isBusy ? (\n                  state.pet.isHungry ? (\n                    <div class=\"row\">\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            eat();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Eat\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\"></div>\n                    </div>\n                  ) : state.pet.isSleepy ? (\n                    <div class=\"row\">\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            sleep();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Sleep\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                    </div>\n                  ) : state.pet.isBored ? (\n                    <div class=\"row\">\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            play();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Play\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\"></div>\n                    </div>\n                  ) : (\n                    <div class=\"row\">\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            play();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Play\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            eat();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Eat\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            sleep();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Sleep\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                    </div>\n                  )\n                ) : null}\n              </div>\n            </div>\n          )\n        ) : (\n          <ItemBodySelect>\n            <br />\n            <div style={{ \"text-align\": \"center\" }}>\n              <Web3Connect\n                className=\"ConnectButton\"\n                connectLabel=\"Connect with Web3\"\n              />\n            </div>\n          </ItemBodySelect>\n        )}\n      </ItemContainer>\n    </ItemBackground>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yairnava.near/widget/Burrito-Virtual-Pet-Interact", "__row_index": 3}