{"tx_hash": "CQ1AgKz7KyabZbp29qyNMs3pezwDcgrG6TeKB2zvhPZ6", "action_id_social": "3gNFMLQxFrTnxu6pMYcV5N4WVq4bj2uLJLsyVLxTzXhh-0-widget", "block_id": 95025221, "block_timestamp": "2023-06-25T21:15:39.330Z", "signer_id": "yairnava.near", "widget_name": "Token-Factory", "source_code": "const tokenFactoryContract = \"0xdf709303b00d429033c55ec2EA02dc934e6D4593\";\n\nconst tokenFactoryAbi = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQoXbrvBppKDy7i3TGwXcuzp3c98PT8U1CWF2pnm56ptH\"\n);\n\nif (!tokenFactoryAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(tokenFactoryAbi.body);\n\nState.init({\n  tokenOwner: \"0x00000000000000000000000000000000\",\n  tokenName: \"MYTOKEN\",\n  tokenSymbol: \"MTKN\",\n  initialSupply: 10000,\n  minting: false,\n});\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0], tokenOwner: accounts[0] });\n  }\n}\n\n// Mint\nconst mint = () => {\n  console.log(\"mint\");\n  const contract = new ethers.Contract(\n    tokenFactoryContract,\n    tokenFactoryAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract\n    .createToken(\n      state.tokenOwner,\n      state.tokenName,\n      state.tokenSymbol,\n      state.initialSupply\n    )\n    .then((res) => {\n      console.log(res);\n\n      State.update({\n        minting: true,\n      });\n\n      setTimeout(() => {\n        State.update({\n          tokenOwner: state.sender,\n          tokenName: \"MYTOKEN\",\n          tokenSymbol: \"MTKN\",\n          initialSupply: 10000,\n          minting: false,\n        });\n      }, \"10000\");\n    });\n};\n\nconst ItemBackground = styled.div`\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n        margin-bottom: -50px;\n        `;\n\nconst ItemContainer = styled.div`\n        margin-top: 30px;\n        box-sizing: border-box;\n        min-width: 320px;\n        max-width: 560px;\n        width: 100%;\n        padding: 0px 32px;\n        position: relative;\n        `;\n\nconst ItemTitle = styled.h3`\n        text-align: center;\n        color: white;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 1rem;\n        `;\n\nconst ItemImage = styled.img`\n            width: 40px;\n            margin-right: 15px;\n        `;\n\nconst ItemSubTitle = styled.div`\n        text-align: center;\n        color: yellow;\n        margin-bottom: 5px;\n        `;\n\nconst ItemHeader = styled.div`\n        background: rgb(50,129,130);\n        font-weight: 400;\n        font-size: 12px;\n        line-height: 1.6em;\n        border-radius: 20px;\n        margin: 0px;\n        padding: 20px;\n        box-shadow: none;\n        color: rgb(255, 255, 255);\n        `;\n\nconst ItemBody = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding: 32px;\n        box-shadow: none;\n        background: rgb(31,82,82);\n        color: black;\n        `;\n\nconst ItemMintNumber = styled.label`\n        font-size: 20px;\n        font-weight: 800;\n        color: black;\n        `;\n\nconst ItemMintButton = styled.button`\n        background: #f54866;\n        color: white;\n        font-weight: 700;\n        padding: 15px 20px;\n        border-radius: 1rem;\n        border: none;\n        &:hover {\n            background: rgb(146 0 0);\n        }\n        `;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lexend:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQNCGVCwmkPxcKqDdubvb8Goy5xP8md2MfWCAix7HxgGE\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Lexend;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <ItemBackground>\n      <ItemContainer>\n        <ItemHeader>\n          <ItemTitle>\n            <ItemImage src=\"https://pin.ski/3X5pX3n\"></ItemImage>\n            <label>Token Factory</label>\n          </ItemTitle>\n        </ItemHeader>\n        <ItemBody>\n          {state.sender ? (\n            !state.minting ? (\n              <div class=\"row\" style={{ color: \"white\" }}>\n                <div class=\"col-12\">\n                  <h3>Make a token</h3>\n                </div>\n                <div class=\"col-6\">\n                  <div class=\"row\">\n                    <div class=\"col-12\">\n                      <div class=\"mb-3\">\n                        <label for=\"sender\" class=\"form-label\">\n                          \ud83d\udc64 Address Token Owner\n                        </label>\n                        <input\n                          value={state.tokenOwner}\n                          class=\"form-control\"\n                          id=\"sender\"\n                          onChange={(e) =>\n                            State.update({ tokenOwner: e.target.value })\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-12\">\n                      <div class=\"mb-3\">\n                        <label for=\"symbol\" class=\"form-label\">\n                          Token Name\n                        </label>\n                        <input\n                          value={state.tokenName}\n                          class=\"form-control\"\n                          id=\"symbol\" // only allow for numbers\n                          onChange={(e) =>\n                            State.update({ tokenName: e.target.value })\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-6\">\n                  <div\n                    style={{\n                      height: \"100%\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      src=\"https://pin.ski/3NMcIS4\"\n                      style={{\n                        height: \"100px\",\n                      }}\n                    ></img>\n                  </div>\n                </div>\n                <div class=\"col-6\">\n                  <div class=\"mb-3\">\n                    <label for=\"symbol\" class=\"form-label\">\n                      Token Symbol\n                    </label>\n                    <input\n                      value={state.tokenSymbol}\n                      class=\"form-control\"\n                      id=\"symbol\" // only allow for numbers\n                      placeholder=\"TKN\"\n                      onChange={(e) =>\n                        State.update({ tokenSymbol: e.target.value })\n                      }\n                    />\n                  </div>\n                </div>\n                <div class=\"col-6\">\n                  <div class=\"mb-3\">\n                    <label for=\"supply\" class=\"form-label\">\n                      Token Supply\n                    </label>\n                    <input\n                      value={state.initialSupply}\n                      class=\"form-control\"\n                      id=\"supply\"\n                      placeholder=\"\"\n                      onChange={(e) =>\n                        State.update({ initialSupply: e.target.value })\n                      }\n                    />\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"mb-3\">\n                    <ItemMintButton\n                      onClick={async () => {\n                        mint();\n                      }}\n                    >\n                      Create Token\n                    </ItemMintButton>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div\n                class=\"row\"\n                style={{ display: \"flex\", \"justify-content\": \"center\" }}\n              >\n                <img\n                  src=\"https://pin.ski/43X5rog\"\n                  style={{\n                    height: \"200px\",\n                    width: \"200px\",\n                  }}\n                ></img>\n                <br />\n                <label\n                  style={{\n                    \"font-size\": \"20px\",\n                    \"font-weight\": \"400\",\n                    \"text-align\": \"center\",\n                  }}\n                >\n                  Minting...\n                </label>\n              </div>\n            )\n          ) : (\n            <div style={{ \"text-align\": \"center\" }}>\n              <Web3Connect\n                className=\"ConnectButton\"\n                connectLabel=\"Connect with Web3\"\n              />\n            </div>\n          )}\n        </ItemBody>\n      </ItemContainer>\n    </ItemBackground>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yairnava.near/widget/Token-Factory", "__row_index": 3}