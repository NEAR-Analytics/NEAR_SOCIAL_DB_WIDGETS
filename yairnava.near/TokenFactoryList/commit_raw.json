{"tx_hash": "ADR8bD2pT6PGaD48EbsnSPYX7a6gRHAJhiB2PnsSFUtH", "action_id_social": "366HJKrcadEGUWa3AHf9N1yVQ2W1odJF7KxS23c3czKD-0-widget", "block_id": 95025251, "block_timestamp": "2023-06-25T21:16:13.566Z", "signer_id": "yairnava.near", "widget_name": "TokenFactoryList", "source_code": "const tokenFactoryContract = \"0xdf709303b00d429033c55ec2EA02dc934e6D4593\";\n\nconst tokenFactoryAbi = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQoXbrvBppKDy7i3TGwXcuzp3c98PT8U1CWF2pnm56ptH\"\n);\n\nif (!tokenFactoryAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(tokenFactoryAbi.body);\n\nState.init({\n  page: 1,\n  increment: 10,\n  limit: 10,\n  offset: 0,\n  allNumberTokens: 0,\n});\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nconst getTokens = () => {\n  console.log(\"Get Tokens\");\n  const contract = new ethers.Contract(\n    tokenFactoryContract,\n    tokenFactoryAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contract.getNumberTokens().then((res) => {\n    State.update({ allNumberTokens: res });\n    contract.allTokens(state.limit, state.offset).then((res) => {\n      State.update({ tokenList: res });\n    });\n  });\n};\n\nconst reload = () => {\n  State.update({ offset: 0, page: 1 });\n  getTokens();\n};\n\nconst previous = () => {\n  State.update({\n    page: state.page - 1,\n    offset: state.offset - state.increment,\n  });\n};\n\nconst next = () => {\n  State.update({\n    page: state.page + 1,\n    offset: state.offset + state.increment,\n  });\n};\n\nif (state.sender) {\n  getTokens();\n}\n\nconst ItemBackground = styled.div`\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n        margin-bottom: -50px;\n        `;\n\nconst ItemContainer = styled.div`\n        margin-top: 30px;\n        box-sizing: border-box;\n        min-width: 320px;\n        max-width: 560px;\n        width: 100%;\n        padding: 0px 32px;\n        position: relative;\n        `;\n\nconst ItemTitle = styled.h3`\n        text-align: center;\n        color: white;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 1rem;\n        `;\n\nconst ItemImage = styled.img`\n            width: 40px;\n            margin-right: 15px;\n        `;\n\nconst ItemSubTitle = styled.div`\n        text-align: center;\n        color: yellow;\n        margin-bottom: 5px;\n        `;\n\nconst ItemHeader = styled.div`\n        background: rgb(50,129,130);\n        font-weight: 400;\n        font-size: 12px;\n        line-height: 1.6em;\n        border-radius: 20px;\n        margin: 0px;\n        padding: 20px;\n        box-shadow: none;\n        color: rgb(255, 255, 255);\n        `;\n\nconst ItemBody = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding: 32px;\n        box-shadow: none;\n        background: rgb(31,82,82);\n        color: black;\n        `;\n\nconst ItemButton = styled.button`\n        width: 80px;\n        background: #f54866;\n        color: white;\n        font-weight: 700;\n        padding: 15px 20px;\n        border-radius: 1rem;\n        border: none;\n        &:hover {\n            background: rgb(146 0 0);\n        }\n        `;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lexend:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQNCGVCwmkPxcKqDdubvb8Goy5xP8md2MfWCAix7HxgGE\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Lexend;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <ItemBackground>\n      <ItemContainer>\n        <ItemHeader>\n          <ItemTitle>\n            <ItemImage src=\"https://pin.ski/3X5pX3n\"></ItemImage>\n            <label>Token List</label>\n          </ItemTitle>\n        </ItemHeader>\n        <ItemBody>\n          {state.sender ? (\n            state.tokenList && state.tokenList.length > 0 ? (\n              <div class=\"row\">\n                <div\n                  class=\"col-12\"\n                  style={{\n                    \"text-align\": \"right\",\n                    \"margin-bottom\": \"10px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <img\n                    src=\"https://pin.ski/3XqH53N\"\n                    style={{ width: \"30px\" }}\n                    onClick={async () => {\n                      reload();\n                    }}\n                  ></img>\n                </div>\n\n                <table className=\"table table-sm\">\n                  <thead>\n                    <tr\n                      class=\"p-3 mb-2 bg-gradient rounded-5 text-center\"\n                      style={{\n                        background: \"rgb(245, 72, 102)\",\n                        color: \"white\",\n                      }}\n                    >\n                      <th>#</th>\n                      <th>Token Address</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {state.tokenList.map((data, key) => {\n                      return (\n                        <>\n                          <tr class=\"text-center\">\n                            <td>\n                              {key + 1 + (state.page - 1) * state.increment}\n                            </td>\n                            <td>{data}</td>\n                          </tr>\n                        </>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                <div class=\"row\">\n                  <div class=\"col-6\" style={{ \"text-align\": \"center\" }}>\n                    {state.offset > 0 ? (\n                      <ItemButton\n                        onClick={async () => {\n                          previous();\n                        }}\n                      >\n                        Prev\n                      </ItemButton>\n                    ) : null}\n                  </div>\n                  <div class=\"col-6\" style={{ \"text-align\": \"center\" }}>\n                    {state.limit < state.allNumberTokens ? (\n                      <ItemButton\n                        onClick={async () => {\n                          next();\n                        }}\n                      >\n                        Next\n                      </ItemButton>\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div\n                class=\"row\"\n                style={{\n                  display: \"flex\",\n                  \"justify-content\": \"center\",\n                  color: \"white\",\n                }}\n              >\n                <div\n                  class=\"col-12\"\n                  style={{\n                    \"text-align\": \"right\",\n                    \"margin-bottom\": \"10px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <img\n                    src=\"https://pin.ski/3XqH53N\"\n                    style={{ width: \"30px\" }}\n                    onClick={async () => {\n                      reload();\n                    }}\n                  ></img>\n                </div>\n                NO TOKENS CREATED\n              </div>\n            )\n          ) : (\n            <div style={{ \"text-align\": \"center\" }}>\n              <Web3Connect\n                className=\"ConnectButton\"\n                connectLabel=\"Connect with Web3\"\n              />\n            </div>\n          )}\n        </ItemBody>\n      </ItemContainer>\n    </ItemBackground>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yairnava.near/widget/TokenFactoryList", "__row_index": 4}