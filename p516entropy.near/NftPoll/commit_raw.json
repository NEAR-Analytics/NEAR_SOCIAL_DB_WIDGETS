{"tx_hash": "F7gQaVcXzbNSqzdPYgWqowo2jGphyEM5PcJT66MpRjD", "action_id_social": "CKVXfBX8VYy7n3zWvn532TK6KQxqB7F9Rc6tJkwjLy4Y-0-widget", "block_id": 85838608, "block_timestamp": "2023-02-23 03:36:55.374", "signer_id": "p516entropy.near", "widget_name": "NftPoll", "source_code": "const accountId = context.accountId;\r\nif (context.loading) {\r\n  return \"Loading\";\r\n}\r\nif (!accountId) {\r\n  return \"Please sign in with NEAR wallet to use this widget\";\r\n}\r\nconst CONTRACT = \"nft-vote.near\";\r\n\r\nconst nftContract = props.nftContract;\r\nif (!nftContract) {\r\n  return \"No nftContract\";\r\n}\r\n\r\nconst defaultNoImageUrl =\r\n  \"https://nftstorage.link/ipfs/bafkreiatvd6pqssvlwywe62siqcmz7ngixbvocpzp3clzdnzb352sal7km\";\r\n\r\nconst getNftData = () => {\r\n  const nftCollectionDataAsync = Near.asyncView(nftContract, \"nft_metadata\");\r\n  return nftCollectionDataAsync.then((nftCollectionData) => {\r\n    console.log(\"nftCollectionData\", nftCollectionData);\r\n    return {\r\n      nftSymbol: nftCollectionData.symbol,\r\n      name: nftCollectionData.name,\r\n      iconBase64:\r\n        nftCollectionData.icon &&\r\n        nftCollectionData.icon.startsWith(\"data:image/\")\r\n          ? nftCollectionData.icon\r\n          : defaultNoImageUrl,\r\n    };\r\n  });\r\n};\r\n\r\nconst canUseCreator = () => {\r\n  const usersNftDataAsync = Near.asyncView(\r\n    nftContract,\r\n    \"nft_tokens_for_owner\",\r\n    {\r\n      account_id: accountId,\r\n    }\r\n  );\r\n  return usersNftDataAsync.then((usersNftData) => {\r\n    console.log(\"usersNftData\", usersNftData);\r\n\r\n    return usersNftData.length > 0;\r\n  });\r\n};\r\n\r\nconst updateState = () => {\r\n  getNftData().then((data) => {\r\n    State.update({\r\n      nftSymbol: data.nftSymbol,\r\n      name: data.name,\r\n      iconBase64: data.iconBase64,\r\n    });\r\n  });\r\n  canUseCreator().then((canUseCreator) => {\r\n    State.update({\r\n      canUseCreator: canUseCreator,\r\n    });\r\n  });\r\n  const asyncPolls = Near.asyncView(CONTRACT, \"get_votes_by_contract\", {\r\n    contract_id: nftContract,\r\n    limit: 1000,\r\n    offset: 0,\r\n  });\r\n  asyncPolls.then((polls) => {\r\n    console.log(\"polls\", polls);\r\n    State.update({\r\n      showPollCreator: false,\r\n      polls: polls,\r\n    });\r\n  });\r\n};\r\n\r\nif (!state.polls) {\r\n  State.init({\r\n    nftSymbol: \"\",\r\n    name: \"\",\r\n    iconBase64: \"\",\r\n    showPollCreator: false,\r\n    canUseCreator: false,\r\n    polls: [],\r\n  });\r\n  updateState();\r\n}\r\n\r\nreturn (\r\n  <div\r\n    class=\"card\"\r\n    style={{\r\n      \"max-width\": \"600px\",\r\n    }}\r\n  >\r\n    <div class=\"card-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-9 d-flex\">\r\n          <div class=\"align-self-center\">\r\n            <div\r\n              style={{\r\n                height: \"90px\",\r\n                width: \"90px\",\r\n                \"margin-top\": \"5px\",\r\n                \"margin-bottom\": \"5px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  \"background-image\": 'url(\"' + state.iconBase64 + '\")',\r\n                  \"background-size\": \"90px\",\r\n                  \"background-repeat\": \"no-repeat\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  \"border-radius\": \"5px\",\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"p-3 align-self-center\">\r\n            <div>\r\n              Symbol: <strong>{state.nftSymbol}</strong>\r\n            </div>\r\n            <div>\r\n              Name: <strong>{state.name}</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3 text-end\">\r\n          <button\r\n            onClick={updateState}\r\n            type=\"button\"\r\n            class=\"btn btn-outline-secondary\"\r\n          >\r\n            <i class=\"bi bi-repeat\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              console.log(\"viewMode \" + state.viewMode);\r\n              State.update({ showPollCreator: !state.showPollCreator });\r\n            }}\r\n            type=\"button\"\r\n            style={{ width: \"42px\" }}\r\n            class=\"btn btn-outline-secondary\"\r\n            disabled={!state.canUseCreator}\r\n          >\r\n            {state.showPollCreator ? \"-\" : \"+\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      {state.showPollCreator && (\r\n        <Widget\r\n          src={`p516entropy.near/widget/NftPollCreator`}\r\n          props={{\r\n            nftContract,\r\n          }}\r\n        />\r\n      )}\r\n      {!state.showPollCreator && state.polls.length === 0 && (\r\n        <div>The collection currently has no polls created</div>\r\n      )}\r\n      {state.polls.map((poll, i) => {\r\n        return (\r\n          <Widget\r\n            src={`p516entropy.near/widget/NftPollWindow`}\r\n            props={{ nftContract, pollId: i }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/p516entropy.near/widget/NftPoll"}