{"tx_hash": "ENDKmFspNsnNeECNZtDtn6s9tmqDkkEMgnpKFny3ngBA", "action_id_social": "tt4GDH2HNQRQ41kKNMCnm8raHAJzhYdK7BHRWsJeptE-0-widget", "block_id": 86561993, "block_timestamp": "2023-03-04 20:25:29.533", "signer_id": "p516entropy.near", "widget_name": "HottestDevPosts", "source_code": "State.init({\r\n  hottestsPosts: [],\r\n  interval: false,\r\n  period: \"week\", // 'day', 'week', 'month'\r\n});\r\n\r\nconst ONE_DAY = 60 * 60 * 24 * 1000;\r\nconst ONE_WEEK = 60 * 60 * 24 * 1000 * 7;\r\nconst ONE_MONTH = 60 * 60 * 24 * 1000 * 30;\r\n\r\nfunction getHotnessScore(post) {\r\n  //post.id - shows the age of the post, should grow exponentially, since newer posts are more important\r\n  //post.likes.length - linear value\r\n  const age = Math.pow(post.id, 3);\r\n  const comments = post.comments;\r\n  const commentAge = comments.reduce((sum, age) => sum + Math.pow(age, 3), 0);\r\n  const totalAge = age + commentAge;\r\n  //use log functions to make likes score and exponentially big age score close to each other\r\n  return Math.log10(post.likes.length) + Math.log(Math.log10(totalAge));\r\n}\r\n\r\nconst calculatePostScore = (likesAmount, commentsAmount) => {\r\n  return likesAmount + commentsAmount;\r\n};\r\n\r\nconst getPeriodText = (period) => {\r\n  let text = \"Last 24 hours\";\r\n  if (period === \"week\") {\r\n    text = \"Last week\";\r\n  }\r\n  if (period === \"month\") {\r\n    text = \"Last month\";\r\n  }\r\n  return text;\r\n};\r\n\r\nconst findHottestsPosts = (posts, period) => {\r\n  let periodTime = ONE_DAY;\r\n  if (period === \"week\") {\r\n    periodTime = ONE_WEEK;\r\n  }\r\n  if (period === \"month\") {\r\n    periodTime = ONE_MONTH;\r\n  }\r\n  const periodLimitedPosts = posts.filter((post) => {\r\n    const timestamp = post.snapshot.timestamp / 1000000;\r\n    return Date.now() - timestamp < periodTime;\r\n  });\r\n  const modifiedPosts = periodLimitedPosts.map((post) => {\r\n    const comments =\r\n      Near.view(\"devgovgigs.near\", \"get_children_ids\", {\r\n        post_id: post.id,\r\n      }) || [];\r\n    post = { ...post, comments };\r\n    return {\r\n      ...post,\r\n      postScore: getHotnessScore(post),\r\n    };\r\n  });\r\n  modifiedPosts.sort((a, b) => b.postScore - a.postScore);\r\n  return modifiedPosts.slice(0, 3);\r\n};\r\n\r\nconst posts = Near.view(\"devgovgigs.near\", \"get_posts\") || [];\r\nconst hottestsPosts = findHottestsPosts(posts, state.period);\r\nState.update({ hottestsPosts });\r\n\r\nreturn (\r\n  <div>\r\n    <div class=\"row\">\r\n      <div class=\"fs-5 col-6 align-self-center\">\r\n        <i class=\"bi-fire\"></i>\r\n        <span>Hottest Posts</span>\r\n      </div>\r\n      <div class=\"col-6 dropdown d-flex justify-content-end\">\r\n        <a\r\n          class=\"btn btn-secondary dropdown-toggle\"\r\n          href=\"#\"\r\n          role=\"button\"\r\n          id=\"dropdownMenuLink\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          {getPeriodText(state.period)}\r\n        </a>\r\n\r\n        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n          <li>\r\n            <button\r\n              class=\"dropdown-item\"\r\n              onClick={() => {\r\n                State.update({ period: \"day\" });\r\n              }}\r\n            >\r\n              {getPeriodText(\"day\")}\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button\r\n              class=\"dropdown-item\"\r\n              onClick={() => {\r\n                State.update({ period: \"week\" });\r\n              }}\r\n            >\r\n              {getPeriodText(\"week\")}\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button\r\n              class=\"dropdown-item\"\r\n              onClick={() => {\r\n                State.update({ period: \"month\" });\r\n              }}\r\n            >\r\n              {getPeriodText(\"month\")}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    {state.hottestsPosts.map((post) => {\r\n      return (\r\n        <div key={post.id} style={{ \"min-height\": \"10em\" }}>\r\n          <Widget\r\n            src={`p516entropy.near/widget/SearchResultPost`}\r\n            props={{\r\n              post: post,\r\n            }}\r\n            key={key}\r\n          />\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n);\r\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/p516entropy.near/widget/HottestDevPosts", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.devgovgigs": NaN, "metadata.tags.posts": NaN, "metadata.tags.widget": NaN}