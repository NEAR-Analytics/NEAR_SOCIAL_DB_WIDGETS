{"tx_hash": "3F7KMFR7a9aKNcMJcrPBnWR1qx2u6jWVmhzSAjpYaCEp", "action_id_social": "eq4y9gRkWMyPiC333cycWthQ2TmvgZ6ii7pN5EgHpu1-0-widget", "block_id": 86832656, "block_timestamp": "2023-03-08 12:23:04.685", "signer_id": "manzanal.near", "widget_name": "PeopleExplorer", "source_code": "const queries = props.predefinedQueries;\nconst defaultPath = props.defaultPath;\nconst onUpdateSearchResult = props.onUpdateSearchResult;\nconst debug = props.debug || false;\nif (!onUpdateSearchResult)\n  return \"Must provide a callback function over props.onUpdateSearchResult\";\nState.init({\n  path: defaultPath,\n  accounts: [],\n});\n\nconst onChangePath = (path) => {\n  const value = Social.get(path, \"final\");\n  const accounts = Object.keys(value);\n  onUpdateSearchResult(accounts);\n  State.update({ path: path, accounts: accounts });\n};\n\nconst allPeople = [];\n\nfor (let i = 0; i < state.accounts.length; ++i) {\n  const accountId = state.accounts[i];\n\n  allPeople.push(\n    <a\n      href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n      className=\"text-decoration-none\"\n      key={`people_${i}`}\n    >\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId,\n          tooltip: true,\n          className: \"d-inline-block overflow-hidden\",\n        }}\n      />\n    </a>\n  );\n}\n\nreturn (\n  <div>\n    <div class=\"mb-2\">\n      <input\n        type=\"text\"\n        value={state.path}\n        onChange={(e) => onChangePath(e.target.value)}\n        placeholder={\"*/widget/*/metadata/tags/app\"}\n      />\n    </div>\n    <div class=\"d-flex flex-wrap flex-row mb-2\">\n      <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Generated queries\">\n        {queries &&\n          queries.length &&\n          queries.map((q, i) => {\n            return (\n              <button\n                type=\"button\"\n                key={`query_${i}`}\n                class=\"btn btn-primary btn-sm mr-2\"\n                onClick={() => {\n                  onChangePath(q.query);\n                }}\n              >\n                {q.name}\n              </button>\n            );\n          })}\n      </div>\n      <div>{debug && allPeople}</div>\n    </div>\n  </div>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/PeopleExplorer", "metadata.description": "### Search for people that match a given path pattern (aka query).\nIn order to get related accounts, the query should start with \"*/\" prefix, meaning will fetch all [account_id] that match the following pattern.\nQuery example:\n\"Get all accounts that created at least a widget\" -> \"*/widget/*\"\n\n**Return result**\nAs a dev component that will be used within a parent widget, a callback function should be provided through props.onUpdateSearchResult.\n\n**Props:**\n*  onUpdateSearchResult: (required) see above \n*  debug: (optional) default false - if true will display people profile that match path pattern\n* predefinedQueries:  (optional) : [{name,query}] array with ready to use predefined queries. It will be renderized as button below query input\n    example: `[{\n      \"name\": \"Widget Builders\",\n      \"query\": \"*/widget/*\"\n    },\n    {\n      \"name\": \"Feature Builders\",\n      \"query\": \"*/widget/*/metadata/tags/app\"\n    }\n  ]`\n", "metadata.name": NaN, "metadata.tags.dev": NaN, "metadata.tags.explorer": NaN, "metadata.tags.inline": NaN, "metadata.tags.search": NaN}