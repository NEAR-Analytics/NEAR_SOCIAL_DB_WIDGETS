{"tx_hash": "6oewhcpekJZvgdFYqeMEq6tW37eMKZ8WoXiHyg87sjyV", "action_id_social": "82UUK1227HEbKGdJXH8hpJNt8ZyGRhEeY5GyhrUaNJo7-0-widget", "block_id": 84432441, "block_timestamp": "2023-02-03 16:45:05.937", "signer_id": "manzanal.near", "widget_name": "SearchComponent", "source_code": "const initSearchText = props.searchText;\nconst data = props.data;\nconst debug = props.debug;\nconst minLength = props.minLength;\nconst placeholder = props.placeholder ?? \"Search\";\nconst searchTermKey = props.searchTermKey; // search term key on data item\n\ninitState({\n  data,\n  searchText: initSearchText,\n  result: data,\n  minLength: minLength,\n  placeholder,\n});\n\nconst handleSearch = (_search) => {\n  const _result =\n    !_search || _search.length < state.minLength\n      ? state.data\n      : state.data.filter((item) =>\n          item[searchTermKey]\n            .toLowerCase()\n            .includes(state.searchText.toLowerCase())\n        );\n\n  State.update({\n    result: _result,\n    searchText: _search,\n  });\n\n  if (props.onChange) {\n    props.onChange({ searchText, result: _result });\n  }\n};\n\nreturn (\n  <>\n    <div className=\"input-group\">\n      <input\n        type=\"text\"\n        className={`form-control ${state.searchText ? \"border-end-0\" : \"\"}`}\n        value={state.searchText}\n        onChange={(e) => handleSearch(e.target.value)}\n        placeholder={\"\ud83d\udd0d \" + state.placeholder}\n      />\n\n      {state.searchText && (\n        <button\n          className=\"btn btn-outline-secondary border border-start-0\"\n          type=\"button\"\n          onClick={() => handleSearch()}\n        >\n          <i className=\"bi bi-x\"></i>\n        </button>\n      )}\n    </div>\n    {debug && <pre>{JSON.stringify(state.result, undefined, 2)}</pre>}\n  </>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/SearchComponent", "metadata.tags.component": NaN, "metadata.tags.dev": NaN, "metadata.tags.inline": NaN, "metadata.tags.search": NaN}