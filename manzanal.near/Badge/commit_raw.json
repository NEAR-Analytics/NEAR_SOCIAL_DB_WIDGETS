{"tx_hash": "4XkYie6yuvK4ySwoTFGaqW7tnDtzPgwqhqCkL9GQ2GV1", "action_id_social": "6trgvwvFvdCe5AMe7oGGyarmSosu2rDufpi4HVmqoVUq-0-widget", "block_id": 86561625, "block_timestamp": "2023-03-04 20:18:32.137", "signer_id": "manzanal.near", "widget_name": "Badge", "source_code": "const badgeName = props.badge_name;\nconst size = props.size || \"10rem\";\nconst fontSize = props.fontSize || \"0.8em\";\nif (!badgeName) return \"Provide a badge_name\";\n\nconst badgesQuery = Social.getr(`*/badge/${badgeName}/*`, \"final\");\nconsole.log(badgesQuery);\nif (!badgesQuery) return \"Loading...\";\nif (Object.keys(badgesQuery).length == 0) return \"Badge does not exist\";\nlet badgeInfo = Object.values(badgesQuery)[0].badge[badgeName].info;\nconst BadgeCard = styled.div`\n  width: ${size}\n`;\n\nconst BadgeImg = styled.img`\n  objectFit: \"cover\",\n  objectPosition: \"center\",\n  height: ${size},\n  width: ${size},\n  max-height: ${size},\n  float: left;\n`;\nconst BadgeCardOverlay = styled.div`\n word-break: break-all !important;\n font-size: ${fontSize};\n`;\nreturn (\n  <BadgeCard className=\"card bg-dark text-white text-center overflow-hidden rounded-circle border-dark\">\n    <BadgeImg\n      class=\"card-img-top img-thumbnail img-responsive\"\n      src={badgeInfo.image.url}\n      alt=\"badge\"\n      title={badgeInfo.description}\n    />\n    <BadgeCardOverlay class=\"card-img-overlay\">\n      <p className=\"text-uppercase p-2\">{badgeInfo.name}</p>\n    </BadgeCardOverlay>\n  </BadgeCard>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/Badge", "metadata.description": "Display a social Badge \nparamenters\n1. **badge_name** - required  - Badge Name Key used to fetch badge\n2. size - optional - Badge size in rem - default 10rem\n3. font_size - optional - font size in em for badge name display", "metadata.image.ipfs_cid": "bafkreidmuwzpmjr2t4oxujr3ijg2atfywbfdoew5k6mrxtonhmwjovlsui", "metadata.name": "Badge", "metadata.tags.badges": "", "metadata.tags.dev": "", "metadata.tags.inline": ""}