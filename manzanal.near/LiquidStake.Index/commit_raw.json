{"tx_hash": "HbDriJdbBekTr29KK9MWJRKaRooumBk2pPmEDuM8Ja9m", "action_id_social": "4C9QuHKmEhsJRZP888TF1FazmgCcRsY1MLBywpGmXeGa-0-widget", "block_id": 88826020, "block_timestamp": "2023-04-04 20:46:16.473", "signer_id": "manzanal.near", "widget_name": "LiquidStake.Index", "source_code": "const ownerId = \"manzanal.near\";\nconst accountId = context.accountId;\nconst metapoolContract = \"meta-pool.near\";\nconst depositAndStakeFn = \"deposit_and_stake\";\nconst delayedUnstakeFn = \"unstake\";\nconst liquidUnstakeFn = \"liquid_unstake\";\nconst YOCTO = 1000000000000000000000000;\nconst GAS = \"200000000000000\";\nconst balanceUrl = `https://api.pikespeak.ai/account/balance/${accountId}`;\nconst metricsUrl = \"https://validators.narwallets.com/metrics_json\";\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst fetchBalance = fetch(balanceUrl, {\n  mode: \"cors\",\n  headers: {\n    \"x-api-key\": publicApiKey,\n  },\n});\n\nconst fetchMetrics = fetch(metricsUrl, {\n  mode: \"cors\",\n  subscribe: true,\n});\n\nif (!fetchBalance && fetchMetrics) return \"Loading...\";\nconsole.log(\"balance\", fetchBalance);\n\ninitState({\n  tab: \"stake\",\n  amount: 0.0,\n  result: 0,\n});\nconst submitMethod = {\n  stake: depositAndStakeFn,\n  delayedUnstakeFn: delayedUnstakeFn,\n  fast: liquidUnstakeFn,\n}[state.tab];\n\nconst submitArgs = {\n  stake: {},\n  delayedUnstakeFn: { amount: state.amount * YOCTO },\n  fast: {\n    st_near_to_burn: amount * YOCTO,\n    min_expected_near: amount * YOCTO, // REVIEW\n  },\n}[state.tab];\n\nconst onSubmit = () => {\n  const method = submitMethod;\n  const args = submitArgs;\n  const deposit = state.tab == \"stake\" ? state.amount * YOCTO : undefined;\n  Near.call(metapoolContract, method, args, GAS, deposit);\n};\n\nconst onClickTab = (tab) => {\n  State.update({ tab });\n};\n\nconst onClickMax = (tab) => {\n  console.log(\"setting max balance\", fetchBalance);\n  State.update({ amount: parseFloat(fetchBalance.body[0].amount.toFixed(2)) });\n};\n\nconst onChangeNearAmount = (value) => {\n  State.update({ amount: parseFloat(value) });\n};\nconst propsData = {\n  stakingSelector: {\n    toggle3: {\n      name: \"Delayed Unstake\",\n      key: \"delayed\",\n      icon: \"bi-hourglass-split\",\n      disabled: false,\n    },\n    toggle2: {\n      name: \"Fast Unstake\",\n      key: \"fast\",\n      icon: \"bi-fast-forward-fill\",\n      disabled: false,\n    },\n    toggle1: {\n      icon: \"bi-arrow-bar-up\",\n      key: \"stake\",\n      name: \"Stake\",\n      disabled: false,\n    },\n  },\n  input: {\n    title: \"NEAR Amount\",\n    button: {\n      size: \"lg\",\n      children: \"Max\",\n    },\n  },\n  input1: {\n    token: \"stNEAR\",\n    title: \"You\u2019ll get\",\n  },\n  stakeButton: {\n    active: true,\n    disabled: false,\n    children: \"Stake now\",\n  },\n  notification: {\n    message: \"Rewards distributed every 24 hours\",\n  },\n};\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #CEFF1A;\n    padding: 32px;\n  `;\nconst Container = styled.div`\n    border: 1px solid #c0c5c1;\n    border-radius: 16px;\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    row-gap: 32px;\n    padding: 32px;\n`;\n\nconst Frame = styled.div`\n    display: flex;\n    flex-direction: column;\n    row-gap: 8px;\n  `;\nconst FrameButton = styled.div`\n    background-color: #0C2246;\n    display: flex;\n    flex-direction: column;\n    padding: 8px 24px;\n    gap: 8px;\n    color: ##FFFFFF;\n    border-radius: 1000px;\n    margin-top: 24px;\n`;\nconst FrameNotification = styled.div`\n    margin-top: 24px;\n`;\nconst Banner = styled.div`\n    border-radius: 16px;\n    background-color: #f9fafb;\n    border: 0.8px solid #d7e0e4;\n    font-weight: 500;\n    font-size: 1.286rem;\n    line-height: 18px;\n    font-family: \"Aeonik Fono\", Arial;\n    color: #032131;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    column-gap: 88px;\n    padding: 32px;\n    margin-top: 32px;\n  `;\nconst FrameBanner = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    column-gap: 8px;\n  `;\nconst SecurityText = styled.span`\n    letter-spacing: 1px;\n    margin-top: 2px;\n  `;\nconst BannerButtonWrapper = styled.div`\n    color: #032131;\n    font-size: 1.286rem;\n    font-weight: 500;\n    line-height: 18px;\n    font-family: \"Aeonik Fono\", Arial;\n    text-align: center;\n    display: flex;\n    flex-direction: row;\n    column-gap: 8px;\n  `;\nconst BannerButton = styled.a`\n    border-radius: 1000px;\n    background-color: #ffffff;\n    border: 2px solid #0c2246;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding-left: 16px;\n    padding-right: 16px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n   text-decoration: none;\n    cursor: pointer;\n  `;\nconst BannerButtonText = styled.span`\n    letter-spacing: 1px;\n    margin-left: 1px;\n    margin-top: 10px;\n    margin-bottom: 9px;\n  `;\nreturn (\n  <Wrapper>\n    <Container>\n      <Frame>\n        <Widget\n          src={`${ownerId}/widget/LiquidStake.Selector`}\n          props={{\n            active: state.tab,\n            ...propsData.stakingSelector,\n            onClickTab: onClickTab,\n          }}\n        />\n        <FrameNotification>\n          <Widget\n            src={`${ownerId}/widget/LiquidStake.Notification`}\n            props={{\n              type: \"info\",\n              message: \"Rewards distributed every 24 hours\",\n              fontSize: \"fs-5\",\n            }}\n          />\n        </FrameNotification>\n        <Widget\n          src={`${ownerId}/widget/LiquidStake.StakeInput`}\n          props={{\n            ...propsData.input,\n            value: state.amount,\n            onClickMax,\n            onChange: onChangeNearAmount,\n          }}\n        />\n        <Widget\n          src={`${ownerId}/widget/LiquidStake.StakeResult`}\n          props={{\n            ...propsData.input1,\n            amount: (\n              state.amount / parseFloat(fetchMetrics.body.st_near_price)\n            ).toFixed(2),\n          }}\n        />\n        <FrameButton>\n          <button\n            class=\"btn text-white\"\n            type=\"button\"\n            onClick={onSubmit}\n            {...propsData.stakeButton}\n          />\n        </FrameButton>\n\n        <Banner className={props.className || \"\"}>\n          <FrameBanner>\n            <i class=\"bi bi-shield-shaded\"></i>\n            <SecurityText>Security</SecurityText>\n          </FrameBanner>\n          <BannerButtonWrapper className={props.className || \"\"}>\n            <BannerButton\n              href=\"https://metapool.gitbook.io/master/security/audit-reports\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <BannerButtonText>Read about our audited code</BannerButtonText>\n            </BannerButton>\n          </BannerButtonWrapper>\n        </Banner>\n      </Frame>\n    </Container>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/LiquidStake.Index"}