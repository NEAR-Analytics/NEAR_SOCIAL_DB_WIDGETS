{"tx_hash": "Db37g9fFxkv3yiYiYViMC7kaRPKQy6QZR8dvQQeP1qGq", "action_id_social": "FqD1L4idTUzvSwtboaJ3btHA8M6DVodsPtovAwFRzniN-0-widget", "block_id": 85192667, "block_timestamp": "2023-02-14 05:09:37.065", "signer_id": "manzanal.near", "widget_name": "DateProgress", "source_code": "const UPDATE_INTERVAL = props.updateInterval ?? 10000;\nconst getProgress = () => {\n  const date = new Date();\n  const months = [\n    31,\n    28 +\n      (date.getFullYear() % 4 === 0 ||\n      (date.getFullYear() % 400 === 0 && date.getFullYear() % 100 !== 0)\n        ? 1\n        : 0),\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ];\n  const yearProgress = () => {\n    let sum = 0;\n\n    months.forEach(\n      (month, index) =>\n        (sum +=\n          index < date.getMonth()\n            ? month\n            : index === date.getMonth()\n            ? date.getDate()\n            : 0)\n    );\n\n    sum--;\n    sum +=\n      (date.getHours() + date.getMinutes() / 60 + date.getSeconds() / 3600) /\n      24;\n\n    const yearDays =\n      date.getFullYear() % 4 === 0 ||\n      (date.getFullYear() % 400 === 0 && date.getFullYear() % 100 !== 0)\n        ? 366\n        : 365;\n\n    return (sum / yearDays) * 100;\n  };\n\n  const monthProgress = () => {\n    let sum = date.getDate() - 1;\n\n    sum +=\n      (date.getHours() + date.getMinutes() / 60 + date.getSeconds() / 3600) /\n      24;\n\n    return (sum / months[date.getMonth()]) * 100;\n  };\n\n  const dayProgress =\n    ((date.getHours() + date.getMinutes() / 60 + date.getSeconds() / 3600) /\n      24) *\n    100;\n\n  const workDayProgress = () => {\n    let timeRange = 0;\n    let timeDay = \"\";\n\n    if (date.getHours() < 6) timeDay = \"Early Morning\";\n    else if (date.getHours() < 12) {\n      timeDay = \"Morning\";\n      num = 6;\n    } else if (date.getHours() < 18) {\n      timeDay = \"Afternoon\";\n      num = 12;\n    } else {\n      timeDay = \"Night\";\n      num = 18;\n    }\n\n    return {\n      timeDay,\n      progress:\n        ((date.getHours() -\n          timeRange +\n          date.getMinutes() / 60 +\n          date.getSeconds() / 3600) /\n          6) *\n        100,\n    };\n  };\n\n  return {\n    yearProgress: yearProgress(),\n    monthProgress: monthProgress(),\n    dayProgress: dayProgress,\n    workDayProgress: workDayProgress(),\n  };\n};\n\nif (state === undefined) {\n  State.init({ ...getProgress() });\n  setInterval(() => {\n    State.update((state) => ({\n      ...state,\n      ...getProgress(),\n    }));\n  }, UPDATE_INTERVAL);\n}\n\nconst ProgressBar = styled.div`\n   width:${(props) => props.width}%\n`;\n\nreturn (\n  <>\n    <h3>Date Progress</h3>\n    <div class=\"d-grid gap-3\">\n      <div class=\"column justify-content-evenly\">\n        <p class=\"fs-7 fw-light text text-muted\">\n          {\" \"}\n          <i class=\"bi-calendar\" />\n          Year\n        </p>\n        <div class=\"progress\">\n          <ProgressBar\n            className=\"progress-bar progress-bar-striped progress-bar-animated\"\n            role=\"progressbar\"\n            aria-valuenow={state.yearProgress}\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            width={state.yearProgress}\n          >\n            {Math.round(state.yearProgress)}%\n          </ProgressBar>\n        </div>\n      </div>\n      <div class=\"column justify-content-evenly\">\n        <p class=\"fs-7 fw-light text text-muted\">\n          <i class=\"bi-calendar-month\" /> Month\n        </p>\n        <div class=\"progress\">\n          <ProgressBar\n            className=\"progress-bar progress-bar-striped progress-bar-animated\"\n            role=\"progressbar\"\n            aria-valuenow={state.monthProgress}\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            width={state.monthProgress}\n          >\n            {Math.round(state.monthProgress)}%\n          </ProgressBar>\n        </div>\n      </div>\n      <div class=\"column justify-content-evenly\">\n        <p class=\"fs-7 fw-light text text-muted\">\n          {\" \"}\n          <i class=\"bi-calendar-day\" /> Day\n        </p>\n        <div class=\"progress\">\n          <ProgressBar\n            className=\"progress-bar progress-bar-striped progress-bar-animated\"\n            role=\"progressbar\"\n            aria-valuenow={state.dayProgress}\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            width={state.dayProgress}\n          >\n            {Math.round(state.dayProgress)}%\n          </ProgressBar>\n        </div>\n      </div>\n      <div class=\"column justify-content-evenly\">\n        <p class=\"fs-7 fw-light text text-muted\">\n          <i class=\"bi-calendar4-range\" />\n          Workday - {state.workDayProgress.timeDay}\n        </p>\n        <div class=\"progress\">\n          <ProgressBar\n            className=\"progress-bar progress-bar-striped progress-bar-animated\"\n            role=\"progressbar\"\n            aria-valuenow={state.workDayProgress.progress}\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            width={state.workDayProgress.progress}\n          >\n            {Math.round(state.workDayProgress.progress)}%\n          </ProgressBar>\n        </div>\n      </div>\n    </div>\n  </>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/DateProgress", "metadata.description": "Progress bars for date progress: year, month, day, workday.\nUpdate interval customizable via props.", "metadata.image.ipfs_cid": "bafkreibm6imyaujqxgvtc4ec5tbxou2gdlo2t6sny6wsii7dlepyh5mv24", "metadata.name": "Date Progress", "metadata.tags.app": "", "metadata.tags.date": "", "metadata.tags.inline": "", "metadata.tags.progress": "", "metadata.tags.widget": "", "metadata": NaN}