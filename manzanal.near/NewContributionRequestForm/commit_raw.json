{"tx_hash": "7u2fMuVpfjHBEofETEpiEppdSqDhaL5FyQkzscn5SzjP", "action_id_social": "A86BWabgBy4hWtJAnK8Q4BotsB8HU2PhLXyhdsyieYv-0-widget", "block_id": 89020203, "block_timestamp": "2023-04-07 09:40:33.648", "signer_id": "manzanal.near", "widget_name": "NewContributionRequestForm", "source_code": "const ownerId = \"manzanal.near\";\n\nState.init({\n  // The entity to which to request a contribution.\n  entity: props.entity ? [{ name: props.entity }] : [],\n  title: \"\",\n  description: \"\",\n  files: [],\n  tags: [],\n  requestType: props.requestType ? [{ name: props.requestType }] : [],\n  paymentType: props.paymentType ? [{ name: props.paymentType }] : [],\n  paymentSource: props.paymentSource ? [{ name: props.paymentSource }] : [],\n  budget: undefined,\n  specifyBudget: true,\n  deadline: \"\",\n  specifyDeadline: true,\n});\nconst allEntities = (\n  Near.view(ownerId, \"get_entities\", {}, \"final\", true) ?? []\n).map((name) => ({ name }));\n\nconst allRequestTypes = (\n  Near.view(ownerId, \"get_request_types\", {}, \"final\", true) ?? []\n).map((name) => ({ name }));\n\nconst allPaymentTypes = (\n  Near.view(ownerId, \"get_payment_types\", {}, \"final\", true) ?? []\n).map((name) => ({ name }));\n\nconst allPaymentSources = (\n  Near.view(ownerId, \"get_payment_sources\", {}, \"final\", true) ?? []\n).map((name) => ({ name }));\n\nconst tagsMetadata = Social.getr(`${accountId}/project/tags`, \"final\");\n\n// styled components\nconst Heading3 = styled.div`\n    font-family: 'Space Grotesk';\n    font-size: 19px;\n    font-weight: 700;\n    line-height: 24px;\n`;\n\nconst Title = styles.div`\n  border-bottom: 1px solid #ECEEF0;\n`;\n\nconst renderEntity = (\n  <div className=\"col-lg-12 mb-3\">\n    <label htmlFor=\"enity-id\">Request as *</label>\n    <Typeahead\n      id=\"entity-id\"\n      labelKey=\"name\"\n      onChange={(entity) => State.update({ entity })}\n      options={allEntities}\n      placeholder=\"social.near, contribut3.near\"\n      selected={state.entity}\n      positionFixed\n      renderMenuItemChildren={(option, { text }) => (\n        <Widget\n          src={`${ownerId}/widget/EntityOneLineProfile`}\n          props={{\n            accountId: option.name,\n          }}\n        />\n      )}\n    />\n  </div>\n);\n\nconst renderDescription = (\n  <div className=\"col-lg-12 mb-3\">\n    <Widget\n      src={`${ownerId}/widget/DescriptionInput`}\n      props={{\n        description: state.description,\n        text: \"Description\",\n        update: (description) => State.update({ description }),\n      }}\n    />\n  </div>\n);\nconst onUpdateAttachFiles = (files) => {\n  console.log(\"Files update\", files);\n  State.update({ files });\n};\nconst renderAttachFiles = (\n  <div className=\"w-100 mb-3\">\n    <Widget\n      src={`${ownerId}/widget/IpfsFilesUpload`}\n      props={{\n        fileAccept: \"application/pdf\",\n        fileIcon: \"bi-file-earmark-pdf\",\n        buttonText: \"Upload a pfd\",\n        update: onUpdateAttachFiles,\n      }}\n    />\n  </div>\n);\n\nconst renderRequestTypeInput = (\n  <div className=\"w-75 mb-3\">\n    <Widget\n      src={`${ownerId}/widget/ContributionTypeInput`}\n      props={{\n        contributionType: state.requestType,\n        update: (requestType) => State.update({ requestType }),\n        allRequestTypes,\n        text: \"Request type *\",\n      }}\n    />\n  </div>\n);\n\nconst renderTitle = (\n  <div className=\"mb-3\">\n    <label htmlFor=\"title\">Title *</label>\n    <input\n      type=\"text\"\n      id=\"title\"\n      placeholder=\"Looking for a Rust developer to create a smart contract\"\n      value={state.title}\n      onChange={({ target }) => State.update({ title: target.value })}\n    />\n  </div>\n);\nconst renderTagSelection = (\n  <div className=\"mb-3\" style={{ minHeight: \"62px\" }}>\n    {metadata !== null ? (\n      <Widget\n        src={\"mob.near/widget/MetadataEditor\"}\n        props={{\n          initialMetadata: metadata,\n          onChange: (metadata) => {\n            State.update({ metadata });\n          },\n          options: {\n            tags: {\n              label: \"Tags\",\n              placeholder: \"defi, staking\",\n            },\n          },\n        }}\n      />\n    ) : (\n      \"Loading\"\n    )}\n  </div>\n);\n\nconst renderPaymentTypeInput = (\n  <div className=\"w-75 mb-3\">\n    <Widget\n      src={`${ownerId}/widget/PaymentTypeInput`}\n      props={{\n        paymentType: state.paymentType,\n        update: (paymentType) => State.update({ paymentType }),\n        allPaymentTypes,\n      }}\n    />\n  </div>\n);\n\nconst renderPaymentSourceInput = (\n  <div className=\"w-75 mb-3\">\n    <Widget\n      src={`${ownerId}/widget/PaymentSourceInput`}\n      props={{\n        paymentSource: state.paymentSource,\n        update: (paymentSource) => State.update({ paymentSource }),\n        allPaymentSources,\n      }}\n    />\n  </div>\n);\n\nconst renderBudgetInput = (\n  <div className=\"w-75 mb-3\">\n    <label htmlFor=\"budget\">Budget</label>\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">$</span>\n      </div>\n      <input\n        type=\"number\"\n        min=\"0\"\n        id=\"budget\"\n        disabled={!state.specifyBudget}\n        placeholder=\"1500\"\n        value={state.budget}\n        onChange={({ target }) => State.update({ budget: target.value })}\n      />\n    </div>\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        value={!state.specifyBudget}\n        id=\"specifyBudget\"\n        onChange={() => State.update({ specifyBudget: !state.specifyBudget })}\n      />\n      <label class=\"form-check-label\" for=\"specifyBudget\">\n        Don't specify\n      </label>\n    </div>\n  </div>\n);\n\nconst renderDeadlineInput = (\n  <div className=\"w-50 mb-3\">\n    <label htmlFor=\"deadline\">Deadline</label>\n    <input\n      type=\"date\"\n      id=\"deadline\"\n      disabled={!state.specifyDeadline}\n      value={state.deadline}\n      onChange={({ target }) => State.update({ deadline: target.value })}\n    />\n\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        value={!state.specifyDeadline}\n        id=\"specifyBudget\"\n        onChange={() =>\n          State.update({ specifyDeadline: !state.specifyDeadline })\n        }\n      />\n      <label class=\"form-check-label\" for=\"specifyDeadline\">\n        Don't specify\n      </label>\n    </div>\n  </div>\n);\nreturn (\n  <div className=\"row my-4 mx-12\">\n    <Title class=\"mb-3\">\n      <Heading3>Request details</Heading3>\n    </Title>\n\n    <div>\n      {renderEntity}\n      {renderTitle}\n      {renderDescription}\n      {renderAttachFiles}\n      {renderTagSelection}\n      {renderRequestTypeInput}\n      {renderPaymentTypeInput}\n      {renderPaymentSourceInput}\n      {renderBudgetInput}\n      {renderDeadlineInput}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/NewContributionRequestForm"}