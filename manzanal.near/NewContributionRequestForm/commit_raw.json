{"tx_hash": "J1yczyBUrnqTVTai643RkGSXFjafUBhqG2AwTju3EKcZ", "action_id_social": "5ZBVv4awiREjYqFPSx5LRdTnNVQ3WQfiyFJAp3ajoGqB-0-widget", "block_id": 88295415, "block_timestamp": "2023-03-28 11:43:47.501", "signer_id": "manzanal.near", "widget_name": "NewContributionRequestForm", "source_code": "const ownerId = \"contribut3.near\";\n\nState.init({\n  // The entity to which to request a contribution.\n  entity: props.entity ? [{ name: props.entity }] : [],\n  title: \"\",\n  description: \"\",\n  files: [],\n  tags: [],\n  contributionType: props.contributionType\n    ? [{ name: props.contributionType }]\n    : [],\n  paymentSource: \"\",\n  budget: undefined,\n  specifyBudget: false,\n  deadline: undefined,\n  specifyDeadline: false,\n});\nconst getEntities = () => {\n  const result = Near.view(ownerId, \"get_entities\", {}, \"final\");\n  console.log(\"entities\", result);\n  return result;\n};\nconst existingEntities = Object.values(getEntities() ?? {}).map((name) => ({\n  name,\n}));\nconst tagsMetadata = Social.getr(\n  `${accountId}/${appName}/${state.contractId}`,\n  \"final\"\n);\n\nconst renderEntity = (\n  <div className=\"col-lg-12  mb-2\">\n    <label htmlFor=\"enity-id\">Request as *</label>\n    <Typeahead\n      id=\"entity-id\"\n      labelKey=\"name\"\n      onChange={(entity) => State.update({ entity })}\n      options={existingEntities}\n      placeholder=\"social.near, contribut3.near\"\n      selected={state.entity}\n      positionFixed\n      renderMenuItemChildren={(option, { text }) => (\n        <Widget\n          src={`manzanal.near/widget/EntityOneLineProfile`}\n          props={{\n            accountId: option.name,\n          }}\n        />\n      )}\n    />\n  </div>\n);\n\nconst descriptionDiv = (\n  <div className=\"col-lg-12 mb-2\">\n    <Widget\n      src={`${ownerId}/widget/DescriptionInput`}\n      props={{\n        description: state.description,\n        text: \"Description\",\n        update: (description) => State.update({ description }),\n      }}\n    />\n  </div>\n);\n\nconst contributionTypeInput = (\n  <div className=\"col-lg-12 mb-2\">\n    <Widget\n      src={`${ownerId}/widget/ContributionTypeInput`}\n      props={{\n        contributionType: state.contributionType,\n        update: (contributionType) => State.update({ contributionType }),\n        allContributionTypes,\n      }}\n    />\n  </div>\n);\nconst renderTitle = (\n  <div>\n    <label htmlFor=\"title\">Title *</label>\n    <input\n      type=\"text\"\n      id=\"title\"\n      placeholder=\"Looking for a Rust developer to create a smart contract\"\n      value={state.title}\n      onChange={({ target }) => State.update({ title: target.value })}\n    />\n  </div>\n);\nconst renderTagSelection = (\n  <div className=\"mb-2\" style={{ minHeight: \"62px\" }}>\n    {metadata !== null ? (\n      <Widget\n        src={\"mob.near/widget/MetadataEditor\"}\n        key={`public-tags-metadata-${state.contractId}`}\n        props={{\n          initialMetadata: metadata,\n          onChange: (metadata) => {\n            State.update({ metadata });\n          },\n          options: {\n            tags: {\n              label: \"Public Tags\",\n              pattern,\n              placeholder: \"binance, cex, nft, ft, fake, scam\",\n            },\n          },\n        }}\n      />\n    ) : (\n      \"Loading\"\n    )}\n  </div>\n);\nreturn (\n  <div className=\"row\">\n    {renderEntity}\n    {renderTitle}\n    {descriptionDiv}\n    {renderTagSelection}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/NewContributionRequestForm"}