{"tx_hash": "7e7r6jsQR5yGsZGA76ynKadhbEEiarkGDt2xTQVEYaes", "action_id_social": "7ENuA4MeZfZPuZEagWPQkZGA3X4g87w1ifH9ysdCVrvk-0-widget", "block_id": 91672428, "block_timestamp": "2023-05-12T09:13:56.121Z", "signer_id": "0abcfb7b41666d7cea2d2689a83aab884debc12d7b071a718f5feab914a89066", "widget_name": "StakeWithProphet", "source_code": "//CONSTANTS AND STATE\n\nconst contract = \"prophet.poolv1.near\";\nconst accountId = props.accountId || context.accountId;\nconst gas = 300 * 1000000000000;\n\nState.init({\n  stakingAmount: \"\",\n  stakingError: \"Stake\",\n  stakingButton: \"0\",\n});\n\n//HANDLERS AND FUNCTIONS\n\nconst onInputChange = ({ target }) => {\n  State.update({\n    stakingAmount: target.value,\n    stakingError: \"Stake\",\n    stakingButton: \"1\",\n  });\n\n  if (target.value >= nearBalance) {\n    State.update({\n      stakingError: \"Max is \" + nearBalance + \" NEAR\",\n      stakingButton: \"0\",\n    });\n  } else if (target.value < 1) {\n    State.update({ stakingError: \"Min is 1 NEAR\", stakingButton: \"0\" });\n  } else {\n    State.update({ stakingError: \"Stake\", stakingButton: \"1\" });\n  }\n};\n\nconst minClick = () => {\n  State.update({ stakingAmount: 1, stakingError: \"Stake\", stakingButton: \"1\" });\n};\n\nconst maxClick = () => {\n  State.update({\n    stakingAmount: nearBalance - 0.05,\n    stakingError: \"Stake\",\n    stakingButton: \"1\",\n  });\n};\n\nconst onBtnClick = () => {\n  if (state.stakingButton == \"1\") {\n    Near.call(\n      contract,\n      \"deposit_and_stake\",\n      {},\n      gas,\n      state.stakingAmount * 1000000000000000000000000\n    );\n  }\n};\n\nfunction getAPY() {\n  const result = fetch(\"https://metrics.linearprotocol.org\", {\n    method: \"GET\",\n  });\n  const apy = result.body.apy;\n  if (!apy) return \"-\";\n  return Big(apy).mul(95).toFixed(2) + \"%\";\n}\n\nfunction getNearBalance(accountId) {\n  const account = fetch(\"https://rpc.mainnet.near.org\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: accountId,\n      },\n    }),\n  });\n  const { amount, storage_usage } = account.body.result;\n  const COMMON_MIN_BALANCE = 0.05;\n  if (!amount) return \"-\";\n  const availableBalance = Big(amount || 0).minus(\n    Big(storage_usage).mul(Big(10).pow(19))\n  );\n  const balance = availableBalance\n    .div(Big(10).pow(24))\n    .minus(COMMON_MIN_BALANCE);\n  return balance.lt(0) ? \"0\" : balance.toFixed(5, BIG_ROUND_DOWN);\n}\n\n//STYLES\n\nconst Main = styled.div`\n      color: black;\n      width: 100%;\n      height: 70vh;\n      background: #ffffff;\n  \n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-direction: column\n      font-family: \"Times New Roman\", Times, serif;\n  `;\n\nconst MainCointainter = styled.div`\n\n    width: 100%;\n    height: 100%;\n    background: #bdc8c4;\n    text-align: center;\n    border-radius: 35px;\n    \n`;\n\nconst StakingContainer = styled.div`\n\n    margin: auto;\n    width: 50%;\n    border-style: solid;\n    border-width: 3px;\n    border-radius: 35px;\n    border-color: black;\n    background: #bdc8c4;\n    \n`;\n\nconst Header = styled.div`\n      font-weight: bold;\n      font-size: 30px;\n      text-align: center;\n  `;\n\nconst StakingFormContainer = styled.div`\n        width: 50%;\n        margin: auto;\n  `;\n\nconst InputFieldAndButtons = styled.div`\n        height: 20%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-start\n  `;\n\nconst InputField = styled.div`\n        height: 10%;\n        width: 76%;\n        background: #ffffff;\n        border-radius: 10px;\n        text-align: center;\n        margin: 5px;\n  `;\n\nconst ErrorField = styled.div`\n\n        color: brown;\n        margin: 5px;\n  `;\n\nconst MinMaxButton = styled.button`\n        height: parent;\n        width: 13%;\n        background: #ffffff;\n        padding: 3px 0;\n        border-radius: 5px;\n        text-align: center;\n        margin: 5px;\n  `;\n\nconst Gap = styled.div`\n        height: 10px;\n`;\n\nconst BigGap = styled.div`\n        height: 20%;\n`;\n\nconst StakeButton = styled.button`\n    \n    background: #CED67C;\n    width: 50%;\n    height: 40px;\n    text-align: center;\n    padding: 0px 0;\n    border-radius: 10px;\n    margin: auto;\n\n}\n`;\nconst APYLink = styled.a`\n        color: black;\n        text-decoration-line: underline;\n`;\n\n//RENDER SEQUENCE\n\nconst nearBalance = getNearBalance(accountId);\n\nconst stakingForm = (\n  <>\n    <label>Current balance is {nearBalance} NEAR</label>\n    <InputFieldAndButtons>\n      <InputField>\n        <input\n          placeholder=\"how much to stake\"\n          type=\"number\"\n          onChange={onInputChange}\n          value={state.stakingAmount}\n        />\n      </InputField>\n      <MinMaxButton onClick={minClick}>min</MinMaxButton>\n      <MinMaxButton onClick={maxClick}>max</MinMaxButton>\n    </InputFieldAndButtons>\n    <Gap></Gap>\n    <Gap></Gap>\n    <StakeButton onClick={onBtnClick}>{state.stakingError}</StakeButton>\n    <Gap></Gap>\n  </>\n);\n\nconst notLoggedInWarning = <p class=\"text-center py-2\"> Please login to use</p>;\n\nconst APY = getAPY();\n\nreturn (\n  <Main>\n    <a href=\"https://prophet.one//\" target=\"_blank\">\n      <img\n        style={{\n          height: \"10%\",\n          width: \"auto\",\n          position: \"absolute\",\n          left: \"3%\",\n          top: \"5%\",\n        }}\n        src=\"https://ipfs.near.social/ipfs/bafkreiaynpmgxobhetkmyu35hzt3vuqdqbbq43gmw6vajjxd2txvxgq3ii\"\n        alt=\"Prophet Logo\"\n        width={\"auto\"}\n      />\n    </a>\n\n    <MainCointainter>\n      <BigGap></BigGap>\n      <StakingContainer>\n        <Header>Stake with Prophet</Header>\n\n        <p>\n          Current APY is\n          <APYLink href=\"https://www.stakingrewards.com/earn/near-protocol/\">\n            {APY}\n          </APYLink>{\" \"}\n          (5% fee)\n        </p>\n\n        <StakingFormContainer>\n          {context.accountId ? stakingForm : notLoggedInWarning}\n        </StakingFormContainer>\n      </StakingContainer>\n    </MainCointainter>\n  </Main>\n);\n", "metadata": {"description": "Stake your NEAR with Prophet One validator.", "image": {"url": "https://ipfs.near.social/ipfs/bafkreiaynpmgxobhetkmyu35hzt3vuqdqbbq43gmw6vajjxd2txvxgq3ii"}, "linktree": {"website": "https://prophet.one/"}, "name": "Stake With Prophet", "tags": {"near": "", "stake": "", "staking": "", "widget": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0abcfb7b41666d7cea2d2689a83aab884debc12d7b071a718f5feab914a89066/widget/StakeWithProphet", "__row_index": 0}