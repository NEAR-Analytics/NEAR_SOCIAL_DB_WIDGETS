{"tx_hash": "AdE8YACRmCSfGKrnp35bwFbLptibUnJXjQeAkpgAru59", "action_id_social": "49f5icyMhSdiNNwsQLiZTYsdZmY5DhkmcytDApHeQRQd-0-widget", "block_id": 88584388, "block_timestamp": "2023-04-01 14:20:04.578", "signer_id": "infinity.near", "widget_name": "Optical", "source_code": "const owner = Ethers.send(\"eth_requestAccounts\", [])[0];\nif (!owner) return \"Please connect your Ethereum account on Polygon.\";\n\nconst lensContract = \"0xDb46d1Dc155634FbC732f92E853b10B288AD5a1d\";\n\nconst lensAbi = fetch(\n  \"https://raw.githubusercontent.com/dabit3/lens-protocol-frontend/main/abi/lenshub.json\"\n);\n\nconst iface = new ethers.utils.Interface(lensAbi.body);\n\nif (state.lensProfile === undefined) {\n  const profile = fetch(\"https://api.lens.dev/data/profile\");\n  if (!profile) return;\n  State.update({ lensProfile: JSON.parse(data.profile) });\n}\n\nconst getOwner = () => {\n  return !state.owner\n    ? \"\"\n    : state.owner.substring(0, 6) +\n        \"...\" +\n        state.owner.substring(state.owner.length - 4, state.owner.length);\n};\n\nconst fetchProfile = () => {\n  try {\n    const data = client.query(profileByAddress, {\n      address: owner,\n    });\n  } catch (err) {\n    console.log(\"error fetching profile... \", err);\n  }\n};\n\nreturn (\n  <div>\n    <div class=\"OpticalHeader\">\n      <h3>Optical ~ Work in Progress</h3>\n      <h5>COMING SOON: Lens profiles on the bOS!</h5>\n    </div>\n    <div class=\"LensProfileContainer\">\n      <div class=\"LensProfileName\">\n        <p>Account: {owner}</p>\n        <p>{profile.name || profile.handle}</p>\n        <p>{profile.bio}</p>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/infinity.near/widget/Optical", "metadata.tags.ethdenver2023": "", "metadata.tags.lens": NaN, "metadata.name": NaN}