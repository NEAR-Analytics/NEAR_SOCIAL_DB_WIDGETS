{"tx_hash": "94oZ8Rfk2pG3jRhrvTqR2Ba27VSc94RShz7xjC9mx6uc", "action_id_social": "Fs4W4F62MJXtSqNpaPhRRYbHtmPzrWmdywsGyfBJdT6b-0-widget", "block_id": 94694180, "block_timestamp": "2023-06-21T13:37:03.503Z", "signer_id": "mattlock.near", "widget_name": "EthSeoulDemo", "source_code": "const toast = (toast) => {\n  State.update({\n    toast,\n  });\n};\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 1) {\n  return <p>Please switch to Ethereum Mainnet</p>;\n}\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n  }\n}\n\nconst css = `\n    h1 {\n        font-size: 2rem;\n    }\n    button {\n        display: block;\n        margin: 16px 8px 16px 0;\n        border-radius: 0;\n    }\n`;\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: sans-serif;\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <h1>ETH Seoul Demo</h1>\n    <p>Sender is {state.sender}</p>\n\n    <Widget\n      src={`mattlock.near/widget/EthBalance`}\n      props={{\n        sender,\n        message: `Sender balance is: `,\n      }}\n    />\n\n    <br />\n\n    <Widget\n      src={`mattlock.near/widget/StethBalance`}\n      props={{\n        sender,\n        message: `Sender balance is: `,\n      }}\n    />\n\n    <Widget src={`zavodil.near/widget/Lido`} />\n  </Theme>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/mattlock.near/widget/EthSeoulDemo", "__row_index": 1}