{"tx_hash": "4H6gCG7L5t7b9jGDgyDmsfCiPifjSFPELzbjKF6WQ1u8", "action_id_social": "DjWyCQBSe5wp28zxwBCyy7nkUtSEiTQmrZUoNLzWgMe9-0-widget", "block_id": 92252634, "block_timestamp": "2023-05-19T22:36:07.690Z", "signer_id": "nycdao.near", "widget_name": "Settings", "source_code": "const daoId = props.daoId;\n\nlet string = \"sputnik-dao.near\";\n\nconst source = \"mob.near/widget/Hashtag.Feed\";\n\nconst tag = Social.get(`${daoId}/settings/dao/main/tag`);\n\nState.init({\n  daoId: daoId ?? \"\",\n  hashtag: hashtag ?? tag,\n  isValid: false,\n});\n\nconst checkAccount = (daoId) => {\n  if (daoId.indexOf(string) !== -1) {\n    return State.update({ isValid: true });\n  }\n};\n\nconst isDao = checkAccount(state.daoId);\n\nconst community_args = JSON.stringify({\n  data: {\n    [state.daoId]: {\n      settings: {\n        dao: {\n          main: {\n            tag: state.hashtag,\n          },\n        },\n      },\n    },\n  },\n});\n\nconst widget_args = JSON.stringify({\n  data: {\n    [state.daoId]: {\n      widget: {\n        [`${state.hashtag}.Feed`]: {\n          \"\": `const hashtag = props.hashtag ?? \"${state.hashtag}\"; return (<Widget src=\"${source}\" props={{ hashtag }} />);`,\n          metadata: {\n            tags: {\n              community: \"\",\n            },\n          },\n        },\n      },\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(community_args, \"utf-8\").toString(\"base64\");\nconst create_args = Buffer.from(widget_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"new DAO.Main\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"200000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: \"100000000000000000000000\",\n      gas: \"200000000000000\",\n    },\n  ]);\n};\n\nconst handleCreate = () => {\n  Near.call([\n    {\n      contractName: state.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"new DAO.Widget\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: create_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"200000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: \"100000000000000000000000\",\n      gas: \"200000000000000\",\n    },\n  ]);\n};\n\nconst onChangeDao = (daoId) => {\n  State.update({\n    daoId,\n  });\n};\n\nconst onChangeTag = (hashtag) => {\n  State.update({\n    hashtag,\n  });\n};\n\nreturn (\n  <>\n    <h3>Community Feed</h3>\n    <div className=\"mt-3\">\n      <h5>Shared Account</h5>\n      {isDao ? (\n        <p>\ud83d\uddf3\ufe0f \u2705 ~ group voting enabled</p>\n      ) : (\n        <p>\ud83d\uddf3\ufe0f \ud83c\udd94 ~ permissions required</p>\n      )}\n      <input\n        type=\"text\"\n        value={state.daoId}\n        placeholder=\"<example>.near\"\n        onChange={(e) => onChangeDao(e.target.value)}\n      />\n    </div>\n    <div className=\"mt-3\">\n      <h5>Main Keyword</h5>\n      <p>\ud83d\udea8 DO NOT include hashtag symbol: #\ufe0f\u20e3</p>\n      <input\n        type=\"text\"\n        value={state.hashtag}\n        placeholder=\"bos\"\n        onChange={(e) => onChangeTag(e.target.value)}\n      />\n    </div>\n    <div className=\"mt-3\">\n      {!isDao ? (\n        <div>\n          <CommitButton\n            disabled={state.daoId !== context.accountId}\n            data={{ settings: { dao: { main: { tag: state.hashtag } } } }}\n          >\n            Save\n          </CommitButton>\n          <button\n            disabled={state.daoId !== context.accountId}\n            className=\"btn btn-outline-primary\"\n            onClick={handleCreate}\n          >\n            Create Your Own\n          </button>\n        </div>\n      ) : (\n        <div>\n          <button\n            disabled={state.daoId === context.accountId}\n            className=\"btn btn-primary\"\n            onClick={handleProposal}\n          >\n            Suggest Update\n          </button>\n          <button\n            disabled={state.daoId === context.accountId}\n            className=\"btn btn-outline-primary\"\n            onClick={handleCreate}\n          >\n            Propose to Create New Page\n          </button>\n        </div>\n      )}\n    </div>\n    <hr />\n    <h5>Preview</h5>\n    <div className=\"mb-2\">\n      <Widget\n        src=\"mob.near/widget/Hashtag.Feed\"\n        props={{ hashtag: state.hashtag ?? \"bos\" }}\n      />\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nycdao.near/widget/Settings", "__row_index": 3}