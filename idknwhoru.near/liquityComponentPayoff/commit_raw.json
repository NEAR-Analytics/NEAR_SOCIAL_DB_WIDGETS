{"tx_hash": "2ZcNAg1KgbXoBuE9GuM3yBCchFf38CedeshiaLLmBjh1", "action_id_social": "7xVuPpUqsCpVwDPwvDg6AFL6fgQBbJ3j67cudaDwVFfd-0-widget", "block_id": 93374566, "block_timestamp": "2023-06-03T17:06:50.285Z", "signer_id": "idknwhoru.near", "widget_name": "liquityComponentPayoff", "source_code": null, "metadata": null, "branch": {"draft": {"": "const borrowerOperationAddress = \"0xD69fC8928D4F3229341cb431263F1EBd87B1ade8\";\nconst troveManagerAddress = \"0x0ECDF34731eE8Dd46caa99a1AAE173beD1B32c67\";\nconst lusdTokenAddress = \"0x80668Ed2e71290EB7526ABE936327b4f5dB52dA8\";\n\nconst borrowerOperationAbi = fetch(\n  \"https://api-sepolia.etherscan.io/api?module=contract&action=getabi&address=0xcb306e2509ca52872c2d04160F3c1fa7bc013064\"\n);\n\nconst troveManagerAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/trove-manager-abi.json\"\n);\n\nconst lusdTokenAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/lusd-token-abi.json\"\n);\n\nconst closeTrove = () => {\n  const borrowerOperationContract = new ethers.Contract(\n    borrowerOperationAddress,\n    borrowerOperationAbi.body.result,\n    Ethers.provider().getSigner()\n  );\n\n  borrowerOperationContract.closeTrove().then((transactionHash) => {\n    State.update({ loading: true, hash: transactionHash.hash });\n  });\n};\n\nif (Ethers.provider()) {\n  const signer = Ethers.provider().getSigner();\n  signer.getAddress().then((address) => {\n    State.update({ address });\n    if (state.chainId === 11155111) {\n      const troveManagerContract = new ethers.Contract(\n        troveManagerAddress,\n        troveManagerAbi.body,\n        Ethers.provider().getSigner()\n      );\n\n      const lusdTokenContract = new ethers.Contract(\n        lusdTokenAddress,\n        lusdTokenAbi.body,\n        Ethers.provider().getSigner()\n      );\n\n      troveManagerContract.getTroveDebt(address).then((troveDebtRes) => {\n        const troveDebt = Number(\n          ethers.utils.formatEther(troveDebtRes.toString())\n        );\n        State.update({\n          troveDebt: troveDebt === 0 ? 0 : troveDebt - 200,\n        });\n\n        lusdTokenContract.balanceOf(address).then((lusdBalanceRes) => {\n          const lusdBalance = Number(\n            ethers.utils.formatEther(lusdBalanceRes.toString())\n          );\n          if (troveDebt - 200 - lusdBalance > 0) {\n            State.update({\n              isBlock: true,\n            });\n          }\n        });\n      });\n    }\n  });\n\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\nEthers.provider() &&\n  Ethers.provider()\n    .waitForTransaction(state.hash)\n    .then((res) => {\n      State.update({ troveDebt: undefined, loading: false });\n    })\n    .catch((err) => {\n      State.update({ loading: false });\n    });\n\nconsole.log({ state });\n\nreturn (\n  <>\n    <div>Your Debt</div>\n    <div>\n      {state.troveDebt ?? 0}\n      LUSD\n    </div>\n    {state.address ? (\n      <button disabled={state.isBlock} onClick={closeTrove}>\n        Pay off\n      </button>\n    ) : (\n      <Web3Connect connectLabel=\"Connect Wallet\" />\n    )}\n  </>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/idknwhoru.near/widget/liquityComponentPayoff", "__row_index": 1}