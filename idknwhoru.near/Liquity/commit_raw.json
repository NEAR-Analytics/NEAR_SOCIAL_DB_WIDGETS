{"tx_hash": "CKzRTivtH5f8rGiRsNdbWtvmA2aAUDoZ9FQEMNXF3fHm", "action_id_social": "FGzwsQMkN2cxKkftq71FQt74m2osUkJCvafNk7jQn9XQ-0-widget", "block_id": 93364756, "block_timestamp": "2023-06-03T13:56:46.309Z", "signer_id": "idknwhoru.near", "widget_name": "Liquity", "source_code": "const setcoll = (depositChangeEvent) => {\n  const coll = Number(depositChangeEvent.target.value);\n  const { totalcoll } = state;\n  const collateralRatio = ((coll * state.price) / Number(totalcoll)) * 100;\n\n  State.update({ coll, collateralRatio });\n\n  validateTrove();\n};\n\nconst setBorrow = (borrowChangeEvent) => {\n  const { coll, liquidationReserve } = state;\n  const borrow = Number(borrowChangeEvent.target.value);\n  const borrowingFee = (borrow * 0.5) / 100;\n  const totalcoll =\n    borrow + Number(borrowingFee.toFixed(2)) + liquidationReserve;\n  const collateralRatio = ((coll * state.price) / Number(totalcoll)) * 100;\n\n  State.update({ borrow, borrowingFee, totalcoll, collateralRatio });\n  validateTrove();\n};\n\nconst validateTrove = () => {\n  const { coll, borrow, totalcoll, balance } = state;\n\n  if (borrow < 1800) {\n    State.update({\n      msg: \"Borrow must be at least 1800 LUSD.\",\n      isBlocked: true,\n    });\n    return;\n  }\n\n  const collateralRatio = ((coll * state.price) / Number(totalcoll)) * 100;\n  if (collateralRatio < 110) {\n    State.update({\n      msg: \"Collateral ratio must be at least 110%.\",\n      isBlocked: true,\n    });\n    return;\n  }\n\n  if (coll > Number(balance)) {\n    State.update({\n      msg: `The amount you're trying to deposit exceeds your balance by ${coll} ETH.`,\n      isBlocked: true,\n    });\n    return;\n  }\n\n  if (state.isOpenTrove === true) {\n    State.update({\n      msg: \"you already have an active Trove.\",\n      isBlocked: true,\n    });\n    return;\n  }\n\n  State.update({ msg: \"\", isBlocked: false });\n};\n\nconst borrowerOperationAddress = \"0xD69fC8928D4F3229341cb431263F1EBd87B1ade8\";\n\nconst troveManagerAddress = \"0x0ECDF34731eE8Dd46caa99a1AAE173beD1B32c67\";\n\nconst borrowerOperationAbi = fetch(\n  \"https://api-sepolia.etherscan.io/api?module=contract&action=getabi&address=0xcb306e2509ca52872c2d04160F3c1fa7bc013064\"\n);\n\nconst troveManagerAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/trove-manager-abi.json\"\n);\n\nconst priceFeedAddress = \"0x07dD4Ce17De84bA13Fc154A7FdB46fC362a41E2C\";\nconst priceFeedAbi = fetch(\n  \"https://raw.githubusercontent.com/IDKNWHORU/liquity-sepolia/main/price-feed-abi.json\"\n);\n\nif (!borrowerOperationAbi.ok) return \"loading...\";\nif (!priceFeedAbi.ok) return \"loading...\";\n\n// const iface = new ethers.utils.Interface(borrowerOperationAbi.body);\n\nconst openTrove = () => {\n  const borrowerOperationContract = new ethers.Contract(\n    borrowerOperationAddress,\n    borrowerOperationAbi.body.result,\n    Ethers.provider().getSigner()\n  );\n\n  borrowerOperationContract.openTrove(\n    ethers.BigNumber.from(5000000000000000),\n    ethers.BigNumber.from(state.borrow * 100)\n      .mul(\"10000000000000000\")\n      .toString(),\n    // ethers.BigNumber.from((state.borrow * 10000000000000000).toString()),\n    \"0x1Bc65296aa95A0fD41d6A8AEb34C49665c6de81d\",\n    \"0x1Bc65296aa95A0fD41d6A8AEb34C49665c6de81d\",\n    {\n      value: ethers.BigNumber.from(\n        (state.coll * 1000000000000000000).toString()\n      ),\n      // gasPrice: state.gasPrice,\n      // gasLimit: 25000000,\n    }\n  );\n};\n\nState.init({\n  coll: 0,\n  borrow: 0,\n  borrowingFee: 0,\n  totalcoll: 200,\n  collateralRatio: 0,\n  liquidationReserve: 200,\n  msg: \"\",\n  sender: undefined,\n  chainId: undefined,\n  balance: undefined,\n  price: 0,\n  isOpenTrove: undefined,\n  isBlocked: true,\n});\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nif (state.balance === undefined && state.sender) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\nif (\n  state.sender &&\n  Ethers.send(\"eth_requestAccounts\", [])[0] &&\n  state.chainId === 11155111 &&\n  state.price === 0\n) {\n  const priceFeedContract = new ethers.Contract(\n    priceFeedAddress,\n    priceFeedAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  const troveManagerContract = new ethers.Contract(\n    troveManagerAddress,\n    troveManagerAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  priceFeedContract.getPrice().then((priceRes) => {\n    const price = Number(ethers.utils.formatEther(priceRes));\n\n    State.update({ price });\n    troveManagerContract.getTCR(priceRes).then((tcrRes) => {\n      const tcr = Number(ethers.utils.formatEther(tcrRes)) * 100;\n\n      State.update({ tcr });\n    });\n  });\n}\n\nif (\n  state.sender &&\n  state.chainId === 11155111 &&\n  state.isOpenTrove === undefined\n) {\n  const troveManagerContract = new ethers.Contract(\n    troveManagerAddress,\n    troveManagerAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  troveManagerContract.getTroveStatus(state.sender).then((res) => {\n    const isOpenTrove = ethers.utils.formatEther(res).includes(\"1\");\n    State.update({ isOpenTrove });\n  });\n}\n\nreturn (\n  <>\n    {state.chainId === undefined || state.chainId === 11155111 ? (\n      <div>\n        <div class=\"TroveHead_wrapper__2deZb\">\n          <div class=\"TroveHead_body__1ysLq TroveHead_noTroveBody__2S1Gf\">\n            {state.sender === undefined\n              ? null\n              : state.isOpenTrove === false\n              ? \"You have no active troves. Deposit to open trove.\"\n              : state.isOpenTrove === true\n              ? \"you already have an active Trove.\"\n              : null}\n          </div>\n        </div>\n        <div class=\"TroveEditor_wrapper__15ofX\">\n          <div class=\"Row_row__2iFJs\">\n            <div class=\"Row_labelContainer__1QMyH\">\n              <div>deposit</div>\n            </div>\n            <div class=\"Input_wrapper__3ej-M\">\n              <input\n                class=\"Input_input__3PNbO\"\n                type=\"number\"\n                placeholder=\"0.0000\"\n                min=\"0\"\n                step=\"0.1\"\n                disabled={!state.sender | state.isOpenTrove}\n                onChange={setcoll}\n              />\n              <div class=\"Input_contentRight__270ZM\"></div>\n            </div>\n          </div>\n          <div class=\"Row_row__2iFJs\">\n            <div class=\"Row_labelContainer__1QMyH\">\n              <div>borrow</div>\n            </div>\n            <div class=\"Input_wrapper__3ej-M\">\n              <input\n                class=\"Input_input__3PNbO\"\n                type=\"number\"\n                placeholder=\"0.0000\"\n                min=\"0\"\n                step=\"100\"\n                disabled={!state.sender || state.isOpenTrove}\n                onChange={setBorrow}\n              />\n              <div class=\"Input_contentRight__270ZM Input_contentRightNoInfo__1aulc\">\n                <div class=\"Input_contentRightBottom__2csmy\">\n                  <div class=\"Input_contentRightValues__23MfN\">\n                    <p class=\"Input_contentRightCurrency__WrZrm\">LUSD</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"TroveManager_container__37C51\">\n            <p class=\"ErrorDescription_wrapper__3nGA7\">\n              {state.msg}\n              {/** highlight area */}\n              <span style={{ fontWeight: \"bold\", whiteSpace: \"nowrap\" }}></span>\n            </p>\n            {state.sender ? (\n              <button\n                class=\"Button_wrapper__1pHwk TroveManager_action__3q0yT Button_large__3F305 Button_primary__1mTxz Button_disabled__2c3jr\"\n                disabled=\"\"\n                disabled={state.isBlocked}\n                onClick={openTrove}\n              >\n                Confirm\n              </button>\n            ) : (\n              <Web3Connect connectLabel=\"Connect Wallet\" />\n            )}\n          </div>\n          <div>\n            {state.coll > 0 ? (\n              <div class=\"StaticRow_staticRow__3Tsxc\">\n                <p class=\"\">Deposit</p>\n                <p class=\"\">\n                  {\" \"}\n                  <span class=\"\">{state.coll}</span> ETH{\" \"}\n                </p>\n              </div>\n            ) : null}\n            {state.coll > 0 || state.borrow > 0 ? (\n              <>\n                <div class=\"StaticRow_staticRow__3Tsxc\">\n                  <p class=\"\">\n                    Liquidation Reserve\n                    <span\n                      aria-expanded=\"false\"\n                      style={{ display: \"inline-flex\", color: \"#bbb\" }}\n                    ></span>\n                  </p>\n                  <p class=\"\">\n                    {\" \"}\n                    <span class=\"\">{state.liquidationReserve}</span> LUSD{\" \"}\n                  </p>\n                </div>\n                <div class=\"StaticRow_staticRow__3Tsxc\">\n                  <p class=\"\">\n                    Borrowing Fee\n                    <span\n                      aria-expanded=\"false\"\n                      style={{ display: \"inline-flex\", color: \"#bbb\" }}\n                    ></span>\n                  </p>\n                  <p class=\"\">\n                    {\" \"}\n                    <span class=\"\">{state.borrowingFee.toFixed(2)}</span> LUSD\n                    (0.50%)\n                  </p>\n                </div>\n              </>\n            ) : null}\n            {state.borrow > 0 ? (\n              <div class=\"StaticRow_staticRow__3Tsxc\">\n                <p class=\"\">Recieve</p>\n                <p class=\"\">\n                  {\" \"}\n                  <span class=\"\">{state.borrow.toFixed(2)}</span> LUSD{\" \"}\n                </p>\n              </div>\n            ) : null}\n            {state.totalcoll > 200 ? (\n              <div class=\"StaticRow_staticRow__3Tsxc\">\n                <p class=\"\">\n                  Total debt\n                  <span\n                    aria-expanded=\"false\"\n                    style={{ display: \"inline-flex\", color: \"#bbb\" }}\n                  >\n                    &nbsp;\n                  </span>\n                </p>\n                <p class=\"\">\n                  {\" \"}\n                  <span class=\"\">{state.totalcoll.toFixed(2)}</span> LUSD{\" \"}\n                </p>\n              </div>\n            ) : null}\n            {state.coll > 0 && state.borrow > 0 ? (\n              <div class=\"StaticRow_staticRow__3Tsxc\">\n                <p class=\"\">\n                  Collateral ratio\n                  <span\n                    aria-expanded=\"false\"\n                    style={{ display: \"inline-flex\", color: \"#bbb\" }}\n                  ></span>\n                </p>\n                <p class=\"StaticRow_success__351Dr\">\n                  <span>\n                    <span>{state.collateralRatio.toFixed(1)}%</span>\n                  </span>\n                </p>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div>\n        <div>Switch to Sepolia Testnet.</div>\n        <a href=\"https://chainlist.org/chain/11155111\" target=\"_blank\">\n          https://chainlist.org/chain/11155111\n        </a>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/idknwhoru.near/widget/Liquity", "__row_index": 4}