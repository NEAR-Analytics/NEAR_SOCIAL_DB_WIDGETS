{"tx_hash": "f9XYRP15gUAGmLuMFoMVk1ZB8fddckb6iRFTEheLFZd", "action_id_social": "UrjSy9UVWseLzsRyoKJdFHTfygAZw422WViAWReNJQx-0-widget", "block_id": 89707496, "block_timestamp": "2023-04-16 10:23:29.047", "signer_id": "vishakhs.near", "widget_name": "social-analytics", "source_code": "let Style = styled.div`\n\n  .barTextH{\n    transition: fill 0.2s;\n\n  }\n.barTextH:hover{\n    fill: #ad610a;\n\n  }\n  .bar {\n    transition: fill 0.2s;\n  }\n\n  .bar:hover {\n    fill: #ffa726;\n  }\n\n  .bar-chart {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n    svg {\n      width: 80%;\n    }\n\n    rect {\n      shape-rendering: crispEdges;\n      fill: #61dafb;\n      stroke: #333;\n      stroke-width: 1;\n    }\n\n                      .bar {\n                    transition: fill 0.2s;\n                  }\n\n                  .bar:hover {\n                    fill: #ffa726;\n                  }\n\n                  .bar-chart {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                  }\n\n                    svg {\n                      width: 80%;\n                    }\n\n                    rect {\n                      shape-rendering: crispEdges;\n                      fill: #61dafb;\n                      stroke: #333;\n                      stroke-width: 1;\n                    }\n\n                     \n                     \n                        .barTextH{\n                     transition: fill 0.2s;\n\n                }\n                .barTextH:hover{\n                    fill: #ad610a;\n\n                }\n                .bar {\n                    transition: fill 0.2s;\n                }\n\n                .bar:hover {\n                    fill: #ffa726;\n                }\n\n                .bar-chart {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n\n                    svg {\n                    width: 80%;\n                    }\n\n                    rect {\n                    shape-rendering: crispEdges;\n                    fill: #61dafb;\n                    stroke: #333;\n                    stroke-width: 1;\n                    }\n\n\n\n    `;\n\nconst sentiment = fetch(\n  \"https://fetcher-api.lionhack.workers.dev/api/sentiment\",\n  {\n    subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n    },\n  }\n);\n\n// console.log(sentiment.body.sentiment);\n\nconst values = Object.values(sentiment.body.sentiment);\nconst labels = Object.keys(sentiment.body.sentiment);\n\n// near social doesn't allow MathPI\nconst math_PI = 3.14159;\n\nconst total = values.reduce((acc, value) => acc + value, 0);\nlet startAngle = 0;\nconst [tooltip, setTooltip] = State.init({\n  show: false,\n  value: \"\",\n  x: 0,\n  y: 0,\n});\n\nconst handleMouseEnter = (value, event) => {\n  setTooltip({\n    show: true,\n    value: value,\n    x: event.clientX + 10,\n    y: event.clientY + 10,\n  });\n};\n\nconst handleMouseLeave = () => {\n  setTooltip({ show: false, value: \"\", x: 0, y: 0 });\n};\n\nconst actives = fetch(\"https://fetcher-api.lionhack.workers.dev/api/active\");\n// console.log(Object.keys(actives.body.active[\"0\"]));\nconst users = Object.keys(actives.body.active[\"0\"]);\nconst num = Object.values(actives.body.active[\"0\"]);\nconsole.log(num);\n\nconst itemList = users.map((item, index) => <li key={index}>{item}</li>);\n\nreturn (\n  <>\n    <>\n      <h5 className=\"text-center\">Top Posters on NEAR Social</h5>\n      <div className=\"flex flex-row\">\n        <ol>{itemList}</ol>\n        <ul></ul>\n      </div>\n    </>\n    <h1 className=\"text-center\">AI Sentiment Analysis</h1>\n    <svg viewBox=\"0 0 100 100\">\n      {values.map((value, index) => {\n        const angle = (value / total) * 360;\n        const endAngle = startAngle + angle;\n\n        const largeArc = angle > 180 ? 1 : 0;\n\n        const x1 = 50 + 30 * Math.cos((startAngle - 90) * (math_PI / 180));\n        const y1 = 50 + 30 * Math.sin((startAngle - 90) * (math_PI / 180));\n        const x2 = 50 + 30 * Math.cos((endAngle - 90) * (math_PI / 180));\n        const y2 = 50 + 30 * Math.sin((endAngle - 90) * (math_PI / 180));\n\n        const path = `M 50,50  L ${x1},${y1}  A 30,30 0 ${largeArc} 1 ${x2},${y2} Z`;\n\n        startAngle = endAngle;\n\n        return (\n          <path\n            key={index}\n            d={path}\n            fill={`hsl(${(index * 30) % 360}, 70%, 70%)`}\n            onMouseEnter={handleMouseEnter.bind(null, value)}\n            onMouseLeave={handleMouseLeave}\n          />\n        );\n      })}\n    </svg>\n    {tooltip.show && (\n      <div\n        style={{\n          position: \"absolute\",\n          left: tooltip.x,\n          top: tooltip.y,\n          backgroundColor: \"white\",\n          padding: \"5px 10px\",\n          border: \"1px solid black\",\n          borderRadius: \"5px\",\n        }}\n      >\n        {tooltip.value}\n      </div>\n    )}\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      {labels.map((label, index) => (\n        <div key={index} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div\n            style={{\n              width: 10,\n              height: 10,\n              backgroundColor: `hsl(${(index * 30) % 360}, 70%, 70%)`,\n              marginRight: 5,\n            }}\n          />\n          {label}\n        </div>\n      ))}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vishakhs.near/widget/social-analytics"}