{"tx_hash": "FA8PZBPhBWYsT2YZ76KM8gHehmmTdWdg5kQJc9HJC78c", "action_id_social": "5qK9qyPAXnfYr5EYrUZneFjdeLJxzWQG4sLLqRtGyuXS-0-widget", "block_id": 95029786, "block_timestamp": "2023-06-25T22:40:22.631Z", "signer_id": "ostolex.near", "widget_name": "CastlediceWaitingRoom", "source_code": "const Background = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Oldenburg&display=swap');\n  background-image: url(\"https://raw.githubusercontent.com/OSTOLEX-Technologies/Castledice-frontend/main/public/assets/Menu%20and%20loading%20screen%20background%20dark.png\");\n  background-size: cover;\n  position: fixed;\n  width: 100vw;\n  height: calc(-98px + 100vh);\n  top: 98px;\n  left: 0;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 10%;\n  color: #fff;\n`;\n\nconst BigButton = styled.button`\n  background-image: url(\"https://raw.githubusercontent.com/OSTOLEX-Technologies/Castledice-frontend/main/public/assets/big%20button.png\");\n  color: #fff;\n  font-family: Oldenburg;\n  font-size: 48px;\n  width: 600px;\n  height: 120px;\n  padding: 0;\n  border: 0;\n  outline: none;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: transparent;\n  font-weight: bold;\n  background-size: contain;\n`;\n\nconst website = \"https://near.org/\";\nconst widgetOwner = \"ostolex.near\";\n\nconst Heading1 = styled.div`\n    font-size: 60px;\n    font-weight: bold;\n`;\n\nconst Paraghaph = styled.div`\n    font-size: 36px;\n`;\n\nState.init({\n  creatorId: props.accountId || null,\n  creatingRoom: false,\n  lastRoomId: null,\n  newRoomId: null,\n  roomCreated: false,\n});\n\nconst abiObjData = fetch(\n  \"https://raw.githubusercontent.com/OSTOLEX-Technologies/Castledice-smart-contract/main/abi.json\"\n);\n\nif (!abiObjData) {\n  return <h1>Fetching ABI...</h1>;\n}\nconst abiObj = JSON.parse(abiObjData.body);\n\nconst contractId = \"0xAb926c04Fa3E0CbE23f51BE4Ea2B0777cbB675CC\";\n\nconst iface = new ethers.utils.Interface(abiObj);\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) {\n  return (\n    <Background>\n      <Web3Connect\n        className=\"LidoStakeFormSubmitContainer\"\n        connectLabel=\"Connect with Web3\"\n      />\n    </Background>\n  );\n}\n\nconst castledice = new ethers.Contract(\n  contractId,\n  abiObj,\n  Ethers.provider(\"https://testnet.aurora.dev\").getSigner()\n);\n\n// If accountId the same as user\nif (state.creatorId === sender) {\n  return (\n    <Background>\n      <Heading1>{\"You can't play with your own\"}</Heading1>\n    </Background>\n  );\n}\n\nconst getRoomIdByAddress = () => {\n  return castledice.getRoomIdByAddress(sender).then((result) => {\n    return parseInt(result._hex, 16);\n  });\n};\n\nconst createRoom = (firstAccount, secondAccount) => {\n  console.log([firstAccount, secondAccount]);\n  return castledice\n    .createRoom([firstAccount, secondAccount])\n    .then((result) => result.wait().then((result) => getRoomIdByAddress()));\n};\n\n// getting last room id\nif (state.lastRoomId === null) {\n  getRoomIdByAddress().then((lastRoomId) => State.update({ lastRoomId }));\n  return (\n    <Background>\n      <Heading1>Please wait...</Heading1>\n    </Background>\n  );\n}\n\nif (state.lastRoomId !== 0 && !state.creatingRoom) {\n  return (\n    <Background>\n      <Heading1>You have unfinished game.</Heading1>\n      <Paraghaph>{\"Here's the link of last game:\"}</Paraghaph>\n      <pre class=\"text-danger bg-light\">{`${website}${widgetOwner}/widget/CastlediceOnline?roomId=${state.lastRoomId}`}</pre>\n      <BigButton\n        class=\"btn btn-primary\"\n        onClick={() => State.update({ creatingRoom: true })}\n      >\n        Create new game\n      </BigButton>\n    </Background>\n  );\n}\n\nif (!state.creatorId && state.newRoomId === null) {\n  let interval = setInterval(() => {\n    getRoomIdByAddress().then((result) => {\n      console.log(\"Checking...\", result);\n      if (result !== state.lastRoomId) {\n        clearInterval(interval);\n        State.update({ newRoomId: result });\n      }\n    });\n  }, 4000);\n  return (\n    <Background>\n      <Heading1>Your link:</Heading1>\n      <pre class=\"text-danger bg-light\">{`${website}${widgetOwner}/widget/CastlediceWaitingRoom?accountId=${sender}`}</pre>\n      <Paraghaph>Copy it and send to your friend!</Paraghaph>\n    </Background>\n  );\n}\n\nif (state.newRoomId === null) {\n  createRoom(state.creatorId, sender).then((newRoomId) => {\n    console.log(\"New room id:\", newRoomId);\n    State.update({ newRoomId });\n  });\n  return (\n    <Background>\n      <Heading1>Creating your room...</Heading1>\n    </Background>\n  );\n}\n\nif (state.newRoomId !== null) {\n  return (\n    <Background>\n      <Heading1>You have created new game.</Heading1>\n      <Paraghaph>\n        {\"Here's the link of new game. Paste it to new browser tab:\"}\n      </Paraghaph>\n      <pre class=\"text-danger bg-light\">{`${website}${widgetOwner}/widget/CastlediceOnline?roomId=${state.newRoomId}`}</pre>\n    </Background>\n  );\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ostolex.near/widget/CastlediceWaitingRoom", "__row_index": 2}