{"tx_hash": "Cg4bazy9PX3dyhwvF16RKmHsLrmY19vZUrPRKPVCCGUN", "action_id_social": "DAA6gKAUd1WesDQ9se25WDJHCz2q5Snz7w4AKAhfCQiq-0-widget", "block_id": 86657744, "block_timestamp": "2023-03-06 03:28:42.197", "signer_id": "blocxerz1.near", "widget_name": "SUINETWORK", "source_code": "return (\n  <div>\n    <h1>\n      <b>Suinetwork Build without boundaries</b>\n    </h1>\n  </div>\n);\nconst data = Social.keys(`*/post/meme`, \"final\", { return_type: \"History\" });\n\nif (!data) {\n  return \"Loading\";\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allMemes = accounts\n    .map((account) => {\n      const accountId = account[0];\n      const blockHeights = account[1].post.meme;\n      return blockHeights.map((blockHeight) => ({\n        accountId,\n        blockHeight,\n      }));\n    })\n    .flat();\n\n  allMemes.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allMemes;\n};\n\nconst memeToWidget = ({ accountId, blockHeight }) => {\n  return (\n    <div style={{ minHeight: \"200px\" }}>\n      <a\n        href={`#/mob.near/widget/Meme?accountId=${accountId}&blockHeight=${blockHeight}`}\n        class=\"text-decoration-none\"\n      >\n        <Widget src=\"mob.near/widget/Meme\" props={{ accountId, blockHeight }} />\n      </a>\n    </div>\n  );\n};\n\nState.init({\n  allMemes: processData(data),\n  widgets: [],\n});\n\nconst makeMoreMemes = () => {\n  const newMemes = state.allMemes\n    .slice(state.widgets.length, state.widgets.length + 10)\n    .map(memeToWidget);\n  newMemes.forEach((meme) => state.widgets.push(meme));\n  State.update();\n};\n\nreturn (\n  <div className=\"px-2 mx-auto\">\n    <InfiniteScroll\n      loadMore={makeMoreMemes}\n      hasMore={state.widgets.length < state.allMemes.length}\n    >\n      {state.widgets}\n    </InfiniteScroll>\n  </div>\n);\nState.init({ img: null });\n\nconst uploadFileUpdateState = (body) => {\n  asyncFetch(\"https://ipfs.near.social/add\", {\n    method: \"POST\",\n    headers: { Accept: \"application/json\" },\n    body,\n  }).then((res) => {\n    const cid = res.body.cid;\n    State.update({ img: { cid } });\n  });\n};\n\nconst filesOnChange = (files) => {\n  if (files) {\n    State.update({ img: { uploading: true, cid: null } });\n    uploadFileUpdateState(files[0]);\n  }\n};\n\nreturn (\n  <div className=\"d-inline-block\">\n    {state.img ? (\n      <img\n        class=\"rounded w-100 h-100\"\n        style={{ objectFit: \"cover\" }}\n        src={`https://ipfs.near.social/ipfs/${state.img.cid}`}\n        alt=\"upload preview\"\n      />\n    ) : (\n      \"\"\n    )}\n    <Files\n      multiple={false}\n      accepts={[\"image/*\"]}\n      minFileSize={1}\n      clickable\n      className=\"btn btn-outline-primary\"\n      onChange={filesOnChange}\n    >\n      {state.img?.uploading ? <> Uploading </> : \"Upload an Image\"}\n    </Files>\n  </div>\n);\n", "metadata": null, "widget_modules_used": null, "widget_url": "https://near.social/#/blocxerz1.near/widget/SUINETWORK", "branch.draft": null}