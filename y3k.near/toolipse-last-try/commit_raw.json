{"tx_hash": "Gsu75u5xw8EtrzVb69vK635LzNgDCVLpoena45iV8yjv", "action_id_social": "58qTdv3YCfSbDopJFjDbseWFRhnzJ5kD9E2atyP1hNyK-0-widget", "block_id": 84923562, "block_timestamp": "2023-02-10 15:29:31.446", "signer_id": "y3k.near", "widget_name": "toolipse-last-try", "source_code": "const accountId = props.accountId || context.accountId;\nconst marketId = \"simple.market.mintbase1.near\";\nconst AFFILIATE_ACCOUNT = props.affiliateAccount || \"toolipse.near\";\n\nconst data = fetch(\"https://graph.mintbase.xyz\", {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"anon\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n      query MyQuery {\n        mb_views_active_listings(limit: 700, order_by: {price: desc},where: {minter: {_eq: \"toolipse.near\"}}) {\n            listed_by\n            created_at\n            price\n            nft_contract_id\n            token_id\n            metadata_id\n        }   \n      }\n`,\n  }),\n});\n\nlet Style = styled.div`\n\n/* Gray Scale */\n.hover08 a img {\n\t-webkit-filter: grayscale(100%);\n\tfilter: grayscale(100%);\n\t-webkit-transition: .3s ease-in-out;\n\ttransition: .3s ease-in-out;\n}\n.hover08 a:hover img {\n\t-webkit-filter: grayscale(0);\n\tfilter: grayscale(0);\n}\n        `;\n\nconst YoctoToNear = (amountYocto) =>\n  new Big(amountYocto).div(new Big(10).pow(24)).toString();\n\nlet buy = (price, token_id, nft_contract_id) => {\n  const gas = 200000000000000;\n  const deposit = new Big(price).toFixed(0);\n\n  Near.call(\n    marketId,\n    \"buy\",\n    {\n      nft_contract_id: nft_contract_id,\n      token_id: token_id,\n      referrer_id: AFFILIATE_ACCOUNT,\n    },\n    gas,\n    deposit\n  );\n};\n\nif (!data.ok) {\n  return \"Loading\";\n}\n\nconst size = \"10em\";\n\nreturn data !== null ? (\n  <Style>\n    <h1>Artworks available on @mintbase</h1>\n    <p>Nice to see that my artworks can be buyable from here.</p>\n    <div className=\"d-flex gap-4 flex-wrap\">\n      {data.body.data?.mb_views_active_listings.map((listing, i) => {\n        const priceYocto = listing.price.toLocaleString().replace(/,/g, \"\");\n        const priceNear = YoctoToNear(priceYocto);\n\n        return (\n          <div className=\"d-flex flex-column gap-1 hover08\">\n            <a\n              href={`https://mintbase.xyz/meta/${listing.metadata_id}/`}\n              target=\"_blank\"\n            >\n              <Widget\n                src=\"mob.near/widget/NftImage\"\n                props={{\n                  nft: {\n                    tokenId: listing.token_id,\n                    contractId: listing.nft_contract_id,\n                  },\n                  style: {\n                    width: size,\n                    height: size,\n                    objectFit: \"cover\",\n                    minWidth: size,\n                    minHeight: size,\n                    maxWidth: size,\n                    maxHeight: size,\n                    overflowWrap: \"break-word\",\n                  },\n                  thumbnail: \"thumbnail\",\n                  className: \"rounded img-thumbnail\",\n                  fallbackUrl:\n                    \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n                }}\n              />\n            </a>\n            <button\n              disabled={!accountId}\n              onClick={() => {\n                if (!accountId) return;\n                buy(priceYocto, listing.token_id, listing.nft_contract_id);\n              }}\n            >\n              Buy for {priceNear} N\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  </Style>\n) : (\n  <p>loading...</p>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/toolipse-last-try", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata": NaN}