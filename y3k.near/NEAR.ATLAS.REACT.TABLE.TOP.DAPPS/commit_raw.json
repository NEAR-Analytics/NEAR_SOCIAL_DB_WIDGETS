{"tx_hash": "8ZEm77sdrHLfYQ5NPxLSHqixsZjwpf6W8Dzz35F7FEkX", "action_id_social": "BSs1jTwsLSeozbdSdsb1cwYMeAPcdbpBU4e26XonHksn-0-widget", "block_id": 88300541, "block_timestamp": "2023-03-28 13:35:00.480", "signer_id": "y3k.near", "widget_name": "NEAR.ATLAS.REACT.TABLE.TOP.DAPPS", "source_code": "// Monthly Active Accounts Example\nlet rawData = fetch(\n  \"https://api.flipsidecrypto.com/api/v2/queries/2122b458-2138-4d4b-b030-efa784fc04d3/data/latest\",\n  {\n    subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n    },\n  }\n);\n\n// data.body = data.body.sort((a, b) => new Date(a.MONTH) - new Date(b.MONTH));\n\nlet Style = styled.div`\n\n          `;\n\nlet nodes = rawData.body || [];\n\nconst data = {\n  nodes: nodes,\n};\nconst COLUMNS = [\n  {\n    label: \"Contract Address\",\n    renderCell: (item) => item[\"Contract Address\"],\n    sort: { sortKey: \"ContractAddress\" },\n  },\n  {\n    label: \"Past 30 Days\",\n    renderCell: (item) => item[\"Past 30 Days\"],\n    sort: { sortKey: \"Past30\" },\n  },\n  {\n    label: \"Percent New\",\n    renderCell: (item) => item[\"Percent New\"],\n    sort: { sortKey: \"PercentNew\" },\n  },\n  {\n    label: \"30-60 Days Ago\",\n    renderCell: (item) => item[\"30-60 Days Ago\"],\n    sort: { sortKey: \"PercentNew\" },\n  },\n  { label: \"M/M\", renderCell: (item) => item[\"M/M\"], sort: { sortKey: \"MM\" } },\n  {\n    label: \"60-90 Days Ago\",\n    renderCell: (item) => item[\"60-90 Days Ago\"],\n    sort: { sortKey: \"Past60\" },\n  },\n  {\n    label: \"M/2M\",\n    renderCell: (item) => item[\"M/2M\"],\n    sort: { sortKey: \"M2M\" },\n  },\n];\n\nconst sortFns = {\n  ContractAddress: (array) =>\n    array.sort((a, b) =>\n      a[\"Contract Address\"].localeCompare(b[\"Contract Address\"])\n    ),\n  Past30: (array) =>\n    array.sort((a, b) => a[\"Contract Address\"] - b[\"Contract Address\"]),\n  PercentNew: (array) =>\n    array.sort((a, b) => a[\"Past 30 Days\"] - b[\"Past 30 Days\"]),\n  MM: (array) => array.sort((a, b) => a[\"M/M\"] - b[\"M/M\"]),\n  Past60: (array) =>\n    array.sort((a, b) => a[\"60-90 Days Ago\"] - b[\"60-90 Days Ago\"]),\n  M2M: (array) => array.sort((a, b) => a[\"M/2M\"] - b[\"M/2M\"]),\n};\n\nreturn (\n  <div className=\"text-bg-dark rounded-4 p-3 mb-4\">\n    {data !== null ? (\n      <div class=\"bg-dark\">\n        <BasicTable columns={COLUMNS} data={data} sortFns={sortFns} />\n      </div>\n    ) : (\n      <div>Loading ...</div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/NEAR.ATLAS.REACT.TABLE.TOP.DAPPS"}