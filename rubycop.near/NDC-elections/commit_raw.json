{"tx_hash": "AWRQ8UhMHcf8rDi8pNYUNXDmoU5XRCNTNtAsRQFk3AMK", "action_id_social": "EH8uSCEbkHbyUCUZYk8bcDu679wrEhi2zYrJCn6zkLow-0-widget", "block_id": 93970631, "block_timestamp": "2023-06-11T14:35:28.840Z", "signer_id": "rubycop.near", "widget_name": "NDC-elections", "source_code": null, "metadata": null, "branch": {"draft": {"": "// SAMPLE DATA\n//\n// {\n//   \"contractName\": \"elections-v1.gwg.testnet\",\n//   \"id\": 3,\n//   \"typ\": \"HouseOfMerit\",\n//   \"ref_link\": \"example.com\",\n//   \"start\": 1686255580,\n//   \"end\": 1886653747,\n//   \"quorum\": 100,\n//   \"voters_num\": 150,\n//   \"seats\": 10,\n//   \"candidates\": [\n//     \"zomland.near\",\n//     \"rubycop.near\",\n//     \"candidate1.near\"\n//   ],\n//   \"result\": [\n//     150,\n//     10,\n//     200\n//   ],\n//   \"voters\": [\n//     {\n//       \"accountId\": \"rubycop.near\",\n//       \"candidateId\": \"zomland.near\",\n//       \"txn_url\": \"eerfserge\"\n//     },\n//     {\n//       \"accountId\": \"voter1.near\",\n//       \"candidateId\": \"zomland.near\",\n//       \"txn_url\": \"wewfdsferferf\"\n//     },\n//     {\n//       \"accountId\": \"voter1\",\n//       \"candidateId\": \"candidate1.near\",\n//       \"txn_url\": \"wfefegre\"\n//     }\n//   ],\n//   \"votes\": {\n//     \"available\": 10,\n//     \"total\": 10\n//   }\n// }\n\nconst {\n  id,\n  typ,\n  title,\n  ref_link,\n  start,\n  end,\n  quorum,\n  voters_num,\n  seats,\n  candidates,\n  result,\n  voters,\n  votes,\n  contractName,\n  ndcOrganization,\n} = props;\n\nconst _bookmarked = Social.index(ndcOrganization, typ);\n\nState.init({\n  availableVotes: votes.available,\n  selected: null,\n  bookmarked: _bookmarked ? _bookmarked[_bookmarked.length - 1].value : [],\n  selectedCandidates: [],\n});\n\nconst H4 = styled.h4`\n  margin-bottom: 0;\n`;\n\nconst H3 = styled.h3`\n  margin-bottom: 0;\n`;\n\nconst Container = styled.div`\n  font-family: Avenir;\n  font-size: 16px;\n`;\n\nconst StyledLink = styled.a`\n  color: inherit;\n  width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst NominationLink = styled.a`\n  font-size: 12px;\n  line-height: 24px;\n  background: ${(props) =>\n    props.selected\n      ? \"linear-gradient(90deg, #ffffff 0%, #ffffff 100%)\"\n      : \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%)\"};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  border: ${(props) =>\n    props.selected ? \"1px solid #ffffff\" : \"1px solid #9333EA\"};\n  padding: 0 10px;\n  border-radius: 5px;\n`;\n\nconst CandidateItem = styled.div`\n  padding: 0 25px;\n  height: 48px;\n  border-radius: 12px;\n  margin-bottom: 8px;\n  background: ${(props) =>\n    props.selected\n      ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%)\"\n      : \"#F8F8F9\"};\n  color: ${(props) => (props.selected ? \"white\" : \"inherit\")};\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst VoterItem = styled.div`\nfont-size: 14px;\n  padding: 0 25px;\n  height: 48px;\n  border-bottom: 1px solid #D0D6D9;\n\n  &:last-child {\n    border: 0;\n  }\n`;\n\nconst VotersContainer = styled.div`\n  padding: 5px 0;\n`;\n\nconst W50 = styled.div`\n  width: 50px;\n`;\n\nconst PrimaryButton = styled.button`\n  padding: 8px 20px;\n  background: #FFD50D;\n  border-radius: 10px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 24px;\n  border: 0;\n`;\n\nconst CastVotesSection = styled.div`\n  background: #FDFEFF;\n  box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  padding: 16px;\n\n  h3, h4 {\n    margin: 0 3px;\n  }\n\n  h3 {\n    font-weight: 900;\n  }\n\n  .text-secondary {\n    margin-left: 10px;\n  }\n`;\n\nconst Link = ({ title, src }) => (\n  <>\n    <StyledLink href={src}>{title}</StyledLink>\n    <span>\n      <i class=\"bi bi-arrow-up-right\" />\n    </span>\n  </>\n);\n\nconst handleW50 = (accountId) => {\n  const selectedItems = state.selectedCandidates.includes(accountId)\n    ? state.selectedCandidates.filter((el) => el !== accountId)\n    : [...state.selectedCandidates, accountId];\n\n  State.update({\n    selectedCandidates: selectedItems,\n    availableVotes: votes.total - selectedItems.length,\n  });\n};\n\nconst handleBookmarCandidate = (accountId, e) => {\n  let selectedItems = state.bookmarked.includes(accountId)\n    ? state.bookmarked.filter((el) => el !== accountId)\n    : [...state.bookmarked, accountId];\n\n  selectedItems = [...new Set(selectedItems)];\n\n  if (selectedItems.length === 0) State.update({ selectedCandidates: result });\n  State.update({ bookmarked: selectedItems });\n};\n\nconst handleVote = () => {\n  Near.call([\n    {\n      contractName: contractName,\n      methodName: \"vote\",\n      args: { prop_id: id, vote: state.selectedCandidates },\n      gas: \"70000000000000\",\n      deposit: 0.002,\n    },\n  ]);\n};\n\nconst VotersList = ({ voters }) => (\n  <VotersContainer>\n    {voters.map((voter) => (\n      <VoterItem className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"d-flex\">\n          <W50 />\n          <Widget\n            src=\"mob.near/widget/ProfileImage\"\n            props={{\n              accountId: voter.accountId,\n              imageClassName: \"rounded-circle w-100 h-100\",\n              style: { width: \"24px\", height: \"24px\", marginRight: 4 },\n            }}\n          />\n          <Link\n            src={`https://wallet.near.org/profile/${voter.accountId}`}\n            title={voter.accountId}\n          />\n        </div>\n        <div className=\"d-flex align-items-center\">\n          <Link src={voter.txn_url} title={voter.txn_url} />\n        </div>\n      </VoterItem>\n    ))}\n  </VotersContainer>\n);\n\nconst CandidateList = ({ accountId, index }) => {\n  return (\n    <div>\n      <CandidateItem\n        className=\"d-flex align-items-center justify-content-between\"\n        onClick={(e) => {\n          if (e.target.id === \"input\" || e.target.id === \"bookmark\") return;\n\n          State.update({ selected: state.selected === index ? null : index });\n        }}\n        selected={state.selected === index}\n      >\n        <div className=\"d-flex\">\n          <W50>\n            <i\n              id=\"bookmark\"\n              className={`bi ${\n                state.selected === index ? \"bi-bookmark-fill\" : \"bi-bookmark\"\n              }`}\n            />\n          </W50>\n          <Widget\n            src=\"mob.near/widget/ProfileImage\"\n            props={{\n              accountId,\n              imageClassName: \"rounded-circle w-100 h-100\",\n              style: { width: \"24px\", height: \"24px\", marginRight: 4 },\n            }}\n          />\n          <Link\n            src={`https://wallet.near.org/profile/${accountId}`}\n            title={accountId}\n          />\n        </div>\n        <div className=\"d-flex\">\n          <NominationLink href={ref_link} selected={state.selected === index}>\n            Nomination\n            <span className=\"ml-2 text-secondary\">\n              <i class=\"bi bi-arrow-up-right\" />\n            </span>\n          </NominationLink>\n        </div>\n        <div>{result[index]}</div>\n\n        <input\n          id=\"input\"\n          onClick={() => handleW50(accountId)}\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          checked={state.selectedCandidates.includes(accountId)}\n        />\n      </CandidateItem>\n      {state.selected === index && (\n        <VotersList\n          voters={voters.filter((v) => v.candidateId === accountId)}\n        />\n      )}\n    </div>\n  );\n};\n\nreturn (\n  <Container>\n    <h1>{title}</h1>\n    {candidates.map((accountId, index) => (\n      <CandidateList accountId={accountId} index={index} />\n    ))}\n    <CastVotesSection className=\"d-flex align-items-center justify-content-between\">\n      <div className=\"d-flex align-items-end\">\n        <H3>{state.availableVotes}</H3>\n        <span>/</span>\n        <H4>{votes.total}</H4>\n        <span className=\"text-secondary\">votes left</span>\n      </div>\n      <PrimaryButton\n        disabled={!state.selectedCandidates.length}\n        onClick={handleVote}\n      >\n        Cast {state.selectedCandidates.length || \"\"} Votes\n      </PrimaryButton>\n    </CastVotesSection>\n  </Container>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/rubycop.near/widget/NDC-elections", "__row_index": 3}