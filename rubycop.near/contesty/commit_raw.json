{"tx_hash": "HHpTx9wmFvnY2caxgqqVu6dkGswFyBXR4kgUrpgWu69J", "action_id_social": "52kRgTtprfwJ4TtXByVRru3gWUUgRMa7MS4nCVcQ26sG-0-widget", "block_id": 82430220, "block_timestamp": "2023-01-07 20:25:31.529", "signer_id": "rubycop.near", "widget_name": "contesty", "source_code": "State.init({ nftPair: [], loading: false });\n\nconst getSample = (arr) => arr[Math.floor(Math.random() * arr.length)];\n\nconst fetchCollections = (accountId) =>\n  fetch(`https://api.kitwallet.app/account/${accountId}/likelyNFTsFromBlock`);\n\nconst profiles = Social.get([\"*/profile/name\"], \"final\") || {};\nconst stats = Social.get(\"rubycop.near/nft_stats/**\") || {};\nconsole.log(stats);\nconst getUserNFTContract = (accountId) => {\n  const nftResponse = fetchCollections(accountId);\n  if (!nftResponse.ok) return;\n\n  const collections = nftResponse.body.list;\n\n  return getSample(collections);\n};\n\nconst getPair = () => {\n  State.update({ loading: true });\n\n  const accIds = Object.keys(profiles);\n  const accIdContractIds = accIds.map((id) => [getUserNFTContract(id), id]);\n  const usersWithContracts = accIdContractIds.filter(\n    (item) => item[0] && item[1]\n  );\n\n  const resultSet = usersWithContracts\n    .map((item) => {\n      const userNFTs = allNfts(item[0], item[1]);\n      const nft = getSample(userNFTs);\n      const rating = nft.token_id ? parseInt(stats[item[0]].rating) + 1 : 0;\n\n      return {\n        contractId: item[0],\n        nft: nft,\n        rating: rating,\n      };\n    })\n    .filter((obj) => obj.nft?.token_id);\n\n  const result = [getSample(resultSet), getSample(resultSet)];\n  State.update({ nftPair: result, loading: false });\n\n  return result;\n};\n\nconst allNfts = (contractId, accountId) =>\n  Near.view(contractId, \"nft_tokens_for_owner\", {\n    account_id: accountId,\n    from_index: \"0\",\n    limit: 10,\n  });\n\nif (state.loading) return <div>Loading ... </div>;\n\nreturn (\n  <>\n    <div className=\"d-flex gap-1 flex-wrap\">\n      {state.nftPair.map((obj, i) => (\n        <div className=\"d-block\">\n          <Widget\n            src=\"mob.near/widget/NftImage\"\n            props={{\n              nft: {\n                tokenId: obj.nft.token_id,\n                contractId: obj.contractId,\n              },\n              style: {\n                width: \"10em\",\n                height: \"10em\",\n                objectFit: \"cover\",\n                minWidth: \"10em\",\n                minHeight: \"10em\",\n                maxWidth: \"10em\",\n                maxHeight: \"10em\",\n                overflowWrap: \"break-word\",\n              },\n              className: \"img-thumbnail\",\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n              alt: `NFT ${obj.contractId} ${obj.nft.token_id}`,\n            }}\n          />\n\n          {obj.nft.token_id && (\n            <div className=\"btn-block mt-1\">\n              <CommitButton\n                data={{\n                  nft_stats: {\n                    [obj.contractId]: {\n                      token_id: obj.nft.token_id,\n                      rating: obj.rating + 1,\n                    },\n                  },\n                }}\n              >\n                {`Like (${obj.rating || 0})`}\n              </CommitButton>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n    <div>\n      <div className=\"btn-block my-2\">\n        <button onClick={getPair}>Find Random NFT Pair</button>\n      </div>\n      <h3>Leaderboard</h3>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">rating</th>\n            <th scope=\"col\">token id</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(stats)\n            .sort((a, b) => parseInt(b[1].rating) - parseInt(a[1].rating))\n            .map(([contractId, { token_id, rating }], i) => (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>\n                  <b>{rating}</b>\n                </td>\n                <td>\n                  <a\n                    href={`#mob.near/widget/NftImage?tokenId=${token_id}&contractId=${contractId}`}\n                  >\n                    {token_id}\n                  </a>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <div className=\"mt-2\">\n        <small>\n          Follow <a href=\"https://twitter.com/ContestyNFT\">Contesty.app</a> -\n          contest based NFT app on NEAR\n        </small>\n      </div>\n    </div>\n  </>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rubycop.near/widget/contesty", "metadata.description": "Contesty -  is a first WEB3 NFT contest app. Participate in contests, vote and predict a winner to get rewards. Boost your NFT activity and discover new trends in WEB3 world.", "metadata.image.ipfs_cid": "bafkreidvkf2pzbtbong7r5kytgkvzzlgnfbgb3b5ce3endrhg5opeisw5y", "metadata.linktree.website": "contesty.app", "metadata.name": "Contesty", "metadata.tags.contest": "", "metadata.tags.nft": ""}