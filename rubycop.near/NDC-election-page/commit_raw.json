{"tx_hash": "G595xfjf1HEX11fUZatoXdGDUPi5gKPPEJEzr5PaDMA5", "action_id_social": "E4b5yMdhweCELMseef4yTUfSkWkAqGRNiCXaezpFgH33-0-widget", "block_id": 94136742, "block_timestamp": "2023-06-13T21:07:50.358Z", "signer_id": "rubycop.near", "widget_name": "NDC-election-page", "source_code": "// TODO: Should be grabbed from contract side\nconst props = {\n  widgetProvider: \"rubycop.near\",\n  contractName: \"elections-v2.gwg.testnet\",\n  ndcOrganization: \"test\",\n  groups: [\n    {\n      title: \"Council of Advisors\",\n      src: \"https://ipfs.near.social/ipfs/bafkreie4rfa63zedwnpbwm5lglqrwqhahcnf6slllqmq7sh46ngf5y4vsq\",\n      leftVotes: 0,\n      maxVotes: 10,\n      submitted: true,\n      id: 2,\n      typ: \"CouncileOfAdvisors\",\n      ref_link: \"example.com\",\n      quorum: 100,\n      voters_num: 150,\n      seats: 10,\n      result: [],\n      voters: [],\n      votes: {\n        available: 0,\n        total: 10,\n      },\n    },\n    {\n      title: \"House of Merit\",\n      src: \"https://ipfs.near.social/ipfs/bafkreie4rfa63zedwnpbwm5lglqrwqhahcnf6slllqmq7sh46ngf5y4vsq\",\n      leftVotes: 5,\n      maxVotes: 10,\n      submitted: false,\n      id: 3,\n      typ: \"HouseOfMerit\",\n      title: \"House Of Merit\",\n      ref_link: \"example.com\",\n      start: 1685820065441,\n      end: 1686820065441,\n      quorum: 100,\n      voters_num: 150,\n      seats: 10,\n      result: [\n        [\"zomland.near\", 150],\n        [\"asfsdfsfdfddfsdfdfsdfdf.near\", 150],\n        [\"blabla.near\", 10],\n        [\"rubycop.near\", 50],\n        [\"candidate1.near\", 0],\n      ],\n      voters: [\n        {\n          accountId: \"rubycop.near\",\n          candidateId: \"zomland.near\",\n          txn_url: \"3ZunLtfdnkAC1oTgUxy5KXJb7qQWULmcFpVvkaq2pd6b\",\n        },\n        {\n          accountId: \"voter1.near\",\n          candidateId: \"zomland.near\",\n          txn_url: \"3ZunLtfdnkAC1oTgUxy5KXJb7qQWULmcFpVvkaq2pd6b\",\n        },\n        {\n          accountId: \"voter1\",\n          candidateId: \"candidate1.near\",\n          txn_url: \"3ZunLtfdnkAC1oTgUxy5KXJb7qQWULmcFpVvkaq2pd6b\",\n        },\n      ],\n      votes: {\n        available: 3,\n        total: 3,\n      },\n    },\n    {\n      title: \"Transparency Commission\",\n      src: \"https://ipfs.near.social/ipfs/bafkreie4rfa63zedwnpbwm5lglqrwqhahcnf6slllqmq7sh46ngf5y4vsq\",\n      leftVotes: 10,\n      maxVotes: 10,\n      submitted: true,\n      id: 4,\n      typ: \"TransparancyCommision\",\n      ref_link: \"example.com\",\n      start: 1685820065441,\n      end: 1686820065441,\n      quorum: 100,\n      voters_num: 150,\n      seats: 10,\n      result: [],\n      voters: [],\n      votes: {\n        available: 0,\n        total: 1,\n      },\n    },\n  ],\n};\n\n// TODO: Should be grabbed from indexer\nconst humanVoted = 800;\nconst totalHumal = 1000;\nconst myVotes = [\n  { candidateId: \"zomland.near\", time: 1686820065441, typ: \"House Of Merit\" },\n  {\n    candidateId: \"rubycop.near\",\n    time: 1686820065441,\n    typ: \"Councile Of Advisors\",\n  },\n  {\n    candidateId: \"blabla.near\",\n    time: 1686820065441,\n    typ: \"Transparancy Commision\",\n  },\n  {\n    candidateId: \"zomland.near\",\n    time: 1686820065441,\n    typ: \"Transparancy Commision\",\n  },\n];\n\nconst { widgetProvider, groups } = props;\n\nState.init({\n  selectedGroup: groups[0].id,\n});\n\nconst handleSelect = (item) => {\n  State.update({ selectedGroup: item.id });\n};\n\nconst Container = styled.div`\n  padding: 30px 0;\n`;\n\nconst Left = styled.div`\n  padding: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst Center = styled.div`\n`;\n\nconst Right = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst H5 = styled.h5`\n  margin-bottom: 20px;\n`;\n\nreturn (\n  <div>\n    {props.groups.map((group) => (\n      <>\n        {group.id === state.selectedGroup && (\n          <Widget\n            key={i}\n            src={`${widgetProvider}/widget/NDC-election-header`}\n            props={group}\n          />\n        )}\n      </>\n    ))}\n    <Container className=\"d-flex row\">\n      <Left className=\"col-lg\">\n        <H5>To Vote</H5>\n        <Widget\n          key={i}\n          src={`${widgetProvider}/widget/NDC-election-groups`}\n          props={{\n            selectedGroup: state.selectedGroup,\n            groups: groups,\n            handleSelect: (item) => handleSelect(item),\n          }}\n        />\n      </Left>\n      <Center className=\"col-lg-6 p-2 p-md-3\">\n        {props.groups.map((group) => (\n          <>\n            {group.id === state.selectedGroup && (\n              <Widget\n                key={i}\n                src={`${widgetProvider}/widget/NDC-elections`}\n                props={{\n                  contractName: props.contractName,\n                  ndcOrganization: props.ndcOrganization,\n                  ...group,\n                }}\n              />\n            )}\n          </>\n        ))}\n      </Center>\n\n      <div className=\"col-lg\">\n        <Right className=\"col\">\n          <H5>General</H5>\n          <div className=\"d-flex justify-content-center\">\n            <Widget\n              src={`${widgetProvider}/widget/NDC-voting-stats`}\n              props={{\n                voted: humanVoted,\n                total: totalHumal,\n              }}\n            />\n          </div>\n        </Right>\n        <Right className=\"col\">\n          <H5>My voting activity</H5>\n          <div className=\"d-flex justify-content-center\">\n            <Widget\n              src={`${widgetProvider}/widget/NDC-voting-activity`}\n              props={{\n                myVotes: myVotes,\n              }}\n            />\n          </div>\n        </Right>\n      </div>\n    </Container>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rubycop.near/widget/NDC-election-page", "__row_index": 10}