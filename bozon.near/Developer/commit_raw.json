{"tx_hash": "FNzNUdMJJxTawmS54cDG2fA87tbNKbx36nuJkwFxd3i1", "action_id_social": "HsVqE7xJHYiCsURcWWBx9p7322Ac6gfWPKmJmfA8P4rH-0-widget", "block_id": 85166132, "block_timestamp": "2023-02-13 20:52:59.773", "signer_id": "bozon.near", "widget_name": "Developer", "source_code": "const accountId = props.accountId || context.accountId;\n\nif (!accountId) return \"login or send accountId in props\";\n\nconst allWidgetsHistoryChangesBlocks = Social.keys(\n  `${accountId}/widget/*`,\n  \"final\",\n  {\n    return_type: \"History\",\n  }\n);\n\nif (allWidgetsHistoryChangesBlocks === null) return \"Loading...\";\n\nconst notDeleted = Social.keys(`${accountId}/widget/*`, \"final\", {\n  values_only: true,\n});\n\nif (notDeleted === null) return \"Loading...\";\n\nconst countAllWidgets = Object.keys(\n  allWidgetsHistoryChangesBlocks[accountId][\"widget\"]\n).length;\nconst countNotDeleted = Object.keys(notDeleted[accountId][\"widget\"]).length;\nconst countDeletedWidgets = countAllWidgets - countNotDeleted;\nconst countCommits = Object.values(\n  allWidgetsHistoryChangesBlocks[accountId][\"widget\"]\n).reduce((cur, prev) => cur + prev.length, 0);\n\nconst allWidgetsHistoryChangesBlocksComputedAdjusted = Object.keys(\n  allWidgetsHistoryChangesBlocks[accountId][\"widget\"]\n)\n  .map((key) => {\n    return {\n      name: key,\n      blocks: allWidgetsHistoryChangesBlocks[accountId][\"widget\"][key],\n    };\n  })\n  .sort(\n    (a, b) => b.blocks[b.blocks.length - 1] - a.blocks[a.blocks.length - 1]\n  );\n\nreturn (\n  <div>\n    <div div class=\"card mb-3 p-2\">\n      <Widget\n        src=\"mob.near/widget/Profile.ShortInlineBlock\"\n        props={{ accountId }}\n      />\n    </div>\n    <div div class=\"card mb-3 p-2\">\n      <div>widgets: {countNotDeleted}</div>\n      <div>deleted widgets: {countDeletedWidgets}</div>\n      <div>commits: {countCommits}</div>\n    </div>\n    <div div class=\"card mb-3\">\n      <h3 class=\"card-header\">Widgets</h3>\n\n      <div class=\"list-group\">\n        {allWidgetsHistoryChangesBlocksComputedAdjusted.map((element) => (\n          <div>\n            <button\n              onClick={() => {\n                State.update({ selectedBlockHeight: blockHeight });\n              }}\n              className={`d-flex flex-row list-group-item list-group-item-action ${\n                notDeleted[accountId][\"widget\"][element.name]\n                  ? \"\"\n                  : \"list-group-item-warning\"\n              }`}\n            >\n              <div>{element.name}</div>\n\n              <OverlayTrigger\n                placement=\"auto\"\n                overlay={<Tooltip>count commits</Tooltip>}\n              >\n                <span class=\"badge text-bg-success p-2 me-1 align-self-center\">\n                  {element.blocks.length}\n                </span>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement=\"auto\"\n                overlay={<Tooltip>last update</Tooltip>}\n              >\n                <span class=\"badge text-bg-success p-2 me-1 align-self-center\">\n                  {\n                    <Widget\n                      src={`mob.near/widget/TimeAgo`}\n                      props={{\n                        blockHeight: element.blocks[element.blocks.length - 1],\n                      }}\n                    />\n                  }\n                </span>\n              </OverlayTrigger>\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bozon.near/widget/Developer"}