{"tx_hash": "8k46mxkXcvzRw7VKLFHHBvAkvnZfwx2zasz9B8AHKBnk", "action_id_social": "5cZip3FnP4utfpGziRAGgDmcj36nREagH8V2o3Rx6B5D-0-widget", "block_id": 85526318, "block_timestamp": "2023-02-18 20:05:04.619", "signer_id": "bozon.near", "widget_name": "Sudoku", "source_code": "const CONTRACT = \"sudoku.bozon.near\";\r\nconst STORAGE = \"4030000000000000000000\";\r\n\r\nif (context.accountId === null) return \"login\";\r\n\r\nconst player = Near.view(CONTRACT, \"get_player\", {\r\n  account_id: context.accountId,\r\n});\r\nconst savedBoard = Storage.privateGet(\"board\");\r\n\r\nfunction isEqualBoard(savedBoard, boardInContract) {\r\n  for (let x = 0; x < 9; x++) {\r\n    for (let y = 0; y < 9; y++) {\r\n      if (\r\n        boardInContract[x][y] !== 0 &&\r\n        savedBoard[x][y] != boardInContract[x][y]\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction startGame() {\r\n  Near.call(\r\n    CONTRACT,\r\n    \"start_game\",\r\n    {},\r\n    \"30000000000000\",\r\n    player === null ? STORAGE : undefined\r\n  );\r\n\r\n  // State.update({\r\n  //   player: result,\r\n  // });\r\n}\r\n\r\nasync function finishGame() {\r\n  const isSloved = Near.view(CONTRACT, \"check_sloved\", {\r\n    array: state.current_board,\r\n  });\r\n\r\n  if (!isSloved) {\r\n    return State.update({ message: \"sudoku not sloved\" });\r\n  }\r\n\r\n  Near.call(CONTRACT, \"finish_game\", {}, \"30000000000000\");\r\n}\r\n\r\nfunction setValue(x, y, value) {\r\n  state.current_board[x][y] = value;\r\n  Storage.privateSet(\"board\", state.current_board);\r\n  State.update();\r\n}\r\n\r\nif (player !== null) {\r\n  State.init({\r\n    player,\r\n    current_board: isEqualBoard(savedBoard, player.sudoku)\r\n      ? savedBoard\r\n      : player.sudoku,\r\n\r\n    message: null,\r\n  });\r\n}\r\n\r\nconst Header = styled.div`\r\n  color: rgb(143 217 165);\r\n  width: 100%;\r\n\r\n  margin-bottom: 20px;\r\n\r\n  border-bottom: 2px solid rgb(143 217 165);\r\n`;\r\n\r\nconst Main = styled.div`\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Board = styled.div`\r\n  display: grid;\r\n  gap: 8px;\r\n  grid-template-columns: repeat(9, auto);\r\n`;\r\n\r\n// const BoardOuter = styled.div`\r\n//   display: grid;\r\n//   gap: 15px;\r\n//   grid-template-columns: repeat(3, auto);\r\n// `;\r\n\r\n// const BoardInner = styled.div`\r\n//   display: grid;\r\n//   //gap: var(--gap);\r\n//   gap: 5px;\r\n//   grid-template-columns: repeat(3, auto);\r\n// `;\r\n\r\nconst Cell = styled.input`\r\n  height: 36px;\r\n  width: 36px;\r\n  border-radius: 10px;\r\n\r\n  background-color: rgb(202, 240, 248);\r\n  color: black;\r\n    \r\n  display: grid;\r\n  place-items: center;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  text-align: center;\r\n\r\n  &:disabled {\r\n    background-color: rgb(143 217 165);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  &:hover {\r\n    border: 2px solid rgb(143 217 165);\r\n  }\r\n\r\n  &:focus {\r\n    border: 2px solid rgb(143 217 165);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background-color: rgb(143 217 165);\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <Main>\r\n    <Header>\r\n      <h1>Sudoku</h1>\r\n    </Header>\r\n    <div>{state.message}</div>\r\n    <Content>\r\n      {player === null && (\r\n        <div>\r\n          <div>First transaction may cost {parseInt(STORAGE) / 1e24}</div>\r\n          <Button onClick={startGame}>Play</Button>\r\n        </div>\r\n      )}\r\n      {player && (\r\n        <div>\r\n          <Board>\r\n            {state.current_board.map((row, x) => {\r\n              return (\r\n                //<BoardInner>\r\n                row.map((el, y) => {\r\n                  return (\r\n                    <Cell\r\n                      style={{\r\n                        marginRight: (y + 1) % 3 == 0 && y < 8 ? \"10px\" : \"0px\",\r\n                        marginBottom:\r\n                          (x + 1) % 3 == 0 && y < 8 ? \"10px\" : \"0px\",\r\n                      }}\r\n                      disabled={state.player.sudoku[x][y] != 0}\r\n                      onKeyDown={(event) => {\r\n                        if (state.player.sudoku[x][y] != 0) return;\r\n\r\n                        if (event.key.match(/^$|^[1-9]$/)) {\r\n                          return setValue(x, y, parseInt(event.key));\r\n                        }\r\n\r\n                        if (event.key == \"Backspace\") {\r\n                          return setValue(x, y, 0);\r\n                        }\r\n                      }}\r\n                      value={\r\n                        state.current_board[x][y] == 0\r\n                          ? \"\"\r\n                          : state.current_board[x][y]\r\n                      }\r\n                    />\r\n                  );\r\n                })\r\n                //</BoardInner>\r\n              );\r\n            })}\r\n          </Board>\r\n\r\n          <div class=\"mt-3\">\r\n            <Button\r\n              disabled={state.current_board.find((row) => {\r\n                return row.find((el) => el === 0) === 0;\r\n              })}\r\n              onClick={finishGame}\r\n            >\r\n              Send answer\r\n            </Button>\r\n            <Button onClick={startGame}>Generate game</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Content>\r\n  </Main>\r\n);\r\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bozon.near/widget/Sudoku", "metadata.name": "Sudoku", "metadata.tags.game": "", "metadata.tags.hack": "", "metadata.tags.hackathon": "", "metadata.image.ipfs_cid": NaN, "metadata.tags.app": NaN}