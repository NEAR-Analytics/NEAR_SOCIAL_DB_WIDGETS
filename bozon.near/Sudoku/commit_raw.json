{"tx_hash": "ANy5TzpFDFhA8LAKwFMyjwfQiQUa6x7UjJngh9iT5a7m", "action_id_social": "3e3FMFTeMLkj46x3YxttP4t3GRAUpRRAf7rFCKQpDUQe-0-widget", "block_id": 85533424, "block_timestamp": "2023-02-18 22:21:09.606", "signer_id": "bozon.near", "widget_name": "Sudoku", "source_code": "const CONTRACT = \"sudoku.bozon.near\";\r\nconst STORAGE = \"4030000000000000000000\";\r\n\r\nif (context.accountId === null) return \"login\";\r\n\r\nconst player = Near.view(CONTRACT, \"get_player\", {\r\n  account_id: context.accountId,\r\n});\r\nconst leaderboard = Near.view(CONTRACT, \"get_leaderboard\", {});\r\n\r\nconst savedBoard = Storage.privateGet(\"board\");\r\n\r\nfunction isEqualBoard(savedBoard, boardInContract) {\r\n  for (let x = 0; x < 9; x++) {\r\n    for (let y = 0; y < 9; y++) {\r\n      if (\r\n        boardInContract[x][y] !== 0 &&\r\n        savedBoard[x][y] != boardInContract[x][y]\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction startGame() {\r\n  Near.call(\r\n    CONTRACT,\r\n    \"start_game\",\r\n    {},\r\n    \"30000000000000\",\r\n    player === null ? STORAGE : undefined\r\n  );\r\n\r\n  // State.update({\r\n  //   player: result,\r\n  // });\r\n}\r\n\r\nasync function finishGame() {\r\n  const isSloved = Near.view(CONTRACT, \"check_sloved\", {\r\n    array: state.current_board,\r\n  });\r\n\r\n  if (!isSloved) {\r\n    return State.update({ message: \"sudoku not sloved\" });\r\n  }\r\n\r\n  Near.call(\r\n    CONTRACT,\r\n    \"finish_game\",\r\n    { array: state.current_board },\r\n    \"30000000000000\"\r\n  );\r\n}\r\n\r\nfunction setValue(x, y, value) {\r\n  state.current_board[x][y] = value;\r\n  Storage.privateSet(\"board\", state.current_board);\r\n  State.update();\r\n}\r\n\r\nif (player !== null) {\r\n  State.init({\r\n    player,\r\n    current_board: isEqualBoard(savedBoard, player.sudoku)\r\n      ? savedBoard\r\n      : player.sudoku,\r\n\r\n    message: null,\r\n    leaderboard: false,\r\n  });\r\n}\r\n\r\nconst Header = styled.div`\r\n  color: rgb(143 217 165);\r\n  width: 100%;\r\n\r\n  padding: 10px;\r\n\r\n  margin-bottom: 20px;\r\n\r\n  border-bottom: 2px solid rgb(143 217 165);\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Main = styled.div`\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background-color: rgb(143 217 165);\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <Main>\r\n    <Header>\r\n      <h1>Sudoku</h1>\r\n      <Button\r\n        onClick={() => {\r\n          State.update({ leaderboard: !state.leaderboard });\r\n        }}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-award-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"m8 0 1.669.864 1.858.282.842 1.68 1.337 1.32L13.4 6l.306 1.854-1.337 1.32-.842 1.68-1.858.282L8 12l-1.669-.864-1.858-.282-.842-1.68-1.337-1.32L2.6 6l-.306-1.854 1.337-1.32.842-1.68L6.331.864 8 0z\" />\r\n          <path d=\"M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1 4 11.794z\" />\r\n        </svg>\r\n        Leaderboard\r\n      </Button>\r\n    </Header>\r\n    <div>{state.message}</div>\r\n    <Content>\r\n      {state.leaderboard ? (\r\n        <Widget\r\n          src=\"bozon.near/widget/Sudoku.Leaderboard\"\r\n          props={{ leaderboard }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          {state.player === null && (\r\n            <div>\r\n              <div>First transaction may cost {parseInt(STORAGE) / 1e24}</div>\r\n              <Button onClick={startGame}>Play</Button>\r\n            </div>\r\n          )}\r\n\r\n          {state.player.sudoku == null && (\r\n            <div>\r\n              <div>Sudoku successfully sloved</div>\r\n              <div>\r\n                Last time:\r\n                <Widget\r\n                  src=\"bozon.near/widget/TimeAgo\"\r\n                  props={{\r\n                    diffSec:\r\n                      state.player.last_sloved_game.time_end -\r\n                      state.player.last_sloved_game.time_start,\r\n                  }}\r\n                />\r\n                Best time:\r\n                <Widget\r\n                  src=\"bozon.near/widget/TimeAgo\"\r\n                  props={{\r\n                    diffSec: state.player.best_time,\r\n                  }}\r\n                />\r\n              </div>\r\n              <Button onClick={startGame}>Play</Button>\r\n            </div>\r\n          )}\r\n\r\n          {state?.player?.sudoku && (\r\n            <div>\r\n              <Widget\r\n                src=\"bozon.near/widget/Sudoku.Board\"\r\n                props={{\r\n                  current_board: state.current_board,\r\n                  init_board: state.player.sudoku,\r\n                  update: setValue,\r\n                }}\r\n              />\r\n\r\n              <div class=\"mt-3\">\r\n                <Button\r\n                  disabled={state.current_board.find((row) => {\r\n                    return row.find((el) => el === 0) === 0;\r\n                  })}\r\n                  onClick={finishGame}\r\n                >\r\n                  Send answer\r\n                </Button>\r\n                <Button onClick={startGame}>Generate new game</Button>\r\n                <Widget\r\n                  src=\"bozon.near/widget/Sudoku.Timer\"\r\n                  props={{ startTime: state.player.start_time }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Content>\r\n  </Main>\r\n);\r\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bozon.near/widget/Sudoku", "metadata.name": NaN, "metadata.tags.game": NaN, "metadata.tags.hack": NaN, "metadata.tags.hackathon": NaN, "metadata.image.ipfs_cid": NaN, "metadata.tags.app": NaN}