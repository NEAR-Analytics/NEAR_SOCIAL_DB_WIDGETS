{"tx_hash": "8jJF9QXzM9KMVSeXymUum6nfVuwpoxaDK5vZY5HpvZns", "action_id_social": "AZvC6wAq1HLtJ4mzZW4KBGSVccwHf5aDbVrLq2LWYSkx-0-widget", "block_id": 82122015, "block_timestamp": "2023-01-03 18:08:11.416", "signer_id": "bozon.near", "widget_name": "PrivateMessage", "source_code": "const accountId = context.accountId;\r\n\r\nif (!accountId) {\r\n  return \"Please sign in with NEAR wallet\";\r\n}\r\n\r\nconst registeredPublicKey = Social.get(\r\n  `${accountId}/private_message/public_key`\r\n);\r\nconst savedSecretKeyBase64 = Storage.privateGet(\"secretKey\");\r\n\r\nif (savedSecretKeyBase64 === null || registeredPublicKey === null)\r\n  return \"Loading\";\r\n\r\nState.init({\r\n  selectedUser,\r\n\r\n  registerPage: false,\r\n  loginPage: !savedSecretKeyBase64 ? true : false,\r\n  userListPage: savedSecretKeyBase64 ? true : false,\r\n});\r\n\r\nfunction renderLoginPage() {\r\n  return (\r\n    <div>\r\n      <div class=\"d-flex flex-row align-items-center mb-3\">\r\n        <div class=\"col\"></div>\r\n        <h1 class=\"col\">Login</h1>\r\n        <div class=\"col\"></div>\r\n      </div>\r\n      {registeredPublicKey && (\r\n        <div>\r\n          <label class=\"mb-3\">You registered using this public key:</label>\r\n          <input\r\n            class=\"form-control mb-3\"\r\n            value={registeredPublicKey}\r\n            disabled\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        class=\"form-control mb-3\"\r\n        placeholder=\"Input secret key\"\r\n        key=\"inputSecret\"\r\n        onChange={(e) => State.update({ inputSecretKey: e.target.value })}\r\n      />\r\n      <label class=\"mb-3\">{state.errorInputSecretKey}</label>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            try {\r\n              const keyPairFromSaved = nacl.box.keyPair.fromSecretKey(\r\n                Buffer.from(state.inputSecretKey, \"base64\")\r\n              );\r\n\r\n              if (\r\n                Buffer.from(keyPairFromSaved.publicKey).toString(\"base64\") !=\r\n                registeredPublicKey\r\n              ) {\r\n                State.update({ errorInputSecretKey: \"\u26a0\ufe0f key does not fit\" });\r\n              } else {\r\n                const secretKey = Buffer.from(\r\n                  keyPairFromSaved.secretKey\r\n                ).toString(\"base64\");\r\n                Storage.privateSet(\"secretKey\", secretKey);\r\n                State.update({\r\n                  savedSecretKeyBase64: secretKey,\r\n                });\r\n              }\r\n            } catch {\r\n              State.update({ errorInputSecretKey: \"\u26a0\ufe0f invalid secret key\" });\r\n            }\r\n          }}\r\n        >\r\n          Sign in\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={() => State.update({ registerPage: true })}\r\n        >\r\n          Register\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nif (state.registerPage) {\r\n  return (\r\n    <div>\r\n      <div class=\"d-flex flex-row align-items-center mb-3\">\r\n        <div class=\"col\">\r\n          <button\r\n            class=\"btn btn-secondary\r\n            float-right\"\r\n            onClick={() => {\r\n              State.update({ registerPage: false });\r\n            }}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n        </div>\r\n        <h1 class=\"col\">Register</h1>\r\n        <div class=\"col\"></div>\r\n      </div>\r\n      <Widget\r\n        src=\"bozon.near/widget/PrivateMessage.Register\"\r\n        props={{\r\n          onRegisterComplete: () => {\r\n            State.update({ registerPage: false });\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nif (state.selectedUser) {\r\n  console.log({\r\n    receiverAccountId: state.selectedUser.accountId,\r\n    secretKeyBase64: savedSecretKeyBase64,\r\n    receiverPublicKeyBase64: state.selectedUser.publicKeyBase64,\r\n  });\r\n  return (\r\n    <div>\r\n      <div class=\"d-flex flex-row align-items-center mb-3\">\r\n        <div class=\"col\">\r\n          <button\r\n            class=\"btn btn-secondary\r\n            float-right\"\r\n            onClick={() => {\r\n              State.update({ selectedUser: null });\r\n            }}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n        </div>\r\n        <div class=\"col\">\r\n          <Widget\r\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\r\n            props={{\r\n              accountId: state.selectedUser.accountId,\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"col\"></div>\r\n      </div>\r\n      <Widget\r\n        src=\"bozon.near/widget/PrivateMessage.UserMessages\"\r\n        props={{\r\n          receiverAccountId: state.selectedUser.accountId,\r\n          secretKeyBase64: savedSecretKeyBase64,\r\n          receiverPublicKeyBase64: state.selectedUser.publicKeyBase64,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nif (!savedSecretKeyBase64) return renderLoginPage();\r\nelse if (savedSecretKeyBase64)\r\n  return (\r\n    <div>\r\n      <div class=\"d-flex flex-row align-items-center mb-3\">\r\n        <div class=\"col\"></div>\r\n        <h1 class=\"col\">Private Message</h1>\r\n        <div class=\"col d-flex justify-content-end\">\r\n          <button\r\n            class=\"btn btn-danger \r\n            float-right\"\r\n            onClick={() => {\r\n              Storage.privateSet(\"secretKey\", undefined);\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Widget\r\n        src=\"bozon.near/widget/PrivateMessage.UserList\"\r\n        props={{\r\n          secretKeyBase64: savedSecretKeyBase64,\r\n          onSelectedUser: (accountId, publicKeyBase64) => {\r\n            State.update({ selectedUser: { accountId, publicKeyBase64 } });\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bozon.near/widget/PrivateMessage", "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.encryption": NaN, "metadata.tags.message": NaN, "metadata.tags.pm": NaN, "metadata.tags.private-message": NaN, "metadata.tags.widget": NaN, "metadata.description": NaN, "metadata.tags.mailbox": NaN, "metadata.tags.private": NaN}