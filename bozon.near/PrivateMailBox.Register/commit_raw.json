{"tx_hash": "3EcnBbgBy5Yo9uucyzHqWR6QTYdzhLi5Btbva7teHSdM", "action_id_social": "5ZrHasAfdmDdfqe9YZ7RLVYpbiE6tUY8PfVniJzm6ixh-0-widget", "block_id": 82255308, "block_timestamp": "2023-01-05 12:43:47.859", "signer_id": "bozon.near", "widget_name": "PrivateMailBox.Register", "source_code": "//props:\r\n//onRegisterComplete(secretKeyBase64)\r\n\r\nconst accountId = context.accountId;\r\n\r\nif (!accountId) {\r\n  return \"Please sign in with NEAR wallet\";\r\n}\r\n\r\nif (!props.onRegisterComplete) {\r\n  return \"send onRegisterComplete in props\";\r\n}\r\n\r\nconst registeredPublicKeyBase64 = Social.get(\r\n  `${accountId}/private_message/public_key`\r\n);\r\n\r\nif (registeredPublicKeyBase64 === null) return \"Loading\";\r\n\r\nfunction randomKeyPairBase64() {\r\n  const keyPair = nacl.box.keyPair();\r\n  return {\r\n    secretKey: Buffer.from(keyPair.secretKey).toString(\"base64\"),\r\n    publicKey: Buffer.from(keyPair.publicKey).toString(\"base64\"),\r\n  };\r\n}\r\n\r\nconst keyPair = randomKeyPairBase64();\r\n\r\nState.init({\r\n  registeredPublicKeyBase64,\r\n  secretKeyBase64: keyPair.secretKey,\r\n  publicKeyBase64: keyPair.publicKey,\r\n});\r\n\r\nreturn (\r\n  <div>\r\n    {registeredPublicKeyBase64 && (\r\n      <div class=\"mb-3\">\r\n        You already registered. If your key is compromised, you can re-register.\r\n        You can read old messages using old secret key{\" \"}\r\n      </div>\r\n    )}\r\n    <div class=\"mb-3\">\r\n      <label for=\"inputSercetKey\" class=\"form-label\">\r\n        Secret key:\r\n      </label>\r\n      <div class=\"mb-3 input-group\">\r\n        <input\r\n          type=\"text\"\r\n          value={state.secretKeyBase64}\r\n          class=\"form-control\"\r\n          readonly=\"\"\r\n        />\r\n        <button\r\n          class=\"btn btn-outline-primary\"\r\n          disabled={state.registeredProsessing}\r\n          onClick={() => {\r\n            const keyPair = randomKeyPairBase64();\r\n\r\n            //re-render\r\n            State.update({\r\n              secretKeyBase64: keyPair.secretKey,\r\n              publicKeyBase64: keyPair.publicKey,\r\n            });\r\n          }}\r\n        >\r\n          Random\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"mb-3 form-check\">\r\n      <input\r\n        onClick={() => {\r\n          State.update({\r\n            checkboxSaveSecretKey: !state.checkboxSaveSecretKey,\r\n          });\r\n        }}\r\n        defaultChecked={state.checkboxSaveSecretKey}\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        id=\"flexCheckDefault\"\r\n      />\r\n\r\n      <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n        <b>I SAVE SECRET KEY</b>\r\n      </label>\r\n    </div>\r\n    <CommitButton\r\n      disabled={!state.checkboxSaveSecretKey}\r\n      onClick={() => {\r\n        State.update({ processedSecretKey: state.secretKeyBase64 });\r\n      }}\r\n      onCommit={() => {\r\n        State.update({\r\n          registeredProsessing: false,\r\n        });\r\n        props.onRegisterComplete(state.processedSecretKey);\r\n      }}\r\n      data={{ private_message: { public_key: state.publicKeyBase64 } }}\r\n    >\r\n      Register\r\n    </CommitButton>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bozon.near/widget/PrivateMailBox.Register"}