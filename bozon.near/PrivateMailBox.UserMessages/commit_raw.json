{"tx_hash": "AFRZz5bXMCRA9Wh1onGzfpnuPDS2fVdZ4j4MQtxZfVbR", "action_id_social": "6JA9wM53vnsWANyR6uPnnGtV4Xng5QMvxw9wuewiXkN7-0-widget", "block_id": 82283282, "block_timestamp": "2023-01-05 21:55:47.275", "signer_id": "bozon.near", "widget_name": "PrivateMailBox.UserMessages", "source_code": "//props:\r\n//secretKeyBase64 : string base64\r\n//receiverAccountId : string base64\r\n//receiverPublicKeyBase64 : string base64\r\n\r\nif (\r\n  !props.secretKeyBase64 ||\r\n  !props.receiverAccountId ||\r\n  !props.receiverPublicKeyBase64\r\n) {\r\n  return \"Send secretKeyBase64, receiverAccountId, receiverPublicKeyBase64  in props\";\r\n}\r\n\r\nconst accountId = context.accountId;\r\n\r\nif (!accountId) {\r\n  return \"Please sign in with NEAR wallet\";\r\n}\r\n\r\nfunction uniteAccountId(accountId0, accountId1) {\r\n  accountId0 = accountId0.toLowerCase();\r\n  accountId1 = accountId1.toLowerCase();\r\n  return accountId0 > accountId0\r\n    ? accountId0 + accountId1\r\n    : accountId1 + accountId0;\r\n}\r\n\r\nState.init({ message: \"\" });\r\n\r\nconst incomingMessages = Social.index(\r\n  \"receive_private_message\",\r\n  accountId.toLowerCase(),\r\n  {\r\n    subscribe: true,\r\n    accountId: props.receiverAccountId.toLowerCase(),\r\n  }\r\n);\r\n\r\nconst outgoingMessages = Social.index(\r\n  \"send_private_message\",\r\n  accountId.toLowerCase(),\r\n  {\r\n    subscribe: true,\r\n    accountId: accountId.toLowerCase(),\r\n  }\r\n);\r\n\r\nif (incomingMessages === null || outgoingMessages === null) return \"Loading...\";\r\n\r\nconsole.log(outgoingMessages);\r\n\r\nconst messages = outgoingMessages\r\n  .concat(incomingMessages)\r\n  .sort((a, b) => b.blockHeight - a.blockHeight);\r\n\r\nreturn (\r\n  <div>\r\n    <div class=\"input-group mb-3\">\r\n      <textarea\r\n        class=\"form-control\"\r\n        placeholder=\"Input message\"\r\n        onChange={(e) => {\r\n          State.update({\r\n            message: e.target.value,\r\n          });\r\n        }}\r\n      ></textarea>\r\n      <CommitButton\r\n        force\r\n        data={() => {\r\n          const nonce = nacl.randomBytes(nacl.box.nonceLength);\r\n\r\n          const encryptedMessage = nacl.box(\r\n            new Uint8Array(Buffer.from(state.message)),\r\n            nonce,\r\n            new Uint8Array(\r\n              Buffer.from(props.receiverPublicKeyBase64, \"base64\")\r\n            ),\r\n            nacl.box.keyPair.fromSecretKey(\r\n              Buffer.from(props.secretKeyBase64, \"base64\")\r\n            ).secretKey\r\n          );\r\n\r\n          const fullMessage = new Uint8Array(\r\n            nonce.length + encryptedMessage.length\r\n          );\r\n          fullMessage.set(nonce);\r\n          fullMessage.set(encryptedMessage, nonce.length);\r\n\r\n          const senderPublicKeyBase64 = Buffer.from(\r\n            nacl.box.keyPair.fromSecretKey(\r\n              Buffer.from(props.secretKeyBase64, \"base64\")\r\n            ).publicKey\r\n          ).toString(\"base64\");\r\n\r\n          return {\r\n            private_message: {\r\n              last_message: {\r\n                message_text_base64:\r\n                  Buffer.from(fullMessage).toString(\"base64\"),\r\n                receiver_public_key_base64: props.receiverPublicKeyBase64,\r\n                sender_public_key_base64: senderPublicKeyBase64,\r\n                receiver_account_id: props.receiverAccountId,\r\n              },\r\n            },\r\n            index: {\r\n              send_private_message: JSON.stringify([\r\n                {\r\n                  key: accountId.toLowerCase(),\r\n                  value: {\r\n                    receiver_account_id: props.receiverAccountId.toLowerCase(),\r\n                    version: \"0\",\r\n                  },\r\n                },\r\n              ]),\r\n              receive_private_message: JSON.stringify([\r\n                {\r\n                  key: props.receiverAccountId.toLowerCase(),\r\n                  value: {\r\n                    version: \"0\",\r\n                  },\r\n                },\r\n              ]),\r\n            },\r\n          };\r\n        }}\r\n      >\r\n        Send\r\n      </CommitButton>\r\n    </div>\r\n\r\n    {messages.map((messageObject) => (\r\n      <Widget\r\n        src=\"bozon.near/widget/PrivateMailBox.Message\"\r\n        props={{\r\n          secretKeyBase64: props.secretKeyBase64,\r\n          blockHeight: messageObject.blockHeight,\r\n          senderAccountId: messageObject.accountId,\r\n        }}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bozon.near/widget/PrivateMailBox.UserMessages"}