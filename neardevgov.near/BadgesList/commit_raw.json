{"tx_hash": "CGxzjr11NkEcst4iEdsY6Lh8deR7pc95rsmj1XPoxVPV", "action_id_social": "HkshSiVkNJzNcX1q1g5jPaR59hi7monQxXZz5bDc24De-0-widget", "block_id": 83770048, "block_timestamp": "2023-01-25 15:21:01.929", "signer_id": "neardevgov.near", "widget_name": "BadgesList", "source_code": "const accountId = props.accountId || context.accountId;\nconst mode = props.mode || \"normal\";\n\nlet style;\nif (mode === \"normal\") {\n  style = { width: \"3em\", height: \"3em\" };\n} else if (mode === \"compact\") {\n  style = { width: \"1.5em\", height: \"1.5em\" };\n}\nif (props.style) {\n  style = props.style;\n}\n\nconst nearDevGovBadgesContractId = \"neardevgov.near\";\n\nconst ownedBadges = Near.view(\n  nearDevGovBadgesContractId,\n  \"nft_tokens_for_owner\",\n  {\n    account_id: accountId,\n  }\n);\n\nif (!ownedBadges) {\n  return <>{mode === \"compact\" ? \"...\" : \"Loading...\"}</>;\n}\n\nconst renderedOwnedBadgesList = ownedBadges.map(\n  ({ token_id: tokenId, metadata }) => (\n    <a\n      href={`#/neardevgov.near/widget/BadgeDetails?tokenId=${tokenId}`}\n      title={`NEAR DevGov Badge - ${metadata.title}`}\n    >\n      <Widget\n        src=\"mob.near/widget/NftImage\"\n        props={{\n          style,\n          nft: {\n            tokenMetadata: metadata,\n            contractId: nearDevGovBadgesContractId,\n          },\n          alt: `NEAR DevGov Badge - ${metadata.title}`,\n        }}\n      />\n      {mode === \"compact\" ? null : metadata.title}\n    </a>\n  )\n);\n\nif (mode === \"compact\") {\n  return <>{renderedOwnedBadgesList}</>;\n} else {\n  return (\n    <ul>\n      {renderedOwnedBadgesList.map((renderedBadge) => (\n        <li style={{ listStyleType: \"none\" }}>{renderedBadge}</li>\n      ))}\n    </ul>\n  );\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/neardevgov.near/widget/BadgesList"}