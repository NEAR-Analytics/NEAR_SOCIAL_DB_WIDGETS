{"tx_hash": "C6rhDMYsjBejFhNvAbYtbWzhxCcyu7BNanuyoWUSoPrq", "action_id_social": "8uANWCCKaK4ncFaB8a98iSYkW5LtRnnhJUk9oBrrspoR-0-widget", "block_id": 84443529, "block_timestamp": "2023-02-03 20:47:01.629", "signer_id": "testwiki.near", "widget_name": "WikiOnSocialDB_Authors", "source_code": "const authors = Array.from(props.resultArticles, ({ author }) => author);\nconst uniqAuthors = Array.from(new Set(authors));\n\nconst tweets = [\n  { id: \"000\", likes: 5, tags: [\"js\", \"nodejs\"] },\n  { id: \"001\", likes: 2, tags: [\"html\", \"css\"] },\n  { id: \"002\", likes: 17, tags: [\"html\", \"js\", \"nodejs\"] },\n  { id: \"003\", likes: 8, tags: [\"css\", \"react\"] },\n  { id: \"004\", likes: 0, tags: [\"js\", \"nodejs\", \"react\"] },\n];\n// const getTags = (arr) =>\n//   arr.reduce((acc, x) => (x.tags ? acc.concat(x.tags) : acc), []);\n// const tags = getTags(tweets);\n// console.log(tags);\n\nconst getTagStats = (acc, tag) => {\n  if (!acc.hasOwnProperty(tag)) {\n    acc[tag] = 0;\n  }\n  acc[tag] += 1;\n  return acc;\n};\nconst countTags = (arr) => arr.reduce(getTagStats, {});\n// const tagCount = countTags(tags);\n\nconst authorsCount = countTags(authors);\nconsole.log(authorsCount);\n\nreturn (\n  <>\n    <h6>Total authors: {uniqAuthors.length}</h6>\n    <ul>\n      {uniqAuthors.map((author) => (\n        <li>\n          <a\n            href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${author}`}\n          >\n            {author}\n          </a>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/testwiki.near/widget/WikiOnSocialDB_Authors"}