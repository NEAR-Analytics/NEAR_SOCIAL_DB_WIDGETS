{"tx_hash": "Dor1HRzXJBpofp9RyAb32FwU3kB4V6VCZ4nQ8tazWmEP", "action_id_social": "J32PoV5NHXw837t1mhh7Lsm7okThmpbRmpVdagAonfmP-0-widget", "block_id": 83909045, "block_timestamp": "2023-01-27 11:35:25.022", "signer_id": "testwiki.near", "widget_name": "WikiOnSocialDB_CreateArticle", "source_code": "const initialBody = `# Markdown heading level 1\n\nThis is a markdown paragraph. So, here are a few examples of markdown syntax and what it looks like.\n\n1. markdown\n2. ordered\n3. list`;\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nconst initialCreateArticleState = {\n  articleId: \"\",\n  articleBody: initialBody,\n  errorId: \"\",\n  errorBody: \"\",\n};\n\nState.init(initialCreateArticleState);\n\nconst getArticleData = () => {\n  const args = {\n    articleId: state.createArticle.articleId,\n    author: accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: Date.now(),\n    body: state.createArticle.articleBody,\n    version: 0,\n    navigation_id: null,\n  };\n  return args;\n};\n\n// === SAVE HANDLER ===\nconst saveHandler = (e) => {\n  State.update({\n    ...state,\n    createArticle: { ...state.createArticle, errorId: \"\", errorBody: \"\" },\n  });\n  if (state.createArticle.articleId && state.createArticle.articleBody) {\n    // TODO check it automaticle\n    const isArticleIdDublicated = false;\n\n    if (!isArticleIdDublicated) {\n      const newArticle = getArticleData();\n      Social.set({\n        wikiTest: { articles: { [newArticle.articleId]: { ...newArticle } } },\n      });\n    } else {\n      State.update({\n        ...state,\n        createArticle: { ...state.createArticle, errorId: errTextDublicatedId },\n      });\n    }\n  } else {\n    if (!state.createArticle.articleId) {\n      State.update({\n        ...state,\n        createArticle: { ...state.createArticle, errorId: errTextNoId },\n      });\n    }\n    if (!state.createArticle.articleBody) {\n      State.update({\n        ...state,\n        createArticle: { ...state.createArticle, errorBody: errTextNoBody },\n      });\n    }\n  }\n};\n\n// === CANCEL HANDLER ===\nconst cancelHandler = () => {\n  State.update({\n    ...state,\n    createArticle: {\n      articleId: \"\",\n      articleBody: \"\",\n      errorId: null,\n      errorBody: null,\n    },\n  });\n};\n\nreturn (\n  <div>\n    <h1 className=\"mb-3\"> Create Article</h1>\n    <div>\n      <div>\n        <button type=\"submit\" className=\"btn btn-success\" onClick={saveHandler}>\n          Save Article\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={cancelHandler}\n        >\n          Cancel / Clear\n        </button>\n      </div>\n      <div class=\"d-flex flex-column pt-3\">\n        <label for=\"inputArticleId\">\n          Input article id (case-sensitive, without spaces):\n        </label>\n        <label for=\"inputArticleId\" class=\"small text-danger\">\n          {state.createArticle.errorId}\n        </label>\n        <input\n          className=\"form-control mt-2\"\n          id=\"inputArticleId\"\n          value={state.createArticle.articleId}\n          onChange={(e) => {\n            State.update({\n              ...state,\n              createArticle: {\n                ...state.createArticle,\n                articleId: e.target.value.replace(/\\s+/g, \"\"),\n              },\n            });\n          }}\n        />\n      </div>\n      <div class=\"d-flex flex-column pt-3\">\n        <label for=\"textareaArticleBody\">\n          Input article body (in makrdown format):\n        </label>\n        <label for=\"textareaArticleBody\" class=\"small text-danger\">\n          {state.createArticle.errorBody}\n        </label>\n        <textarea\n          id=\"textareaArticleBody \"\n          type=\"text\"\n          value={state.createArticle.articleBody}\n          rows={10}\n          className=\"form-control mt-2\"\n          onChange={(e) => {\n            State.update({\n              ...state,\n              createArticle: {\n                ...state.createArticle,\n                articleBody: e.target.value,\n              },\n            });\n          }}\n        />\n      </div>\n      <div class=\"pt-3\">\n        Article preview:\n        <Markdown text={state.createArticle.articleBody} />\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/testwiki.near/widget/WikiOnSocialDB_CreateArticle"}