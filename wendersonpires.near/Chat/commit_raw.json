{"tx_hash": "69bBbjbVVxZzayhsixFaXqzodGMkhgGDQTT9yf3CeTkg", "action_id_social": "3AGXqXePMDR8mqD8pUZebZ38EUjsqk44KW42q816Hzvg-0-widget", "block_id": 80798107, "block_timestamp": "2022-12-16 18:59:14.883", "signer_id": "wendersonpires.near", "widget_name": "Chat", "source_code": "// INITIAL STATE\nState.init({\n  roomId: props.room_id || \"\",\n  roomIdToJoin: \"\",\n  input: \"\",\n  errorMessage: \"\",\n});\n\n// UTILS\n// Gen UUID - Source => https://stackoverflow.com/questions/105034/how-do-i-create-a-guid-uuid\nconst uuidv4 = () => {\n  var u = \"\",\n    i = 0;\n  while (i++ < 36) {\n    var c = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"[i - 1],\n      r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    u += c == \"-\" || c == \"4\" ? c : v.toString(16);\n  }\n  return u;\n};\n\n// APP\nconst accountId = props.accountId ?? context.accountId ?? \"*\";\n\nconst profileInfo = props.profile ?? Social.getr(`${accountId}/profile`);\n\n// Room Creator Screen\nconst joinRoom = (roomIdInfo) => {\n  console.log(roomIdInfo);\n\n  // This method gets only data inside stored on my user\n  // const roomInfo = Social.get(`${accountId}/index/${roomIdInfo}`);\n\n  const roomInfo = Social.index(roomIdInfo, \"data\");\n  const roomExists = roomInfo && roomInfo.length > 0;\n\n  if (!roomExists) {\n    // Update error state\n    State.update({ errorMessage: \"This room does not exist.\" });\n    return;\n  }\n\n  // Set room id and go ahead\n  State.update({ roomId: roomIdInfo });\n};\n\nconst createAndJoinNewRoom = () => {\n  // Set the new Room Id and go ahead\n  State.update({ roomId: uuidv4() });\n};\n\nif (!state.roomId) {\n  return (\n    <>\n      <div>\n        <h3>Hello, {profileInfo.name}!</h3>\n        <p>\n          You can join a room or create a new room and invite your friends. You\n          can also enter a room directly by passing the parameter{\" \"}\n          <strong>room_id</strong> in the url. <br />\n          <br />\n          Example:{\" \"}\n          <a\n            href=\"https://near.social/#/wendersonpires.near/widget/Chat?room_id=9df2f348-9924-415f-921c-db2b846e7177\"\n            target=\"_blank\"\n          >\n            https://near.social/#/wendersonpires.near/widget/Chat?room_id=9df2f348-9924-415f-921c-db2b846e7177\n          </a>\n        </p>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: 32,\n          }}\n        >\n          <p style={{ marginBottom: 8 }}>\n            <strong>Join an existing room:</strong>\n          </p>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <input\n              placeholder=\"Room ID\"\n              style={{ marginBottom: 8, width: \"70%\" }}\n              onChange={(e) => {\n                State.update({\n                  roomIdToJoin: e.target.value,\n                  errorMessage: \"\",\n                });\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              role=\"button\"\n              style={{ height: 38, width: \"25%\" }}\n              onClick={() => joinRoom(state.roomIdToJoin)}\n            >\n              Join Room\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            role=\"button\"\n            style={{ marginTop: 8 }}\n            onClick={createAndJoinNewRoom}\n          >\n            Create and Join New Room\n          </button>\n        </div>\n      </div>\n      {state.errorMessage && (\n        <div class=\"alert alert-warning\" role=\"alert\" style={{ marginTop: 28 }}>\n          {state.errorMessage}\n        </div>\n      )}\n    </>\n  );\n}\n\n// Chat Room Screen\nconst data = Social.index(state.roomId, \"data\");\n\nconsole.log(data);\n\nif (!data) {\n  return \"Loading...\";\n}\n\n// Last messages on the bottom\nconst sortedData = data.sort((d1, d2) => d1.blockHeight - d2.blockHeight);\n\nconst buildMessage = (messageData) => {\n  return {\n    user: messageData.accountId,\n    userName: messageData.value.userName,\n    userAvatarImage: messageData.value.userAvatarImage,\n    message: messageData.value.text,\n  };\n};\n\nconst getChatHistory = (indexData) => {\n  const chatHistory = [];\n  indexData.forEach((item) => {\n    chatHistory.push(buildMessage(item));\n  });\n  return chatHistory;\n};\n\nconsole.log(sortedData);\nconst chatHistory = getChatHistory(sortedData);\nconsole.log(\"CHAT HISTORY:\", chatHistory);\n\n// Final image Format\n// https://ipfs.near.social/ipfs/bafkreiau7fpuwxtiieevs5zk46mhouqqig6sqbyplt5p2kzpe24yrdw2ki\n// Thumbnail image Format\n// https://i.near.social/thumbnail/https://ipfs.near.social/ipfs/bafkreiau7fpuwxtiieevs5zk46mhouqqig6sqbyplt5p2kzpe24yrdw2ki\n\nconst onChangeMessage = (message) => {\n  State.update({\n    input: message,\n  });\n};\n\nreturn (\n  <>\n    <h4>Chat Widget</h4>\n    <p>Room ID: {state.roomId}</p>\n    <div className=\"mb-2 mt-2\" style={{ background: \"#F8F9FA\", padding: 8 }}>\n      {chatHistory.map((chatItem, index) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginTop: index !== 0 ? 8 : 0,\n            }}\n          >\n            <div\n              style={{\n                width: 50,\n                height: 50,\n                borderRadius: 999,\n                backgroundImage: `url(https://i.near.social/thumbnail/https://ipfs.near.social/ipfs/${chatItem.userAvatarImage})`,\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n              }}\n            />\n            <p style={{ margin: 0, marginLeft: 12 }}>\n              <strong style={{ color: \"#212121\" }}>\n                {chatItem.userName || chatItem.user}:\n              </strong>\n            </p>\n            <p style={{ margin: 0, marginLeft: 6 }}>{chatItem.message}</p>\n          </div>\n        );\n      })}\n\n      {chatHistory.length === 0 && <p>No message was sent yet :D</p>}\n    </div>\n    <textarea\n      type=\"text\"\n      rows={1}\n      className=\"form-control\"\n      placeholder=\"Message\"\n      onChange={(e) => onChangeMessage(e.target.value)}\n    />\n    <br />\n    <CommitButton\n      data={{\n        index: {\n          [state.roomId]: JSON.stringify(\n            {\n              key: \"data\",\n              value: {\n                userName: profileInfo.name,\n                userAvatarImage: profileInfo.image.ipfs_cid,\n                text: state.input,\n              },\n            },\n            undefined,\n            0\n          ),\n        },\n      }}\n      onCommit={() => {\n        State.update({ input: \"\" });\n      }}\n    >\n      Send Message\n    </CommitButton>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/wendersonpires.near/widget/Chat"}