{"tx_hash": "GhjL3MVLL4C8t9FGZCzURszwsx1x6TsiGv8K4FLJBLgU", "action_id_social": "8PDqqZDPcJfcacAYX3ME33qoZUYBepobRAXtEUahzG4X-0-widget", "block_id": 87305953, "block_timestamp": "2023-03-14 22:28:11.956", "signer_id": "wendersonpires.near", "widget_name": "NearSocialBridgeWithExternalApp_Test", "source_code": "// SETUP: [Navigation] Get URL params\nconst urlParams = props.r;\n\n// SETUP: message sender (it will re-send the message to the iframe source)\nconst sendMessage = (message) => {\n  State.update({ currentMessage: message });\n};\n\n// SETUP: Answer Factory\nconst buildAnswer = (requestType, payload) => {\n  return {\n    type: \"answer\",\n    requestType,\n    payload,\n  };\n};\n\n// SETUP: Connect Payload data sent once the connection is established\nconst accountId = props.accountId ?? context.accountId ?? \"*\";\nconst profileInfo = props.profile ?? Social.getr(`${accountId}/profile`);\nconst welcomePayload = {\n  type: \"connect\",\n  // optional\n  payload: {\n    urlParams,\n    accountId,\n    ipfsCidAvatar: profileInfo.image?.ipfs_cid,\n    msg: \"Hello from Near Social View :D\" + Math.random() * 1000,\n  },\n};\n\n// SETUP: Set initial state\nState.init({ currentMessage: welcomePayload });\n\n// SETUP: On message handler. On get message handler (from the External App)\nconst onMessageHandler = (message) => {\n  console.log(message);\n  switch (message.type) {\n    case \"get-updated-user-info\":\n      sendUpdatedUserInfo(message.type, message.payload);\n      break;\n  }\n};\n\n// SETUP: Custom Handlers Below\n\n// Request: get updated user info\nconst sendUpdatedUserInfo = (requestType, payload) => {\n  const updatedUserInfo = buildAnswer(requestType, {\n    accountId,\n    profileInfo,\n  });\n  sendMessage(updatedUserInfo);\n};\n\nreturn (\n  <iframe\n    id=\"main-iframe\"\n    className=\"w-100\"\n    style={{ height: \"600px\" }}\n    // Load external app\n    src=\"https://0f97ffabf8cb.ngrok.app\"\n    // Data the Near Social View is going to send to the External App\n    message={state.currentMessage}\n    // When the external app send a message back to the NS View\n    onMessage={onMessageHandler}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/wendersonpires.near/widget/NearSocialBridgeWithExternalApp_Test"}