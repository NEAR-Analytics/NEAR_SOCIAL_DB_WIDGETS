{"tx_hash": "13M3SJWxjimJkiLyzGZMKyqEE3tpPoU9M85LZeSiQCmP", "action_id_social": "CP4q3zXGEtHfSNDNXcVhPjtiQ8yqcsMfoRcjfHgBkTAR-0-widget", "block_id": 87234389, "block_timestamp": "2023-03-13 23:12:20.587", "signer_id": "wendersonpires.near", "widget_name": "NearSocialBridgeWithExternalApp_Test", "source_code": "State.init({\n  externalAppMessage: \"\",\n});\n\nconst accountId = props.accountId ?? context.accountId ?? \"*\";\nconst profileInfo = props.profile ?? Social.getr(`${accountId}/profile`);\n\nconst code = `\n<div>Expression: <pre id=\"exp\" /></div>\n<div>Results: <pre id=\"res\" /></div>\n\n<script>\n    window.top.postMessage({type: \"history-push-state\", payload: { path: \"?r=/home\" }}, \"*\");\n    // window.history.pushState({}, \"\", \"?r=/home\");\n    // window.top.postMessage(\"loaded\", \"*\");\n    // window.addEventListener(\"message\", (event) => {\n    //     const data = event.data\n    //     document.getElementById(\"exp\").innerHTML = JSON.stringify(data);\n    //     try {\n    //         const result = eval(data.exp);\n    //         document.getElementById(\"res\").innerHTML = result;\n    //         event.source.postMessage(result, \"*\");\n    //     } catch (e) {\n    //         // ignore\n    //     }\n    // }, false);\n</script>\n`;\n\nconsole.log(props);\n\nconst historyPushState = (newUrlState) => {\n  console.log(window.parent);\n};\n\nconst processMessage = (message) => {\n  if (message.type === \"history-push-state\") {\n    historyPushState(message.payload.path);\n  }\n};\n\nreturn (\n  <div>\n    <iframe\n      className=\"w-50 border\"\n      srcDoc={code}\n      message={{ exp: state.text || \"\" }}\n      onMessage={(res1) => processMessage(res1)}\n    />\n  </div>\n);\n\nreturn (\n  <div>\n    <iframe\n      className=\"w-100\"\n      style={{ height: \"600px\" }}\n      // My external app\n      src=\"https://satori-hq.github.io/near-social-bridge-temp/\"\n      // Data the Near Social View is going to send to my External App\n      message={{\n        accountId,\n        ipfsCidAvatar: profileInfo.image?.ipfs_cid,\n        msg: \"Hello from Near Social View :D\",\n      }}\n      // When my external app send a message back to the NS View\n      onMessage={(m) => {\n        State.update({ externalAppMessage: m });\n      }}\n    />\n    <p>\n      <strong>Message received from the External App: </strong>\n      {state.externalAppMessage || \"waiting...\"}\n    </p>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/wendersonpires.near/widget/NearSocialBridgeWithExternalApp_Test"}