{"tx_hash": "6z3vwZrTQ4QuvfGWmiR7muhwiGrzsQ38spjVkZmmyHx3", "action_id_social": "JEyjvwLRJUG1Amci5VYxVskNVLfwwEh6VL52yxAxTte-0-widget", "block_id": 87301727, "block_timestamp": "2023-03-14 21:06:55.839", "signer_id": "wendersonpires.near", "widget_name": "ConnectToExternalApp", "source_code": "const requestHandlers = props.requestHandlers || []; // [[\"get-updated-user-info\", sendUpdatedUserInfo]]\nconst externalAppURL = props.externalAppURL; // string\n\n// ON MESSAGE HANDLER: On get message handler (from the External App)\nconst onMessageHandler = (message) => {\n  const handler = requestHandlers.find((handler) => handle[0] === message.type);\n  if (handler) {\n    // Call method handler\n    handler[1](message.type, message.payload);\n  }\n\n  //   switch (message.type) {\n  //     case \"get-updated-user-info\":\n  //       sendUpdatedUserInfo(message.type, message.payload);\n  //       break;\n  //   }\n};\n\n// CONNECTION: connection request\nconst connectMessage = {\n  type: \"connect\",\n  // optional\n  payload: {\n    urlParams,\n    accountId,\n    ipfsCidAvatar: profileInfo.image?.ipfs_cid,\n    msg: \"Hello from Near Social View :D\" + Math.random() * 1000,\n  },\n};\n\nState.init({\n  currentMessage: connectMessage,\n});\n\nreturn (\n  <div>\n    {externalAppURL && (\n      <iframe\n        id=\"main-iframe\"\n        className=\"w-100\"\n        style={{ height: \"600px\" }}\n        // Load external app\n        src={externalAppURL}\n        // Data the Near Social View is going to send to my External App\n        message={state.currentMessage}\n        // When my external app send a message back to the NS View\n        onMessage={onMessageHandler}\n      />\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/wendersonpires.near/widget/ConnectToExternalApp"}