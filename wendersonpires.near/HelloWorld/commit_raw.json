{"tx_hash": "3kWVHVfnz1VPLAftwTazuW5d34XuVdyxGF3GuB8WJAZM", "action_id_social": "DbHZBQR9mKpCRzmLHEvPvwJGstboR6TDKBCbStcvdJRv-0-widget", "block_id": 80789977, "block_timestamp": "2022-12-16 16:14:34.883", "signer_id": "wendersonpires.near", "widget_name": "HelloWorld", "source_code": "const accountId = props.accountId ?? context.accountId ?? \"*\";\n\nconsole.log(\"PROPS:\", props);\n\nconst data = Social.index(\"roomId_0\", \"data\");\n\nif (!data) {\n  return \"Loading...\";\n}\n\n// Last messages on the bottom\nconst sortedData = data.sort((d1, d2) => d1.blockHeight - d2.blockHeight);\n\nconst buildMessage = (accountId, message) => {\n  return {\n    user: accountId,\n    message,\n  };\n};\n\nconst getChatHistory = (indexData) => {\n  const chatHistory = [];\n  indexData.forEach((item) => {\n    chatHistory.push(buildMessage(item.accountId, item.value.text));\n  });\n  return chatHistory;\n};\n\nconst chatHistory = getChatHistory(sortedData);\nState.init({ input: \"\" });\n\nconst onChangeMessage = (message) => {\n  // State.update({ chatHistory: [...chatHistory, buildMessage(message)] });\n  State.update({ input: message });\n};\n\nreturn (\n  <>\n    <h4 className=\"mb-5\">Chat Widget</h4>\n    <div className=\"mb-2 mt-2\" style={{ background: \"#F8F9FA\", padding: 8 }}>\n      {chatHistory.map((chatItem) => {\n        return (\n          <p>\n            <strong style={{ color: \"#212121\" }}>{chatItem.user}:</strong>{\" \"}\n            {chatItem.message}\n          </p>\n        );\n      })}\n    </div>\n    <textarea\n      type=\"text\"\n      rows={1}\n      className=\"form-control\"\n      // value={state.currentText}\n      placeholder=\"Message\"\n      onChange={(e) => onChangeMessage(e.target.value)}\n    />\n    <br />\n    <CommitButton\n      data={{\n        index: {\n          roomId_0: JSON.stringify(\n            {\n              key: \"data\",\n              value: {\n                text: state.input,\n              },\n            },\n            undefined,\n            0\n          ),\n        },\n      }}\n      onCommit={() => {\n        // CHECK THIS\n        // State.update({reloadData: true})\n      }}\n    >\n      Send Message\n    </CommitButton>\n  </>\n);\n\n// <button type=\"button\" style={{ background: \"#ff0000\" }}>\n//   Send\n// </button>\n\n// const homepage = accountId\n//   ? Social.get(`${accountId}/settings/near.social/homepage`)\n//   : undefined;\n\n// if (homepage === null) {\n//   return \"Loading\";\n// }\n\n// return <Widget src={homepage ?? \"mob.near/widget/Welcome\"} />;\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/wendersonpires.near/widget/HelloWorld", "metadata.name": NaN, "branch.draft": NaN, "metadata.tags.ethdenver2023": NaN, "metadata.linktree.website": NaN}