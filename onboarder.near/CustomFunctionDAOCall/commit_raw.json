{"tx_hash": "yGfSJFPHUHXuHv7TuN6rvRaSSPZsNKSPtp6omJNdvjC", "action_id_social": "AxXgDmRV5eWvUfFak1sqr5P65S2jCUFrNq72vyMwSdi5-0-widget", "block_id": 86528006, "block_timestamp": "2023-03-04 09:20:31.571", "signer_id": "onboarder.near", "widget_name": "CustomFunctionDAOCall", "source_code": "const accountId = props.accountId ?? context.accountId;\n// error check for DAO ends with .sputnik-dao.near\nconst default_dao = \"onboarddao.sputnik-dao.near\";\nconst marketplace_default = \"marketplace.paras.near\";\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n} // should add a shard dog link here\n\nState.init({\n  dao: default_dao,\n  marketplace_address: marketplace_default,\n});\n\nconst onChangeGas = (gas) => {\n  State.update({\n    gas,\n  });\n};\n// is this different than price\nconst onChangeDeposit = (deposit) => {\n  State.update({\n    deposit,\n  });\n};\n\nconst onChangeMarketplace = (marketplace_address) => {\n  State.marketplace_address({\n    marketplace_address,\n  });\n};\n\nconst onChangeDescription = (description) => {\n  State.update({\n    description,\n  });\n};\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.dao ?? default_dao,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: state.description,\n          kind: {\n            FunctionCall: {\n              marketplace_address:\n                state.marketplace_address ?? marketplace_default,\n            },\n          },\n        },\n      },\n      gas: state.gas ?? 200000000000000,\n      deposit: state.deposit ?? 100000000000000000000000,\n    },\n  ]);\n};\n\nconst onChangeNFTContract = (nft_contract_id) => {\n  State.update({\n    nft_contract_id,\n  });\n};\nconst onChangeTokenID = (token_id) => {\n  State.update({\n    token_id,\n  });\n};\nconst onChangeDAO = (dao) => {\n  State.update({\n    dao,\n  });\n};\n// should render nft\nreturn (\n  <div className=\"mb-3\">\n    <h1>\ud83d\udcb8 DAO Proposal Buy NFT on Paras</h1>\n    DAO Address\n    <input\n      placeholder=\"onboarddao.sputnik-dao.near\"\n      onChange={(e) => onChangeDAO(e.target.value)}\n    />\n    <div className=\"mb-2\">\n      NFT Contract ID:\n      <input\n        type=\"text\"\n        placeholder=\"x.paras.near\"\n        onChange={(e) => onChangeNFTContract(e.target.value)}\n      />\n    </div>\n    <div className=\"mb-2\">\n      Token ID:\n      <input\n        type=\"text\"\n        placeholder=\"492017\"\n        onChange={(e) => onChangeTokenID(e.target.value)}\n      />\n    </div>\n    <div className=\"mb-2\">\n      tGas\n      <input\n        type=\"text\"\n        placeholder=\"200\"\n        onChange={(e) => onChangeGas(e.target.value * 1e12)}\n      />\n    </div>\n    <div className=\"mb-2\">\n      Deposit\n      <input\n        type=\"text\"\n        placeholder=\"0.1\"\n        onChange={(e) => onChangeDeposit(e.target.value * 1e24)}\n      />\n    </div>\n    <div className=\"mb-2\">\n      Description\n      <input\n        type=\"text\"\n        placeholder=\"buying a nft on paras\"\n        onChange={(e) => onChangeDescription(e.target.value)}\n      />\n    </div>\n    <div className=\"mb-2\">\n      Marketplace Address\n      <input\n        type=\"text\"\n        placeholder={marketplace_default}\n        onChange={(e) => onChangeMarketplace(e.target.value)}\n      />\n    </div>\n    <button className=\"btn btn-primary mt-3\" onClick={handleProposal}>\n      Propose Buying NFT on {state.marketplace_address} for {state.dao}\n    </button>\n  </div>\n);\n", "widget_modules_used": null, "widget_url": "https://near.social/#/onboarder.near/widget/CustomFunctionDAOCall", "metadata.description": "Propose to a DAO of your choice to buy a NFT. Please put custom gas, storage payment, token_id, nft_contract id", "metadata.image.ipfs_cid": "bafkreicshnvx2e6punpr22urzit5puhjdl4ku7bsczugsxqxc7bqh6stkm", "metadata.linktree.website": "onboarddao.org", "metadata.name": "Propose to Buy NFT as a DAO", "metadata.tags.dao": "", "metadata.tags.marketplace": "", "metadata.tags.mintbase": "", "metadata.tags.nft": "", "metadata.tags.nft-marketplace": "", "metadata.tags.paras": "", "branch.draft": NaN, "metadata": NaN, "branch.draft.": NaN}