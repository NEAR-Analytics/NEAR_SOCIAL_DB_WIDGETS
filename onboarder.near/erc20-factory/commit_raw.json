{"tx_hash": "ALvLb96NDyCKTVuC6BMTdPoagZQnhre5ytADuNN8E9sd", "action_id_social": "2U617ByMbp3eeCdUZhTitne49Brbkf9Cd5rV9h3qMv8p-0-widget", "block_id": 86612247, "block_timestamp": "2023-03-05 12:29:44.314", "signer_id": "onboarder.near", "widget_name": "erc20-factory", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) return \"Please login first\";\n\nconst erc20Abi = fetch(\n  \"https://gist.githubusercontent.com/veox/8800debbf56e24718f9f483e1e40c35c/raw/f853187315486225002ba56e5283c1dba0556e6f/erc20.abi.json\"\n);\nif (!erc20Abi.ok) {\n  return \"scam\";\n}\nconst erc20FactoryAbi = fetch(\n  \"https://raw.githubusercontent.com/codingshot/TokenFactory/master/abi/Factory.abi.json\"\n); // doesnt actually mint just deploys\nif (!erc20FactoryAbi.ok) {\n  return \"factory scam\";\n}\n\nconst erc20Factory = \"0x5ad70c187e448b9ca6104cc55619bf9a3a271efd\"; // polygon\nconst interface = new ethers.utils.Interface(erc20FactoryAbi.body); // added this\n\n/**TO DO INIT STATE FOR ECR20 = FACTORY */\ninitState({\n  name: \"TOKEN\",\n  symbol: \"TKN\",\n  decimals: 18,\n  sendTo: \"0xd0decff60b18c8c17d1d616d5b81bee67aa5c327\", // sending to our address\n  sender, // msg.sender\n  address, // after deployed this is conrect\n  // senderBalance: \"0\",\n  // receiverBalance: \"0\",\n  initialSupply: 10000,\n});\nconsole.log(\n  \"LOG1: Name - \" +\n    state.name +\n    \"Decimals - \" +\n    state.decimals +\n    \" Supply - \" +\n    state.initialSupply +\n    \" Symbol - \" +\n    state.symbol\n);\n\n/**TO DO: MUST CHANGE COPIED FROM SEND TOKEN */\nconst deployToken = () => {\n  const erc20 = new ethers.Contract(\n    erc20Factory,\n    erc20FactoryAbi, // trying without body\n    // erc20FactoryAbi.body, // changed this to abi\n    Ethers.provider().getSigner()\n  );\n\n  console.log(\"transactionHash is \" + transactionHash);\n};\n\nreturn (\n  <>\n    <h3>\ud83d\udce9 Deploy ERC-20 token (WIP)</h3>\n    <div class=\"mb-3\">\n      <label for=\"sender\" class=\"form-label\">\n        \ud83d\udceb message sender\n      </label>\n      <input\n        value={sender}\n        class=\"form-control\"\n        id=\"sender\"\n        placeholder={state.sender}\n        // onChange={(e) => State.update({ sender: e.target.value })}\n      />\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"supply\" class=\"form-label\">\n        \ud83d\udee0\ufe0f Enter New ERC20 Supply\n      </label>\n      <input\n        value={state.initialSupply}\n        class=\"form-control\"\n        id=\"supply\"\n        placeholder=\"\"\n        onChange={(e) => State.update({ initialSupply: e.target.value })}\n      />\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"decimals\" class=\"form-label\">\n        \ud83e\uddee Enter ERC20 Decimals\n      </label>\n      <input\n        value={state.decimals}\n        class=\"form-control\"\n        id=\"decimals\"\n        placeholder=\"\"\n        onChange={(e) => State.update({ decimals: e.target.value })}\n      />\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"symbol\" class=\"form-label\">\n        Enter New ERC20 Token Symbol\n      </label>\n      <input\n        value={state.symbol}\n        class=\"form-control\"\n        id=\"symbol\" // only allow for numbers\n        placeholder=\"TKN\"\n        onChange={(e) => State.update({ symbol: e.target.value })}\n      />\n    </div>\n\n    <div class=\"mb-3\">\n      <button onClick={deployToken}>Deploy Token (WIP)</button>\n    </div>\n  </>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/onboarder.near/widget/erc20-factory", "metadata.tags.ethdenver2023": NaN, "metadata": NaN}