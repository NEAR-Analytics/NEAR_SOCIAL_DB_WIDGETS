{"tx_hash": "357hNwQRWg7TVSXH4qm7Nyr9wLRX1R3yhvEsCa3dAmTq", "action_id_social": "A7Zg61M3qawzHcAizALwo1Wmg4BovA4MGTRNPv7ejsv1-0-widget", "block_id": 88028515, "block_timestamp": "2023-03-24 17:51:21.913", "signer_id": "onboarder.near", "widget_name": "Registry", "source_code": "const accountId = context.accountId; // add check for context it\nconst contractId = \"registry.hideyourcash.near\";\n\ninitState({\n  accountId: accountId,\n  contractId: contractId,\n});\n\nconst register = () => {\n  if (!accountId) {\n    return;\n  }\n  // need to buffer serialize arguments, add helper functions with state arguments\n  const gas = 300000000000000; // 300 tGas\n  //   const deposit = 1; // exactly 1 yocto\n  const deposit = 400000000000000000000;\n  Near.call([\n    {\n      contractName: state.contractId,\n      methodName: \"allowlist\",\n      args: {\n        account_id: state.accountId,\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\nreturn (\n  <div>\n    <h1> \ud83c\udf2a\ufe0f Registry </h1>\n    <p>Register for allow list for hideyour.cash</p>\n    <div></div>\n\n    <div className=\"row\">\n      {state.accountId && (\n        <button className=\"btn btn-primary mt-3\" onClick={register}>\n          Register\n        </button>\n      )}\n      <div className=\"col-lg-6\"></div>\n      {!state.accountId && (\n        <button className=\"btn btn-warning mt-3\">Login to Register</button>\n      )}\n    </div>\n  </div>\n);\n\n// check if already registered\n", "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/onboarder.near/widget/Registry", "metadata.tags.app": NaN, "metadata.description": "HideYourCash Registry -> get on allow list", "metadata.image.ipfs_cid": "bafkreid3e5dkbs2uplhfmdmhs4seplj6z7dojsadzaxmmsjekijjqggmgu", "metadata.linktree.website": "hideyour.cash", "metadata.name": "HideYourCash Registry", "metadata.tags.allowlist": "", "metadata.tags.aml": "", "metadata.tags.hackachain": "", "metadata.tags.hide-your-cash": "", "metadata.tags.hideyourcash": "", "metadata.tags.mixer": "", "metadata.tags.privacy": "", "metadata.tags.registry": "", "metadata.tags.zero-knowledge": "", "metadata.tags.zk": "", "branch.draft.": NaN, "branch.draft.metadata": NaN}