{"tx_hash": "AnwRgM5j99NYWPeftTWsvk74JzBpGvMfvHJKoc5HTosy", "action_id_social": "3nuqXJXKytwaN4pv7LTgdcBD3F9o9Jm3L5SxjCtH1kS8-0-widget", "block_id": 94495924, "block_timestamp": "2023-06-18T23:04:44.301Z", "signer_id": "hack.near", "widget_name": "create.library", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst deposit = policy.proposal_bond;\n\nlet string = \"sputnik-dao.near\";\nlet domain = \".near\";\n\nState.init({\n  accountId: accountId ?? \"\",\n  daoId: daoId ?? \"\",\n  libraryId: state.libraryId ?? \"\",\n  data: state.data ?? \"\",\n  isDao: false,\n});\n\nconst checkDao = (daoId) => {\n  if (daoId.indexOf(string) !== -1) {\n    return State.update({ isDao: true });\n  }\n};\n\nconst validDao = checkDao(state.daoId);\n\nconst curation_args = JSON.stringify({\n  data: {\n    [state.daoId]: {\n      widget: {\n        [`${state.libraryId}.library`]: {\n          \"\": `const accountId = props.accountId ?? context.accountId; const library = ${state.data}; return (<Widget src=\"hack.near/widget/dev.library\" props={{ data: library }} />);`,\n        },\n      },\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(curation_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"update library\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"30000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"300000000000000\",\n    },\n  ]);\n};\n\nconst handleCreate = () =>\n  Social.set({\n    widget: {\n      [`${state.libraryId}.library`]: {\n        \"\": `const accountId = props.accountId ?? context.accountId; const library = ${state.data}; return (<Widget src=\"hack.near/widget/dev.library\" props={{ data: library }} />);`,\n        metadata: {\n          tags: {\n            build: \"\",\n          },\n        },\n      },\n    },\n  });\n\nconst onChangeDao = (daoId) => {\n  State.update({\n    daoId,\n  });\n};\n\nconst onChangeLibrary = (libraryId) => {\n  State.update({\n    libraryId,\n  });\n};\n\nconst onChangeData = (data) => {\n  State.update({\n    data,\n  });\n};\n\nreturn (\n  <div className=\"d-flex flex-column\">\n    <div className=\"p-1 m-1\">\n      <div>\n        <h2>\n          <b>Organization Account:</b>\n        </h2>\n        {!validDao ? (\n          <p>\n            \u21b3 must be a valid DAO account ~ <i>example.sputnik-dao.near</i>\n          </p>\n        ) : (\n          <div>\n            <p>\u21b3 must have permission to propose function calls</p>\n          </div>\n        )}\n        <input\n          placeholder=\"<example>.sputnik-dao.near\"\n          type=\"text\"\n          value={state.daoId}\n          onChange={(e) => onChangeDao(e.target.value)}\n        ></input>\n      </div>\n    </div>\n    {validDao && (\n      <>\n        <div className=\"p-1 m-1\">\n          <Widget\n            src=\"near/widget/AccountProfileCard\"\n            props={{ accountId: state.daoId }}\n          />\n        </div>\n        <div className=\"p-1 m-1\">\n          <h5>Library ID</h5>\n          <input\n            placeholder=\"dev\"\n            type=\"text\"\n            value={state.libraryId}\n            onChange={(e) => onChangeLibrary(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"p-1 m-1\">\n          <h5>Propose Update</h5>\n          <div className=\"w-100 d-flex gap-2\">\n            <div>\n              {validDao && (\n                <div>\n                  <p>\u21b3 propose to update our components library</p>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"w-100 d-flex gap-2\">\n            <input\n              placeholder=\"JSON goes here\"\n              type=\"text\"\n              value={state.data}\n              onChange={(e) => onChangeData(e.target.value)}\n            ></input>\n            <div>\n              <button\n                disabled={!validDao || !state.libraryId}\n                onClick={handleProposal}\n              >\n                Submit\n              </button>\n            </div>\n            <div>\n              <button\n                disabled={!validDao || !state.libraryId}\n                onClick={handleCreate}\n                className=\"btn btn-outline-success\"\n              >\n                Create\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/create.library", "__row_index": 5}