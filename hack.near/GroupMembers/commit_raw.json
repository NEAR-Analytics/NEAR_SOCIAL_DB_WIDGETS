{"tx_hash": "GmgzXH27YRnd7AwpfznY292oRh67GShz9QPsPKgBsmXq", "action_id_social": "7UHwc6ppXNHcP3spEsoQxnpJjWvmTqb7XFehN2WXUMye-0-widget", "block_id": 86372546, "block_timestamp": "2023-03-02 07:26:43.785", "signer_id": "hack.near", "widget_name": "GroupMembers", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"global.sputnik-dao.near\";\n\nconst groupId = props.groupId ?? \"community\";\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading...\";\n}\n\nconst accounts = Object.entries(data);\nconst allMembers = [];\nconst allGroups = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const memberId = accounts[i][0];\n\n  allMembers.push(\n    <div className=\"mb-2\">\n      <Widget src=\"mob.near/widget/Profile\" props={{ memberId }} />\n    </div>\n  );\n}\n\nconst members = policy.roles\n  .filter((role) => role.name === groupId)\n  .map((role) => {\n    const members = role.kind.Group;\n\n    return members;\n  });\n\nconst groups = policy.roles.map((role) => {\n  const groups = role.name;\n\n  return groups;\n});\n\nreturn (\n  <div>\n    <h3>Groups:</h3>\n    <h4>{groupId}</h4>\n    <Widget\n      src=\"mob.near/widget/Profile\"\n      props={{\n        tooltip: true,\n        accountId: members,\n      }}\n    />\n    <div className=\"mb-2\">{members}</div>\n    <div className=\"mb-2\">{groups}</div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/GroupMembers"}