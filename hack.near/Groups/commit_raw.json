{"tx_hash": "DCkBtimqjzFtrFbR4HCAQz6EpxYto6dZcWT9uf8HbXJF", "action_id_social": "7dw2Fh8s7kVceDu61fSyFyM2xRj7hWWjmYaRh2Dm7ezf-0-widget", "block_id": 86381036, "block_timestamp": "2023-03-02 10:08:35.563", "signer_id": "hack.near", "widget_name": "Groups", "source_code": "const accountId = props.accountId || context.accountId;\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst groupId = props.groupId ?? \"council\";\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst allMembers = [];\nconst allGroups = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const memberId = accounts[i][0];\n\n  allMembers.push(\n    <div className=\"mb-2\">\n      <Widget src=\"mob.near/widget/Profile\" props={{ memberId }} />\n    </div>\n  );\n}\n\nconst members = policy.roles\n  .filter((role) => role.name === groupId)\n  .map((role) => {\n    const members = role.kind.Group;\n\n    return members;\n  });\n\nconst groups = policy.roles\n  .filter((role) => role.name !== \"all\")\n  .map((role) => {\n    const groups = role.name;\n\n    return groups;\n  });\n\nreturn (\n  <>\n    <div>\n      <h3>Groups:</h3>\n      <div>\n        {groups.map((group, i) => (\n          <a\n            key={i}\n            className=\"text-decoration-none\"\n            href={`#hack.near/widget/GroupMembers?groupId=${groupId}&daoId=${daoId}`}\n          >\n            <h4>{group}</h4>\n          </a>\n        ))}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Groups", "branch.draft": NaN}