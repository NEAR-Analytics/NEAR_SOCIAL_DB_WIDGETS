{"tx_hash": "bwFENMmBdoaiAKZRvfH7dNUnEDWnVRefgErLSQhjrFe", "action_id_social": "DwFRFH9Yh3ZENzsfwX3daaBTnk885jiVD5681tD7G3s-0-widget", "block_id": 94495118, "block_timestamp": "2023-06-18T22:49:49.539Z", "signer_id": "hack.near", "widget_name": "dao.proposals", "source_code": "const daoId = props.daoId ?? \"rc-dao.sputnik-dao.near\";\nconst limit = parseInt(props.limit) || 888;\n\nif (!daoId) {\n  return \"\";\n}\n\nconst daoVersion = Near.view(daoId, \"version\");\nif (!daoVersion) {\n  return \"\";\n}\n\nconst config = Near.view(daoId, \"get_config\");\nconst policy = Near.view(daoId, \"get_policy\");\nconst lastProposalId = Near.view(daoId, \"get_last_proposal_id\");\n\nlet proposals = [];\n\nif (lastProposalId) {\n  proposals =\n    Near.view(daoId, \"get_proposals\", {\n      from_index: Math.max(0, lastProposalId - limit),\n      limit,\n    }) || [];\n  proposals.reverse();\n}\n\nreturn (\n  <div className=\"mt-3\">\n    <h5>Recent Proposals</h5>\n    {proposals.map((proposal, i) => (\n      <div key={proposal.id} className=\"mb-3\">\n        <Widget\n          src=\"hack.near/widget/dao.proposal\"\n          props={{ daoId, proposal, policy }}\n        />\n      </div>\n    ))}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dao.proposals", "__row_index": 0}