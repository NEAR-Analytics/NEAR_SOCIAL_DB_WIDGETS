{"tx_hash": "GfkoTKKLGJyiQwD2fpaYy9Dvb26S88SsA1p12b4CE9D4", "action_id_social": "BFxddTpY3jDyg8NyXEaJBiTCaed557va8QKtsYTP3c2i-0-widget", "block_id": 94495007, "block_timestamp": "2023-06-18T22:47:45.691Z", "signer_id": "hack.near", "widget_name": "dao.proposal", "source_code": "const { daoId, policy, proposal } = props;\n\nconst bgClassname =\n  proposal.status === \"InProgress\"\n    ? \"\"\n    : proposal.status === \"Approved\"\n    ? \"bg-success bg-opacity-10\"\n    : \"bg-danger bg-opacity-10\";\n\nfunction mapVote(vote) {\n  return vote === \"Approve\" ? (\n    <span className=\"text-success\">Approve</span>\n  ) : vote === \"Reject\" ? (\n    <span className=\"text-danger\">Reject</span>\n  ) : vote === \"Remove\" ? (\n    <span className=\"text-warning\">Spam</span>\n  ) : (\n    \"???\"\n  );\n}\n\nfunction vote(action) {\n  return Near.call(daoId, \"act_proposal\", {\n    id: proposal.id,\n    action,\n  });\n}\n\nfunction decodeArgs() {\n  try {\n    const args64 = proposal.kind[\"FunctionCall\"].actions[0].args;\n    const jsonArgs = JSON.parse(\n      Buffer.from(args64, \"base64\").toString(\"utf-8\")\n    );\n    return JSON.stringify(jsonArgs, undefined, 2);\n  } catch {\n    return \"failed to deserialize\";\n  }\n}\n\nreturn (\n  <div className={`border p-2 ${bgClassname}`}>\n    <div className=\"mb-2\">\n      <h4 className=\"d-inline\">\n        #{proposal.id}{\" \"}\n        <span className=\"text-muted small\">({proposal.status})</span>\n      </h4>\n      <div className=\"float-end\">\n        {new Date(parseFloat(proposal.submission_time) / 1e6).toLocaleString()}\n      </div>\n    </div>\n    <div className=\"mb-2\">\n      <label className=\"text-muted\">Proposer</label>\n      <div>\n        <Widget\n          src=\"mob.near/widget/Profile.ShortInlineBlock\"\n          props={{ accountId: proposal.proposer }}\n        />\n      </div>\n    </div>\n    <div className=\"mb-2\">\n      <label className=\"text-muted\">Description</label>\n      <div>{proposal.description}</div>\n    </div>\n    <div className=\"mb-2\">\n      <label className=\"text-muted\">Votes</label>\n      <div>\n        {Object.entries(proposal.votes).map(([accountId, vote]) => (\n          <div key={accountId} className=\"mb-1 d-flex flex-row gap-2\">\n            <div className=\"m-auto text-center\" style={{ minWidth: \"5em\" }}>\n              {mapVote(vote)}\n            </div>\n            <div className=\"flex-grow-1\">\n              <Widget\n                src=\"mob.near/widget/Profile.ShortInlineBlock\"\n                props={{ accountId }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dao.proposal", "__row_index": 0}