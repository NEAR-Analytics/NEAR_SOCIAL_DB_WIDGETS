{"tx_hash": "7bHjyHLiLKwD1n3Kci2HhxwT4v6s1fB6xy6MuSYJ8HXc", "action_id_social": "6SiZfNZVRNbUJwhtGPYDCBcMx3X1d7mZMbS4nxMTzdaT-0-widget", "block_id": 89517630, "block_timestamp": "2023-04-13 21:52:37.044", "signer_id": "hack.near", "widget_name": "Everything.Things", "source_code": "const type = props.type || \"everything\";\nconst domain = props.domain || \"everything\";\n\nconst index = {\n  action: domain, // this could work as a sort of \"domain\"... ev02\n  key: \"main\",\n  options: {\n    limit: 10,\n    order: \"desc\",\n  },\n};\n\nconst renderThing = (a) => {\n  if (type === \"everything\" || a.value.type === type) {\n    // check for modification\n    // see Everything.View.Thing to see the delete function\n    // but since we can't actually delete the data,\n    // we will check if this blockheight has been modified/hid\n    const mod = JSON.parse(\n      Social.get(`${a.accountId}/modification/${a.blockHeight}`) || \"null\"\n    );\n    // if it has been modified with a hide, then return null\n    if (mod && mod.action === \"HIDE\") {\n      return null;\n    }\n    return (\n      <Widget\n        src={\"evrything.near/widget/Everything.Summary.Thing\"}\n        props={{\n          accountId: a.accountId,\n          blockHeight: a.blockHeight,\n          type: a.value.type,\n        }}\n      />\n    );\n  }\n};\n\nreturn (\n  <Widget\n    src=\"evrything.near/widget/FilteredIndexMasonry\"\n    props={{ index, renderItem: renderThing }}\n  />\n);\n", "metadata": NaN, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Everything.Things", "branch.draft.": NaN, "branch.draft.metadata": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "branch.draft": NaN}