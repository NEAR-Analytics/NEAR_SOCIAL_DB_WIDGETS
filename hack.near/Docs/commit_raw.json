{"tx_hash": "4fju27MudQzG47NV7WQTuuZqzgC3NGga2KNfwvbRTCfd", "action_id_social": "aynB442TN2fC3Q9PzqoSTFYr86nsJTpKSFf6AM1XuY6-0-widget", "block_id": 85243732, "block_timestamp": "2023-02-14 23:26:26.565", "signer_id": "hack.near", "widget_name": "Docs", "source_code": "return (\n  <div className=\"container\">\n    <div className=\"row mb-3\">\n      <div>\n        <h1>App Laboratory</h1>\n        <h3>\n          <b>Guide:</b> Building Open Web Apps\n        </h3>\n        <p>\n          Learn about this uniquely flexible and reliable social data protocol!\n        </p>\n        <p>\n          Below are useful resources for integrating your app with Near Social.\n        </p>\n      </div>\n    </div>\n    <div className=\"mb-3\">\n      <div>\n        <h2>Virtual Machine APIs</h2>\n        <ul>\n          <li>Social</li>\n          <li>Near</li>\n          <li>State</li>\n          <li>Storage</li>\n          <li>Cache</li>\n        </ul>\n      </div>\n    </div>\n    <div className=\"mb-3\">\n      <h3>Social APIs</h3>\n      <p>\n        The Near Social VM provides a convenient API to get data from the\n        SocialDB contract.\n      </p>\n      <div>\n        <h4>Has 4 Methods</h4>\n        <ul>\n          <li>Social.get</li>\n          <li>Social.getr</li>\n          <li>Social.keys</li>\n          <li>Social.index</li>\n        </ul>\n      </div>\n      <h3>Social.get</h3>\n      <div>\n        <h5>Takes (up to) 3 Arguments:</h5>\n        <ul>\n          <li>(required) the path pattern(s)</li>\n          <li>(optional) the block height or finality</li>\n          <li>(optional) the options object</li>\n          <ul>\n            <li>\n              (optional) subscribe - if true, the data will be refreshed every 5\n              seconds.\n            </li>\n            <li>\n              (optional) return_deleted - whether to return deleted values (as\n              null)\n            </li>\n            <ul>\n              <li>Default is false.</li>\n            </ul>\n          </ul>\n        </ul>\n        <p>\n          It fetches the data from the SocialDB contract by calling get and\n          returns the data. While the data is fetching the returned value equals\n          to null. If the path pattern is a single key, it will try to unwrap\n          the object until the first wildcard.\n        </p>\n        <p>\n          For example, if the path pattern is mob.near/widget, the SocialDB\n          contract will return the following object:\n        </p>\n        <div className=\"alert alert-secondary rounded-4 mb-3\"></div>\n      </div>\n      <h3>Social.keys</h3>\n      <div>\n        <h5>Takes (up to) 3 Arguments:</h5>\n        <ul>\n          <li>(required) the path pattern(s)</li>\n          <li>(optional) the block height or finality</li>\n          <li>(optional) the options object</li>\n          <ul>\n            <li>(optional) subscribe</li>\n            <ul>\n              <li>if true, data will be refreshed every 5 seconds</li>\n            </ul>\n            <li>\n              (optional) return_type - either \"History\", \"True\", or\n              \"BlockHeight\"\n              <ul>\n                <li>If not specified, it will return \"True\"</li>\n              </ul>\n            </li>\n            <li>\n              (optional) return_deleted - whether to return deleted values (as\n              null).\n            </li>\n            <ul>\n              <li>Default is false.</li>\n            </ul>\n            <li>\n              (optional) values_only - whether to return only values (don't\n              include objects).\n            </li>\n            <ul>\n              <li>Default is false.</li>\n            </ul>\n          </ul>\n        </ul>\n        <p>\n          It calls the SocialDB's keys API and returns the data. While the data\n          is fetching the returned value equals to null. The keys contract\n          doesn't unwrap the object, so the returned data is the same as the\n          SocialDB's keys API.\n        </p>\n      </div>\n      <h3>Social.index</h3>\n      <div>\n        <h5>Takes (up to) 3 Arguments:</h5>\n        <ul>\n          <li>action is the index_type from the standard</li>\n          <ul>\n            <li>e.g. in the path index/like, the action is like</li>\n          </ul>\n          <li>key is the inner indexed value from the standard</li>\n          <li>(optional) the options object</li>\n          <ul>\n            <li>(optional) accountId</li>\n            <ul>\n              <li>\n                If given, it should either be a string or an array of account\n                IDs to filter values by them. Otherwise, not filters by account\n                Id.\n              </li>\n            </ul>\n            <li>\n              (optional) order\n              <ul>\n                <li>Either asc or desc. Defaults to asc.</li>\n              </ul>\n            </li>\n            <li>(optional) limit</li>\n            <ul>\n              <li>\n                {\" \"}\n                Defaults to 100. The number of values to return. Index may\n                return more than index values, if the last elements have the\n                same block height.\n              </li>\n            </ul>\n            <li>(optional) from</li>\n            <ul>\n              <li>Defaults to 0 or Max depending on order.</li>\n            </ul>\n          </ul>\n        </ul>\n        <p>\n          Returns the array of matched indexed values. Ordered by blockHeight.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Docs"}