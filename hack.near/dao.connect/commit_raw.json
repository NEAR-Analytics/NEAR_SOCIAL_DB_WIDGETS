{"tx_hash": "5iL77FK5MHD9AyaAummu4G6HsMrfhs5ZoYp1JyVkMU8z", "action_id_social": "GYySeEHc5u63ujPNzG4CK2gbLP2uTe45Yxp2Tt8wUSPm-0-widget", "block_id": 95201766, "block_timestamp": "2023-06-28T04:34:47.329Z", "signer_id": "hack.near", "widget_name": "dao.connect", "source_code": "const accountId = context.accountId;\nconst daoId = props.daoId ?? \"meta.sputnik-dao.near\";\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nif (\n  !props.accountId ||\n  !context.accountId ||\n  context.accountId === props.accountId\n) {\n  return \"\";\n}\n\nconst followEdge = Social.keys(\n  `${context.accountId}/graph/follow/${daoId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst inverseEdge = Social.keys(\n  `${daoId}/graph/follow/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst loading = followEdge === null || inverseEdge === null;\nconst isFollowing = Object.keys(followEdge || {}).length > 0;\nconst isInverse = Object.keys(inverseEdge || {}).length > 0;\n\nconst type = follow ? \"unfollow\" : \"follow\";\n\nconst follow_args = JSON.stringify({\n  data: {\n    [daoId]: {\n      graph: {\n        follow: {\n          [accountId]: \"\",\n        },\n      },\n      index: {\n        graph: {\n          key: follow,\n          value: {\n            type: follow,\n            accountId: [accountId],\n          },\n        },\n        notify: {\n          key: [accountId],\n          value: {\n            type: follow,\n          },\n        },\n      },\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(follow_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"connection request\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"80000000000000000000000\",\n                  gas: \"219000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"219000000000000\",\n    },\n  ]);\n};\n\nconst Wrapper = styled.div`\n  .join-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 8px 16px;\n    height: 32px;\n    border-radius: 100px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    background: #FBFCFD;\n    border: 1px solid #D7DBDF;\n    color: ${props.primary ? \"#006ADC\" : \"#11181C\"} !important;\n    white-space: nowrap;\n\n    &:hover,\n    &:focus {\n      background: #ECEDEE;\n      text-decoration: none;\n      outline: none;\n    }\n\n    i {\n      display: inline-block;\n      transform: rotate(90deg);\n      color: #7E868C;\n    }\n  }\n`;\n\nreturn (\n  <Wrapper className={props.className}>\n    <CommitButton disabled={loading} className=\"join-button\" data={data}>\n      {isFollowing && <i className=\"bi-16 bi bi-check\"></i>}\n      {isFollowing ? \"Connected\" : isInverse ? \"Connect\" : \"Connect\"}\n    </CommitButton>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dao.connect", "__row_index": 5}