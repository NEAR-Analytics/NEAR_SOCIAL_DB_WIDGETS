{"tx_hash": "DGLEXop2VYvcV9YEAd14CP4RkYpRKAwqYcBkvymaYweZ", "action_id_social": "6jB49GRHbW6DjuhFmzaRCdW3eaQbDwt3orP8QqzujDah-0-widget", "block_id": 93282372, "block_timestamp": "2023-06-02T12:00:35.579Z", "signer_id": "hack.near", "widget_name": "dev.task", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\n\nconst bounty = JSON.parse(JSON.stringify(props.bounty)) ?? {\n  id: 888,\n  description:\n    \"# [Bounty Title Here]\\n\\n## Description\\n\\n[Detailed description of what the bounty entails. What needs to be done, any specific requirements or skills needed, etc.]\\n\\n## Acceptance Criteria\\n\\n[What should be delivered upon the completion of the bounty? Be specific and clear about what you expect.]\\n\\n## Steps to Claim\\n\\n[Explanation of the procedure to claim the bounty. Step by step guide on what needs to be done to complete the bounty and how to submit the work.]\\n\\n## Additional Information\\n\\n[If applicable, include any additional information or resources relevant to the bounty. It could be helpful links, tips, or contacts.]\",\n  times: 1,\n  amount: \"1000000000000000000000000\",\n  max_deadline: \"86400000000000\",\n};\n\n// ==============================\n// Functions\n// ==============================\n\nconst handleClaim = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"bounty_claim\",\n      args: {\n        id: JSON.parse(bounty.id),\n        deadline: bounty.max_deadline,\n      },\n      deposit: 100000000000000000000000,\n      gas: 150000000000000,\n    },\n  ]);\n};\n\nconst handleUnclaim = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"bounty_giveup\",\n      args: {\n        id: JSON.parse(bounty.id),\n      },\n      gas: 150000000000000,\n    },\n  ]);\n};\n\nconst handleSubmit = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"work submitted\",\n          kind: {\n            BountyDone: {\n              receiver_id: accountId,\n              bounty_id: JSON.parse(bounty.id),\n            },\n          },\n        },\n      },\n      deposit: 100000000000000000000000,\n      gas: 150000000000000,\n    },\n  ]);\n};\n\n// ==============================\n// Styled Components\n// ==============================\n\nconst Wrapper = styled.div`\n  margin: 16px auto;\n  background-color: #fff;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #6c757d;\n  }\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\nconst CardFooter = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  padding-top: 16px;\n  border-top: 1px solid #eceef0;\n`;\n\nconst Button = styled.div`\n  width: 100%;\n`;\n\nconst MarkdownContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 24px;\n  background-color: #f8f9fa;\n  color: #1b1b18;\n  border-radius: 16px;\n  max-height: 800px;\n  overflow-y: auto;\n  color: #333;\n  line-height: 1.6;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n\n  h1 {\n    font-size: 2em;\n    color: #111;\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 0.3em;\n    margin-bottom: 1em;\n  }\n\n  h2 {\n    font-size: 1.5em;\n    color: #222;\n    margin-bottom: 0.75em;\n  }\n\n  h3 {\n    font-size: 1.3em;\n    color: #333;\n    margin-bottom: 0.6em;\n  }\n\n  h4 {\n    font-size: 1.2em;\n    color: #444;\n    margin-bottom: 0.5em;\n  }\n\n  h5 {\n    font-size: 1.1em;\n    color: #555;\n    margin-bottom: 0.4em;\n  }\n\n  p {\n    font-size: 1em !important;\n    margin-bottom: 1em !important;\n  }\n\n  a {\n    color: #0645ad;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst claims = Near.view(daoId, \"get_bounty_claims\", {\n  account_id: accountId,\n});\n\nreturn (\n  <Wrapper>\n    <div className=\"w-100\">\n      <h5>Bounty ID: {bounty.id}</h5>\n      <MarkdownContainer>\n        <Markdown text={bounty.description} />\n      </MarkdownContainer>\n    </div>\n    <div className=\"d-flex flex-wrap gap-5\">\n      <div>\n        <h5>Amount</h5>\n        <Widget\n          src=\"sking.near/widget/Common.TokenAmount\"\n          props={{\n            amountWithoutDecimals: bounty.amount,\n            address: bounty.token,\n          }}\n        />\n      </div>\n      <div>\n        <h5>Hours</h5>\n        <p>{bounty.max_deadline / 3600000000000}</p>\n      </div>\n    </div>\n    <CardFooter>\n      {!claims.length > 0 && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: <>Claim ({bounty.times - claims.length} left)</>,\n            onClick: handleClaim,\n          }}\n        />\n      )}\n      {claims.length > 0 && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: <>Submit</>,\n            onClick: handleSubmit,\n          }}\n        />\n      )}\n      {claims.length > 0 && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: <>Unclaim</>,\n            onClick: handleUnclaim,\n          }}\n        />\n      )}\n    </CardFooter>\n  </Wrapper>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dev.task", "__row_index": 0}