{"tx_hash": "34X5M4GhAK9mFgkWMMDz6Wed5UFMQSWbVuT5BJukzpJj", "action_id_social": "GKSCD5LixaPuFw9cHGJ5huZRj8un2MmqU5wEX85DmEWh-0-widget", "block_id": 87880981, "block_timestamp": "2023-03-22 16:12:36.914", "signer_id": "hack.near", "widget_name": "Common.DAO.Library", "source_code": "const ownerId = \"hack.near\";\nconst curatedComps = [\n  {\n    type: \"dao\",\n    name: \"General\",\n    id: \"general\",\n    icon: \"bi-menu-button-wide-fill\",\n    components: [\n      {\n        accountId: \"hack.near\",\n        widgetName: \"MultiDAO\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"GroupCheck\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"CreateDAO\",\n      },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"DAO Search\",\n    icon: \"bi-search\",\n    id: \"explore\",\n    components: [\n      {\n        accountId: \"onboarder.near\",\n        widgetName: \"DAOSocialSearch\",\n      },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"Membership\",\n    id: \"membership\",\n    icon: \"bi-person-badge\",\n    components: [\n      {\n        accountId: \"hack.near\",\n        widgetName: \"AddMemberToRole\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"RemoveMemberFromRole\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"DAOs\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"DAO\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"Groups\",\n      },\n      {\n        accountId: \"hack.near\",\n        widgetName: \"GroupMembers\",\n      },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"Transfers\",\n    id: \"transfers\",\n    icon: \"bi-safe\",\n    components: [\n      {\n        accountId: \"hack.near\",\n        widgetName: \"TransferProposal\",\n      },\n      {\n        accountId: \"nearweekapp.near\",\n        widgetName: \"Easy-DAO-Payout-Proposal\",\n      },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"Polls\",\n    id: \"polls\",\n    icon: \"bi-check2-square\",\n    components: [\n      {\n        accountId: \"hack.near\",\n        widgetName: \"CreatePoll\",\n      },\n      {\n        accountId: \"easypoll.near\",\n        widgetName: \"EasyPoll\",\n      },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"Functions\",\n    id: \"functions\",\n    icon: \"bi-arrows-move\",\n    components: [\n      { accountId: \"hack.near\", widgetName: \"FunctionCallProposal\" },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"Metadata\",\n    id: \"metadata\",\n    icon: \"bi-box-seam\",\n    components: [\n      { accountId: \"mob.near\", widgetName: \"MetadataEditor\" },\n      { accountId: \"gov.near\", widgetName: \"ProjectEditor\" },\n    ],\n  },\n  {\n    type: \"dao\",\n    name: \"DAO Tools\",\n    id: \"tools\",\n    icon: \"bi-tools\",\n    components: [\n      { accountId: \"hack.near\", widgetName: \"PullRequest\" },\n      { accountId: \"hack.near\", widgetName: \"GetDAOPolicy\" },\n      { accountId: \"hack.near\", widgetName: \"BufferZone\" },\n    ],\n  },\n];\nconst filterTag = props.commonComponentTag ?? \"dao\";\nconst debug = props.debug ?? false;\n\nconst renderCategory = (categoryId) => {\n  if (!categoryId || categoryId === \"\") return <></>;\n  const item = curatedComps.find((i) => i.id == categoryId);\n  return (\n    <div class=\"mt-3\">\n      <div class=\"text fs-5 text-muted mb-1\" id={item.id}>\n        {item.type}\n      </div>\n      <div class=\"border border-2 mb-4 rounded\"></div>\n      <div class=\"container\">\n        <div className=\"row \">\n          {items.components.map((component, i) => (\n            <div class=\"col-6 mb-2\">\n              <Widget\n                key={i}\n                src=\"adminalpha.near/widget/ComponentCard\"\n                props={{\n                  accountId: component.accountId,\n                  widgetName: component.widgetName,\n                  expanded: false,\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nState.init({\n  tab: \"home\",\n  id: \"\",\n});\n\nconst renderHome = () => {\n  return (\n    <div>\n      <Widget src={`${ownerId}/widget/Common.DAO`} />;\n    </div>\n  );\n};\n\nconst renderSearch = () => {\n  return (\n    <div>\n      <Widget src={`${ownerId}/widget/Applications`} />;\n    </div>\n  );\n};\n\nconst onSelect = (selection) => {\n  State.update({ tab: selection.tab, id: selection.id ? selection.id : \"\" });\n};\n\nconst renderContent = {\n  home: renderHome(),\n  search: renderSearch(),\n  type: renderCategory(state.id),\n}[state.tab];\n\nreturn (\n  <>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <Widget\n          src={`${ownerId}/widget/Common.DAO.Library.Navbar`}\n          props={{\n            tab: state.tab,\n            onSelect,\n            navItems: curatedComps.map((i) => ({\n              type: i.type,\n              name: i.name,\n              icon: i.icon,\n              id: i.id,\n            })),\n          }}\n        />\n        <hr className=\"border-2\" />\n        <Widget\n          src=\"miraclx.near/widget/Attribution\"\n          props={{ authors: [ownerId], dep: true }}\n        />\n      </div>\n      <div class=\"col-md-9\">\n        {\" \"}\n        <h2>DAO Component Library</h2>\n        <p class=\"text text-muted\">\n          Collections of building blocks for on-chain user interfaces.\n        </p>\n        {renderContent}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Common.DAO.Library"}