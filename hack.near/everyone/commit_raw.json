{"tx_hash": "AinAqkGqdNg3jMkzkSBawwXGqzGtqqaEaTFSypNdVVBN", "action_id_social": "7aS4Qjwqj5xzEar8dA4XHP3HUGwRMa6wr7A2T1kvp9Xx-0-widget", "block_id": 94017539, "block_timestamp": "2023-06-12T05:27:44.499Z", "signer_id": "hack.near", "widget_name": "everyone", "source_code": "const minimumConnections = props.minimumConnections ?? 25;\n\nconst accountId = props.accountId ?? context.accountId;\n\nif (!accountId) {\n  return \"\";\n}\n\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nif (policy === null) {\n  return \"\";\n}\n\nconst groups = policy.roles\n  .filter((role) => role.name === \"community\")\n  .map((role) => {\n    const group = role.kind.Group;\n\n    return group;\n  });\n\nconst isMember = groups.map((group) => {\n  return !group\n    ? false\n    : group.filter((address) => address === accountId).length > 0;\n})?.[0];\n\nconst allAccounts = Social.keys(`*/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nif (allAccounts === null) {\n  return \"\";\n}\n\nconst mutualFollowersCount = {};\n\nfor (const account of Object.keys(allAccounts)) {\n  const followers = allAccounts[account]?.graph?.follow;\n\n  if (followers) {\n    for (const follower of Object.keys(followers)) {\n      if (allAccounts[follower]?.graph?.follow?.[account]) {\n        mutualFollowersCount[account] =\n          (mutualFollowersCount[account] || 0) + 1;\n      }\n    }\n  }\n}\n\nconst rankedAccounts = Object.entries(mutualFollowersCount);\n\nrankedAccounts.sort((a, b) => b[1] - a[1]);\n\nconst filteredAccounts = rankedAccounts.filter(\n  ([_, count]) => count > minimumConnections\n);\n\nconst Wrapper = styled.div`\n  /* Add styles for responsiveness */\n  @media (max-width: 576px) {\n    .content {\n      flex-direction: column;\n    }\n  }\n`;\n\nconst FollowButtonWrapper = styled.div`\n  width: 100%;\n  padding: 2px;\n  display: flex;\n  justify-content: space-between;\n\n  div,\n  button {\n    flex-grow: 1;\n    padding: 8px;\n    margin: 4px;\n  }\n\n  @media (max-width: 1200px) {\n    width: auto;\n    div,\n    button {\n      width: auto;\n    }\n  }\n`;\n\nreturn (\n  <Wrapper>\n    <div className=\"d-flex border-bottom justify-content-between\">\n      <div className=\"p-1\">\n        <h2>Everyone</h2>\n        <h5>\n          <i>minimumConnections = {minimumConnections} </i>\n        </h5>\n        <p>\n          <i>{filteredAccounts.length} qualified accounts</i>\n        </p>\n      </div>\n      <div className=\"p-1 m-3\">\n        <div>\n          <Widget\n            src=\"mob.near/widget/Profile\"\n            props={{ accountId: \"build.sputnik-dao.near\" }}\n          />\n          <FollowButtonWrapper>\n            <div>\n              <Widget\n                src=\"near/widget/FollowButton\"\n                props={{\n                  accountId: \"build.sputnik-dao.near\",\n                }}\n              />\n            </div>\n            {!isMember && (\n              <div>\n                <Widget\n                  src=\"hack.near/widget/DAO.Join\"\n                  props={{\n                    daoId: \"build.sputnik-dao.near\",\n                    role: \"community\",\n                  }}\n                />\n              </div>\n            )}\n          </FollowButtonWrapper>\n        </div>\n      </div>\n    </div>\n    {filteredAccounts.map(([accountId, count], i) => (\n      <div key={i} className=\"d-flex border-bottom justify-content-between\">\n        <div className=\"d-flex align-items-center\">\n          <div className=\"p-3\">\n            <h5>{i + 1}</h5>\n          </div>\n          <div className=\"p-2\">\n            <Widget src=\"mob.near/widget/Profile\" props={{ accountId }} />\n          </div>\n        </div>\n        <div className=\"p-1 m-3\">\n          <p>{count} mutual followers</p>\n          <Widget src=\"mob.near/widget/FollowButton\" props={{ accountId }} />\n        </div>\n      </div>\n    ))}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/everyone", "__row_index": 2}