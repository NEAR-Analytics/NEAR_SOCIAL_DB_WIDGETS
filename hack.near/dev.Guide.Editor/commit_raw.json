{"tx_hash": "3rzmidGZLTfw9hGD3nA5HZBgYkoWyBqa8WdfwVEehkaK", "action_id_social": "DA4QW4H19sFMsX77FYksG4g76QRS9dvyG4wAswpimqzL-0-widget", "block_id": 91828580, "block_timestamp": "2023-05-14T10:06:03.338Z", "signer_id": "hack.near", "widget_name": "dev.Guide.Editor", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\n\nconst guide = Social.get(`${daoId}/settings/dev/guide`);\n\nif (guide === null) {\n  return \"Loading...\";\n}\n\nState.init({\n  guide,\n});\n\nconst defaultWidgets = [\n  {\n    src: \"hack.near/widget/dev.Summary\",\n  },\n  {\n    src: \"mob.near/widget/Applications\",\n  },\n  {\n    src: \"mob.near/widget/People\",\n  },\n];\n\nconst settingWidgets = guide && JSON.parse(guide);\n\nif (state.widgets === undefined) {\n  const widgets = settingWidgets ?? defaultWidgets;\n  State.update({ widgets });\n}\n\nconst move = (fromIndex, toIndex) => {\n  const widget = state.widgets.splice(fromIndex, 1)[0];\n  if (toIndex !== undefined) {\n    state.widgets.splice(toIndex, 0, widget);\n  }\n  State.update();\n};\n\nconst guide_args = JSON.stringify({\n  data: {\n    [daoId]: {\n      settings: {\n        dao: {\n          guide: state.guide,\n        },\n      },\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(guide_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"update featured guide\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"200000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: \"100000000000000000000000\",\n      gas: \"200000000000000\",\n    },\n  ]);\n};\n\nconst renderMenu = (src, requireLogin, index) => {\n  return (\n    <div className=\"mb-3\" key=\"menu\">\n      <div className=\"font-monospace mb-2\">{src}</div>\n      <button\n        className=\"btn btn-primary\"\n        title=\"Move Up\"\n        disabled={index === 0}\n        onClick={() => move(index, index - 1)}\n      >\n        <i className=\"bi bi-chevron-up\" />\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        title=\"Move Down\"\n        disabled={index + 1 === state.widgets.length}\n        onClick={() => move(index, index + 1)}\n      >\n        <i className=\"bi bi-chevron-down\" />\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        title=\"Move to the Tottom\"\n        disabled={index === 0}\n        onClick={() => move(index, 0)}\n      >\n        <i className=\"bi bi-chevron-double-up\" />\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        title=\"Move to the Bottom\"\n        disabled={index + 1 === state.widgets.length}\n        onClick={() => move(index, state.widgets.length - 1)}\n      >\n        <i className=\"bi bi-chevron-double-down\" />\n      </button>\n      <button\n        className=\"btn btn-danger ms-4\"\n        title=\"Remove\"\n        onClick={() => move(index, undefined)}\n      >\n        <i className=\"bi bi-trash3\" /> Remove\n      </button>\n    </div>\n  );\n};\n\nconst addWidget = ({ widgetPath: guide, onHide }) => {\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => {\n        State.update({\n          guide,\n        });\n        onHide();\n      }}\n    >\n      <i className=\"bi bi-plus-lg\" /> Add\n    </button>\n  );\n};\n\nreturn (\n  <>\n    <h2>Guidebook Editor</h2>\n    <h3>FEATURED TUTORIAL</h3>\n    <h5>Update Widget Source Path:</h5>\n    <input\n      type=\"text\"\n      value={state.guide}\n      placeholder=\"account.near/widget/Example\"\n    />\n    <div className=\"mt-2\">\n      <CommitButton\n        disabled={state.guide === guide}\n        data={{\n          settings: {\n            dev: { guide: JSON.stringify(state.widgets) },\n          },\n        }}\n      >\n        Save\n      </CommitButton>\n      <button\n        disabled={state.guide === guide}\n        className=\"btn btn-outline-success\"\n        onClick={handleProposal}\n      >\n        Propose\n      </button>\n      {settingWidgets &&\n        JSON.stringify(state.widgets) !== JSON.stringify(settingWidgets) && (\n          <button\n            className=\"btn btn-outline-primary\"\n            onClick={() => State.update({ widgets: settingWidgets })}\n          >\n            Revert\n          </button>\n        )}\n      {JSON.stringify(state.widgets) !== JSON.stringify(defaultWidgets) && (\n        <button\n          className=\"btn btn-outline-danger float-end\"\n          onClick={() => State.update({ widgets: defaultWidgets })}\n        >\n          Reset\n        </button>\n      )}\n    </div>\n    <div className=\"mb-2 mt-3\">\n      <Widget\n        src=\"hack.near/widget/dev.Widget.Search\"\n        props={{ extraButtons: addWidget }}\n      />\n    </div>\n    <hr />\n    <h4>ADDITIONAL RESOURCES</h4>\n\n    {state.widgets.map(({ src, requiresLogin }, i) => (\n      <div key={src} className=\"border rounded-4 p-3 mb-3\">\n        {renderMenu(src, requireLogin, i)}\n        <div className=\"text-bg-light rounded-4 p-3\">\n          <Widget src={src} />\n        </div>\n      </div>\n    ))}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dev.Guide.Editor", "__row_index": 0}