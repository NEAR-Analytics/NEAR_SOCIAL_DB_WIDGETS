{"tx_hash": "FKP99nuZ2yHswrqFNW7CGmdWfMxiUmJ9D11tMTkZVFMq", "action_id_social": "Emak8byxnKLAV1Qi94c1rcJaT9TZ4txcWjPoYfUDvFV4-0-widget", "block_id": 93617652, "block_timestamp": "2023-06-06T22:40:56.673Z", "signer_id": "hack.near", "widget_name": "interest.accumulator", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"meta.sputnik-dao.near\";\n\nlet slices = Social.getr(`${daoId}/accumulator`);\n\nif (slices === null) {\n  return \"\";\n}\n\nState.init({\n  label: \"placeholder\",\n  value: 100,\n});\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst deposit = policy.proposal_bond;\n\nconst slice_args = JSON.stringify({\n  data: {\n    [state.daoId]: {\n      accumulator: state.slice,\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(slice_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"propose new slice for the interest accumulator\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"300000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"300000000000000\",\n    },\n  ]);\n};\n\nlet Style = styled.div`\n\n  .barTextH{\n    transition: fill 0.2s;\n\n  }\n.barTextH:hover{\n    fill: #ad610a;\n\n  }\n  .bar {\n    transition: fill 0.2s;\n  }\n\n  .bar:hover {\n    fill: #ffa726;\n  }\n\n  .bar-chart {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n    svg {\n      width: 80%;\n    }\n\n    rect {\n      shape-rendering: crispEdges;\n      fill: #61dafb;\n      stroke: #333;\n      stroke-width: 1;\n    }\n\n\n    `;\n\nconst onChangeLabel = (label) => {\n  State.update({\n    label,\n  });\n};\n\nconst onChangeValue = (value) => {\n  State.update({\n    value,\n  });\n};\n\nconst values = [50, 50];\nconst labels = [\"yea\", \"no\"];\n\nreturn (\n  <div>\n    <h3>Add Your Slice</h3>\n    <h5>Label: What?</h5>\n    <input type=\"text\" onChange={(e) => onChangeLabel(e.target.value)}></input>\n    <br />\n    <h5>Value: How much?</h5>\n    <input type=\"text\" onChange={(e) => onChangeValue(e.target.value)}></input>\n    <p>{state.slice}</p>\n    <div className=\"mb-2\">\n      <button className=\"btn btn-outline-success m-1\" onClick={handleProposal}>\n        Propose Changes\n      </button>\n    </div>\n    <Widget src=\"y3k.near/widget/pieChartSVG\" props={{ labels, values }} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/interest.accumulator", "__row_index": 0}