{"tx_hash": "2NzPAPYD6cxom6b7LvZenWQQrA5LeAFd3BcFTxQVZpRg", "action_id_social": "CSQS889ZHMonZRC6MTuT9U8P4s2iYe8R7A3LSuvDEbk8-0-widget", "block_id": 91568507, "block_timestamp": "2023-05-11T00:34:54.415Z", "signer_id": "hack.near", "widget_name": "DAO.Bounty.Proposal", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n  description: state.description,\n  token: state.token,\n  amount: state.amount,\n  times: state.times,\n  max_deadline: state.max_deadline,\n  deposit: state.deposit,\n  gas: state.gas,\n});\n\nconst handleProposal = () => {\n  const bounty = {\n    description: state.description,\n    token: state.token ?? \"\",\n    amount: state.amount,\n    times: JSON.parse(state.times),\n    max_deadline: JSON.stringify(state.max_deadline * 3600000000000),\n  };\n  const gas = state.gas ?? 200000000000000;\n  const deposit = state.deposit ?? 100000000000000000000000;\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"new bounty proposal\",\n          kind: {\n            AddBounty: {\n              bounty,\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\n\nconst onChangeDescription = (description) => {\n  State.update({\n    description,\n  });\n};\n\nconst onChangeToken = (token) => {\n  State.update({\n    token,\n  });\n};\n\nconst onChangeAmount = (amount) => {\n  State.update({\n    amount,\n  });\n};\n\nconst onChangeTimes = (times) => {\n  State.update({\n    times,\n  });\n};\n\nconst onChangeDeadline = (max_deadline) => {\n  State.update({\n    max_deadline,\n  });\n};\n\nconst onChangeDeposit = (deposit) => {\n  State.update({\n    deposit,\n  });\n};\n\nconst onChangeGas = (gas) => {\n  State.update({\n    gas,\n  });\n};\n\nreturn (\n  <div className=\"mb-3\">\n    <h2>Propose New Bounty</h2>\n    <h5>Bounty Description:</h5>\n    <div className=\"mb-2\">\n      <textarea onChange={(e) => onChangeDescription(e.target.value)} />\n    </div>\n    <div className=\"mb-2\">\n      Reward Token ID:\n      <input type=\"text\" onChange={(e) => onChangeToken(e.target.value)} />\n    </div>\n    <div className=\"row mb-3\">\n      <div className=\"col-sm mb-3\">\n        Token reward amount per bounty claim:\n        <input type=\"number\" onChange={(e) => onChangeAmount(e.target.value)} />\n      </div>\n      <div className=\"col-sm mb-3\">\n        Number of times the bounty can be claimed:\n        <input type=\"number\" onChange={(e) => onChangeTimes(e.target.value)} />\n      </div>\n      <div className=\"col-sm mb-3\">\n        Number of hours (after claim) until the deadline:\n        <input\n          type=\"number\"\n          onChange={(e) => onChangeDeadline(e.target.value)}\n        />\n      </div>\n    </div>\n    <div className=\"row mb-3\">\n      <div className=\"col-sm mb-3\">\n        Deposit{\" \"}\n        <input\n          type=\"number\"\n          onChange={(e) => onChangeDeposit(e.target.value)}\n        />\n      </div>\n      <div className=\"col-sm mb-3\">\n        Gas\n        <input type=\"number\" onChange={(e) => onChangeGas(e.target.value)} />\n      </div>\n    </div>\n    <button className=\"btn btn-success\" onClick={handleProposal}>\n      Propose Bounty\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/DAO.Bounty.Proposal", "__row_index": 2}