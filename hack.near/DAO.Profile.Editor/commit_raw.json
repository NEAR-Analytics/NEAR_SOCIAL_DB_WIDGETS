{"tx_hash": "DSyXFCxHzd9oP3BxYUhaE7LTNTD1ES9QjKXTqBGeDkhU", "action_id_social": "7Z9m3bKAtKPtRLxMGr3Q2ANGySakod6kJGsR5L5FK2Ec-0-widget", "block_id": 92565569, "block_timestamp": "2023-05-24T01:25:18.702Z", "signer_id": "hack.near", "widget_name": "DAO.Profile.Editor", "source_code": "const accountId = context.accountId;\n\nlet profile = Social.getr(`${daoId}/profile`);\n\nif (profile === null) {\n  return \"Loading...\";\n}\n\nState.init({\n  profile,\n  daoId: \"\",\n  daoName: \"\",\n  isDao: false,\n  isAvailable: false,\n});\n\nconst daos = Near.view(\"sputnik-dao.near\", \"get_dao_list\");\n\nif (daos === null) {\n  return \"Loading...\";\n}\n\nconst groupId = props.groupId ?? \"community\";\nconst policy = Near.view(state.daoId, \"get_policy\");\n\nconst deposit = policy.proposal_bond;\n\nconst profile_args = JSON.stringify({\n  data: {\n    [state.daoId]: {\n      profile: state.profile,\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(profile_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"update DAO profile on NEAR Social\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"300000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"300000000000000\",\n    },\n  ]);\n};\n\nconst onChangeDao = (daoId) => {\n  State.update({\n    daoId,\n  });\n};\n\nlet string = \".sputnik-dao.near\";\n\nconst checkDao = (daoId) => {\n  if (daoId.indexOf(string) !== -1) {\n    return State.update({ isDao: true });\n  }\n};\n\nconst validDao = checkDao(state.daoId);\n\nconst dao_name = daoId - \".sputnik-dao.near\";\n\nconst checkAvailability = (daos) => {\n  if (daos.indexOf(state.daoId) !== -1) {\n    return State.update({ isAvailable: false });\n  }\n};\n\nconst availableName = checkAvailability(daos);\n\nreturn (\n  <div className=\"mb-3\">\n    <div className=\"row\">\n      <div className=\"col-lg-6\">\n        <div>\n          <h4>Edit DAO Profile</h4>\n        </div>\n        <div className=\"mb-3\">\n          Sputnik Contract ID:\n          <input\n            type=\"text\"\n            placeholder=\"<example>.sputnik-dao.near\"\n            value={state.daoId}\n            onChange={(e) => onChangeDao(e.target.value)}\n          />\n        </div>\n        {availableName ? (\n          <div className=\"mb-2\">\n            <Widget\n              src=\"mob.near/widget/MetadataEditor\"\n              props={{\n                initialMetadata: profile,\n                onChange: (profile) => State.update({ profile }),\n                options: {\n                  name: { label: \"Name\" },\n                  image: { label: \"Logo\" },\n                  backgroundImage: { label: \"Background\" },\n                  description: { label: \"About\" },\n                  tags: {\n                    label: \"Tags\",\n                    tagsPattern: \"*/profile/tags/*\",\n                    placeholder: \"dev, gaming, nft, privacy, eth\",\n                  },\n                  linktree: {\n                    links: [\n                      {\n                        label: \"Twitter\",\n                        prefix: \"https://twitter.com/\",\n                        name: \"twitter\",\n                      },\n                      {\n                        label: \"Github\",\n                        prefix: \"https://github.com/\",\n                        name: \"github\",\n                      },\n                      {\n                        label: \"Telegram\",\n                        prefix: \"https://t.me/\",\n                        name: \"telegram\",\n                      },\n                      {\n                        label: \"Website\",\n                        prefix: \"https://\",\n                        name: \"website\",\n                      },\n                    ],\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : (\n          <p>\u2b06\ufe0f input existing DAO account!</p>\n        )}\n        <div className=\"mb-2\">\n          <button\n            className=\"btn btn-outline-success m-1\"\n            onClick={handleProposal}\n            disabled={!validDao}\n          >\n            Propose Changes\n          </button>\n          <button\n            className=\"btn btn-outline-primary m-1\"\n            href={`#/hack.near/widget/DAO.Profile?daoId=${daoId}`}\n            disabled={!validDao}\n          >\n            View Profile\n          </button>\n        </div>\n      </div>\n      <div className=\"col-lg-6\">\n        <div>\n          <Widget\n            src=\"hack.near/widget/DAO.ProfileLarge\"\n            props={{ daoId: state.daoId, profile: state.profile }}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/DAO.Profile.Editor", "__row_index": 1}