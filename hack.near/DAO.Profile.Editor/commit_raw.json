{"tx_hash": "7QXEKUzsiWSFo8W9G3RoDcN8GEfEcaM2QNdRUYFYgkXD", "action_id_social": "6mqst2EGm6LdeZNsMyy8MFm5msi3T16mVgvp8VwstWGr-0-widget", "block_id": 95113519, "block_timestamp": "2023-06-27T00:54:58.507Z", "signer_id": "hack.near", "widget_name": "DAO.Profile.Editor", "source_code": "const accountId = context.accountId;\n\nlet profile = Social.getr(`${daoId}/profile`);\n\nif (profile === null) {\n  return \"Loading...\";\n}\n\nconst groups = [`${accountId}`];\n\nState.init({\n  args: {\n    config: {\n      name: state.name,\n      purpose: state.purpose,\n      metadata: \"\",\n    },\n    policy: {\n      groups,\n    },\n  },\n  profile,\n  name,\n  isDao: false,\n  isAvailable: false,\n});\n\nconst daoId = state.name + \".sputnik-dao.near\";\nconst name = state.name;\n\nconst daos = Near.view(\"sputnik-dao.near\", \"get_dao_list\");\n\nif (daos === null) {\n  return \"Loading...\";\n}\n\nconst groupId = props.groupId ?? \"community\";\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst deposit = policy.proposal_bond;\n\nconst profile_args = JSON.stringify({\n  data: {\n    [state.daoId]: {\n      profile: state.profile,\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(profile_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"update DAO profile on NEAR Social\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"80000000000000000000000\",\n                  gas: \"219000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"219000000000000\",\n    },\n  ]);\n};\n\nconst dao_args = Buffer.from(JSON.stringify(state.args), \"utf-8\").toString(\n  \"base64\"\n);\n\nconst handleCreate = () => {\n  Near.call([\n    {\n      contractName: \"sputnik-dao.near\",\n      methodName: \"create\",\n      args: {\n        name: state.name,\n        args: dao_args,\n      },\n      deposit: \"7000000000000000000000000\",\n      gas: \"280000000000000\",\n    },\n  ]);\n};\n\nconst onChangeName = (name) => {\n  State.update({\n    name,\n  });\n};\n\nconst checkAvailability = (daos) => {\n  if (daos.indexOf(daoId) !== -1) {\n    return State.update({ isAvailable: false });\n  }\n};\n\nconst availableName = checkAvailability(daos);\n\nconst checkValidity = (name) => {\n  if (name.length > 2) {\n    return State.update({ isValid: true });\n  }\n};\n\nconst validName = checkValidity(state.name);\n\nreturn (\n  <div className=\"mb-3\">\n    <div className=\"row\">\n      <div className=\"col-lg-6\">\n        <div>\n          <h4>Edit DAO Profile</h4>\n        </div>\n        <div className=\"mb-3\">\n          {state.name && <h5>{daoId}</h5>}\n          {validName ? (\n            <div>\n              {availableName ? (\n                <p className=\"text-success\">ready for updates</p>\n              ) : (\n                <p className=\"text-danger\">does not exist yet</p>\n              )}\n            </div>\n          ) : (\n            <div>\n              {state.name ? (\n                <p className=\"text-secondary\">must be 3+ characters</p>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n          <input\n            type=\"text\"\n            placeholder=\"<example>.sputnik-dao.near\"\n            value={state.name}\n            onChange={(e) => onChangeName(e.target.value)}\n          ></input>\n        </div>\n        {availableName ? (\n          <div className=\"mb-2\">\n            <Widget\n              src=\"mob.near/widget/MetadataEditor\"\n              props={{\n                initialMetadata: profile,\n                onChange: (profile) => State.update({ profile }),\n                options: {\n                  name: { label: \"Name\" },\n                  image: { label: \"Logo\" },\n                  backgroundImage: { label: \"Background\" },\n                  description: { label: \"About\" },\n                  tags: {\n                    label: \"Tags\",\n                    tagsPattern: \"*/profile/tags/*\",\n                    placeholder: \"dev, gaming, nft, privacy, eth\",\n                  },\n                  linktree: {\n                    links: [\n                      {\n                        label: \"Twitter\",\n                        prefix: \"https://twitter.com/\",\n                        name: \"twitter\",\n                      },\n                      {\n                        label: \"Github\",\n                        prefix: \"https://github.com/\",\n                        name: \"github\",\n                      },\n                      {\n                        label: \"Telegram\",\n                        prefix: \"https://t.me/\",\n                        name: \"telegram\",\n                      },\n                      {\n                        label: \"Website\",\n                        prefix: \"https://\",\n                        name: \"website\",\n                      },\n                    ],\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : (\n          <p>\u2b06\ufe0f input existing DAO account!</p>\n        )}\n        {availableName ? (\n          <div className=\"mb-2\">\n            <button\n              className=\"btn btn-outline-success m-1\"\n              onClick={handleProposal}\n              disabled={!validName}\n            >\n              Propose Changes\n            </button>\n            <button\n              className=\"btn btn-outline-primary m-1\"\n              href={`#/hack.near/widget/DAO.Profile?daoId=${daoId}`}\n              disabled={!validName}\n            >\n              Request Permission\n            </button>\n          </div>\n        ) : (\n          <div className=\"mb-2\">\n            <button\n              disabled={!validName}\n              className=\"btn btn-outline-success mt-2\"\n              onClick={handleCreate}\n            >\n              Create DAO\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"col-lg-6\">\n        {daoId ? (\n          <Widget\n            src=\"mob.near/widget/ProfileLarge\"\n            props={{\n              accountId: daoId,\n              profile: state.profile,\n            }}\n          />\n        ) : (\n          <Widget\n            src=\"mob.near/widget/ProfileLarge\"\n            props={{\n              accountId: daoId,\n              profile: state.profile,\n            }}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/DAO.Profile.Editor", "__row_index": 4}