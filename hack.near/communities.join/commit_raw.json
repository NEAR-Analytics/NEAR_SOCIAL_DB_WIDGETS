{"tx_hash": "AVRgp4VX66DUk9MpnG4FiKzCg6SwLomBxGUUTtJnqu7d", "action_id_social": "CZrw77W53GxSEaBXoxcSdyoUVqkiYKPuwQoHvMw6zfsB-0-widget", "block_id": 94948793, "block_timestamp": "2023-06-24T21:23:48.538Z", "signer_id": "hack.near", "widget_name": "communities.join", "source_code": "const accountId = context.accountId;\nconst memberId = props.memberId ?? \"multi.near\";\nconst roleId = props.roleId ?? \"voter\";\nconst daoId = props.daoId ?? \"rc-dao.sputnik-dao.near\";\n\nif (!accountId) {\n  return \"\";\n}\n\nconst policy = Near.view(daoId, \"get_policy\");\nconst deposit = policy.proposal_bond;\n\nconst group = policy.roles\n  .filter((role) => role.name === roleId)\n  .map((role) => role.kind.Group);\n\nState.init({\n  isMember: false,\n});\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"add member to DAO\",\n          kind: {\n            AddMemberToRole: {\n              member_id: memberId ?? accountId,\n              role: roleId ?? \"council\",\n            },\n          },\n        },\n      },\n      gas: 300000000000000,\n      deposit: deposit,\n    },\n  ]);\n};\n\nconst groupMembers = group.join(\", \");\n\nconst checkMembership = (groupMembers) => {\n  if (groupMembers.indexOf(memberId) !== -1) {\n    return State.update({ isMember: true });\n  }\n};\n\nconst validMember = checkMembership(groupMembers);\n\nreturn (\n  <div>\n    <button\n      disabled={validMember}\n      className=\"btn btn-outline-success\"\n      onClick={handleProposal}\n    >\n      Join DAO\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/communities.join", "__row_index": 2}