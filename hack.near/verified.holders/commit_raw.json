{"tx_hash": "6FbsUt9ubc2puqctv89cwUCZUWrz4upkvz1MRNaJ3N7C", "action_id_social": "AL9WHPrp2CLJjP4uo9VkAucE4fAXFaToPoTadxBN43Qu-0-widget", "block_id": 94400685, "block_timestamp": "2023-06-17T17:13:34.818Z", "signer_id": "hack.near", "widget_name": "verified.holders", "source_code": "const data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading...\";\n}\n\nconst accounts = Object.entries(data);\nconst holderData = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n\n  const nftData = Near.view(\"mint.sharddog.near\", \"nft_supply_for_owner\", {\n    account_id: accountId,\n  });\n\n  if (nftData && nftData > 0) {\n    holderData.push({ accountId, nftData });\n  }\n}\n\nholderData.sort((a, b) => b.nftData - a.nftData);\n\nconst holderProfiles = holderData.map((holder, index) => (\n  <div className=\"mb-2\" key={holder.accountId}>\n    <h5 className=\"m-3\">\n      <b>Rank {index + 1}:</b> Minted {holder.nftData}\n    </h5>\n    <Widget\n      src=\"near/widget/AccountProfileCard\"\n      props={{ accountId: holder.accountId }}\n    />\n  </div>\n));\n\nreturn (\n  <>\n    <h3 className=\"m-3\">ShardDog NFT Holders</h3>\n    <h5 className=\"m-3\">\n      <i>{holderProfiles.length} Total</i>\n    </h5>\n    <div className=\"m-3\">{holderProfiles}</div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/verified.holders", "__row_index": 2}