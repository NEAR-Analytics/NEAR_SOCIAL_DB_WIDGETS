{"tx_hash": "97Lo5nrC22jajSmxVCNNwnatZAjxQ6iV38wj3P1xDcME", "action_id_social": "FL6oSxbShf3Qubq3pSFX9zWQFpxnV9ZfAncjjxXCnr8X-0-widget", "block_id": 94414774, "block_timestamp": "2023-06-17T21:38:07.166Z", "signer_id": "hack.near", "widget_name": "GetProposal", "source_code": "const accountId = context.accountId;\nconst daoId = props.daoId ?? \"rc-dao.sputnik-dao.near\";\nconst role = props.role ?? \"voter\";\n\nState.init({\n  daoId,\n  proposals: [],\n  lastProposalId: null,\n  hasMore: true,\n});\n\nconst loadProposals = () => {\n  const lastProposalId =\n    state.lastProposalId !== null\n      ? state.lastProposalId\n      : Near.view(daoId, \"get_last_proposal_id\");\n  if (lastProposalId === null) return;\n\n  if (state.proposals.length > 0 && state.proposals[0].id === lastProposalId)\n    return;\n\n  const fromIndex = Math.max(0, lastProposalId - proposalsPerPage + 1);\n  const limit = fromIndex === 0 ? lastProposalId + 1 : proposalsPerPage;\n\n  const newProposals = Near.view(daoId, \"get_proposals\", {\n    from_index: fromIndex,\n    limit: limit,\n  });\n  if (newProposals === null) return;\n\n  console.log(\"Saving new proposals...\");\n  State.update({\n    ...state,\n    hasMore: fromIndex > 0,\n    proposals: [...state.proposals, ...newProposals.reverse()],\n    lastProposalId: fromIndex - 1,\n  });\n};\n\nreturn (\n  <Widget\n    key={i}\n    src=\"sking.near/widget/DAO.Proposal\"\n    props={{ daoId: state.daoId, proposalId: lastProposalId }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/GetProposal", "__row_index": 0}