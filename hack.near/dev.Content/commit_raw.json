{"tx_hash": "6LB3onsqmt6oqBim8tfRWZqgtMMe3QRz1jj9iQdbtLfT", "action_id_social": "4cD48v8dwNXLyHVFc2Sk8wsaGNBPasMTCXUsfgSFFFCW-0-widget", "block_id": 91812128, "block_timestamp": "2023-05-14T04:57:58.488Z", "signer_id": "hack.near", "widget_name": "dev.Content", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\nconst hashtags = [\n  { name: \"dev\", required: true },\n  { name: \"bos\", required: true },\n];\n\nconst groupId = \"community\"; // which group can post?\n\nconst policy = Near.view(daoId, \"get_policy\");\nconst group = policy.roles\n  .filter((role) => role.name === groupId)\n  .map((role) => {\n    const group = role.kind.Group;\n\n    return group;\n  });\n\nconst content = context.accountId\n  ? Social.get(`${context.accountId}/settings/dev/content`)\n  : undefined;\n\nif (content === null) {\n  return \"\";\n}\n\nconst defaultWidgets = [\n  {\n    src: \"hack.near/widget/dev.Page.Header\",\n  },\n  {\n    src: \"hack.near/widget/dev.Posts\",\n    props: {\n      communityHashtags: hashtags,\n      communityDomain: \"bos\",\n      communityMembers: group[0],\n      exclusive: true,\n      allowPublicPosting: false,\n    },\n  },\n];\n\nconst widgets = (content && JSON.parse(content)) ?? defaultWidgets;\n\nconst Div = styled.div`\n  position: relative;\n  @media (hover: hover) {\n    > .edit-link {\n      display: none;\n    }\n  }\n  &:hover {\n    > .edit-link {\n      display: inline;\n    }\n  }\n`;\n\nreturn (\n  <Div>\n    <div className=\"mb-3\">\n      <Widget\n        src=\"miraclx.near/widget/Attribution\"\n        props={{\n          dep: true,\n          authors: [daoId],\n        }}\n      />\n      {context.accountId && (\n        <a\n          key=\"edit\"\n          href={\"#/hack.near/widget/dev.Page.Editor\"}\n          className=\"edit-link position-absolute top-0 end-0 link-secondary me-2 mt-1\"\n        >\n          <i class=\"bi bi-pencil\" /> Edit Content\n        </a>\n      )}\n    </div>\n    {widgets.map(\n      ({ src, requiresLogin }, i) =>\n        (!requiresLogin || context.accountId) && (\n          <div key={i} className=\"text rounded-4 p-3 mb-3\">\n            <Widget src={src} props={props} />\n          </div>\n        )\n    )}\n  </Div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dev.Content", "__row_index": 4}