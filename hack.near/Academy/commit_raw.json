{"tx_hash": "9GAvDFFM2No63R9bmsbMmNU8mGi9W4k3sdMc2ZKcPGQv", "action_id_social": "Dg5TWXCXHYpYTu7hi3B23gdNYqTpGZN1crQ9JZL843UE-0-widget", "block_id": 91793282, "block_timestamp": "2023-05-13T23:07:25.845Z", "signer_id": "hack.near", "widget_name": "Academy", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\nconst role = props.role ?? \"community\";\n\nState.init({\n  agreeIsChecked: false,\n});\n\nconst ipfsImages = {\n  logos: {\n    pagoda: \"bafkreicbpshopxasqhivaqugynulw6oan4lnypsphvwez3f5qidpa374ui\",\n    banyan: \"Qmb1dfewMhs9VyBbwvQJFnn2BxQbRWnfHS7Cugqc96TTcD\",\n    proximity: \"bafkreibi3xrwxlf5betvgmetaruwvpllc2ila4bg5ehfszoqow7f6edvom\",\n  },\n};\n\nconst web3Teams = [\n  {\n    url: \"https://www.pagoda.co\",\n    name: \"Pagoda\",\n    ipfsImage: ipfsImages.logos.pagoda,\n  },\n  {\n    url: \"https://www.banyan.gg\",\n    name: \"Banyan\",\n    ipfsImage: ipfsImages.logos.banyan,\n  },\n];\n\nfunction returnIpfsImage(cfid) {\n  return {\n    ipfs_cid: cfid,\n  };\n}\n\nState.init({\n  email: \"\",\n});\n\nconst handleSignup = () => {\n  if (state.email !== \"\") {\n    asyncFetch(\"https://monkfish-app-ginhc.ondigitalocean.app/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Everything\": \"subscription\",\n      },\n      body: JSON.stringify({\n        query:\n          \"mutation CreateEmail($email: String) { emails { create(name: $email) { entities { id } } } }\",\n        variables: {\n          email: state.email,\n        },\n      }),\n    });\n  }\n};\n\nconst handleJoin = () => {\n  const gas = 200000000000000;\n  const deposit = 100000000000000000000000;\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"potential member\",\n          kind: {\n            AddMemberToRole: {\n              member_id: accountId,\n              role: role,\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\n\nconst Wrapper = styled.div`\n  --section-gap: 69px;\n  padding-top: 69px;\n\n  @media (max-width: 1160px) {\n    .line-rounded-corners {\n      display: none !important;\n    }\n  }\n\n  @media (max-width: 900px) {\n    padding-top: 0;\n  }\n`;\n\nconst H1 = styled.h1`\n  font-family: \"FK Grotesk\", sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 90px;\n  line-height: 1;\n  text-align: center;\n  letter-spacing: -0.03em;\n  color: #000;\n  margin: 0;\n  max-width: 700px;\n\n  span {\n    display: inline-block;\n    background: #00ec97;\n    border-radius: 20px;\n    position: relative;\n    padding: 0.1em 0.2em 0;\n\n    svg {\n      position: absolute;\n      bottom: -8px;\n      right: -10px;\n      width: 24px;\n    }\n  }\n\n  @media (max-width: 900px) {\n    font-size: 50px;\n\n    span {\n      border-radius: 12px;\n      svg {\n        position: absolute;\n        bottom: -6px;\n        right: -7px;\n        width: 16px;\n      }\n    }\n  }\n`;\n\nconst Text = styled.p`\n  font-family: \"FK Grotesk\", sans-serif;\n  font-size: ${(p) => p.size ?? \"18px\"};\n  line-height: ${(p) => p.lineHeight ?? \"1.5\"};\n  font-weight: ${(p) => p.weight ?? \"400\"};\n  color: ${(p) => p.color ?? \"#000\"};\n  margin: 0;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  gap: 29px;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: \"nowrap\";\n\n    @media (max-width: 900px) {\n    flex-direction: column;\n    gap: var(--section-gap);\n    }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  gap: ${(p) => p.gap};\n  grid-template-columns: ${(p) => p.columns};\n  align-items: ${(p) => p.alignItems};\n\n  @media (max-width: 900px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Section = styled.div`\n  position: relative;\n  background-color: ${(p) => p.backgroundColor};\n  padding: 208px 24px ${(p) => p.paddingBottom ?? \"var(--section-gap)\"};\n  overflow: hidden;\n\n  @media (max-width: 900px) {\n    padding-top: var(--section-gap);\n    padding-bottom: ${(p) => p.paddingBottomMobile ?? \"var(--section-gap)\"};\n  }\n`;\n\nconst SectionTitle = styled.div`\n  position: relative;\n  z-index: 15;\n  display: inline-block;\n  background: #fff;\n  padding: 16px 42px;\n  border-radius: 20px;\n  align-self: ${(p) => (p.center ? \"center\" : undefined)};\n  margin-left: ${(p) => (p.center ? \"0px\" : p.marginLeft)};\n\n  @media (max-width: 1365px) {\n    margin-left: ${(p) => (p.center ? \"0px\" : \"-100px\")};\n  }\n\n  @media (max-width: 1160px) {\n    margin-left: 0;\n  }\n\n  @media (max-width: 900px) {\n    margin-left: ${(p) => (p.center ? \"0px\" : \"-42px\")};\n    margin-bottom: calc(var(--section-gap) * -0.5);\n\n    h2 {\n      font-size: 42px;\n    }\n  }\n`;\n\nconst SectionContent = styled.div`\n  position: relative;\n  display: flex;\n  gap: ${(p) => p.gap ?? \"var(--section-gap)\"};\n  flex-direction: column;\n  align-items: flex-start;\n  z-index: 15;\n  max-width: 790px;\n  max-width: 900px;\n  margin: 0 auto;\n\n  @media (max-width: 900px) {\n    h3 {\n      font-size: 30px;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 1060px;\n  margin: 0 auto;\n  gap: var(--section-gap);\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: var(--section-gap) 24px;\n`;\n\nconst LogoLinks = styled.div`\n  display: flex;\n  gap: 72px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  width: 100%;\n\n  a {\n    display: block;\n    height: 24px;\n    color: var(--sand10);\n\n    img {\n      display: block;\n      height: 100%;\n      margin: 0 auto;\n    }\n  }\n\n  @media (max-width: 550px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 32px;\n\n    a {\n      height: 20px;\n    }\n  }\n`;\n\nconst IconAndContent = styled.div`\n  display: flex;\n  gap: 32px;\n  align-items: flex-start;\n  position: relative;\n\n  svg {\n    width: 48px;\n    flex-shrink: 0;\n    flex-grow: 0;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst Line = styled.div`\n  --size: 10px;\n  --radius: 80px;\n  --color: #fff;\n  --left: -45px;\n  border: var(--size) solid var(--color);\n  position: absolute;\n  z-index: 10;\n  pointer-events: none;\n\n  ${(p) =>\n    p.straightVertical &&\n    `\n    border: none;\n    width: var(--size);\n    background: var(--color);\n  `}\n\n  ${(p) =>\n    p.straightHorizontal &&\n    `\n    border: none;\n    height: var(--size);\n    background: var(--color);\n  `}\n\n  @media (max-width: 1160px) {\n    display: none !important;\n  }\n`;\n\nconst LineSpacer = styled.div`\n  @media (max-width: 1160px) {\n    display: none;\n  }\n`;\n\nconst InputContainer = styled.div`\n  width: 320px;\n`;\n\nconst LineRoundedCorners = (props) => {\n  return (\n    <svg\n      width=\"50\"\n      height=\"20\"\n      viewBox=\"0 0 50 20\"\n      {...props}\n      className=\"line-rounded-corners\"\n      style={{\n        zIndex: 10,\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...props.style,\n      }}\n    >\n      <path\n        d=\"M 30.015 0 L 50 0 C 39.059 0 30.171 8.763 30.017 19.63 L 30.017 20.003 L 19.982 20.003 L 19.982 19.57 C 19.795 8.733 10.919 0.004 0 0.004 L 19.982 0.004 L 19.982 0.003 L 30.015 0.003 L 30.015 0 Z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>\n  );\n};\n\nconst CheckWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\ncolor: ${state.agreeIsChecked ? \"#26A65A\" : \"inherit\"}\n`;\n\nconst CheckButton = styled.button`\n  border: none;\n  --bs-btn-hover-bg: transparent;\n  --bs-btn-active-bg: transparent;\n  --bs-btn-color: ${state.agreeIsChecked ? \"#26A65A\" : \"black\"};\n  --bs-btn-hover-color: ${state.agreeIsChecked ? \"#26A65A\" : \"var(--bs-green)\"};\n`;\n\nreturn (\n  <Wrapper>\n    <Widget src=\"mob.near/widget/ProfileOnboarding\" />\n    <Container>\n      <Flex>\n        <H1>\n          Blockchain for\n          <span>\n            JS{\" \"}\n            <svg viewBox=\"0 0 26 24\" fill=\"none\" aria-hidden=\"true\">\n              <path\n                d=\"M24.3767 8.06326L1.51965 0.0649912C1.10402 -0.0830767 0.639031 0.026026 0.327308 0.340346C0.0181841 0.657263 -0.0831256 1.12225 0.0701378 1.53788L8.071 23.2519C8.23726 23.7013 8.66587 24 9.14385 24H9.14644C9.62702 24 10.0556 23.6961 10.2167 23.2441L13.734 13.495L24.3325 10.2349C24.8053 10.0895 25.13 9.65824 25.1378 9.16468C25.1482 8.67112 24.8391 8.22691 24.3715 8.06326H24.3767Z\"\n                fill=\"#7269E1\"\n              />\n            </svg>\n          </span>\n          Developers\n        </H1>\n\n        <Text style={{ maxWidth: \"670px\" }}>\n          Learn to create anything on the blockchain operating system (bOS), and\n          help build a more open web that is greater than the sum of its\n          components.\n        </Text>\n\n        <Text size=\"23px\" weight=\"600\">\n          Workshops + Hackathon\n        </Text>\n\n        <Text\n          size=\"18px\"\n          weight=\"600\"\n          style={{ textTransform: \"uppercase\", letterSpacing: \"0.17em\" }}\n        >\n          Summer 2023\n        </Text>\n        <InputContainer>\n          <Widget\n            src={\"nearhorizon.near/widget/Inputs.Text\"}\n            props={{\n              label: \"\",\n              placeholder: \"Email\",\n              placeholder: \"Your Email Address\",\n              value: state.email,\n              onChange: (email) => State.update({ email }),\n            }}\n          />\n        </InputContainer>\n        <CheckWrapper>\n          <CheckButton\n            onClick={() => {\n              State.update({ agreeIsChecked: !state.agreeIsChecked });\n            }}\n            className=\"btn btn-outline-dark\"\n          >\n            <div className=\"d-flex flex-row align-items-center gap-3\">\n              <i\n                className={`bi bi-${\n                  state.agreeIsChecked ? \"check-square\" : \"square\"\n                }`}\n                style={{ fontSize: \"1.5rem\" }}\n              />\n              <span style={{ textAlign: \"left\" }}>Agree to Receive Emails</span>\n            </div>\n          </CheckButton>\n        </CheckWrapper>\n\n        <div className=\"row\">\n          <button\n            className=\"btn btn-success\"\n            disabled={!state.agreeIsChecked}\n            onClick={handleSignup}\n          >\n            Register for Updates\n          </button>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Widget src=\"hack.near/widget/DAO.Follow\" props={{ daoId }} />\n          </div>\n          <div className=\"col\">\n            <button className=\"btn btn-outline-primary\" onClick={handleJoin}>\n              Join\n            </button>\n          </div>\n        </div>\n      </Flex>\n      <Flex>\n        <Text\n          size=\"14px\"\n          weight=\"600\"\n          style={{\n            textTransform: \"uppercase\",\n            letterSpacing: \"0.17em\",\n            textAlign: \"center\",\n          }}\n        >\n          Made Possible by NEAR Builders\n        </Text>\n\n        <LogoLinks alignItems=\"center\">\n          {web3Teams.map((team) => {\n            return (\n              <a href={team.url} target=\"_blank\" title={team.name}>\n                <Widget\n                  src=\"mob.near/widget/Image\"\n                  props={{\n                    image: returnIpfsImage(team.ipfsImage),\n                    alt: team.name,\n                  }}\n                />\n              </a>\n            );\n          })}\n        </LogoLinks>\n      </Flex>\n    </Container>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Academy", "__row_index": 53}