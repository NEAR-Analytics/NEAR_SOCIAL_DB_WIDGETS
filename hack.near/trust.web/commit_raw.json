{"tx_hash": "6sdvHUBNVsRQ9r6AtqsjGRgNmMfb1eEzBtTKPo59UkJZ", "action_id_social": "FqLHU8L7Kw2ZRiUEFBQSd2V58Gb6x2s9q5et96NWeLxW-0-widget", "block_id": 95012038, "block_timestamp": "2023-06-25T17:10:48.714Z", "signer_id": "hack.near", "widget_name": "trust.web", "source_code": "const networkData = Social.get(`*/graph/trust/*`, \"final\");\n\nif (networkData === null) {\n  return \"Loading...\";\n}\n\nconst scriptSrc = `\n<style>\n* { margin: 0; padding: 0;}\nbody, html { height: 100%; }\n#c {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n}\n</style>\n\n<script type=\"module\">\n    let data = ${JSON.stringify(networkData)};\n    let canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    let ctx = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    let nodes = [];\n    let edges = [];\n    for (let account in data) {\n      nodes.push({id: account, x: Math.random()*canvas.width, y: Math.random()*canvas.height});\n      for (let trusted in data[account][\"graph\"][\"trust\"]) {\n        edges.push({source: account, target: trusted});\n      }\n    }\n\n    function drawNode(node) {\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = 1;\n    }\n\n    function drawEdge(edge) {\n        let sourceNode = nodes.find(node => node.id === edge.source);\n        let targetNode = nodes.find(node => node.id === edge.target);\n        if(sourceNode && targetNode) {\n          ctx.beginPath();\n          ctx.moveTo(sourceNode.x, sourceNode.y);\n          ctx.lineTo(targetNode.x, targetNode.y);\n          ctx.stroke();\n        }\n    }\n\n    function animate() {\n        ctx.clearRect(0, 0, canvas.width, 10000);\n        nodes.forEach(drawNode);\n        edges.forEach(drawEdge);\n        requestAnimationFrame(animate);\n    };\n\n    animate();\n</script>\n`;\n\nreturn (\n  <div>\n    <iframe\n      srcDoc={scriptSrc}\n      height=\"93%\"\n      onMessage={(data) => {\n        State.update({ ...data });\n      }}\n      style={{ width: \"93%\" }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/trust.web", "__row_index": 1}