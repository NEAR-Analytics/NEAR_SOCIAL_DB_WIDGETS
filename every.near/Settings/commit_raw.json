{"tx_hash": "pEFEKm7oUBfLfSS3TKGw36RHYbrSks9eac6YgAmyXSG", "action_id_social": "AMguZhajZmgHiX7dybmwXEL7GufqpMWrTKHkU4RVN7ze-0-widget", "block_id": 92328817, "block_timestamp": "2023-05-20T22:37:44.655Z", "signer_id": "every.near", "widget_name": "Settings", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst deposit = policy.proposal_bond;\n\nlet string = \"sputnik-dao.near\";\nlet domain = \".near\";\n\nState.init({\n  accountId: accountId ?? \"\",\n  daoId: daoId ?? \"\",\n  isDao: false,\n  isAccount: false,\n});\n\nconst checkDao = (daoId) => {\n  if (daoId.indexOf(string) !== -1) {\n    return State.update({ isDao: true });\n  }\n};\n\nconst checkAccount = (accountId) => {\n  if (accountId.indexOf(domain) !== -1) {\n    return State.update({ isAccount: true });\n  }\n};\n\nconst validDao = checkDao(state.daoId);\nconst validAccount = checkAccount(state.accountId);\n\nconst permission_args = JSON.stringify({\n  predecessor_id: state.accountId,\n  keys: [`${state.daoId}`],\n});\n\nconst proposal_args = Buffer.from(permission_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"grant permission to edit DAO profile on NEAR Social\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"grant_write_permission\",\n                  args: proposal_args,\n                  deposit: \"1\",\n                  gas: \"300000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"300000000000000\",\n    },\n  ]);\n};\n\nconst onChangeDao = (daoId) => {\n  State.update({\n    daoId,\n  });\n};\n\nconst onChangeAccount = (accountId) => {\n  State.update({\n    accountId,\n  });\n};\n\nreturn (\n  <div class=\"d-flex flex-column gap-2\">\n    <div className=\"d-flex p-1 m-1 flex-row\">\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{ accountId: state.daoId }}\n      />\n      <h1 className=\"px-2\">Settings</h1>\n    </div>\n    <div className=\"m-1\">\n      <h2 className=\"mb-2\">\n        <b>Organization Account:</b>\n      </h2>\n      {!validDao && (\n        <p>\n          \u21b3 try something like this ~{\" \"}\n          <i>\n            example<b>.sputnik-dao.near</b>\n          </i>\n        </p>\n      )}\n      <input\n        placeholder=\"<example>.sputnik-dao.near\"\n        type=\"text\"\n        value={state.daoId}\n        onChange={(e) => onChangeDao(e.target.value)}\n      ></input>\n    </div>\n    <div className=\"m-1\">\n      <h3>Request Permissions:</h3>\n      {validDao && validAccount && (\n        <p>\n          \u21b3 propose allowing <b>{state.accountId}</b> to edit profile of{\" \"}\n          <b>{state.daoId}</b>\n        </p>\n      )}\n      <div class=\"w-100 d-flex gap-3\">\n        <input\n          disabled={!validDao}\n          placeholder={context.accountId}\n          type=\"text\"\n          value={state.accountId}\n          onChange={(e) => onChangeAccount(e.target.value)}\n        ></input>\n        {validDao ? (\n          <div>\n            <button disabled={!validAccount} onClick={handleProposal}>\n              Submit\n            </button>\n          </div>\n        ) : (\n          <button disabled={!validDao} onClick={handleProposal}>\n            Submit\n          </button>\n        )}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/every.near/widget/Settings", "__row_index": 9}