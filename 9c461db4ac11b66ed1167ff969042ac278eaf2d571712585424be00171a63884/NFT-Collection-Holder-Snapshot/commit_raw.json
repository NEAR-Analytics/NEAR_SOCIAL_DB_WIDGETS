{"tx_hash": "Gdi3R5UChoqrAu6vtxcXU2p875CyDW45kKograj3iGi9", "action_id_social": "6hiY21KhkgkAAqgEh7uEkqdawa941Eqr8kWJ4mQEyyxe-0-widget", "block_id": 87371520, "block_timestamp": "2023-03-15 19:23:14.659", "signer_id": "9c461db4ac11b66ed1167ff969042ac278eaf2d571712585424be00171a63884", "widget_name": "NFT-Collection-Holder-Snapshot", "source_code": null, "metadata": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/9c461db4ac11b66ed1167ff969042ac278eaf2d571712585424be00171a63884/widget/NFT-Collection-Holder-Snapshot", "branch.draft.": "const accountId = props.accountId || context.accountId;\ninitState({ slug: \"asac.near\", nftData: [] });\n\nconst fetchData = () => {\n  State.update({ nftData: [] });\n  console.log(\"fetchData()\");\n  const { slug } = state;\n  console.log(slug);\n\n  let data = fetch(\"https://byz-multi-chain-01.hasura.app/v1/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"x-api-key\": \"ChRbeKE.c94220449dbb45973a67a614b1f590be\",\n      \"Content-Type\": \"application/json\",\n      \"Hasura-Client-Name\": \"near-social\",\n    },\n    body: JSON.stringify({\n      query: `\n      query MyQuery {\n  near {\n    collection(where: {slug: {_eq: \"${state.slug}\"}}) {\n      slug\n      nft_metas (order_by: {token_id: asc}) {\n        token_id\n        nft_state {\n          owner\n          staked_owner\n        }\n      }\n    }\n  }\n}\n`,\n    }),\n  });\n  if (data) {\n    const nftData = data.body.data.near.collection[0].nft_metas;\n    console.log(\"here ---->>>>\", nftData);\n    State.update({ nftData });\n  }\n};\n\nconst updateSlug = (e) => {\n  State.update({ slug: e.target.value });\n};\n\nif (indexer != null) {\n  console.log(indexer.body);\n}\n\nif (!state.nftData) {\n  return \"Loading\";\n}\n\nconst size = \"10em\";\n\nreturn state.nftData !== null ? (\n  <>\n    <h1>Token Snapshots</h1>\n    <label htmlFor=\"slugInput\">Collection slug:</label>\n    <input\n      type=\"text\"\n      id=\"slugInput\"\n      value={state.slug}\n      onChange={updateSlug}\n    />\n    <button onClick={fetchData}>Fetch NFT data</button>\n    <div className=\"d-flex gap-4 flex-wrap\">\n      <table>\n        <thead>\n          <tr>\n            <th>Token Id</th>\n            <th>Owner</th>\n            <th>Staking Owner</th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.nftData.map((token, i) => {\n            return (\n              <tr>\n                <td>{token.token_id}</td>\n                <td>{token.nft_state.owner}</td>\n                <td>{token.nft_state.staked_owner}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  </>\n) : (\n  <p>loading...</p>\n);\n", "branch.draft": NaN, "branch": NaN, "metadata.tags.app": NaN, "metadata.description": NaN, "metadata.name": NaN, "metadata.image.ipfs_cid": NaN}