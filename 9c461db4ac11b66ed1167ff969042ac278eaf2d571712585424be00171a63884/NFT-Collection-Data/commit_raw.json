{"tx_hash": "GchQcKymR77xtty8aRd84QoQbikrjMfCNfGAgq295t3n", "action_id_social": "JAfYfyKKd7H4xmK1RAiUkDp1tY1sUfoD4ettkpdWPaF5-0-widget", "block_id": 87451785, "block_timestamp": "2023-03-16 22:18:58.983", "signer_id": "9c461db4ac11b66ed1167ff969042ac278eaf2d571712585424be00171a63884", "widget_name": "NFT-Collection-Data", "source_code": "initState({\n  inputCollectionSlug: \"asac.near\",\n  collectionSlug: \"asac.near\",\n  collectionData: {},\n  nftData: [],\n});\n\nconst fetchData = () => {\n  State.update({ nftData: [] });\n\n  let response = fetch(\"https://byz-multi-chain-01.hasura.app/v1/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"x-api-key\": \"ChRbeKE.c94220449dbb45973a67a614b1f590be\",\n      \"Content-Type\": \"application/json\",\n      \"Hasura-Client-Name\": \"near-social\",\n    },\n    body: JSON.stringify({\n      query: `\n        query MyQuery {\n      near {\n        collection(where: {slug: {_eq: \"${state.collectionSlug}\"}}) {\n          slug\n      cover_image\n      description\n      floor\n      usd_volume\n      volume\n      title\n      collection_size\n      nft_metas {\n        image\n        name\n        rarity\n        ranking\n        token_id\n        nft_state {\n          owner\n          staked\n          staked_owner\n        }\n        nft_state_lists(\n          where: {listed: {_eq: true}}\n          limit: 1\n          order_by: {list_contract: {name: desc}}\n        ) {\n          list_price\n          listed\n          list_contract {\n            name\n          }\n        }\n      }\n        }\n      }\n    }`,\n    }),\n  });\n\n  if (response) {\n    const data = response;\n    const collectionData = data.body.data.near.collection[0];\n    let nftData = collectionData.nft_metas;\n\n    // Sort NFTs based on list price (lowest to highest) and list status\n    nftData.sort((a, b) => {\n      const aListed = a.nft_state_lists && a.nft_state_lists[0];\n      const bListed = b.nft_state_lists && b.nft_state_lists[0];\n\n      if (aListed && bListed) {\n        return aListed.list_price - bListed.list_price;\n      } else if (aListed) {\n        return -1;\n      } else if (bListed) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    console.log(collectionData, nftData);\n    State.update({ collectionData, nftData });\n  }\n};\n\nconst updateInputCollectionSlug = (e) => {\n  State.update({ inputCollectionSlug: e.target.value });\n};\n\nconst handleFetchButtonClick = () => {\n  State.update({ collectionSlug: state.inputCollectionSlug });\n  fetchData();\n};\n\nconst updateCollectionSlug = (e) => {\n  State.update({ collectionSlug: e.target.value });\n};\n\nconst getRarityColor = (rarity) => {\n  if (rarity < 0.1) {\n    return \"#ee0000\";\n  } else if (rarity < 0.25) {\n    return \"#ff9900\";\n  } else if (rarity < 0.5) {\n    return \"#ffc300\";\n  } else {\n    return \"#61c700\";\n  }\n};\n\nreturn (\n  <div\n    style={{\n      fontFamily: \"-apple-system, BlinkMacSystemFont, sans-serif\",\n      maxWidth: \"1200px\",\n      margin: \"0 auto\",\n      padding: \"20px\",\n    }}\n  >\n    <a href=\"https://indexer.xyz/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <img\n        src=\"https://indexer.xyz/indexer-logo-black.svg\"\n        alt=\"Indexer.xyz logo\"\n        style={{ height: \"1.5em\", verticalAlign: \"middle\" }}\n      />\n    </a>\n    <h1 style={{ fontSize: \"48px\", fontWeight: \"bold\", marginBottom: \"20px\" }}>\n      NFT Collection Data\n    </h1>\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: \"30px\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <label\n        htmlFor=\"collectionSlugInput\"\n        style={{ fontSize: \"16px\", marginRight: \"10px\" }}\n      >\n        Enter Collection Slug:\n      </label>\n      <input\n        type=\"text\"\n        id=\"collectionSlugInput\"\n        value={state.inputCollectionSlug}\n        onChange={updateInputCollectionSlug}\n        style={{\n          border: \"1px solid #ccc\",\n          borderRadius: \"5px\",\n          padding: \"5px 10px\",\n          margin: \"0 10px 10px 0\",\n          flexGrow: 1,\n        }}\n      />\n      <button\n        onClick={handleFetchButtonClick}\n        style={{\n          backgroundColor: \"#0070c9\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          color: \"#fff\",\n          cursor: \"pointer\",\n          padding: \"5px 10px\",\n          marginLeft: \"10px\",\n        }}\n      >\n        Fetch NFTs\n      </button>\n    </div>\n    {state.collectionData && (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          gap: \"10px\",\n          marginBottom: \"20px\",\n        }}\n      >\n        <h2>{state.collectionData.title}</h2>\n        <p>{state.collectionData.description}</p>\n        <img\n          src={state.collectionData.cover_image}\n          alt={state.collectionData.title}\n          style={{\n            maxWidth: \"300px\",\n            height: \"auto\",\n            borderRadius: \"5px\",\n            objectFit: \"cover\",\n            marginBottom: \"15px\",\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            width: \"100%\",\n            maxWidth: \"800px\",\n            gap: \"20px\",\n          }}\n        >\n          <div>\n            <p>USD Volume:</p>\n            <p>{Math.round(state.collectionData.usd_volume)}</p>\n          </div>\n          <div>\n            <p>Volume:</p>\n            <p>\n              {Math.round(\n                state.collectionData.volume / 1000000000000000000000000\n              )}{\" \"}\n              N\n            </p>\n          </div>\n          <div>\n            <p>Collection Size:</p>\n            <p>{state.collectionData.collection_size}</p>\n          </div>\n        </div>\n      </div>\n    )}\n    {state.nftData.length > 0 && (\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: \"20px\",\n          justifyContent: \"center\",\n          marginTop: \"20px\",\n        }}\n      >\n        {state.nftData.map((nft) => (\n          <a\n            href={`https://www.tradeport.xyz/near/collection/${state.collectionData.slug}/${nft.token_id}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\n          >\n            <div\n              style={{\n                backgroundColor: \"#f0f0f0\",\n                borderRadius: \"10px\",\n                boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\n                padding: \"20px\",\n                width: \"200px\",\n                textAlign: \"center\",\n              }}\n            >\n              <img\n                src={nft.image}\n                alt={nft.name}\n                style={{\n                  width: \"100%\",\n                  height: \"auto\",\n                  borderRadius: \"5px\",\n                  objectFit: \"cover\",\n                  marginBottom: \"15px\",\n                }}\n              />\n              <h3 style={{ fontSize: \"18px\", margin: \"0 0 10px\" }}>\n                {nft.name}\n              </h3>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <span\n                  style={{\n                    backgroundColor: \"#3f51b5\",\n                    borderRadius: \"20px\",\n                    color: \"#fff\",\n                    display: \"inline-block\",\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    padding: \"3px 8px\",\n                  }}\n                >\n                  Rank: {Math.round(nft.ranking)}\n                </span>\n              </div>\n              <p style={{ fontSize: \"14px\", marginBottom: \"5px\" }}>\n                Token ID: {nft.token_id}\n              </p>\n              <p style={{ fontSize: \"14px\" }}>\n                Collection: {nft.collection.slug}\n              </p>\n              {nft.nft_state_lists && nft.nft_state_lists[0] && (\n                <p style={{ fontSize: \"14px\" }}>\n                  Price:{\" \"}\n                  {nft.nft_state_lists[0].list_price /\n                    1000000000000000000000000}\n                  {\"N \"}\n                  {nft.nft_state_lists[0].list_contract.name}\n                </p>\n              )}\n              {nft.nft_state && (\n                <p style={{ fontSize: \"14px\" }}>\n                  Owner:\n                  {nft.nft_state.owner.length > 20\n                    ? nft.nft_state.owner.slice(0, 20) + \"...\"\n                    : nft.nft_state.owner}\n                </p>\n              )}\n            </div>\n          </a>\n        ))}\n      </div>\n    )}\n  </div>\n);\n", "metadata": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/9c461db4ac11b66ed1167ff969042ac278eaf2d571712585424be00171a63884/widget/NFT-Collection-Data", "branch.draft.": NaN, "metadata.description": "NFT Collection Data is a web application that allows users to explore and visualize NFT collections from various blockchain platforms. By entering a specific collection slug, users can view the details of the collection, including the title, description, cover image, and various statistics such as USD volume, total volume, and collection size. The application also displays a gallery of NFTs from the specified collection, sorted by listing price and status. Each NFT card features an image, name, token ID, collection slug, owner, and other relevant information, providing users with a comprehensive and visually appealing way to discover and interact with NFT collections.", "metadata.image.ipfs_cid": "bafkreifkghgzfygpha2ylolki5mhsbfir4hrhnv27kjyw4tqa3lyshrqnm", "metadata.name": "NFT Collection Data", "metadata.tags.app": "", "metadata.tags.nft": "", "metadata.tags.widget": "", "branch.draft": NaN}