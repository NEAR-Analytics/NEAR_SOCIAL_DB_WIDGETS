{"tx_hash": "Ccva6JJD7c8RFHJSjvRDj3RPzqEmKbUVfUG6iknueswz", "action_id_social": "6NXYnuWzngxZNgGyBieyHzqMgUmvwPoy5kPpKxHZGQWG-0-widget", "block_id": 88473042, "block_timestamp": "2023-03-31 01:14:11.200", "signer_id": "whtt.near", "widget_name": "zkBridge", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) return \"Please login first\";\n\nconst l2Receiver = \"0xC57Aab03c5a835FAb96EFa38293f73B1f49fB1bc\";\nconst l1Token = \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\";\nconst amount = \"10000000\";\nconst l2TxGasLimi = \"900000\";\nconst l2TxGasPerPubdataByte = \"800\";\n\nconst zkContract = \"0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063\";\n\nconst usdc = \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\";\n\nconst zkAbi = fetch(\n  \"https://gist.githubusercontent.com/kcole16/3aa22a29b14ea6a1a7377b38463697ef/raw/c8a7249231ac00c7c3c9f1dc6188fbf28c262cb5/abi.json\"\n);\nif (!zkAbi.ok) {\n  return \"scam\";\n}\n\nconst erc20Abi = fetch(\n  \"https://gist.githubusercontent.com/veox/8800debbf56e24718f9f483e1e40c35c/raw/f853187315486225002ba56e5283c1dba0556e6f/erc20.abi.json\"\n);\nif (!erc20Abi.ok) {\n  return \"scam\";\n}\n\nconst iface = new ethers.utils.Interface(zkAbi.body);\n\ninitState({\n  token: \"0x25EEe23b20C61E03596B7FAd3e87E20E7AF6f55C\",\n  amount: \"1\",\n});\n\nconst mintTokens = () => {\n  //   const zkBridge = new ethers.Contract(\n  //     zkContract,\n  //     zkAbi.body,\n  //     Ethers.provider().getSigner()\n  //   );\n\n  //   console.log(zkBridge);\n\n  let cost = state.amount;\n  let subtotal = (state.amount * cost).toString();\n  let value = ethers.utils.parseEther(\"0.001\");\n  const encodedData = iface.encodeFunctionData(\n    \"deposit(address,address,uint256,uint256,uint256,address)\",\n    [sender, l1Token, amount, l2TxGasLimi, l2TxGasPerPubdataByte, sender]\n  );\n  Ethers.provider().getSigner().sendTransaction({\n    to: \"0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063\",\n    data: encodedData,\n    value: value,\n  });\n  //   zkBridge.deposit(address, address, uint256, uint256, uint256, address)(\n  //     l2Receiver,\n  //     l1Token,\n  //     amount,\n  //     l2TxGasLimi,\n  //     l2TxGasPerPubdataByte,\n  //     sender,\n  //     { value: value }\n  //   );\n\n  //   console.log(\"transactionHash is \" + transactionHash);\n};\n\nconst handleApprove = () => {\n  const contract = new ethers.Contract(\n    usdc,\n    erc20Abi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract\n    .approve(\"0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063\", amount)\n    .then((tx) => {\n      State.update({\n        log: \"The TX hash is: \" + tx.hash,\n        explorerLink: \"https://etherscan.io/tx/\" + tx.hash,\n      });\n    })\n    .catch(handleTxError);\n};\n\nreturn (\n  <>\n    <h3>Bridge to zkSync Era</h3>\n    <div class=\"mb-3\">\n      <label for=\"amount\" class=\"form-label\">\n        Amount\n      </label>\n      <input\n        value={state.amount}\n        class=\"form-control\"\n        id=\"amount\"\n        placeholder=\"\"\n        onChange={(e) => State.update({ amount: e.target.value })}\n      />\n    </div>\n    <div class=\"mb-3\">\n      <button onClick={mintTokens}>Deposit</button>\n    </div>\n    <div class=\"mb-3\">\n      <button onClick={handleApprove}>Approve</button>\n    </div>\n  </>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/whtt.near/widget/zkBridge", "metadata.tags.canto-test": NaN}