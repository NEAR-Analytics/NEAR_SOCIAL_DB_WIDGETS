{"tx_hash": "26y2Si5AhGDeHCQZ2zJzLLUb4iis4EuisS1XjhL1EKuD", "action_id_social": "4T3q7cqD7eXQhs24m6vhhtfKw39iXEWsAG1Ty1NqLVeW-0-widget", "block_id": 86589972, "block_timestamp": "2023-03-05 05:23:39.381", "signer_id": "thalburner.near", "widget_name": "gigs-board.components.HistoryWidget", "source_code": "function formatDate(timestamp) {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n\n  // Use template literal to construct the formatted string\n  const formatted = `${year}-${month}-${day} ${hours}:${minutes}`;\n\n  return formatted;\n}\n\nconst post = Near.view(\"devgovgigs.near\", \"get_post\", {\n  post_id: props.post_id,\n});\n\nconst history = post.snapshot_history;\n\nhistory.unshift(post.snapshot);\n\nState.init({\n  firstShownHistory: {},\n  secondShownHistory: {},\n  firstShown: false,\n  secondShown: false,\n  changes: [],\n});\n\nconst changeFirstShownHistory = (timestamp) => {\n  State.update({\n    firstShownHistory: history.filter(\n      (item) => item.timestamp === timestamp\n    )[0],\n    firstShown: true,\n  });\n  state.secondShownState &&\n    State.update({\n      changes: summaryOfChanges(),\n    });\n};\n\nconst changeSecondShownHistory = (timestamp) => {\n  console.log(timestamp);\n  console.log(\"before\", state);\n  State.update({\n    secondShownHistory: history.filter(\n      (item) => item.timestamp === timestamp\n    )[0],\n    secondShown: true,\n  });\n  state.firstShownState &&\n    State.update({\n      changes: summaryOfChanges(),\n    });\n};\n\nconst summaryOfChanges = () => {\n  summaryOfChanges = [];\n  if (state.firstShownHistory.editor_id != state.secondShownHistory.editor_id) {\n    summaryOfChanges.push(\"The editors are different.\");\n  }\n  if (state.firstShownHistory.name != state.secondShownHistory.name) {\n    summaryOfChanges.push(\"The names are different.\");\n  }\n  if (\n    state.firstShownHistory.description != state.secondShownHistory.description\n  ) {\n    summaryOfChanges.push(\"The descriptions are different.\");\n  }\n  return summaryOfChanges;\n};\n\nreturn (\n  <div>\n    <div className=\"row\">\n      <div className=\"col-sm row\">\n        <h5>Select a timestamp </h5>\n        <div>\n          <select\n            className=\"form-select col-sm\"\n            name=\"history_data1\"\n            id=\"history_data1\"\n            form=\"history_data1\"\n            onChange={(e) => changeFirstShownHistory(e.target.value)}\n          >\n            <option>Select a time stamp!</option>\n            {history ? (\n              history.map((item) => {\n                return (\n                  <option value={item.timestamp}>\n                    {`Lasted edited by ${item.editor_id} at ${formatDate(\n                      parseInt(item.timestamp) / 1000000\n                    )}`}\n                  </option>\n                );\n              })\n            ) : (\n              <option>No option available</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"col-sm row\">\n        <h5>Select a second timestamp </h5>\n        <div>\n          <select\n            className=\"form-select col-sm\"\n            name=\"history_data2\"\n            id=\"history_data2\"\n            form=\"history_data2\"\n            onChange={(e) => changeSecondShownHistory(e.target.value)}\n          >\n            <option value=\"\">Select a time stamp!</option>\n            {history ? (\n              history.map((item) => {\n                return (\n                  <option value={item.timestamp}>\n                    {`Lasted edited by ${item.editor_id} at ${formatDate(\n                      parseInt(item.timestamp) / 1000000\n                    )}`}\n                  </option>\n                );\n              })\n            ) : (\n              <option>No option available</option>\n            )}\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thalburner.near/widget/gigs-board.components.HistoryWidget"}