{"tx_hash": "9MVV7wwcFuyYEdybCiKcgDnuRRbNALj5WVRd8wJ5ZGLu", "action_id_social": "BrLAzvx9fH6mrJnpeSoptmbnfPEJUTodxbgd4sytdRqa-0-widget", "block_id": 94043398, "block_timestamp": "2023-06-12T13:36:37.171Z", "signer_id": "kingdeemo.near", "widget_name": "NFT_gallery", "source_code": "const apiUrl = \" https://api.indexer.xyz/graphql\";\nconst apiKey = \"Krqwh4b.bae381951d6050d351945c0c750f1510\";\nconst apiUser = \"Banyan\";\n\ninitState({ nfts: null });\n\nconst headers = {\n  \"x-api-key\": apiKey,\n  \"x-api-user\": apiUser,\n  \"Content-Type\": \"application/json\",\n};\n\nconst query = {\n  query: `query MyQuery {\n    aptos {\n      nfts(limit: 3) {\n        id\n        name\n        owner\n        media_url\n        rarity\n      }\n    }\n  }`,\n};\n\nfunction fetchData() {\n  const response = fetch(\"https://api.indexer.xyz/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"x-api-key\": apiKey,\n      \"x-api-user\": apiUser,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n      aptos {\n        nfts(limit: 3) {\n          id\n          name\n          owner\n          media_url\n          rarity\n        }\n      }\n    }`,\n    }),\n  });\n  if (response.body.errors[0].message) {\n    console.log(\"ERROR MESSAGE: \", response.body.errors[0].message);\n  } else {\n    State.update({ nfts: response.body.data.aptos.nfts });\n    // console.log(\"Body: \", response.body.data.aptos.nfts);\n    return state.nfts;\n  }\n}\n\nfetchData();\n\nreturn (\n  <div>\n    {state.nfts.map((nft) => (\n      <img src={nft.media_url} />\n    ))}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kingdeemo.near/widget/NFT_gallery", "__row_index": 2}