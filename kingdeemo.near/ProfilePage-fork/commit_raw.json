{"tx_hash": "7TkciF2YwHXLY3Z7r7bPx4bzQWrXMT5dfYdXh1bTKJir", "action_id_social": "Gtsa6aFhLDpBxsNDAtoBS9bB3aa7TD9F8pTkdeCbk18X-0-widget", "block_id": 93531150, "block_timestamp": "2023-06-05T18:59:44.520Z", "signer_id": "kingdeemo.near", "widget_name": "ProfilePage-fork", "source_code": "const scriptSrc = `\n<style>\n* { margin: 0; padding: 0;}\nbody, html { height:100%; }\n#c {\n    position:absolute;\n    width:100%;\n    height:100%;\n}\n</style>\n\n<script async src=\"https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js\"></script>\n\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"three\": \"https://unpkg.com/three@0.145.0/build/three.module.js\"\n    }\n  }\n</script>\n\n<script type=\"module\">\n    import * as THREE from 'three';\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.body.appendChild( renderer.domElement );\n\n    const getCard = ({ position, texture }) => {\n        const geometry = new THREE.PlaneGeometry( position.x, position.y );\n        const material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.DoubleSide } );\n        const card = new THREE.Mesh( geometry, material );\n\n        return card;\n    }\n\n    const textureLoader = new THREE.TextureLoader();\n    const defaultTexture = textureLoader.load('');\n    const card1 = getCard({ position: { x: 2, y: -2 }, texture: defaultTexture });\n    card1.position.y = 0; // Adjust the y position to move the card lower\n    scene.add(card1);\n\n    function animate() {\n        requestAnimationFrame( animate );\n        card1.rotation.y += 0.01;\n        renderer.render( scene, camera );\n    }\n\n    animate();\n\n    function updateTexture(url) {\n        textureLoader.load(url, (texture) => {\n            card1.material.map = texture;\n            card1.material.needsUpdate = true;\n        });\n    }\n\n    window.addEventListener('message', (event) => {\n        const { type, payload } = event.data;\n        if (type === 'updateTexture') {\n            updateTexture(payload.url);\n        }\n    });\n</script>\n`;\n\nconst CardComponent = () => {\n  const handleButtonClick = () => {\n    const url = document.getElementById(\"url-input\").value;\n    const message = {\n      type: \"updateTexture\",\n      payload: {\n        url: url,\n      },\n    };\n    const iframeWindow = document.querySelector(\"iframe\").contentWindow;\n    iframeWindow.postMessage(message, \"*\");\n  };\n\n  return (\n    <div className=\"w-100\">\n      <div>\n        <input id=\"url-input\" type=\"text\" placeholder=\"Enter URL\" />\n        <button onClick={handleButtonClick}>Update Texture</button>\n      </div>\n      <iframe\n        srcDoc={scriptSrc}\n        height=\"100%\"\n        onLoad={() => {\n          const iframeWindow = document.querySelector(\"iframe\").contentWindow;\n          iframeWindow.postMessage({ type: \"initialLoad\" }, \"*\");\n        }}\n        onMessage={(data) => {\n          State.update({ ...data });\n        }}\n        style={{ height: 300, width: \"100%\" }}\n      />\n      Hello, this widget will allow you to place images on a 3d object. The\n      reason I am building this is to allow people to create an NFT ID which\n      will be a virtual ID card!\n    </div>\n  );\n};\n\nreturn <CardComponent />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kingdeemo.near/widget/ProfilePage-fork", "__row_index": 1}