{"tx_hash": null, "action_id_social": "Bb65v7HzwDpNk1oA82qqQos3uS8QSsSfuDhxAGTrTSCf-0-widget", "block_id": 93691146, "block_timestamp": "2023-06-07T22:06:22.429Z", "signer_id": "kingdeemo.near", "widget_name": "suiFrens_discovery", "source_code": "const apiUrl = \" https://api.indexer.xyz/graphql\";\nconst apiKey = \"Krqwh4b.bae381951d6050d351945c0c750f1510\";\nconst apiUser = \"Banyan\";\n\nState.init({ allSui: [] });\n\nconst headers = {\n  \"x-api-key\": apiKey,\n  \"x-api-user\": apiUser,\n  \"Content-Type\": \"application/json\",\n};\n\nconst query = {\n  query: `query fetchCollectionItems(\n    $where: nfts_bool_exp!\n    $order_by: [nfts_order_by!]\n    $offset: Int\n    $limit: Int!\n  ) {\n    sui {\n      nfts(\n        where: $where\n        order_by: $order_by\n        offset: $offset\n        limit: $limit\n      ) {\n        id\n        token_id\n        token_id_index\n        name\n        media_url\n        media_type\n        ranking\n        owner\n        burned\n        staked\n        listings(\n          where: { listed: { _eq: true } }\n          order_by: { price: asc }\n        ) {\n          id\n          price\n          block_time\n          seller\n          market_name\n        }\n        topBid: bids(\n          where: { status: { _eq: \"active\" } }\n          order_by: { price: desc }\n          limit: 1\n        ) {\n          id\n          bidder\n          price\n        }\n        lastSale: actions(\n          where: { type: { _in: [\"buy\", \"accept-collection-bid\", \"accept-bid\"] } }\n          order_by: { block_time: desc }\n          limit: 1\n        ) {\n          price\n        }\n      }\n    }\n  }`,\n  variables: {\n    where: {\n      collection: {\n        slug: {\n          _eq: \"0xee496a0cc04d06a345982ba6697c90c619020de9e274408c7819f787ff66e1a1\",\n        },\n      },\n      _or: [\n        {\n          _not: {\n            listings: {\n              listed: {\n                _eq: true,\n              },\n            },\n          },\n        },\n        {\n          listings: {\n            listed: {\n              _eq: true,\n            },\n          },\n        },\n      ],\n    },\n    order_by: [\n      {\n        listings_aggregate: {\n          min: {\n            price: \"asc_nulls_last\",\n          },\n        },\n      },\n      {\n        ranking: \"asc\",\n      },\n    ],\n    limit: 3,\n  },\n};\n\nfetch(apiUrl, {\n  method: \"POST\",\n  headers,\n  body: JSON.stringify(query),\n})\n  .then((response) => response.json())\n  .then((data) => {\n    // Process the API response data\n    // console.log(data.data.sui)\n\n    const nfts = data.data.sui.nfts;\n    console.log(nfts);\n    // State.update({allSui: })\n  })\n  .catch((error) => {\n    // Handle any errors\n    console.error(error);\n  });\n\n//cannot return since there is an error\n//you can check console log for some api data\n// return <div>hello</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kingdeemo.near/widget/suiFrens_discovery", "__row_index": 0}