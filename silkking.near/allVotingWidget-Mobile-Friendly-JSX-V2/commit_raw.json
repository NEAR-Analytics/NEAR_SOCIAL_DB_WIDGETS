{"tx_hash": "96AMw5H3YYSM2D8nETgDMHBYvmURy9gW4h1YfbZMJGf5", "action_id_social": "En42tSN3buN4c4YadCv3yxGnnftxVehP2fspfddGcdug-0-widget", "block_id": 92578729, "block_timestamp": "2023-05-24T05:32:32.510Z", "signer_id": "silkking.near", "widget_name": "allVotingWidget-Mobile-Friendly-JSX-V2", "source_code": "const widgetOwner = \"silkking.near\";\nconst renderTextInput = (questionNumber) => {\n  return (\n    <div>\n      {props.hasVoted ? (\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\" }}>\n          {props.renderAnswers(questionNumber)}\n        </div>\n      ) : (\n        <div>\n          <textarea\n            value={props.state.vote[questionNumber]}\n            onChange={(e) => {\n              let newVote = props.state.vote;\n              newVote[questionNumber] = e.target.value;\n\n              props.stateUpdate({ vote: newVote });\n            }}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst renderMultipleChoiceInput = ({\n  questionNumber,\n  questionType,\n  option,\n  optionNumber,\n}) => (\n  <>\n    <Widget\n      src={`${widgetOwner}/widget/allVotingWidget-RenderMultiInput-Mobile-Friendly`}\n      props={{\n        state: props.state,\n        questionNumber,\n        questionType,\n        option,\n        optionNumber,\n        canVote: props.canVote,\n        getBgColor: props.getBgColor,\n        getFontColor: props.getFontColor,\n        countVotes: props.countVotes,\n        getBorderRadious: props.getBorderRadious,\n        calculatePercentageOfOption: props.calculatePercentageOfOption,\n        getBlockTimestamp: props.getBlockTimestamp,\n        clickCheckboxInputHandler: props.clickCheckboxInputHandler,\n        clickRadioInputHandler: props.clickRadioInputHandler,\n        getInputStyles: props.getInputStyles,\n      }}\n    />\n  </>\n);\n\nreturn (\n  <>\n    <Widget\n      src={`${widgetOwner}/widget/allVotingWidget-JSX-Return-Mobile-Friendly`}\n      props={{\n        state: props.state,\n        poll: props.poll,\n        renderTextInput,\n        renderMultipleChoiceInput,\n        getInputStyles: props.getInputStyles,\n        hasVoted: props.hasVoted,\n        getPublicationParams: props.getPublicationParams,\n        stateUpdate: (data) => props.stateUpdate(data),\n        isQuestionOpen: props.isQuestionOpen,\n        isVoteValid: props.isVoteValid,\n        validAnswersToThisPoll: props.validAnswersToThisPoll,\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/silkking.near/widget/allVotingWidget-Mobile-Friendly-JSX-V2", "__row_index": 0}