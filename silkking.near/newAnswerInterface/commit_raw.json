{"tx_hash": "Egh6uaRYZsBqUp2A6vfX2We731zoFYeb5zoQ9mimvT7U", "action_id_social": "7MZDsHY98NPJRkUiZyHTpPHinXA9UQUJnBrqv2dcS3MB-0-widget", "block_id": 80520334, "block_timestamp": "2022-12-13 00:34:23.128", "signer_id": "silkking.near", "widget_name": "newAnswerInterface", "source_code": "let question = props.question ?? {\n  title: \"Multiple choice test\",\n  tgLink: \"\",\n  accountId: \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n  choicesOptions: [\"a\", \"b\", \"c\"],\n  question: \"Testing multiple choice\",\n  description: \"This is a simple test\",\n  questionBlockHeight: 79932918,\n  startDate: Date.now(),\n  endDate: Date.now() + 10000000,\n  storingTimestamp: Date.now(),\n  questionType: \"1\",\n  answers: [\n    {\n      accountId:\n        \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n      answer: \"0\",\n      timeStamp: Date.now(),\n    },\n  ],\n};\n\nlet profile = Social.getr(`${question.accountId}/profile`);\n\n//TODO\nlet questionsByThisCreator = [{}];\n\nlet thisUserVote = 0;\nfunction userHaveVoted() {\n  //TODO validate this to return boolean and if it's true set value to thisUserVote\n  return false;\n}\n\nfunction sliceString(string, newStringLenght) {\n  if (string.length > newStringLenght) {\n    return string.slice(0, newStringLenght) + \"...\";\n  }\n  return string;\n}\n\n//TODO get this data\nlet otherQuestionsFromThisUser = [{}];\n\n//TODO get this data\nlet countVotes = [1, 0, 0];\n\nState.init({\n  vote: \"\",\n});\n\nfunction calculatePercentage(votesToThisOption) {\n  return (votesToThisOption / question.answers.length) * 100;\n}\n\nfunction transformDateFormat(date) {\n  //TODO\n  return date;\n}\n\nconst renderOptions = () => {\n  return question.choicesOptions.map((option, index) => {\n    let styles = userHaveVoted()\n      ? { color: \"#000\", width: \"90%\" }\n      : { color: \"#000\", width: \"100%\" };\n    return (\n      <div className=\"d-flex\">\n        <div style={styles}>\n          {/* Set the width of the next div to make the bar grow. At the same, use the same value to fill the span tag */}\n          <div\n            style={{\n              margin: \"0.3rem 0px\",\n              content: \"\",\n              display: \"table\",\n              clear: \"both\",\n              padding: \"0.01em 16px\",\n              display: \"inline-block\",\n              width: `${\n                userHaveVoted() ? calculatePercentage(countVotes[index]) : 100\n              }%`,\n              textAlign: \"center\",\n              overflow: \"visible\",\n              whiteSpace: \"nowrap\",\n              textAlign: \"left\",\n              backgroundColor: `${\n                (userHaveVoted() && thisUserVote == index) ||\n                state.vote == index + \"\"\n                  ? \"rgb(153, 255, 153)\"\n                  : \"lightgray\"\n              }`,\n            }}\n            onClick={() => !userHaveVoted && State.update({ vote: index + \"\" })}\n          >\n            <span style={{ overflow: \"visible\", fontWeight: \"500\" }}>\n              {option}\n              {userHaveVoted() && (\n                <span\n                  className=\"text-secondary\"\n                  style={{ marginLeft: \"1rem\", fontWeight: \"400\" }}\n                >\n                  ({question.answers.length} votes)\n                </span>\n              )}\n            </span>\n          </div>\n        </div>\n        {userHaveVoted() && (\n          <span\n            style={{\n              minWidth: \"max-content\",\n              margin: \"0.3rem 0px 0.3rem 0.3rem\",\n              fontWeight: \"500\",\n            }}\n          >\n            {calculatePercentage(countVotes[index])}%\n          </span>\n        )}\n      </div>\n    );\n  });\n};\n\nconst renderOtherQuestions = () => {\n  return questionsByThisCreator.map((questionByCreator, index) => {\n    let divStyle = index == 0 ? {} : { borderTop: \"1px solid #ced4da\" };\n    return (\n      <div style={divStyle}>\n        <p style={{ fontWeight: \"500\" }}>\n          {sliceString(questionByCreator.title, 12)}\n        </p>\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary\">\n          <span>End date</span>\n          <span>{transformDateFormat(questionByCreator.endDate)}</span>\n        </div>\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary\">\n          <span>Votes</span>\n          <span>({questionByCreator.answers.length})</span>\n        </div>\n      </div>\n    );\n  });\n};\n\nfunction calculateTimeLeft() {\n  //TODO\n  return Date.now() - Number(endDate);\n}\n\nreturn (\n  <div\n    className=\"d-flex content-align-start justify-content-between\"\n    style={{ borderRadius: \"3px\", padding: \"2rem 3rem\" }}\n  >\n    <div style={{ width: \"75%\", marginRight: \"2rem\" }}>\n      <div className=\"d-flex\">\n        <span\n          style={{\n            backgroundColor:\n              question.startDate < Date.now() && question.endDate > Date.now()\n                ? \"rgb(153, 255, 153)\"\n                : \"rgb(255, 128, 128)\",\n\n            height: \"max-content\",\n            width: \"6rem\",\n            border: \"1px solid rgb(0, 82, 204)\",\n            textAlign: \"center\",\n            borderRadius: \"80px\",\n            marginRight: \"1rem\",\n          }}\n        >\n          {question.startDate < Date.now() && question.endDate > Date.now()\n            ? \"Active\"\n            : \"Closed\"}\n        </span>\n\n        <span\n          style={{\n            paddingLeft: \"1.5rem\",\n            borderLeft: \"2px solid #ced4da\",\n          }}\n        >\n          End in {calculateTimeLeft()}\n        </span>\n      </div>\n\n      <h2>{question.title}</h2>\n\n      <div className=\"d-flex\">\n        <span className=\"mr-3\" style={{ fontWeight: \"500\" }}>\n          Created by\n        </span>\n\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            profile,\n            accountId,\n            className: \"float-start d-inline-block me-2\",\n            style: {\n              width: \"1.5rem\",\n              marginLeft: \"1rem\",\n            },\n          }}\n        />\n\n        <span style={{ fontWeigth: \"500\" }}>\n          {sliceString(question.accountId, 12)}\n        </span>\n      </div>\n\n      <p>{question.description}</p>\n\n      {question.tgLink != \"\" && (\n        <h4>\n          Discussion link: <a href={question.tgLink}>{question.tgLink}</a>\n        </h4>\n      )}\n\n      <div\n        style={{ border: \"1px solid #ced4da\", borderRadius: \"0.375rem\" }}\n        className=\"p-3 my-3\"\n      >\n        <h4>{question.question}</h4>\n\n        {renderOptions()}\n\n        {userHaveVoted() ? (\n          <p\n            className=\"text-primary\"\n            style={{ textAlign: \"center\", fontWeight: \"500\" }}\n          >\n            Voted\n          </p>\n        ) : (\n          <>{/*TODO replace with commit button*/}</>\n        )}\n      </div>\n    </div>\n\n    <div style={{ minWidth: \"17rem\" }}>\n      <h5>Information</h5>\n      <div\n        className=\"mb-2\"\n        style={{\n          border: \"1px solid #ced4da\",\n          borderRadius: \"0.375rem\",\n          fontWeight: \"500\",\n          padding: \"0.5rem 1rem\",\n        }}\n      >\n        <div className=\"d-flex justify-content-between\">\n          <span>Status</span>\n          <span>\n            {question.startDate < Date.now() && question.endDate > Date.now()\n              ? \"Active\"\n              : \"Closed\"}\n          </span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>Start date</span>\n          <span>{transformDateFormat(question.startDate)}</span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>End date</span>\n          <span>{transformDateFormat(question.endDate)}</span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>Creator</span>\n          <span>{sliceString(question.accountId, 8)}</span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>Polls by creator</span>\n          <span>{/*TODO*/}</span>\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <h5>Poll by creator</h5>\n        <h5 style={{ marginLeft: \"0.5rem\" }}>\n          ({questionsByThisCreator.length})\n        </h5>\n      </div>\n\n      {questionByCreator.length != 0 && (\n        <div\n          style={{\n            border: \"1px solid #ced4da\",\n            borderRadius: \"0.375rem\",\n            padding: \"0.5rem 1rem\",\n          }}\n        >\n          {renderOtherQuestions()}\n          {/*TODO add view all button*/}\n        </div>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/silkking.near/widget/newAnswerInterface"}