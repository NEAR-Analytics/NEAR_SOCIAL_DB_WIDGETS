{"tx_hash": "BoiETgJaWL314BcxPJw18EVpiJKqUiSeRD4HMY3XuXTv", "action_id_social": "AJuXKx4dq5RT7KqTa7iR6E6EVtX6Gv9x2kYx2ZRoh9FU-0-widget", "block_id": 80337748, "block_timestamp": "2022-12-10 13:34:45.060", "signer_id": "silkking.near", "widget_name": "showQuestionsHandler", "source_code": "function addAnswersToQuestion(questions, answers) {\n  questions = questions.map((q) => {\n    q.value.answers = [];\n    return q;\n  });\n  for (let i = 0; i < answers.length; i++) {\n    const answer = answers[i];\n    const qIndex = questions.findIndex(\n      (q) => q.blockHeight == answer.value.questionBlockHeight\n    );\n    if (qIndex != -1) questions[qIndex].answers.push(answer);\n    if (qIndex == -1) console.log(`Answer has no related question!`, answer);\n  }\n  return questions;\n}\n\nconst displayAnswerWidgetNames = [\n  \"newTextAnswerInterface\",\n  \"newMiniMultipleChoiceInterface\",\n];\n\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\");\nconst answers = Social.index(\"poll_question\", \"answer-v3.0.1\");\nquestions = addAnswersToQuestion(questions, answers);\nconsole.log(questions);\n\nconst renderQuestions = () => {\n  return questions.map((question) => {\n    return (\n      <div\n        className=\"my-5 py-3 px-4\"\n        style={{ backgroundColor: \"#f2f2f2\", borderRadius: \"1rem\" }}\n      >\n        <Widget\n          src=\"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/answersHeader\"\n          props={{ question: question }}\n        />\n        <Widget\n          src={`${props.accountId}/widget/${\n            displayAnswerWidgetNames[question.questionType]\n          }`}\n          props={{ question: question }}\n        />\n      </div>\n    );\n  });\n};\n\nreturn (\n  <div\n    style={{\n      borderRadius: \"3px\",\n      padding: \"8% 5% 1% 5%\",\n    }}\n  >\n    {renderQuestions()}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/silkking.near/widget/showQuestionsHandler"}