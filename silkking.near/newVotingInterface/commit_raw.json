{"tx_hash": "Ag7KoisrDmkg2pRuzVf8uYviNEX1Wrq2PTphDqMww6Ug", "action_id_social": "HzjuaVxpxHM7ut98vdkK5zFvkyfUaA8WoE1YgUxAePNP-0-widget", "block_id": 80514131, "block_timestamp": "2022-12-12 22:30:22.155", "signer_id": "silkking.near", "widget_name": "newVotingInterface", "source_code": "let blockHeight = props.blockHeight;\nconsole.log(\"BH\", blockHeight);\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\");\nlet question = questions.find((q) => q.blockHeight == blockHeight);\n\nlet profile = Social.getr(`${question.accountId}/profile`);\n\nlet questionsByThisCreator = Social.index(\"poll_question\", \"question-v3.0.1\", {\n  accountId: question.accountId,\n});\n\nlet userVote;\nfunction userHasVoted() {\n  //TODO validate this to return boolean and if it's true set value to thisUserVote\n  return false;\n}\n\nfunction sliceString(string, newStringLenght) {\n  if (string.length > newStringLenght) {\n    return string.slice(0, newStringLenght) + \"...\";\n  }\n  return string;\n}\n\nfunction transformDateFormat(date) {\n  return new Date(date).toLocaleDateString();\n}\n\nconst renderVoteMultipleChoice = () => {\n  if (question) {\n    return question.value.choicesOptions.map((option, index) => {\n      return (\n        <Widget\n          src={`${context.accountId}/widget/voteMultipleChoice`}\n          props={{\n            ...question,\n            option,\n            index,\n            haveVoted: userHasVoted(),\n            userVote,\n          }}\n        />\n      );\n    });\n  } else {\n    return \"Loading...\";\n  }\n};\n\nconst renderVoteText = () => {\n  return (\n    <Widget\n      src={`${context.accountId}/widget/voteWithText`}\n      props={{ question, haveVoted: userHasVoted() }}\n    />\n  );\n};\n\nconst renderOtherQuestions = () => {\n  console.log(\"QBTC\", questionsByThisCreator);\n  return questionsByThisCreator.map((questionByCreator, index) => {\n    let divStyle = index == 0 ? {} : { borderTop: \"1px solid #ced4da\" };\n    return (\n      <div style={divStyle}>\n        <p style={{ fontWeight: \"500\" }}>\n          {sliceString(questionByCreator.value.title, 20)}\n        </p>\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary\">\n          <span>End date</span>\n          <span>\n            {transformDateFormat(questionByCreator.value.endTimestamp)}\n          </span>\n        </div>\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary\">\n          <span>Votes</span>\n          <span>({questionsByThisCreator.length})</span>\n        </div>\n      </div>\n    );\n  });\n};\n\nreturn (\n  <div\n    className=\"d-flex content-align-start justify-content-between\"\n    style={{ borderRadius: \"3px\", padding: \"2rem 3rem\" }}\n  >\n    <div style={{ width: \"75%\", marginRight: \"2rem\" }}>\n      <div className=\"d-flex\">\n        <span\n          style={{\n            backgroundColor:\n              question.value.startTimestamp < Date.now() &&\n              question.value.endTimestamp > Date.now()\n                ? \"rgb(153, 255, 153)\"\n                : \"rgb(255, 128, 128)\",\n\n            height: \"max-content\",\n            width: \"6rem\",\n            border: \"1px solid rgb(0, 82, 204)\",\n            textAlign: \"center\",\n            borderRadius: \"80px\",\n            marginRight: \"1rem\",\n          }}\n        >\n          {question.value.startTimestamp < Date.now() &&\n          question.value.endTimestamp > Date.now()\n            ? \"Active\"\n            : \"Closed\"}\n        </span>\n\n        {Date.now() < question.value.endTimestamp && (\n          <span\n            style={{\n              paddingLeft: \"1.5rem\",\n              borderLeft: \"2px solid #ced4da\",\n            }}\n          >\n            Ends in\n            <Widget\n              src={`silkking.near/widget/timeAgo`}\n              props={{ timeInFuture: question.value.endTimestamp }}\n            />\n          </span>\n        )}\n      </div>\n\n      <h2>{question.value.title}</h2>\n\n      <div className=\"d-flex\">\n        <span className=\"mr-3\" style={{ fontWeight: \"500\" }}>\n          Created by\n        </span>\n\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            profile,\n            question: question.accountId,\n            className: \"float-start d-inline-block me-2\",\n            style: {\n              width: \"1.5rem\",\n              marginLeft: \"1rem\",\n            },\n          }}\n        />\n\n        <span style={{ fontWeigth: \"500\" }}>\n          {sliceString(question.accountId, 18)}\n        </span>\n      </div>\n\n      <p>{question.value.description}</p>\n\n      {question.value.tgLink != \"\" && question.value.tgLink != undefined && (\n        <h4>\n          Discussion link:\n          <a href={question.value.tgLink}>{question.value.tgLink}</a>\n        </h4>\n      )}\n\n      <div\n        style={{ border: \"1px solid #ced4da\", borderRadius: \"0.375rem\" }}\n        className=\"p-3 my-3\"\n      >\n        <h4>{question.value.question}</h4>\n\n        {question.value.questionType == \"0\"\n          ? renderVoteText()\n          : renderVoteMultipleChoice()}\n      </div>\n    </div>\n\n    <div style={{ minWidth: \"17rem\" }}>\n      <h5>Information</h5>\n      <div\n        className=\"mb-2\"\n        style={{\n          border: \"1px solid #ced4da\",\n          borderRadius: \"0.375rem\",\n          fontWeight: \"500\",\n          padding: \"0.5rem 1rem\",\n        }}\n      >\n        <div className=\"d-flex justify-content-between\">\n          <span>Status</span>\n          <span>\n            {question.value.startTimestamp < Date.now() &&\n            question.value.endTimestamp > Date.now()\n              ? \"Active\"\n              : \"Closed\"}\n          </span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>Start date</span>\n          <span>{transformDateFormat(question.value.startTimestamp)}</span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>End date</span>\n          <span>{transformDateFormat(question.value.endTimestamp)}</span>\n        </div>\n\n        <div className=\"d-flex justify-content-between\">\n          <span>Creator</span>\n          <span>{sliceString(question.accountId, 8)}</span>\n        </div>\n      </div>\n\n      {questionsByCreator.lengh != 1 && (\n        <>\n          <div className=\"d-flex\">\n            <h5>Poll by creator</h5>\n            <h5 style={{ marginLeft: \"0.5rem\" }}>\n              ({questionsByThisCreator.length})\n            </h5>\n          </div>\n\n          <div\n            style={{\n              border: \"1px solid #ced4da\",\n              borderRadius: \"0.375rem\",\n              padding: \"0.5rem 1rem\",\n            }}\n          >\n            {renderOtherQuestions()}\n            <div style={{ margin: \"1rem 0\", textAlign: \"center\" }}>\n              <a\n                href={`#${context.accountId}/widget/showQuestionsHandler?accountId=${question.accountId}`}\n                style={{ textDecoration: \"none\" }}\n              >\n                <button className=\"btn btn-outline-primary w-75\">\n                  View all\n                </button>\n              </a>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/silkking.near/widget/newVotingInterface"}