{"tx_hash": "6ZGyhneTmA6iuSHt4LCtuu4TBRB3WGEa7WC641Fi21L1", "action_id_social": "EcBhNaSifp3XmStid6WwaiFmfaG1rcxBKxft9MWh3uvi-0-widget", "block_id": 92080257, "block_timestamp": "2023-05-17T16:42:19.645Z", "signer_id": "dataplatform.near", "widget_name": "QueryApi.Dashboard", "source_code": "const accountId = context.accountId;\nconst [selected_accountId, selected_indexerName] = props.selectedIndexerPath\n  ? props.selectedIndexerPath.split(\"/\")\n  : [undefined, undefined];\n\nconst activeTab = props.view ?? \"indexers\";\nconst limit = 7;\nlet totalIndexers = 0;\nconst REGISTRY_CONTRACT_ID =\n  props.REGISTRY_CONTRACT_ID || \"queryapi.dataplatform.near\";\nconst APP_OWNER = props.APP_OWNER || \"dataplatform.near\";\nconst GRAPHQL_ENDPOINT =\n  props.GRAPHQL_ENDPOINT ||\n  \"https://queryapi-hasura-graphql-24ktefolwq-ew.a.run.app\";\nconst EXTERNAL_APP_URL =\n  props.EXTERNAL_APP_URL || \"https://queryapi-frontend-24ktefolwq-ew.a.run.app\";\n\nlet appPath = props.isDev ? \"dev-App\" : \"App\";\nState.init({\n  activeTab: activeTab,\n  my_indexers: [],\n  all_indexers: [],\n  selected_indexer: undefined,\n  selected_account: undefined,\n});\n\nNear.asyncView(REGISTRY_CONTRACT_ID, \"list_indexer_functions\").then((data) => {\n  const indexers = [];\n  const total_indexers = 0;\n  Object.keys(data.All).forEach((accountId) => {\n    Object.keys(data.All[accountId]).forEach((functionName) => {\n      indexers.push({\n        accountId: accountId,\n        indexerName: functionName,\n      });\n      total_indexers += 1;\n    });\n  });\n\n  let my_indexers = indexers.filter(\n    (indexer) => indexer.accountId === accountId\n  );\n\n  State.update({\n    my_indexers: my_indexers,\n    all_indexers: indexers,\n    totalIndexers: total_indexers,\n  });\n});\n\nconst Subheading = styled.h2`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: calc(var(--body-top-padding) * -1);\n`;\n\nconst NavBarLogo = styled.a`\n  padding-top: 0.3125rem;\n  padding-bottom: 0.3125rem;\n  margin-right: 1rem;\n  font-size: 1.25rem;\n  text-decoration: none;\n  white-space: nowrap;\n`;\nconst Main = styled.div`\n  display: block;\n`;\n\nconst Section = styled.div`\n  padding-top: 0px;\n  border-left: none;\n  border-right: none;\n  display: ${(p) => (p.active ? \"block\" : \"none\")};\n  margin: ${(p) => (p.negativeMargin ? \"0 -12px\" : \"0\")};\n`;\n\nconst Tabs = styled.div`\n  display: none;\n  height: 48px;\n  background: #f8f9fa;\n  border-top: 1px solid #eceef0;\n  border-bottom: 1px solid #eceef0;\n  margin-bottom: ${(p) => (p.noMargin ? \"0\" : p.halfMargin ? \"24px\" : \"24px\")};\n\n  display: flex;\n  margin-left: -12px;\n  margin-right: -12px;\n\n  button {\n    flex: 1;\n  }\n`;\nconst Content = styled.div`\n  background-color: #f7f7f7;\n  padding: 2em;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nconst TabsButton = styled.button`\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: \"\";\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #0091ff;\n  }\n`;\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181c;\n  margin: 0 0 8px;\n`;\nconst Card = styled.div`\n  border-radius: 12px;\n  background: #fff;\n  border: ${(div) => (div.selected ? \"1px solid black\" : \"1px solid #eceef0\")};\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n`;\n\nconst CardBody = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  align-items: center;\n\n  > * {\n    min-width: 0;\n  }\n`;\n\nconst CardFooter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  gap: 4px;\n  padding: 16px;\n  border-top: 1px solid #eceef0;\n`;\n\nconst TextLink = styled.a`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Thumbnail = styled.a`\n  display: block;\n  width: 48px;\n  height: 48px;\n  flex-shrink: 0;\n  border: 1px solid #eceef0;\n  border-radius: 8px;\n  overflow: hidden;\n  outline: none;\n  transition: border-color 200ms;\n\n  &:focus,\n  &:hover {\n    border-color: #d0d5dd;\n  }\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst CardWrapper = styled.div`\n  margin: 0 0 16px;\n`;\n\nconst sharedButtonStyles = `\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  margin-bottom: 12px;\n  height: 32px;\n  border-radius: 6px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    outline: none;\n  }\n\n  i {\n    color: #7E868C;\n  }\n\n  .bi-16 {\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  ${sharedButtonStyles}\n  color: ${(p) => (p.primary ? \"#fff\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#0091FF\" : \"#FBFCFD\")};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"#0484e5\" : \"#ECEDEE\")};\n  }\n`;\n\nconst ButtonLink = styled.a`\n  ${sharedButtonStyles}\n  color: ${(p) => {\n    if (p.primary) return \"#fff\";\n    else if (p.danger) return \"#fff\";\n    else return \"#11181C\";\n  }} !important;\n  background: ${(p) => {\n    if (p.primary) return \"#0091FF\";\n    else if (p.danger) return \"#dc3545\";\n    else return \"#FBFCFD\";\n  }};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => {\n      if (p.primary) return \"#0484e5\";\n      else if (p.danger) return \"#b22b38\";\n      else return \"#ECEDEE\";\n    }}\n`;\n\nconst indexerView = (accountId, indexerName, isUserView) => {\n  console.log(accountId, IndexerName, isUserView);\n  const editUrl = `https://near.org/#/${APP_OWNER}/widget/QueryApi.${appPath}?selectedIndexerPath=${accountId}/${indexerName}&view=editor-window`;\n  const statusUrl = `https://near.org/#/${APP_OWNER}/widget/QueryApi.${appPath}?selectedIndexerPath=${accountId}/${indexerName}&view=indexer-status`;\n  // const playgroundLink = `https://near.org/#/${APP_OWNER}/widget/QueryApi.App?selectedIndexerPath=${accountId}/${indexerName}&view=editor-window&tab=playground`;\n  const playgroundLink = `https://cloud.hasura.io/public/graphiql?endpoint=${GRAPHQL_ENDPOINT}/v1/graphql&header=x-hasura-role%3A${accountId.replaceAll(\n    \".\",\n    \"_\"\n  )}`;\n\n  let removeIndexer = (name) => {\n    const gas = 200000000000000;\n    Near.call(\n      REGISTRY_CONTRACT_ID,\n      \"remove_indexer_function\",\n      {\n        function_name: name,\n      },\n      gas\n    );\n  };\n  return (\n    <Card>\n      <CardBody>\n        <Thumbnail>\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: metadata.image,\n              fallbackUrl:\n                \"https://upload.wikimedia.org/wikipedia/commons/8/86/Database-icon.svg\",\n              alt: \"Near QueryApi indexer\",\n            }}\n          />\n        </Thumbnail>\n\n        <div>\n          <TextLink as=\"a\" bold ellipsis>\n            {indexerName}\n          </TextLink>\n          <TextLink as=\"a\" ellipsis>\n            @{accountId}\n          </TextLink>\n        </div>\n      </CardBody>\n\n      <CardFooter className=\"flex justify-center items-center\">\n        <ButtonLink\n          onClick={() =>\n            State.update({\n              activeTab: \"indexer-status\",\n            })\n          }\n        >\n          View Status\n        </ButtonLink>\n        <ButtonLink\n          primary\n          onClick={() =>\n            State.update({\n              activeTab: \"editor-window\",\n            })\n          }\n        >\n          {accountId === context.accountId ? \"Edit Indexer\" : \"View Indexer\"}\n        </ButtonLink>\n        <ButtonLink href={playgroundLink} target=\"_blank\">\n          View In Playground\n        </ButtonLink>\n        {isUserView && (\n          <ButtonLink danger onClick={() => removeIndexer(indexerName)}>\n            Delete Indexer\n          </ButtonLink>\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nreturn (\n  <Wrapper negativeMargin={state.activeTab === \"indexers\"}>\n    <Tabs>\n      <TabsButton\n        type=\"button\"\n        onClick={() => State.update({ activeTab: \"indexers\" })}\n        selected={state.activeTab === \"indexers\"}\n      >\n        Indexers\n      </TabsButton>\n      {props.view === \"create-new-indexer\" && (\n        <TabsButton\n          type=\"button\"\n          onClick={() => State.update({ activeTab: \"create-new-indexer\" })}\n          selected={state.activeTab === \"create-new-indexer\"}\n        >\n          Create New Indexer\n        </TabsButton>\n      )}\n\n      {props.selectedIndexerPath && (\n        <>\n          <TabsButton\n            type=\"button\"\n            onClick={() => State.update({ activeTab: \"editor-window\" })}\n            selected={state.activeTab === \"editor-window\"}\n          >\n            Indexer Editor\n          </TabsButton>\n\n          <TabsButton\n            type=\"button\"\n            onClick={() => State.update({ activeTab: \"indexer-status\" })}\n            selected={state.activeTab === \"indexer-status\"}\n          >\n            Indexer Status\n          </TabsButton>\n        </>\n      )}\n    </Tabs>\n    <Main>\n      <Section active={state.activeTab === \"indexers\"}>\n        <NavBarLogo\n          href={`https://near.org/#/${APP_OWNER}/widget/QueryApi.${appPath}`}\n          title=\"QueryApi\"\n          onClick={() => {\n            State.update({\n              activeTab: \"indexers\",\n            });\n          }}\n        >\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              className: \"d-inline-block align-text-top me-2\",\n              image: metadata.image,\n              style: { height: \"24px\" },\n              fallbackUrl:\n                \"https://upload.wikimedia.org/wikipedia/commons/8/86/Database-icon.svg\",\n              alt: \"the queryapi logo\",\n            }}\n          />\n          QueryApi\n        </NavBarLogo>\n\n        <div>\n          <ButtonLink\n            href={`/#/${APP_OWNER}/widget/QueryApi.${appPath}/?view=create-new-indexer`}\n            style={{ \"margin-top\": \"10px\" }}\n            onClick={() =>\n              State.update({\n                activeTab: \"create-new-indexer\",\n                selected_indexer: \"\",\n              })\n            }\n          >\n            Create New Indexer\n          </ButtonLink>\n          {state.my_indexers.length > 0 && (\n            <H2>\n              {accountId}'s Indexers\n              <span>({state.my_indexers.length})</span>\n            </H2>\n          )}\n          <Widget\n            src={`${APP_OWNER}/widget/QueryApi.IndexerExplorer`}\n            props={{\n              REGISTRY_CONTRACT_ID,\n              APP_OWNER,\n              appPath,\n            }}\n          />\n        </div>\n      </Section>\n      <Section\n        negativeMargin\n        primary\n        active={state.activeTab === \"create-new-indexer\"}\n      >\n        {state.activeTab === \"create-new-indexer\" && (\n          <div>\n            <Widget\n              src={`${APP_OWNER}/widget/QueryApi.Editor`}\n              props={{\n                indexerName:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: selected_accountId ?? state.indexers[0].accountId,\n                path: \"create-new-indexer\",\n                EXTERNAL_APP_URL,\n                REGISTRY_CONTRACT_ID,\n                GRAPHQL_ENDPOINT,\n                APP_OWNER,\n              }}\n            />\n          </div>\n        )}\n      </Section>\n      <Section active={state.activeTab === \"indexer-status\"}>\n        {state.activeTab === \"indexer-status\" && (\n          <div>\n            {state.indexers.length > 0 &&\n              (state.selected_indexer != \"\" ? (\n                <H2>{state.selected_indexer}</H2>\n              ) : (\n                <H2>{state.indexers[0].indexerName}</H2>\n              ))}\n            {indexerView(\n              selected_accountId ?? state.indexers[0].accountId,\n              selected_indexerName ?? state.indexers[0].indexerName,\n              context.accountId === selected_accountId\n            )}\n            <Widget\n              src={`${APP_OWNER}/widget/QueryApi.IndexerStatus`}\n              props={{\n                indexer_name:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: selected_accountId ?? state.indexers[0].accountId,\n                EXTERNAL_APP_URL,\n                REGISTRY_CONTRACT_ID,\n                GRAPHQL_ENDPOINT,\n                APP_OWNER,\n              }}\n            />\n          </div>\n        )}\n      </Section>\n      <Section\n        negativeMargin\n        primary\n        active={state.activeTab === \"editor-window\"}\n      >\n        {state.activeTab === \"editor-window\" && (\n          <div>\n            {state.indexers.length > 0 &&\n              (state.selected_indexer != undefined ? (\n                <H2>{state.selected_indexer}</H2>\n              ) : (\n                <H2>{`${state.indexers[0].accountId}/${state.indexers[0].indexerName}`}</H2>\n              ))}\n            {indexerView(\n              selected_accountId ?? state.indexers[0].accountId,\n              selected_indexerName ?? state.indexers[0].indexerName,\n              context.accountId === selected_accountId\n            )}\n            <Widget\n              src={`${APP_OWNER}/widget/QueryApi.Editor`}\n              props={{\n                indexerName:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: selected_accountId ?? state.indexers[0].accountId,\n                path: \"query-api-editor\",\n                tab: props.tab,\n                EXTERNAL_APP_URL,\n                REGISTRY_CONTRACT_ID,\n                GRAPHQL_ENDPOINT,\n                APP_OWNER,\n              }}\n            />\n          </div>\n        )}\n        {state.activeTab === \"create-new-indexer\" && (\n          <div>\n            {state.indexers.length > 0 &&\n              (state.selected_indexer != undefined ? (\n                <H2>{state.selected_indexer}</H2>\n              ) : (\n                <H2>{`${state.indexers[0].accountId}/${state.indexers[0].indexerName}`}</H2>\n              ))}\n            <Widget\n              src={`${APP_OWNER}/widget/QueryApi.Editor`}\n              props={{\n                indexerName:\n                  selected_indexerName ?? state.indexers[0].indexerName,\n                accountId: selected_accountId ?? state.indexers[0].accountId,\n                path: \"create-new-indexer\",\n                EXTERNAL_APP_URL,\n                REGISTRY_CONTRACT_ID,\n                GRAPHQL_ENDPOINT,\n                APP_OWNER,\n              }}\n            />\n          </div>\n        )}\n      </Section>\n    </Main>\n  </Wrapper>\n);\n", "metadata": {"description": "Main dashboard for Near QueryAPI which allows you to seamlessly create, manage, and discover indexers", "image": {"ipfs_cid": "bafkreihx3wowmjrv3taztqxwgubt6mijaqwzvo6573wi6lv4omxfh3ogdm"}, "name": "Near Query API", "tags": {"data-platform": "", "indexers": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dataplatform.near/widget/QueryApi.Dashboard", "__row_index": 7}