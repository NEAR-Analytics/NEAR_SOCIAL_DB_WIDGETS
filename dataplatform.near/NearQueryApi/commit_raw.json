{"tx_hash": "CigKWtixQ1BqFNEdngSQ8SmXYm9srscpGYWCxK3PednW", "action_id_social": "HBYaMvYTNAZtNC6hdgHZstv5v3PoQYToKu1W2S8iofgX-0-widget", "block_id": 86999737, "block_timestamp": "2023-03-10 19:18:00.652", "signer_id": "dataplatform.near", "widget_name": "NearQueryApi", "source_code": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dataplatform.near/widget/NearQueryApi", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.coming-soon": NaN, "metadata.tags.data-platform": NaN, "metadata.tags.indexers": NaN, "branch.draft": NaN, "metadata": NaN, "branch.draft.": "let index = state.index ?? Storage.get(\"index\");\nconst SmallTitle = styled.h3`\n  color: #687076;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 15px;\n  margin-top: 10px;\n  text-transform: uppercase;\n\n  @media (max-width: 770px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst SmallText = styled.h3`\n  color: #687076;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 15px;\n  margin-top: 10px;\n\n  @media (max-width: 770px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst TextLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: #0091FF;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n`;\nState.init({ signedUp: false });\n\nif (index !== null) {\n  index = index || [];\n\n  const lastBlockHeight = index[0].blockHeight || 0;\n\n  const newIndex = Social.index(\"queryAPIWaitlist\", \"query-api-waitlist\", {\n    order: \"asc\",\n    from: lastBlockHeight + 1,\n    subscribe: true,\n  });\n\n  if (newIndex !== null && newIndex.length > 0) {\n    index = [...newIndex.reverse(), ...index];\n    Storage.set(\"index\", index);\n  }\n\n  if ((state.index.length || 0) < (index.length || 0)) {\n    State.update({\n      index,\n    });\n  }\n}\n\nconst waitlist = index;\nconsole.log(waitlist, \"waitlist\");\nconst dedupedList = waitlist.filter(\n  (obj, index, arr) =>\n    index === arr.findIndex((o) => o.accountId === obj.accountId)\n);\nconst unique = {};\n\nif (waitlist) {\n  waitlist.forEach(({ accountId, value }) => {\n    if (accountId === context.accountId) {\n      State.update({\n        signedUp: true,\n      });\n    }\n    const key = accountId;\n    if (key in unique) {\n      return;\n    }\n    unique[key] = true;\n  });\n}\n\nfunction renderRecentWaitlist(accountIds) {\n  return (\n    <div className=\"d-flex flex-wrap gap-3\">\n      {accountIds &&\n        accountIds.map((accountId, i) => {\n          return (\n            <div className=\"position-relative\" key={i}>\n              <a\n                href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n                className=\"text-decoration-none\"\n              >\n                <Widget\n                  src=\"mob.near/widget/ProfileImage\"\n                  props={{\n                    accountId,\n                    className: \"d-inline-block overflow-hidden\",\n                  }}\n                />\n              </a>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nreturn (\n  <div>\n    <div className=\"mb-4\">\n      <SmallTitle>Near Query API</SmallTitle>\n      <TextLink\n        href=\"https://alpha.near.org/#/roshaan.near/widget/queryapi__QueryApiDashboard\"\n        target=\"_blank\"\n      >\n        whitelisted demo\n        <i className=\"bi bi-box-arrow-up-right\"></i>\n      </TextLink>\n      <SmallText>\n        Seamlessly create, manage, and discover indexers. Coming soon Near you.\n      </SmallText>\n    </div>\n    {state.signedUp === false ? (\n      <div className=\"mb-4\">\n        <CommitButton\n          className=\"btn btn-lg btn-success\"\n          onCommit={() => {\n            State.update({\n              signedUp: true,\n            });\n          }}\n          onCancel={() => {\n            State.update({\n              signedUp: false,\n            });\n          }}\n          data={() => ({\n            index: {\n              queryAPIWaitlist: JSON.stringify({\n                key: \"query-api-waitlist\",\n                value: Date.now(),\n              }),\n            },\n          })}\n        >\n          Get me on the waitlist \ud83d\ude4b\u200d\u2642\ufe0f\n        </CommitButton>\n      </div>\n    ) : (\n      <div className=\"mb-4\">\n        <h4>You are already on the waitlist. Hang tight :)</h4>\n        <TextLink\n          style={{ \"font-size\": \"16px\" }}\n          href=\"https://tnobfjyc9vs.typeform.com/to/UCRjFqJe\"\n          target=\"_blank\"\n        >\n          Let us know your indexing needs here!{\" \"}\n          <i className=\"bi bi-box-arrow-up-right\"></i>\n        </TextLink>\n      </div>\n    )}\n\n    <div className=\"mb-4\">\n      <h4>Recently signed up... </h4>\n      <div>\n        {dedupedList &&\n          renderRecentWaitlist(\n            dedupedList.slice(0, 10).map((a) => a.accountId)\n          )}\n      </div>\n    </div>\n  </div>\n);\n", "branch": NaN}