{"tx_hash": "5yvAB4tyYTyUwzsJoDUZSk4GcWHtcCw1ZEpkWysCPWEW", "action_id_social": "We6HdEzzr6CiiRvexk5eHBxNUnbUdNpEvW8ZJFVTaE6-0-widget", "block_id": 89535433, "block_timestamp": "2023-04-14 03:30:12.227", "signer_id": "juaner.near", "widget_name": "ref-market-burrow-repay", "source_code": "const Container = styled.div`\n    .template{\n      display:flex;\n      align-items:center;\n      justify-content:space-between;\n      margin-left:6px;\n    }\n    .template .title{\n      font-size:14px;\n      color:#7E8A93;\n    }\n    .template .value{\n      font-size:14px;\n      color:#fff;\n    }\n    .mt_25{\n      margin-top:25px;\n    }\n    .mt-10{\n      margin-top:10px;\n    }\n    .greenButton{\n      display:flex;\n      align-items:center;\n      justify-content:center;\n      background: #00FFD1;\n      border-radius: 12px;\n      height:46px;\n      font-weight: 700;\n      font-size: 18px;\n      color:#000;\n      cursor:pointer;\n      width:100%;\n    }\n    .disabled{\n      opacity:0.3;\n      cursor: not-allowed;\n    }\n`;\nconst Backdrop = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1001;\n`;\nconst Modal = styled.div`\n  background-color:#1A2E33;\n  border-radius:12px;\n  position:fixed;\n  z-index:1002;\n  width:30rem;\n  max-width: 95vw;\n  max-height: 80vh;\n  padding:10px 0 20px 0;\n  animation:anishow 0.3s forwards ease-out;\n  left:50%;\n  top:50%;\n  @keyframes anishow {\n    from {\n      opacity: 0;\n      transform:translate(-50%,-70%);\n    }\n    to {\n      opacity: 1;\n      transform:translate(-50%,-50%);\n    }\n  }\n    .modal-header{\n      display:flex;\n      align-items:center;\n      justify-content:start;\n      color:#fff;\n      font-weight: 700;\n      font-size: 18px;\n      padding:12px 20px;\n      margin-bottom:16px;\n      border-bottom:2px solid rgba(48, 67, 82, 0.5);\n    } \n    .modal-header .title{\n       font-weight: 700;\n       font-size: 18px;\n       color:#fff;\n    }\n    .modal-header .btn-close{\n      position:absolute;\n      right:28px;\n      margin:0;\n    }\n    .modal-body {\n        padding:0 16px;\n    }\n    .modal-body .tab{\n      display:flex;\n      align-items:center;\n      justify-content:space-between;\n      margin-bottom:30px;\n    }\n    .modal-body .tab span{\n      display:flex;\n      align-items:center;\n      justify-content:center;\n      width:50%;\n      height:40px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 18px;\n      cursor:pointer;\n      color:#fff;\n    }\n    .modal-body .tab span.active{\n      background: #304352;\n    }\n   .btn-close-custom{\n      position:absolute;\n      right:28px;\n      width:12px;\n      height:12px;\n      cursor:pointer;\n    }\n`;\n/** base tool start  */\nlet accountId = context.accountId;\nif (!accountId) {\n  return <Widget src=\"juaner.near/widget/ref_account-signin\" />;\n}\nlet BURROW_CONTRACT = \"contract.main.burrow.near\";\nconst toAPY = (v) => Math.round(v * 100) / 100;\nconst clone = (o) => JSON.parse(JSON.stringify(o));\nconst shrinkToken = (value, decimals) => {\n  return new Big(value).div(new Big(10).pow(decimals));\n};\n\nconst expandToken = (value, decimals) => {\n  return new Big(value).mul(new Big(10).pow(decimals));\n};\nconst formatToken = (v) => Math.floor(v * 10_000) / 10_000;\nconst { selectedTokenId, selectedTokenMeta, showModal, closeModal } = props;\nconst {\n  rewards,\n  account,\n  balances,\n  amount,\n  hasError,\n  assets,\n  wnearbase64,\n  closeButtonBase64,\n} = state;\nif (!showModal) {\n  State.update({\n    amount: \"\",\n    hasError: false,\n  });\n}\nconst hasData = assets.length > 0 && rewards.length > 0 && account;\n/** base tool end */\nconst onLoad = (data) => {\n  State.update(data);\n};\n/** logic start */\nlet availableBalance = 0;\nlet apy = 0;\n\nconst getBalance = (asset) => {\n  if (!asset) return 0;\n  const { accountBalance, metadata } = asset;\n  return formatToken(shrinkToken(accountBalance, metadata.decimals).toFixed());\n};\n\nconst getApy = (asset) => {\n  if (!asset) return 0;\n  const r = rewards.find((a) => a.token_id === asset.token_id);\n  return toAPY(r.apyBaseBorrow);\n};\n\nif (selectedTokenId && assets) {\n  const token = selectedTokenId === \"NEAR\" ? \"wrap.near\" : selectedTokenId;\n  const asset = assets.find((a) => a.token_id === token);\n  availableBalance =\n    selectedTokenId === \"NEAR\" ? nearBalance : getBalance(asset);\n  apy = getApy(asset);\n}\n\nconst storageBurrow = Near.view(BURROW_CONTRACT, \"storage_balance_of\", {\n  account_id: accountId,\n});\n\nconst storageToken = selectedTokenId\n  ? Near.view(selectedTokenId, \"storage_balance_of\", {\n      account_id: accountId,\n    })\n  : null;\n\nconst handleAmount = (e) => {\n  State.update({\n    amount: Number(e.target.value),\n    selectedTokenId,\n    hasError: false,\n  });\n};\nconst handleRepay = () => {\n  const asset = assets.find((a) => a.token_id === selectedTokenId);\n\n  if (!selectedTokenId || !amount || hasError) return;\n\n  if (amount > availableBalance) {\n    State.update({ selectedTokenId, amount, hasError: true });\n    return;\n  }\n  const transactions = [];\n\n  const expandedAmount = expandToken(\n    amount,\n    asset.metadata.decimals + asset.config.extra_decimals\n  );\n\n  const repayTemplate = {\n    Execute: {\n      actions: [\n        {\n          Repay: {\n            max_amount: expandedAmount.toFixed(0),\n            token_id: selectedTokenId,\n          },\n        },\n      ],\n    },\n  };\n\n  const repayTransaction = {\n    contractName: selectedTokenId,\n    methodName: \"ft_transfer_call\",\n    deposit: new Big(\"1\").toFixed(),\n    gas: expandToken(300, 12),\n    args: {\n      receiver_id: BURROW_CONTRACT,\n      amount: expandToken(amount, selectedTokenMeta.decimals).toFixed(),\n      msg: JSON.stringify(repayTemplate),\n    },\n  };\n\n  if (storageToken?.available === \"0\" || !storageToken?.available) {\n    transactions.push({\n      contractName: selectedTokenId,\n      methodName: \"storage_deposit\",\n      deposit: expandToken(0.25, 24).toFixed(),\n    });\n  }\n\n  if (storageBurrow?.available === \"0\" || !storageBurrow?.available) {\n    transactions.push({\n      contractName: BURROW_CONTRACT,\n      methodName: \"storage_deposit\",\n      deposit: expandToken(0.25, 24).toFixed(),\n      gas: expandToken(140, 12),\n    });\n  }\n\n  transactions.push(repayTransaction);\n\n  Near.call(transactions);\n};\nfunction getWnearIcon(icon) {\n  State.update({\n    wnearbase64: icon,\n  });\n}\nfunction getCloseButtonIcon(icon) {\n  State.update({\n    closeButtonBase64: icon,\n  });\n}\n/** logic end */\nreturn (\n  <Container>\n    {/* load data */}\n    {!hasData && (\n      <Widget src=\"juaner.near/widget/ref_burrow-data\" props={{ onLoad }} />\n    )}\n    {/* load icons */}\n    <Widget\n      src=\"juaner.near/widget/ref-icons\"\n      props={{ getWnearIcon, getCloseButtonIcon }}\n    />\n    {/** modal */}\n    <Modal style={{ display: showModal ? \"block\" : \"none\" }}>\n      <div class=\"modal-header\">\n        <div class=\"title\">Repay</div>\n        <img\n          class=\"btn-close-custom\"\n          src={closeButtonBase64}\n          onClick={closeModal}\n        />\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"content\">\n          <Widget\n            src=\"juaner.near/widget/ref-input-box\"\n            props={{\n              handleAmount,\n              balance: availableBalance,\n              balance$: availableUSD,\n            }}\n          />\n          {hasError && (\n            <p class=\"alert alert-danger mt-10\" role=\"alert\">\n              Amount greater than available\n            </p>\n          )}\n          <div class=\"template mt_25\">\n            <span class=\"title\">Borrow APY</span>\n            <span class=\"value\">{apy}%</span>\n          </div>\n          <div\n            class={`greenButton mt_25 ${Number(amount) ? \"\" : \"disabled\"}`}\n            onClick={handleRepay}\n          >\n            Repay\n          </div>\n        </div>\n      </div>\n    </Modal>\n    <Backdrop\n      style={{ display: showModal ? \"block\" : \"none\" }}\n      onClick={closeModal}\n    ></Backdrop>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/juaner.near/widget/ref-market-burrow-repay"}