{"tx_hash": "G5WvExXvWFvLikk5BLXPwfootVbbnZVevZinUsfpX1KE", "action_id_social": "HkSRLh4MSptEQUmTtiQsoLiVqBasJB9zeNUX7pUGEMdA-0-widget", "block_id": 91570293, "block_timestamp": "2023-05-11T01:08:05.030Z", "signer_id": "juaner.near", "widget_name": "ref-input-box", "source_code": "const Container = styled.div`\n    padding-bottom:30px;\n    .inputArea{\n      position:relative;\n      display:flex;\n      align-items:center;\n    }\n    .maxButton{\n      display:flex;\n      align-items:center;\n      justify-content:center;\n      position:absolute;\n      right:14px;\n      width: 40px;\n      height: 25px;\n      font-size: 12px;\n      line-height: 16px;\n      color: #4B6778;\n      border: 1px solid #4B6778;\n      border-radius: 6px;\n      cursor:pointer;\n    }\n    .maxButton:hover{\n      color:#5f8399;\n      border: 1px solid #5f8399;\n    }\n    .normalInput{\n      width:100%;\n      background: #152528;\n      border-radius: 12px;\n      height: 55px;\n      font-size:20px;\n      color: #7E8A93;\n      padding:0 60px 0 15px;\n      border:none;\n      margin-bottom:4px;\n    }\n    .normalInput:focus{\n      outline:none;\n      background: #152528; \n      color: #7E8A93;\n    }\n    .valueArea {\n      display:flex;\n      align-items:center;\n      justify-content:space-between;\n      font-size:12px;\n      color:#4B6778;\n      padding:0 6px;\n    }\n    .normalInput::-webkit-outer-spin-button,\n    .normalInput::-webkit-inner-spin-button {\n    -webkit-appearance: none !important;\n    }\n    .mt_20 {\n      margin-top:20px;\n    }\n    .rangeInput{\n      width:100%;\n    }\n    input[type=range]{\n      padding:0;\n      -webkit-appearance: none;\n      background-color:transparent;\n    }\n   \n    input[type=range]::-webkit-slider-runnable-track {\n      height:6px;\n      background: #0F1D27;\n      border-radius: 5px;\n    }\n    input[type=range]::-webkit-slider-thumb {\n      position:relative;\n      -webkit-appearance: none;\n      height: 18px;\n      width: 18px;\n      margin-top: -5px;\n      background: #00D6AF;\n      border-radius: 50%;\n      cursor:pointer;\n      z-index:10;\n  }\n  .rangeArea{\n    position:relative;\n    width:100%;\n  }\n  .bgLine{\n    position:absolute;\n    left:0;\n    top:12px;\n    height:6px;\n    border-radius: 5px;\n    background: #00D6AF;\n  }\n  .scale{\n    width:100%;\n    display:flex;\n    justify-content:space-between;\n    align-items:center;\n  }\n  .scale .item {\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    font-size:12px;\n    color:#7E8A93;\n  }\n  .item::after{\n    content: '';\n    width:1px;\n    height:5px;\n    margin-top:4px;\n    background-color:#7E8A93;\n  }\n  .processSpan{\n      display:flex;\n      align-items:center;\n      position:absolute;\n      height: 22px;\n      padding: 0 4px;\n      background: #00C6A2;\n      border-radius: 8px;\n      font-weight: 700;\n      font-size: 12px;\n      color:#000;\n      top:30px;\n  }\n`;\nconst { amount, handleAmount, balance, balance$ } = props;\nconst subBalance = Big(balance || \"0\").toFixed(4);\nfunction changeAmount(e) {\n  const value = e.target.value;\n  if (Big(value || 0).gt(subBalance || 0)) return;\n  const isMax = Big(value || 0).eq(subBalance || 0);\n  handleAmount(value, isMax);\n}\nfunction changeRangeAmount(e) {\n  const value = Number(e.target.value);\n  console.log(\"value\", value);\n  const isMax = Big(value || 0).eq(subBalance || 0);\n  const amount = Big(subBalance || 0)\n    .mul(value || 0)\n    .div(100)\n    .toFixed(4);\n  handleAmount(amount, isMax);\n}\nfunction changeToMax() {\n  handleAmount(Big(subBalance || 0).toFixed(), true);\n}\nconst rangeAmount =\n  Number(subBalance) > 0 ? (100 * Number(amount || 0)) / Number(subBalance) : 0;\nconsole.log(\"99999999-rangeAmount\", rangeAmount);\nconst bgLineWidth = rangeAmount + \"%\";\nconst processMarginLeft = -9 - Big(18).mul(rangeAmount).div(100).toNumber();\nfunction displayAmount() {\n  let result;\n  let v = (amount || 0).toString();\n  if (v.indexOf(\".\") > -1) {\n    // \u5c0f\u6570\n    result = v.replace(/^0+\\./g, \"0.\");\n  } else {\n    // \u6574\u6570\n    result = v.replace(/^[0]+/, \"\");\n  }\n  return result || 0;\n}\nreturn (\n  <Container>\n    <div class=\"inputArea\">\n      <input\n        class=\"normalInput\"\n        type=\"number\"\n        value={displayAmount()}\n        onChange={changeAmount}\n      />\n      <span class=\"maxButton\" onClick={changeToMax}>\n        Max\n      </span>\n    </div>\n    <div class=\"valueArea\">\n      <span class=\"value\">${balance$ || \"0\"}</span>\n      <span>Balance:{subBalance}</span>\n    </div>\n    <div class=\"scale mt_20\">\n      <span class=\"item\">0%</span>\n      <span class=\"item\">25%</span>\n      <span class=\"item\">50%</span>\n      <span class=\"item\">75%</span>\n      <span class=\"item\">100%</span>\n    </div>\n    <div class=\"rangeArea\">\n      <input\n        class=\"rangeInput\"\n        type=\"range\"\n        value={rangeAmount}\n        step=\"any\"\n        min=\"0\"\n        max=\"100\"\n        onChange={changeRangeAmount}\n      />\n      <span\n        class=\"bgLine\"\n        style={{\n          width: bgLineWidth,\n        }}\n      ></span>\n      <span\n        class=\"processSpan\"\n        style={{ left: bgLineWidth, marginLeft: processMarginLeft }}\n      >\n        {Big(rangeAmount || 0).toFixed(0)}%\n      </span>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/juaner.near/widget/ref-input-box", "__row_index": 20}