{"tx_hash": "BtDQWrscPyty7H4Y7P5j8ksj7TAQoKWY3c6vfx2NymWS", "action_id_social": "9Xs9CBAcac7hse8BnRXUannpbbAkqSCdYKYgELnpzwT7-0-widget", "block_id": 93216057, "block_timestamp": "2023-06-01T15:04:34.066Z", "signer_id": "7418d5cb7d7657e526b8bccf28750939105828d0f5b34a7254bd107477d84a2c", "widget_name": "ProgressTableAdminPanel", "source_code": "const DashboardWrapper = styled.div`\n    margin: 50px auto;\n    width: 90%;\n    max-width: 600px; \n`;\n\nconst ListTitle = styled.h2`\n  margin: 20px 0;\n`;\nconst FormWrapper = styled.div`\ndisplay: flex;\nflex-flow: column;\nmargin-bottom: 40px;\n`;\n\nconst ItemsListWrapper = styled.div`\ndisplay: block;\n  padding-left: 20px;\n\n`;\nconst SingleItem = styled.div`\nposition: relative;\ndisplay: flex;\nopacity: ${({ isActive }) => (isActive ? 1 : 0.5)};\np {\n  margin-right: 20px;\n}\n\n`;\n\nconst RemoveItemBtn = styled.div`\n  position: relative;\n  color: red;\n  margin-top: 2px;\n  width: 22px;\n  height: 22px;\n  font-size: 22px;\n  transform: rotate(45deg);\n  cursor: pointer;\n \n`;\n\nconst EditSvg = styled.svg`\n    cursor: pointer;\n`;\n\nconst EditModalWrapper = styled.div`\n    display: ${({ isOpen }) => (isOpen ? \"flex\" : \"none\")};\n    align-items: flex-start;\n    max-width: 600px;\n    justify-content: center;\n    padding-top: 10%;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.8);\n    z-index: 100;\n\n`;\nconst EditModal = styled.div`\n    padding: 20px 60px;\n    background: #fff;\n    max-width: 400px;\n    width: 50%;\n    \n`;\n\nconst CloseModal = styled.div`\n    position: absolute;\n    top: 5%;\n    left: 80%;\n    color: red;\n    margin-top: 2px;\n    width: 40px;\n    height: 40px;\n    font-size: 40px;\n    transform: rotate(45deg);\n    cursor: pointer;\n  `;\n\nconst ButtonWapper = styled.div`\n    margin-top: 40px;\n    display: flex;\n    justify-content: flex-end;\n    button {\n        margin-left: 20px;\n    }\n`;\n\n//Styles ENDED\n\nconst contr_id = \"widget-progress-table.near\";\nfunction getNear() {\n  return Near.view(\"widget-progress-table.near\", \"get_data\", `{}`);\n}\n\nconsole.log(\"NEAR\", getNear());\n\nconst accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\n\nconst myState = State.init({\n  key: \"\",\n  value: \"\",\n  linkValue: \"\",\n  allItems: getNear(),\n  editKey: \"\",\n  editValue: \"\",\n  editLink: \"\",\n  isModalOpen: false,\n});\n\nif (myState.allItems === null) {\n  State.update(\n    {\n      allItems: getNear(),\n    },\n    [items]\n  );\n}\n\n//Add items to the local state\n// function addItem() {\n//   let currItems = myState.allItems;\n//   //If key has space\n//   let key = myState.key.replace(/ /g, \"-\");\n//   currItems[key] = { value: myState.value, link: myState.linkValue };\n\n//   State.update({\n//     key: \"\",\n//     value: \"\",\n//     linkValue: \"\",\n//     allItems: currItems,\n//   });\n// }\nfunction addItem() {\n  let key = myState.key.replace(/ /g, \"-\");\n\n  Near.call(contr_id, \"set_data\", {\n    key: key,\n    value: parseInt(myState.value),\n    link: myState.linkValue,\n  });\n  State.update({\n    key: \"\",\n    value: \"\",\n    linkValue: \"\",\n    allItems: currItems,\n  });\n}\n\n//Remove item from local state\nfunction removeItemFromState(key) {\n  //   State.update({\n  //     allItems: { ...myState.allItems, [key]: null },\n  //   });\n\n  return Near.call(contr_id, \"remove_user_item\", { key: key });\n}\n\n//Upload data on chain\n// function uploadData() {\n//   Social.set({\n//     data: {\n//       \"7418d5cb7d7657e526b8bccf28750939105828d0f5b34a7254bd107477d84a2c\": {\n//         testWidget: myState.allItems,\n//       },\n//     },\n//   });\n// }\n\n//Open modal for editing item from local state\nfunction openModal(item) {\n  State.update({\n    editKey: item[0],\n    editValue: item[1].value,\n    editLink: item[1].link,\n    isModalOpen: true,\n  });\n}\n\n//Edit single item in local state\nfunction changeItemInState() {\n  // const newItems = { ...myState.allItems };\n  // newItems[myState.editKey] = {\n  //   value: myState.editValue,\n  //   link: \"\",\n  // };\n\n  Near.call(contr_id, \"change_data\", {\n    key: myState.editKey,\n    value: parseInt(myState.editValue),\n    link: myState.editLink,\n  });\n  State.update({\n    allItems: newItems,\n    editKey: \"\",\n    editValue: \"\",\n    isModalOpen: false,\n  });\n}\n\nreturn (\n  <DashboardWrapper>\n    <EditModalWrapper isOpen={myState.isModalOpen}>\n      <CloseModal onClick={() => State.update({ isModalOpen: false })}>\n        +\n      </CloseModal>\n      <EditModal>\n        <p>\n          You are editing <strong>{myState.editKey}</strong>\n        </p>\n        <label for=\"new-value\">Value: </label>\n        <input\n          type=\"number\"\n          id=\"new-value\"\n          value={myState.editValue}\n          onChange={(e) => State.update({ editValue: e.target.value })}\n        />\n        <label for=\"new-link-value\">Value: </label>\n        <input\n          type=\"text\"\n          id=\"new-link-value\"\n          value={myState.editLink}\n          onChange={(e) => State.update({ editLink: e.target.value })}\n        />\n        <ButtonWapper>\n          <button onClick={() => changeItemInState()}>Submit</button>\n        </ButtonWapper>\n      </EditModal>\n    </EditModalWrapper>\n    <FormWrapper>\n      <ListTitle>Add new item: </ListTitle>\n      <label for=\"key\">Key: </label>\n      <input\n        type=\"text\"\n        onChange={(e) => State.update({ key: e.target.value })}\n        value={myState.key}\n        id=\"key\"\n      />\n      <label for=\"value\">Value: </label>\n      <input\n        type=\"number\"\n        id=\"value\"\n        value={myState.value}\n        onChange={(e) => State.update({ value: e.target.value })}\n      />\n      <label for=\"link\">Link: </label>\n      <input\n        type=\"text\"\n        id=\"link\"\n        value={myState.linkValue}\n        onChange={(e) => State.update({ linkValue: e.target.value })}\n      />\n      <ButtonWapper>\n        <button onClick={addItem}>Add item</button>\n      </ButtonWapper>\n    </FormWrapper>\n\n    <ListTitle>Existing Items</ListTitle>\n    <ItemsListWrapper>\n      {myState.allItems &&\n        Object.entries(myState.allItems)\n          .sort((a, b) => a[0].localeCompare(b[0]))\n          .map((item, index) => (\n            <SingleItem isActive={item[1] !== null}>\n              <p>\n                {item[0]} : {item[1].value}\n              </p>\n              {item[1] !== null && (\n                <RemoveItemBtn onClick={() => removeItemFromState(item[0])}>\n                  +\n                </RemoveItemBtn>\n              )}\n\n              <EditSvg\n                onClick={() => openModal(item)}\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M7.127 22.562l-7.127 1.438 1.438-7.128 5.689 5.69zm1.414-1.414l11.228-11.225-5.69-5.692-11.227 11.227 5.689 5.69zm9.768-21.148l-2.816 2.817 5.691 5.691 2.816-2.819-5.691-5.689z\" />\n              </EditSvg>\n            </SingleItem>\n          ))}\n    </ItemsListWrapper>\n  </DashboardWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/7418d5cb7d7657e526b8bccf28750939105828d0f5b34a7254bd107477d84a2c/widget/ProgressTableAdminPanel", "__row_index": 13}