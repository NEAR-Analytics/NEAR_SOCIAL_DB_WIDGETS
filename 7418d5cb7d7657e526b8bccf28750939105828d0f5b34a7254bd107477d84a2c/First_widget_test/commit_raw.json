{"tx_hash": "HTSiVfpQ4EaRcWmpNBZGYwTeUEBAHAuq1moBk5AP89aC", "action_id_social": "5bpkLzBU5a9ue9VDnaLKE6yVtXZwB3eeih7GryVfuC3T-0-widget", "block_id": 91527436, "block_timestamp": "2023-05-10T11:33:40.227Z", "signer_id": "7418d5cb7d7657e526b8bccf28750939105828d0f5b34a7254bd107477d84a2c", "widget_name": "First_widget_test", "source_code": "const MeterStatusContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n  background-color: white;\n  border-radius: 6px;\n  box-shadow: 0 5px 5px -4px rgba(49, 65, 97, 0.08);\n   @media (min-width: 768px) {\n    flex-flow: row;\n  }\n   @media (min-width: 1024px) {\n    flex-flow: column;\n    grid-area: heatstatus;\n  }\n`;\n\nconst HeatStatusBox = styled.div`\n  position: relative;\n  height: 215px;\n   display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;\n  padding: 34px;\n  width: 100%;\n\n  &:first-child {\n    &:after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 16px;\n      width: calc(100% - 32px);\n      height: 1px;\n      background-color: #E5EAF1;\n    }\n  }\n\n  @media (min-width: 768px) {\n  padding: 34px 0 28px;\n\n    &:first-child {\n      &:after {\n        bottom: 36px;\n        left: 100%;\n        width: 1px;\n        height: 138px;\n      }\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding: 48px 0 44px;\n    &:first-child {\n      &:after {\n        bottom: 0;\n        left: 20%;\n        width: 60%;\n        height: 1px;\n      }\n    }\n  }\n\n  @media (min-width: 1140px) {\n    padding: 34px 0;\n  }\n  @media (min-width: 1440px) {\n    padding: 46px 0;\n    height: 240px;\n\n  }\n`;\nconst MeterWrapper = styled.div`\n  width: 100%;\n`;\n\nconst HeatSatWrapper = styled.div`\n  position: relative;\n  width: 126px;\n  min-height: 120px;\n  height: 120px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  svg {\n    position: absolute;\n    z-index: 5;\n  }\n  #animated-circle {\n    z-index: 15;\n  }\n`;\n\nconst HeatStatInfo = styled.div`\n  position: relative;\n  margin-top: 30px;\n  p {\n    font-size: 13px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.38;\n    letter-spacing: normal;\n    text-align: center;\n    color: #68728C;\n    &:first-child {\n      margin-bottom: 4px;\n      font-size: 14px;\n      font-weight: bold;\n      font-stretch: normal;\n      font-style: normal;\n      line-height: 1.29;\n      letter-spacing: normal;\n      text-align: center;\n      color: #314161;\n\n    }\n  }\n`;\nconst HeatInfoBox = styled.div`\n  position: relative;\n  \n  p {\n    margin: 0;\n    text-align: center;\n    font-size: 12px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.33;\n    letter-spacing: normal;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.secondary};\n\n   \n  }\n`;\n\nconst GreyCircle = styled.div`\n  width: 120px;\n  height: 110px;\n  border-radius: 50%;\n  border-style: solid;\n  border-width: 5px;\n  border-color: grey;\n  background-color: rgba(0, 0, 0, 0);\n  position: absolute;\n  top:0;\n  left:0;\n  pointer-events:none;\n`;\n\nlet user_account = context.accountId;\n\nlet register_users_num = Near.view(\"registry.i-am-human.near\", \"sbt_supply\", {\n  issuer: \"gooddollar-v1.i-am-human.near\",\n});\n\nlet size = props.size;\n\nconst sizeProps = {\n  small: {\n    widthAndHeight: 100,\n    d: \"M 10,50 A 40,40 0 1 1 90,50 A 40,40 0 1 1 10,50 Z\",\n    strokeAndFrom: 251.2,\n    strokeWidth: 5,\n  },\n  medium: {\n    widthAndHeight: 150,\n    d: \"M 20,75 A 55,55 0 1 1 130,75 A 55,55 0 1 1 20,75 Z\",\n    strokeAndFrom: 344.7,\n    strokeWidth: 8,\n  },\n  large: {\n    widthAndHeight: 200,\n  },\n};\n\nfunction calcHeatStatusAnimationPercentage(\n  totalNumberOfTokens,\n  totalIssuedTokens\n) {\n  let totalPercentageOfIssuedTokens = Math.round(\n    (totalIssuedTokens / totalNumberOfTokens) * 100\n  );\n  //10.3\n\n  let startingDashoffsetValue = sizeProps[size].strokeAndFrom;\n\n  let onePercentageOfDash = startingDashoffsetValue / 100;\n\n  let fullCircle = startingDashoffsetValue / 2 + onePercentageOfDash;\n  console.log(\"fullCircle\", fullCircle);\n  let onePercentageOfCircle = fullCircle / 100;\n\n  console.log(\"fullCircle\", fullCircle);\n  console.log(\"onePercentageOfCircle\", onePercentageOfCircle);\n\n  let finalvalueOfCircle =\n    onePercentageOfCircle * totalPercentageOfIssuedTokens;\n\n  let fin = Math.round(startingDashoffsetValue - finalvalueOfCircle);\n  console.log(\"fin\", fin);\n  return fin;\n  // let tokensPercentage = totalNumberOfTokens / 10; // calc percentage  x / 1000  * 100\n\n  // let onePercentOfDashOffset = startingDashoffsetValue / 100;\n}\n\nconst value = calcHeatStatusAnimationPercentage(1000, 1000);\n//173\nreturn (\n  <MeterWrapper>\n    <MeterStatusContainer>\n      <HeatStatusBox>\n        <HeatSatWrapper>\n          <svg\n            width={sizeProps[size].widthAndHeight}\n            height={sizeProps[size].widthAndHeight}\n            id=\"animated-circle\"\n          >\n            <path\n              id=\"circle-path\"\n              d={sizeProps[size].d}\n              stroke=\"#FFD50D\"\n              stroke-width={sizeProps[size].strokeWidth + 1}\n              fill=\"none\"\n              stroke-dasharray={sizeProps[size].strokeAndFrom}\n              stroke-dashoffset={sizeProps[size].strokeAndFrom}\n            >\n              <animate\n                attributeName=\"stroke-dashoffset\"\n                from={sizeProps[size].strokeAndFrom}\n                to={value}\n                dur=\"1s\"\n                fill=\"freeze\"\n              />\n            </path>\n          </svg>\n\n          <svg\n            width={sizeProps[size].widthAndHeight}\n            height={sizeProps[size].widthAndHeight}\n          >\n            <path\n              d={sizeProps[size].d}\n              stroke=\"#4498E0\"\n              stroke-width={sizeProps[size].strokeWidth}\n              fill=\"none\"\n            />\n          </svg>\n\n          <HeatInfoBox>\n            <p>{register_users_num}</p>\n            <p>/1000</p>\n          </HeatInfoBox>\n        </HeatSatWrapper>\n      </HeatStatusBox>\n    </MeterStatusContainer>\n    {register_users_num}\n  </MeterWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/7418d5cb7d7657e526b8bccf28750939105828d0f5b34a7254bd107477d84a2c/widget/First_widget_test", "__row_index": 0}