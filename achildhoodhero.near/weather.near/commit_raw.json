{"tx_hash": "EuqAAdU9EiypggBrDVRC5VRd7hTxGuMTpc2FcwmzsuDZ", "action_id_social": "ByLihBTMfXczQjoLUyWj9hHsqeYfpLLqdj3XP8A1wFF8-0-widget", "block_id": 92857816, "block_timestamp": "2023-05-27T22:01:32.387Z", "signer_id": "achildhoodhero.near", "widget_name": "weather.near", "source_code": "const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-bottom: 48px;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst Search = styled.div``;\n\nconst WeatherInfo = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n  font-size: 16px;\n`;\n\nconst WeatherItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n`;\n\nconst WeatherLabel = styled.span`\n  font-weight: bold;\n`;\n\nconst WeatherData = styled.span``;\n\nconst WeatherIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\n// -------------------\n// --- STYLES ABOVE --\n// -------------------\n\nconst API_URL = \"https://api.api-ninjas.com/v1/weather?city=\";\nconst API_KEY = \"XnddRn6A0TXUDpq76POxuQ==9aJ5FrpbwPMD8fCH\";\n\nconst formatTime = (unixTime) => {\n  const date = new Date(unixTime * 1000);\n  const hours = date.getHours();\n  const minutes = \"0\" + date.getMinutes();\n  return hours + \":\" + minutes.substr(-2);\n};\n\nconst getWeatherIcon = (cloudPct) => {\n  if (cloudPct < 15) {\n    return \"https://static-00.iconduck.com/assets.00/sun-symbol-emoji-512x512-qjm8vnpc.png\";\n  } else {\n    return \"https://cdn-icons-png.flaticon.com/512/3222/3222791.png\";\n  }\n};\n\nconst writeStateTerm = (term) => {\n  console.log(`Entering writeStateTerm, term: ${term}`); // eslint-disable-line no-console\n  State.update({\n    term: term,\n  });\n\n  if (term === \"\") {\n    State.update({\n      term: undefined,\n      weather: undefined,\n    });\n  }\n};\n\nconst fetchCityWeather = (cityNameString) => {\n  console.log(`Entering fetchCityWeather, cityNameString: ${cityNameString}`); // eslint-disable-line no-console\n  const thisURL = API_URL + cityNameString;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"X-Api-Key\": API_KEY,\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return asyncFetch(thisURL, params);\n};\n\nconst formatCityWeatherResponse = (res) => {\n  console.log(\n    `Entering formatCityWeatherResponse, res: ${JSON.stringify(res)}`\n  ); // eslint-disable-line no-console\n  return res;\n};\n\nconst debounce = (callable, timeout) => {\n  return (args) => {\n    clearTimeout(state.timer);\n    State.update({\n      timer: setTimeout(() => callable(args), timeout ?? 750),\n    });\n  };\n};\n\nconst updateCity = debounce((term) => {\n  console.log(`Entering updateCity, term: ${term}`); // eslint-disable-line no-console\n  writeStateTerm(term);\n  const currentStateTerm = state.term;\n  console.log(`updateCity, currentStateTerm: ${currentStateTerm}`); // eslint-disable-line no-console\n  const currentStateWeather = JSON.stringify(state.weather);\n  console.log(`updateCity, currentStateWeather: ${currentStateWeather}`); // eslint-disable-line no-console\n  fetchCityWeather(term).then((response) => {\n    console.log(\n      `Passed fetchCityWeather, response: ${JSON.stringify(response)}`\n    ); // eslint-disable-line no-console\n    const res = formatCityWeatherResponse(response);\n    console.log(\n      `Passed formatCityWeatherResponse, res: ${JSON.stringify(res)}`\n    ); // eslint-disable-line no-console\n    State.update({ weather: res });\n  });\n});\n\nconst onSearchChange = ({ term }) => {\n  updateCity(term);\n};\n\nconst showSearchBar = props.showSearchBar ?? true;\n\nreturn (\n  <Wrapper>\n    {showSearchBar && (\n      <Search>\n        <Widget\n          src=\"chaotictempest.near/widget/SearchPill\"\n          props={{\n            onChange: onSearchChange,\n            placeholder: \"Type in a city name\",\n          }}\n        />\n      </Search>\n    )}\n    {state.weather && (\n      <WeatherInfo>\n        <WeatherItem>\n          <WeatherLabel>Cloud Percentage:</WeatherLabel>\n          <WeatherData>{state.weather.body.cloud_pct}%</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Temperature:</WeatherLabel>\n          <WeatherData>\n            {state.weather.body.temp}\u00b0C{\" \"}\n            <WeatherIcon\n              src={getWeatherIcon(state.weather.body.cloud_pct)}\n              alt=\"Weather Icon\"\n            />\n          </WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Feels Like:</WeatherLabel>\n          <WeatherData>{state.weather.body.feels_like}\u00b0C</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Humidity:</WeatherLabel>\n          <WeatherData>{state.weather.body.humidity}%</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Min Temperature:</WeatherLabel>\n          <WeatherData>{state.weather.body.min_temp}\u00b0C</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Max Temperature:</WeatherLabel>\n          <WeatherData>{state.weather.body.max_temp}\u00b0C</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Wind Speed:</WeatherLabel>\n          <WeatherData>{state.weather.body.wind_speed}m/s</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Wind Direction:</WeatherLabel>\n          <WeatherData>{state.weather.body.wind_degrees}\u00b0</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Sunrise:</WeatherLabel>\n          <WeatherData>{formatTime(state.weather.body.sunrise)}</WeatherData>\n        </WeatherItem>\n        <WeatherItem>\n          <WeatherLabel>Sunset:</WeatherLabel>\n          <WeatherData>{formatTime(state.weather.body.sunset)}</WeatherData>\n        </WeatherItem>\n      </WeatherInfo>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/achildhoodhero.near/widget/weather.near", "__row_index": 2}