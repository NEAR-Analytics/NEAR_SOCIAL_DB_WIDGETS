{"tx_hash": null, "action_id_social": "q77YXaX4aejL8STMJFsadGcV9L63oxKmD8xKCAFaioJ-0-widget", "block_id": 93752815, "block_timestamp": "2023-06-08T17:47:49.785Z", "signer_id": "near-analytics.near", "widget_name": "townhall-board.pages.Feed", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearNFDevsContractAccountId =\n  props.nearNFDevsContractAccountId ||\n  (context.widgetSrc ?? \"near-analytics.near\").split(\"/\", 1)[0];\n\nconst nearNFDevsWidgetsAccountId =\n  props.nearNFDevsWidgetsAccountId ||\n  (context.widgetSrc ?? \"near-analytics.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearNFDevsContractAccountId: props.nearNFDevsContractAccountId,\n    nearNFDevsWidgetsAccountId: props.nearNFDevsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearNFDevsWidgetsAccountId}/widget/townhall-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearNFDevsContractAccountId) {\n    linkProps.nearNFDevsContractAccountId = props.nearNFDevsContractAccountId;\n  }\n\n  if (props.nearNFDevsWidgetsAccountId) {\n    linkProps.nearNFDevsWidgetsAccountId = props.nearNFDevsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearNFDevsWidgetsAccountId}/widget/townhall-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nState.init({\n  propsLabel: props.label,\n  label: props.label,\n  author: props.author,\n});\n\n// When rerendered with different props, State will be preserved, so we need to update the state when we detect that the props have changed.\nif (props.label !== state.propsLabel) {\n  State.update({\n    propsLabel: props.label,\n    label: props.label,\n  });\n}\n\nconst onSearchLabel = (label) => {\n  State.update({ label });\n};\n\nconst onSearchAuthor = (author) => {\n  State.update({ author });\n};\n\nreturn widget(\"components.layout.Page\", {\n  header: widget(\"components.community.FeedHeader\"),\n  children: widget(\"components.posts.Search\", {\n    children: widget(\"components.layout.Controls\"),\n    recency: props.recency,\n    label: state.label,\n    author: state.author,\n    //\n    labelQuery: { label: state.label },\n    onSearchLabel,\n    //\n    authorQuery: { author: state.author },\n    onSearchAuthor,\n  }),\n});\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/near-analytics.near/widget/townhall-board.pages.Feed", "__row_index": 0}