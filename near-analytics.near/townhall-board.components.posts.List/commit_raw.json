{"tx_hash": null, "action_id_social": "GbtPFjQgQbXyA57sFT9D5UoB6JNETFS1PcfxVUPtL3EL-0-widget", "block_id": 93755559, "block_timestamp": "2023-06-08T18:40:24.269Z", "signer_id": "near-analytics.near", "widget_name": "townhall-board.components.posts.List", "source_code": "// This component implementation was forked from [IndexFeed], but it does not fully implement lazy loading.\n// While this component uses InfiniteScroll, it still loads the whole list of Post IDs in one view call.\n// The contract will need to be extended with pagination support, yet, even in the current state the page loads much faster.\n// [IndexFeed]: https://near.social/#/mob.near/widget/WidgetSource?src=mob.near/widget/IndexFeed\n/* INCLUDE: \"common.jsx\" */\nconst nearNFDevsContractAccountId =\n  props.nearNFDevsContractAccountId ||\n  (context.widgetSrc ?? \"near-analytics.near\").split(\"/\", 1)[0];\n\nconst nearNFDevsWidgetsAccountId =\n  props.nearNFDevsWidgetsAccountId ||\n  (context.widgetSrc ?? \"near-analytics.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearNFDevsContractAccountId: props.nearNFDevsContractAccountId,\n    nearNFDevsWidgetsAccountId: props.nearNFDevsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearNFDevsWidgetsAccountId}/widget/townhall-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearNFDevsContractAccountId) {\n    linkProps.nearNFDevsContractAccountId = props.nearNFDevsContractAccountId;\n  }\n\n  if (props.nearNFDevsWidgetsAccountId) {\n    linkProps.nearNFDevsWidgetsAccountId = props.nearNFDevsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearNFDevsWidgetsAccountId}/widget/townhall-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\ninitState({\n  period: \"week\",\n});\n\nfunction defaultRenderItem(postId, additionalProps) {\n  if (!additionalProps) {\n    additionalProps = {};\n  }\n  // It is important to have a non-zero-height element as otherwise InfiniteScroll loads too many items on initial load\n  return (\n    <div style={{ minHeight: \"150px\" }}>\n      {widget(\n        `components.posts.Post`,\n        {\n          id: postId,\n          expandable: true,\n          defaultExpanded: false,\n          isInList: true,\n          ...additionalProps,\n        },\n        postId\n      )}\n    </div>\n  );\n}\n\n///////////\nreturn (\n  <>\n    {Head}\n    {state.items.length > 0 ? (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={makeMoreItems}\n        hasMore={state.displayCount < state.items.length}\n        loader={loader}\n      >\n        {renderedItems}\n      </InfiniteScroll>\n    ) : (\n      <p class=\"text-secondary\">\n        No posts {props.searchResult ? \"matches search\" : \"\"}\n        {props.recency == \"hot\"\n          ? \" in \" + getPeriodText(state.period).toLowerCase()\n          : \"\"}\n      </p>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/near-analytics.near/widget/townhall-board.components.posts.List", "__row_index": 5}