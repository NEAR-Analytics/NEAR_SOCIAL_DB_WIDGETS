{"tx_hash": "DoTqKgwat3fRW3iRMDuedzzvQQTRarYAz5CwMWvY739Q", "action_id_social": "4qdK83w5FAiLZqcBF2uDrBBDSbQXpyLR7zqyP6dVFgzU-0-widget", "block_id": 92605042, "block_timestamp": "2023-05-24T13:53:46.698Z", "signer_id": "sking.near", "widget_name": "DAO.Bounty", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\n\nconst bountyId = props.bountyId;\n\nlet bounty = props.bounty && JSON.parse(JSON.stringify(props.bounty));\n\n// if bounty is not provided and bountyId and daoId are provided then fetch bounty\nif (!bounty && bountyId && daoId) {\n  let new_bounty = Near.view(daoId, \"get_bounty\", {\n    id: Number(bountyId),\n  });\n  if (new_bounty) {\n    bounty = new_bounty;\n  } else if (new_bounty === null) {\n    return \"Loading...\";\n  } else {\n    return \"bounty not found, check console for details.\";\n  }\n} else if (!bounty) {\n  return \"Please provide a bounty or bountyId.\";\n}\n\nState.init({\n  showSubmitPopup: false,\n});\n\n// ==============================\n// Functions\n// ==============================\n\nconst handleClaim = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"bounty_claim\",\n      args: {\n        id: JSON.parse(bounty.id),\n        deadline: bounty.max_deadline,\n      },\n      deposit: 100000000000000000000000,\n      gas: 150000000000000,\n    },\n  ]);\n};\n\nconst handleUnclaim = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"bounty_giveup\",\n      args: {\n        id: JSON.parse(bounty.id),\n      },\n      gas: 150000000000000,\n    },\n  ]);\n};\n\n// ==============================\n// Styled Components\n// ==============================\n\nconst Wrapper = styled.div`\n  margin: 16px auto;\n  background-color: #fff;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #6c757d;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 4px;\n  }\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\nconst CardFooter = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  padding-top: 16px;\n  border-top: 1px solid #eceef0;\n`;\n\nconst Button = styled.div`\n  width: 100%;\n`;\n\nconst MarkdownContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 24px;\n  background-color: #f8f9fa;\n  color: #1b1b18;\n  border-radius: 16px;\n  max-height: 800px;\n  overflow-y: auto;\n  color: #333;\n  line-height: 1.6;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n\n  h1 {\n    font-size: 2em;\n    color: #111;\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 0.3em;\n    margin-bottom: 1em;\n  }\n\n  h2 {\n    font-size: 1.5em;\n    color: #222;\n    margin-bottom: 0.75em;\n  }\n\n  h3 {\n    font-size: 1.3em;\n    color: #333;\n    margin-bottom: 0.6em;\n  }\n\n  h4 {\n    font-size: 1.2em;\n    color: #444;\n    margin-bottom: 0.5em;\n  }\n\n  h5 {\n    font-size: 1.1em;\n    color: #555;\n    margin-bottom: 0.4em;\n  }\n\n  p {\n    font-size: 1em !important;\n    margin-bottom: 1em !important;\n  }\n\n  a {\n    color: #0645ad;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst PopupWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backdrop-filter: blur(6px);\n  padding: 16px;\n\n  @media (max-width: 600px) {\n    padding: 0;\n    & > * {\n      width: 100%;\n      height: 100%;\n      border-radius: 0;\n    }\n  }\n`;\n\nconst claims = Near.view(daoId, \"get_bounty_claims\", {\n  account_id: accountId,\n});\n\nconst number_of_claims = Near.view(daoId, \"get_bounty_number_of_claims\", {\n  id: JSON.parse(bounty.id),\n});\n\nfunction humanReadableTime(timestamp) {\n  let seconds = Math.floor(timestamp / 1000000000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  let days = Math.floor(hours / 24);\n\n  minutes = minutes % 60;\n  hours = hours % 24;\n\n  let result = \"\";\n  if (days > 0) {\n    result += `${days} days `;\n  }\n  if (hours > 0) {\n    result += `${hours} hrs `;\n  }\n  if (minutes > 0) {\n    result += `${minutes} mins`;\n  }\n\n  return result;\n}\n\nconst bountyURL = `/sking.near/widget/DAO.Page?daoId=${daoId}&tab=bounty&bountyId=${bounty.id}`;\n\nreturn (\n  <Wrapper>\n    <div className=\"w-100\">\n      <h5>\n        Bounty ID: {bounty.id}{\" \"}\n        <a\n          href={bountyURL}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          style={{\n            fontSize: \"1.3rem\",\n          }}\n        >\n          <i className=\"bi bi-link-45deg\"></i>\n        </a>\n      </h5>\n      <MarkdownContainer>\n        <Markdown text={bounty.description} />\n      </MarkdownContainer>\n    </div>\n    <div className=\"d-flex flex-wrap gap-5\">\n      <div>\n        <h5>Amount</h5>\n        <Widget\n          src=\"sking.near/widget/Common.TokenAmount\"\n          props={{\n            amountWithoutDecimals: bounty.amount,\n            address: bounty.token,\n          }}\n        />\n      </div>\n      <div>\n        <h5>Maximum Time to Complete</h5>\n        <p>{humanReadableTime(bounty.max_deadline)}</p>\n      </div>\n    </div>\n    <CardFooter>\n      {!claims.length > 0 && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: (\n              <>\n                Claim ({bounty.times - number_of_claims}/{bounty.times} left)\n              </>\n            ),\n            onClick: handleClaim,\n            disabled: number_of_claims >= bounty.times,\n          }}\n        />\n      )}\n      {claims.length > 0 && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: <>Submit</>,\n            onClick: () => {\n              State.update({\n                ...state,\n                showSubmitPopup: true,\n              });\n            },\n          }}\n        />\n      )}\n      {claims.length > 0 && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: <>Unclaim</>,\n            onClick: handleUnclaim,\n          }}\n        />\n      )}\n    </CardFooter>\n\n    {state.showSubmitPopup && (\n      <PopupWrapper\n        id=\"submit-work-popup\"\n        onClick={(e) => {\n          if (e.target.id === \"submit-work-popup\") {\n            State.update({ ...state, showSubmitPopup: false });\n          }\n        }}\n      >\n        <Widget\n          src={\"sking.near/widget/DAO.Bounty.SubmitWork\"}\n          props={{\n            daoId: daoId,\n            accountId: accountId,\n            bountyId: bounty.id,\n            onClose: () => State.update({ ...state, showSubmitPopup: false }),\n          }}\n        />\n      </PopupWrapper>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Bounty", "__row_index": 1}