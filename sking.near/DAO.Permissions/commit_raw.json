{"tx_hash": "4suNkxZRryKaANTjzWt6twQdra6pkAR6rtpoRpgk8BLg", "action_id_social": "6sf5J89CZqAYQrvtUirf24VPCjtSTbHfCWWAGR2k9hj7-0-widget", "block_id": 93124904, "block_timestamp": "2023-05-31T09:51:28.051Z", "signer_id": "sking.near", "widget_name": "DAO.Permissions", "source_code": "const roles = [\"all\", \"council\", \"dev\"];\n\nconst rights = {\n  AddMemberToRole: {\n    title: \"Add Member To Role\",\n    description:\n      \"Add member to given role in the policy. This is short cut to updating the whole policy.\",\n  },\n  RemoveMemberFromRole: {\n    title: \"Remove Member From Role\",\n    description:\n      \"Remove member to given role in the policy. This is short cut to updating the whole policy.\",\n  },\n  Vote: {\n    title: \"Text Vote\",\n    description: \"Just a text vote, with no outcome execution.\",\n  },\n  FunctionCall: {\n    title: \"Function Call\",\n    description:\n      \"Calls a smart contract with list of method names in a single promise.\",\n  },\n  Transfer: {\n    title: \"Transfer\",\n    description: \"Transfer NEAR or a fungible token to another account.\",\n  },\n  AddBounty: {\n    title: \"Create a Bounty\",\n    description: \"Add new bounty.\",\n  },\n  BountyDone: {\n    title: \"Bounty Done\",\n    description: \"Indicates that given bounty is done by given user.\",\n  },\n  ChangeConfig: {\n    title: \"Change Config\",\n    description: \"Change the DAO config\",\n  },\n  ChangePolicy: {\n    title: \"Change Policy\",\n    description: \"Change the DAO policy\",\n  },\n  ChangePolicyAddOrUpdateRole: {\n    title: \"Add Or Update Role\",\n    description:\n      \"Add new role to the policy. If the role already exists, update it. This is short cut to updating the whole policy.\",\n  },\n  ChangePolicyRemoveRole: {\n    title: \"Remove Role\",\n    description:\n      \"Remove role from the policy. This is short cut to updating the whole policy.\",\n  },\n  ChangePolicyUpdateDefaultVotePolicy: {\n    title: \"Update Default Vote Policy\",\n    description:\n      \"Update the default vote policy from the policy. This is short cut to updating the whole policy.\",\n  },\n  ChangePolicyUpdateParameters: {\n    title: \"Update DAO Parameters\",\n    description:\n      \"Update the parameters from the policy. This is short cut to updating the whole policy.\",\n  },\n  UpgradeSelf: {\n    title: \"Upgrade Self\",\n    description: \"Upgrade the DAO smart contract code.\",\n  },\n  UpgradeRemote: {\n    title: \"Upgrade Remote\",\n    description: \"Upgrade another smart contract.\",\n  },\n  SetStakingContract: {\n    title: \"Set Staking Contract\",\n    description:\n      \"Set the staking contract. Can only be proposed if staking contract is not set yet\",\n  },\n  FactoryInfoUpdate: {\n    title: \"Factory Info Update\",\n    description: \"Change information about factory and auto update.\",\n  },\n};\n\n// Generate default permisisons\n// note: if you want different default permissions, you can change them here, they will not be overwritten\n// note 2: if you want to disable changing a right for a role, you can set disable to true\n\nlet defaultPermissions = {\n  council: {\n    ChangeConfig: {\n      value: true,\n      disabled: true,\n    },\n    ChangePolicy: {\n      value: true,\n      disabled: true,\n    },\n    RemoveMemberFromRole: {\n      value: true,\n      disabled: true,\n    },\n    AddMemberToRole: {\n      value: true,\n      disabled: true,\n    },\n  },\n};\n\nroles.forEach((role) => {\n  if (defaultPermissions[role] === undefined) defaultPermissions[role] = {};\n  Object.keys(rights).forEach((right) => {\n    if (defaultPermissions[role][right] !== undefined) return;\n    defaultPermissions[role][right] = {\n      value: false,\n    };\n  });\n});\n\nState.init({\n  permissions: defaultPermissions,\n});\n\nconst handleChange = (role, right, value) => {\n  console.log(role, right, value);\n  State.update({\n    permissions: {\n      ...state.permissions,\n      [role]: {\n        ...state.permissions[role],\n        [right]: {\n          ...state.permissions[role][right],\n          value,\n        },\n      },\n    },\n  });\n};\n\nconst Wrapper = styled.div`\n  border-radius: 4px;\n  max-width: 1200px;\n  width: 100%;\n\n  ul {\n    list-style: none;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n  }\n\n  li {\n    flex: 1;\n    display: grid;\n    grid-template-columns: minmax(100px, 2fr) repeat(\n        auto-fit,\n        minmax(40px, 1fr)\n      );\n    padding: 1rem;\n    min-height: 90px;\n    align-items: center;\n\n    &:nth-child(odd) {\n      background: #f5f5f5;\n    }\n  }\n\n  h2 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin: 0;\n  }\n\n  h3 {\n    font-size: 0.9rem;\n    font-weight: 600;\n    margin: 0;\n  }\n\n  p {\n    font-size: 0.8rem;\n    color: #666;\n    margin: 0;\n  }\n\n  .roles {\n    padding: 0;\n    margin: auto;\n    text-align: center;\n  }\n\n  li label {\n    display: none;\n  }\n\n  @media (max-width: 600px) {\n    li {\n      display: flex;\n      flex-wrap: wrap;\n    }\n    li > div:first-child {\n      margin-bottom: 1rem;\n      flex: 1;\n      min-width: 100%;\n    }\n    li label {\n      display: block;\n    }\n    .roles {\n      padding: 8px;\n    }\n    .hide-on-mobile {\n      display: none;\n    }\n  }\n`;\n\nconst Row = ({ right, roles, key }) => (\n  <li>\n    <div>\n      <h3>{right.title}</h3>\n      <p>{right.description}</p>\n    </div>\n    {roles.map((role) => (\n      <div className=\"roles\">\n        <Widget\n          src=\"sking.near/widget/Common.Inputs.Checkbox\"\n          props={{\n            label: role,\n            onChange: (checked) => {\n              handleChange(role, key, checked);\n            },\n            defaultChecked: defaultPermissions[role][key].value,\n            disabled: defaultPermissions[role][key].disabled,\n          }}\n        />\n      </div>\n    ))}\n  </li>\n);\n\nreturn (\n  <Wrapper>\n    <ul>\n      <li>\n        <div>\n          <h2>Permissions</h2>\n        </div>\n        {roles.map((role) => (\n          <h3 className=\"roles hide-on-mobile\">{role}</h3>\n        ))}\n      </li>\n      {Object.keys(rights).map((key) => (\n        <Row roles={roles} right={rights[key]} key={key} />\n      ))}\n    </ul>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Permissions", "__row_index": 0}