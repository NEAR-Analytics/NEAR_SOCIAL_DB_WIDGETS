{"tx_hash": "61faECFFMZLTJWVPtZ1GKGMzRNWMELdtrM9kBoDyVYFD", "action_id_social": "GdPBNMujesJhKBT1tby2r5wHVo4LSm5oJHZJoD6mbVVp-0-widget", "block_id": 94957906, "block_timestamp": "2023-06-25T00:14:01.940Z", "signer_id": "nearjordan.near", "widget_name": "AIAttestationRequest", "source_code": "const queryGPT3 = () => {\n  res = fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      \"{Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + state.apiKey,\n    },\n    body: {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: \"user\", content: state.question }],\n      temperature: 0.0,\n    },\n  });\nconsole.log(res);\n  const data = res.json();\nconsole.log(\"data\", data);\n  const a = data.choices[0].message.content;\n  const attestationRequest = { question: state.question, answer: a };\n  State.update({ answer: a, attestationRequestCID: ethers.utils.sha256(ethers.utils.toUtf8Bytes(JSON.stringify(attestationRequest))) });\n}\n\n// const queryGPT3 = () => {\n//   fetchGPTResponse().then((res) => {\n//     const data = res.body;\n// console.log(\"data\", data);\n//     const a = data.choices[0].message.content;\n//     const attestationRequest = { question: state.question, answer: a };\n//     State.update({ answer: a, attestationRequestCID: ethers.utils.sha256(ethers.utils.toUtf8Bytes(JSON.stringify(attestationRequest))) });\n// });\n// };\n\n// const fetchGPTResponse = () => {\n//   return asyncFetch(\"https://api.openai.com/v1/chat/completions\", {\n//     method: \"POST\",\n//     headers: {\n//       \"{Content-Type\": \"application/json\",\n//       \"Authorization\": \"Bearer \" + state.apiKey,\n//     },\n//     body: {\n//       model: \"gpt-3.5-turbo\",\n//       messages: [{ role: \"user\", content: state.question }],\n//       temperature: 0.0,\n//     },\n//   });\n// };\n\nconsole.log(\"KEY\", state.apiKey);\nreturn (<div>\n  <input type=\"password\" placeholder=\"LLM API KEY\" onChange={(e) => State.update({ apiKey: e.target.value })} />\n  <textarea\n    onChange={(e) => State.update({ question: e.target.value })}\n    placeholder=\"Enter your query\"\n    rows=\"10\"\n    cols=\"50\"></textarea>\n  <button onClick={queryGPT3}>Query GPT-3.5</button>\n  <div>{state.answer}</div>\n  <div>{state.attestationRequestCID}</div>\n</div>);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearjordan.near/widget/AIAttestationRequest", "__row_index": 15}