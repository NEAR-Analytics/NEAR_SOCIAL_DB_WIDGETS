{"tx_hash": "6rk1L9wALCZR5aygKFyXV6meS4vk2nk6pH8qkV1gkwxn", "action_id_social": "BeFF3Z54FbMaAxRqnRT2VSHg3XUkBSw7ZnVubqfgd7BM-0-widget", "block_id": 94953053, "block_timestamp": "2023-06-24T22:43:25.357Z", "signer_id": "nearjordan.near", "widget_name": "AIAttestationRequest", "source_code": "//<script src=\"https://unpkg.com/ipfs-http-client/dist/index.min.js\"></script>\n\n  // Once above IPFS library can be imported:\n  // const ipfs = window.IpfsHttpClient.create({\n  //   host: \"localhost\",\n  //   port: 5001,\n  //   protocol: \"http\",\n  // });\n\n  // async function addFile(content) {\n  //   Once above IPFS library can be imported:\n  //   const { path } = await ipfs.add(content);\n  //   await ipfs.pin.add(path);\n  //   return path;\n  // }\n\n  // async function getFile(cid) {\n  //   Once above IPFS library can be imported:\n  //   const stream = ipfs.cat(cid);\n  //   let data = \"\";\n\n  //   for await (const chunk of stream) {\n  //     data += new TextDecoder().decode(chunk);\n  //   }\n\n  //   return data;\n  // }\n\n  function queryGPT3() {\n    const xhr = new XMLHttpRequest();\nconsole.log(\"xhr\", xhr);\n    xhr.open(\"POST\", \"https://api.openai.com/v1/chat/completions\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.setRequestHeader(\"Authorization\", \"Bearer \" + state.apiKey);\n\n    const data = JSON.stringify({\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: \"user\", content: state.question }],\n      temperature: 0.0,\n    });\n\n    xhr.send(data);\n\n    xhr.onload = function () {\n      console.log(\"xhr\", xhr);\n      if (xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\nconsole.log(\"response\", response);\n        const a = response.choices[0].message.content;\n        State.update({answer: a});\n\n        attestationRequest = {question: state.question, answer: a };\n\n        State.update({cid: ethers.utils.sha256(ethers.utils.toUtf8Bytes(JSON.stringify(content)))})\n        // addFile(JSON.stringify(attestationRequest))\n        //   .then((cid) => {\n        //         console.log(\"CID: \", cid);\n        //         State.update({cid: cid});\n        //     })\n        //   .catch(console.error);\n      } else {\n        console.log(\"Error: \" + xhr.status);\n      }\n    };\n  }\n\nreturn (<>\n  <input type=\"password\" placeholder=\"LLM API KEY\" onChange={(e) => State.update({apiKey: e.target.value})} />\n  <textarea\n    onChange={(e) => State.update({question: e.target.value})}\n    placeholder=\"Enter your query\"\n    rows=\"10\"\n    cols=\"50\"></textarea>\n  <button onclick={queryGPT3}>Query GPT-3.5</button>\n  <div>{state.answer}</div>\n  <div>{state.attestationRequestCID}</div>\n</>)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearjordan.near/widget/AIAttestationRequest", "__row_index": 8}