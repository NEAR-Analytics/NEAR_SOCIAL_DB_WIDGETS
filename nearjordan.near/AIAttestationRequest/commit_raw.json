{"tx_hash": "A6RUy4WLkXvppjY3VwHfUeGFnB8oCXf89YZ7baXK7f97", "action_id_social": "EBTfpK4N3Y6qdbXZxxgtckAFtJyxVKU48RLFRnaEqx6S-0-widget", "block_id": 94954736, "block_timestamp": "2023-06-24T23:14:48.039Z", "signer_id": "nearjordan.near", "widget_name": "AIAttestationRequest", "source_code": "//<script src=\"https://unpkg.com/ipfs-http-client/dist/index.min.js\"></script>\n\n// Once above IPFS library can be imported:\n// const ipfs = window.IpfsHttpClient.create({\n//   host: \"localhost\",\n//   port: 5001,\n//   protocol: \"http\",\n// });\n\n// async function addFile(content) {\n//   Once above IPFS library can be imported:\n//   const { path } = await ipfs.add(content);\n//   await ipfs.pin.add(path);\n//   return path;\n// }\n\n// async function getFile(cid) {\n//   Once above IPFS library can be imported:\n//   const stream = ipfs.cat(cid);\n//   let data = \"\";\n\n//   for await (const chunk of stream) {\n//     data += new TextDecoder().decode(chunk);\n//   }\n\n//   return data;\n// }\n\nasync function queryGPT3() {\n  console.log(\"queryGPT3\");\n  const requestBody = {\n    model: \"gpt-3.5-turbo\",\n    messages: [{ role: \"user\", content: state.question }],\n    temperature: 0.0,\n  };\n\n  try {\n    const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + state.apiKey,\n      },\n      body: JSON.stringify(requestBody),\n    });\n\n    const data = await response.json();\nconsole.log(data);\n    const a = data.choices[0].message.content;\n\n    State.update({ answer: a });\n\n    attestationRequest = { question: state.question, answer: a };\n\n    State.update({ cid: ethers.utils.sha256(ethers.utils.toUtf8Bytes(JSON.stringify(content))) })\n  } catch (error) {\n    console.error('Error:', error);\n    return '';\n  }\n}\n\nreturn (<>\n  <input type=\"password\" placeholder=\"LLM API KEY\" onChange={(e) => State.update({ apiKey: e.target.value })} />\n  <textarea\n    onChange={(e) => State.update({ question: e.target.value })}\n    placeholder=\"Enter your query\"\n    rows=\"10\"\n    cols=\"50\"></textarea>\n  <button onclick={queryGPT3}>Query GPT-3.5</button>\n  <div>{state.answer}</div>\n  <div>{state.attestationRequestCID}</div>\n</>)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearjordan.near/widget/AIAttestationRequest", "__row_index": 9}