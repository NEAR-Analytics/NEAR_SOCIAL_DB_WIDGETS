{"tx_hash": "G6LGsb277XvyVwxYMZL36jdznRxqJXGQxrhd52ZB4RU9", "action_id_social": "9H7Bvyq3C7Y1Z9ZarXwQ76MoPi76Tsh71YJs2weMJmwD-0-widget", "block_id": 80734751, "block_timestamp": "2022-12-15 22:25:17.701", "signer_id": "michaelpeter.near", "widget_name": "GenieTip", "source_code": "const { answeredBy, questionRef } = props;\n\nif (!answeredBy || !questionRef) {\n  return \"Missing prop\";\n}\n\nState.init({ tipAmount: null });\n\nconst tips = Social.index(\"genie\", `tip/${answeredBy}`);\nconst tipAmount = tips.reduce((acc, v) => acc + parseInt(v.value), 0);\n// console.log(tipAmount);\nconst questionSpecificTips = Social.index(\n  \"genie\",\n  `tip/${questionRef}/${answeredBy}`\n);\nconst qTip = questionSpecificTips.reduce(\n  (acc, v) => acc + parseInt(v.value),\n  0\n);\nconsole.log(questionSpecificTip);\n\nconst onSubmitClick = () => {\n  const gas = 300 * 100000000000;\n  const deposit = parseInt(state.tipAmount) + \"000000000000000000000000\";\n  //   const deposit = parseInt(state.tipAmount) + \"000000000000000000000\";\n  Near.call(\n    \"passthrough.near\",\n    \"transfer\",\n    { receiver_id: answeredBy },\n    gas,\n    deposit\n  );\n};\n\nconst Tooltip = styled.div`\n  position: relative;\n  display: inline-block;\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\n`;\n\nconst ToolTipText = styled.span`\n  visibility: visible;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  padding: 5px 0;\n  border-radius: 6px;\n \n  /* Position the tooltip text - see examples below! */\n  position: absolute;\n  z-index: 1;\n\n  ${Tooltip}:hover & {\n    visibility: visible;\n  }\n`;\nreturn (\n  <div className=\"d-flex flex-row gap-2 align-items-center\">\n    <span>\n      <i class=\"bi bi-infinity\" />\n      {qTip}\n    </span>\n    <Tooltip>\n      Hover over me\n      <ToolTipText>Tooltip text</ToolTipText>\n    </Tooltip>\n    <div>\n      <button className=\"btn btn-outline-dark\">\n        <i class=\"bi bi-wallet\" />\n        Tip\n      </button>\n    </div>\n    <div>\n      <p>\n        Amount:{\" \"}\n        <input\n          value={state.tipAmount}\n          placeholder=\"1\"\n          onChange={(e) => State.update({ tipAmount: e.target.value })}\n        />\n      </p>\n      <CommitButton\n        disabled={\n          context.loading ||\n          !(answeredBy && state.tipAmount) ||\n          !parseInt(state.tipAmount)\n        }\n        data={{\n          index: {\n            genie: JSON.stringify([\n              {\n                key: `tip/${answeredBy}`,\n                value: state.tipAmount,\n              },\n              {\n                key: `tip/${questionRef}/${answeredBy}`,\n                value: state.tipAmount,\n              },\n            ]),\n          },\n        }}\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n        onCommit={onSubmitClick}\n      >\n        Submit\n      </CommitButton>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/michaelpeter.near/widget/GenieTip"}