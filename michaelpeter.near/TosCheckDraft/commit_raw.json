{"tx_hash": "63AS6oH3m9Qq5x1288g9s9M8eoNBSk2uV1ntaY8kn44F", "action_id_social": "4aB3k4eN8KMtagsTYmt4ZQMCM3atCYgDVeb3e9MknWbh-0-widget", "block_id": 85748663, "block_timestamp": "2023-02-21 22:27:26.845", "signer_id": "michaelpeter.near", "widget_name": "TosCheckDraft", "source_code": "const { tosName, targetComponent } = props;\nconst targetProps = props?.targetProps || {};\n// const acceptanceKey = `${context.accountId}/${tosName}`;\nconst acceptanceKey = tosName; // TODO\n\nState.init({ hasCommittedAcceptance: false });\n\n// find all instances of the user agreeing to some version of the desired TOS\nconst agreementsForUser = Social.index(\"tosAccept\", acceptanceKey, {\n  accountId: context.accountId, // make sure it was written by the user in question\n});\n\nconst tosVersions = Social.keys(tosName, \"final\", {\n  return_type: \"BlockHeight\",\n  // subscribe: true, //\n});\nconsole.log(tosVersions);\n\n// TODO do path validation before this\nconst tosPath = tosName.split(\"/\");\nconst latestTosVersion = tosPath.reduce((acc, curr) => {\n  return acc[curr];\n}, tosVersions);\n\nconst Backdrop = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1001;\n`;\n\nconst Modal = styled.div`\n  height: 80vh;\n  width: 80vw;\n  background-color: white;\n  border-radius: 10px;\n  margin: auto;\n  padding: 3rem;\n  display: flex;\n  row-gap: 1rem;\n  flex-direction: column;\n`;\n\nconst ModalContent = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex-grow:1\nmin-height 0;\noverflow-y: scroll;\n`;\n\nconst ModalFooter = styled.div`\n  height: 3rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nconst showTos =\n  !hasCommittedAcceptance &&\n  context.accountId &&\n  latestTosVersion &&\n  (!agreementsForUser.length ||\n    agreementsForUser[agreementsForUser.length - 1].value < latestTosVersion);\n\nreturn (\n  <div>\n    {/*<div>{JSON.stringify(agreementsForUser)}</div>*/}\n    {/*latestTosVersion && <div>latestTosVersion: {latestTosVersion}</div>*/}\n    {/*agreementsForUser.map((a) => (\n      <span key={a}>{JSON.stringify(a)}</span>\n    ))\n    */}\n    <Backdrop style={{ display: showTos ? \"flex\" : \"none\" }} className=\"flex\">\n      <Modal>\n        <ModalContent>\n          <Widget src=\"michaelpeter.near/widget/TosContentDraft\" />\n        </ModalContent>\n        <ModalFooter>\n          <CommitButton\n            data={{\n              index: {\n                tosAccept: JSON.stringify({\n                  key: acceptanceKey,\n                  value: latestTosVersion,\n                }),\n              },\n            }}\n            onCommit={() => {\n              State.update({ hasCommittedAcceptance: true });\n            }}\n          >\n            I Agree\n          </CommitButton>\n        </ModalFooter>\n      </Modal>\n    </Backdrop>\n    <Widget src={targetComponent} props={targetProps} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/michaelpeter.near/widget/TosCheckDraft"}