{"tx_hash": "CCoBCX1M2N7AQ17LZWu1VyjsNMZ9Uxb5GQaLDsbmz6D7", "action_id_social": "FCRT3cj1Epfy1AWncknRcZkoHMARHApEN66U55z5d1nb-0-widget", "block_id": 85822198, "block_timestamp": "2023-02-22 22:26:03.490", "signer_id": "michaelpeter.near", "widget_name": "TosCheckDraft", "source_code": "const { tosName, targetComponent } = props;\nconst targetProps = props?.targetProps || {};\n// const acceptanceKey = `${context.accountId}/${tosName}`;\nconst acceptanceKey = tosName; // TODO\n\nState.init({\n  hasCommittedAcceptance: false,\n  agreeIsChecked: false,\n  expand: false,\n});\n\n// find all instances of the user agreeing to some version of the desired TOS\nconst agreementsForUser = Social.index(\"tosAccept\", acceptanceKey, {\n  accountId: context.accountId, // make sure it was written by the user in question\n});\n\nconst tosVersions = Social.keys(tosName, \"final\", {\n  return_type: \"BlockHeight\",\n  // subscribe: true,\n});\n\n// TODO do path validation before this\nconst tosPath = tosName.split(\"/\");\nconst latestTosVersion = tosPath.reduce((acc, curr) => {\n  return acc[curr];\n}, tosVersions);\n\nconst Backdrop = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1001;\n`;\n\nconst Modal = styled.div`\n  width: 30rem;\n  max-width: 95vw;\n  max-height: 80vh;\n  background-color: white;\n  border-radius: 10px;\n  margin: auto;\n  padding: 1.5rem;\n  display: flex;\n  row-gap: 1rem;\n  flex-direction: column;\n`;\n\nconst ModalContent = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex-grow:1\nmin-height 0;\noverflow-y: auto;\n`;\n\nconst ModalFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2rem;\n`;\n\nconst AcceptSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  column-gap: 1rem;\n`;\n\nconst CheckWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\ncolor: ${state.agreeIsChecked ? \"var(--bs-green)\" : \"inherit\"}\n`;\n\nconst CheckButton = styled.button`\n  border: none;\n  --bs-btn-hover-bg: transparent;\n  --bs-btn-active-bg: transparent;\n  --bs-btn-color: ${state.agreeIsChecked ? \"var(--bs-green)\" : \"black\"};\n  --bs-btn-hover-color: var(--bs-blue);\n`;\n\nconst expand = (e) => {\n  State.update({ expand: e });\n};\n\nconst showTos =\n  !state.hasCommittedAcceptance &&\n  context.accountId &&\n  latestTosVersion &&\n  (!agreementsForUser.length ||\n    agreementsForUser[agreementsForUser.length - 1].value < latestTosVersion);\n\nreturn (\n  <div>\n    <Backdrop style={{ display: showTos ? \"flex\" : \"none\" }} className=\"flex\">\n      <Modal>\n        <ModalContent>\n          <Widget src={tosName} props={expand} />\n        </ModalContent>\n        <ModalFooter>\n          <CheckWrapper>\n            <CheckButton\n              onClick={() => {\n                State.update({ agreeIsChecked: !state.agreeIsChecked });\n              }}\n              className=\"btn btn-outline-dark\"\n            >\n              <i\n                className={`bi bi-${\n                  state.agreeIsChecked ? \"check-square\" : \"square\"\n                }`}\n                style={{ fontSize: \"1.5rem\" }}\n              />\n            </CheckButton>\n            <span>\n              I agree to the Terms of Service, Privacy Policy, and Community\n              Guidelines\n            </span>\n          </CheckWrapper>\n          <AcceptSection>\n            <button\n              className=\"btn btn-outline-secondary\"\n              style={{\n                flexGrow: 1,\n                flexBasis: \"10rem\",\n                borderRadius: \"1.25rem\",\n              }}\n            >\n              Sign Out (WIP)\n            </button>\n            <CommitButton\n              style={{\n                flexGrow: 1,\n                flexBasis: \"10rem\",\n                borderRadius: \"1.25rem\",\n              }}\n              disabled={!state.agreeIsChecked}\n              data={{\n                index: {\n                  tosAccept: JSON.stringify({\n                    key: acceptanceKey,\n                    value: latestTosVersion,\n                  }),\n                },\n              }}\n              onCommit={() => {\n                State.update({ hasCommittedAcceptance: true });\n              }}\n            >\n              Continue\n            </CommitButton>\n          </AcceptSection>\n        </ModalFooter>\n      </Modal>\n    </Backdrop>\n    <Widget src={targetComponent} props={targetProps} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/michaelpeter.near/widget/TosCheckDraft"}