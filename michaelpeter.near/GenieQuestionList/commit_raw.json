{"tx_hash": "CqCpfvL531D5FdZy291eJkoe7MkVbborM7gJqKDnxm91", "action_id_social": "G6Zu81FSTcwP2WQG1a3ao8fNuKBEzofLzMXJ4ewMwJsG-0-widget", "block_id": 80729373, "block_timestamp": "2022-12-15 20:39:38.286", "signer_id": "michaelpeter.near", "widget_name": "GenieQuestionList", "source_code": "const questions = Social.index(\"genie\", \"asked\");\nquestions = questions.reverse();\nif (!questions?.length) {\n  return <p>No Results</p>;\n}\n\nconst { searchString, setSelectedQuestion } = props;\n\nreturn (\n  <div className=\"d-flex flex-column gap-1\">\n    <div className=\"d-flex justify-content-end\"></div>\n    <div className=\"d-flex flex-column gap-3\">\n      {questions.map((q) => {\n        const asker = q.value.split(\"--\")[0];\n        const question = Social.getr(\n          `${asker}/experimental/genie/questions/${q.value}`\n        );\n        // return nothing if data does not meet schema\n        if (!question?.title || !question?.content) {\n          return <></>;\n        }\n\n        // return nothing if question does not meet search criteria\n        if (\n          searchString &&\n          !question.title.includes(searchString) &&\n          !question.content.includes(searchString)\n        ) {\n          return <></>;\n        }\n        return (\n          <div\n            key={q.value}\n            className=\"d-flex flex-column gap-1 border p-2\"\n            onClick={() => {\n              setSelectedQuestion(q.value);\n            }}\n          >\n            <Widget\n              src={\"michaelpeter.near/widget/GenieQuestionView\"}\n              props={{ questionRef: q.value, searchString: props.searchString }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/michaelpeter.near/widget/GenieQuestionList"}