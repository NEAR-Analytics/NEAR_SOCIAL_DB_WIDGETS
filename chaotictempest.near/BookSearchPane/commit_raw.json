{"tx_hash": "B3ziQm4gL7xvnnefN5Fyktzrxm2C1qmkeo6NehKTX1pZ", "action_id_social": "7KWo3iKDeaFV4bZrA12VxnKPVZQtBvXNTMTTwvqXwco8-0-widget", "block_id": 80732675, "block_timestamp": "2022-12-15 21:44:16.983", "signer_id": "chaotictempest.near", "widget_name": "BookSearchPane", "source_code": "initState({\n  text: null,\n  books: null,\n  lastQueried: 0,\n});\n\nconst clearBooks = () => {\n  console.log(\"clearing books\");\n  State.update({\n    books: null,\n    showBooks: false,\n  });\n};\n\nconst updateBooks = (resp) => {\n  const books = resp.body.items.map((item) => {\n    const info = item.volumeInfo;\n    return {\n      id: info.industryIdentifiers.reduce(\n        (a, v) => ({ ...a, [v.type]: v.identifier }),\n        {}\n      )[\"ISBN_13\"],\n      title: info.title,\n      author: info.authors[0],\n      rating: info.averageRating,\n      pageCount: info.pageCount,\n      genre: \"Novel\",\n      onAdd: onAddBook,\n      cover: {\n        url:\n          info.imageLinks.thumbnail ||\n          info.imageLinks.small ||\n          info.imageLinks.medium,\n      },\n    };\n  });\n\n  console.log(\"BOOKS\", books);\n  State.update({\n    books,\n    showBooks: true,\n  });\n};\n\nconst update = (text) => {\n  State.update({\n    text,\n  });\n};\n\nconst search = (text) => {\n  if (!text || text.length <= 3) {\n    clearBooks();\n    return;\n  }\n  // NOTE: provided encodeURIComponent not available\n  const encodeURIComponent = (str) => {\n    return str.replace(\" \", \"%20\");\n  };\n  const query = encodeURIComponent(text);\n  const queriedAt = Date.now();\n  const promise = asyncFetch(\n    `https://www.googleapis.com/books/v1/volumes?q=intitle:${query}`\n  );\n\n  promise.then((resp) => {\n    console.log(\"RESP\", resp);\n    if (!resp || !resp.ok) {\n      console.log(`ERR: cannot query for ${text}`);\n      clearBooks();\n      return;\n    }\n\n    // only use resp if we're the latest query.\n    if (queriedAt > state.lastQueried) {\n      State.update({\n        lastQueried: queriedAt,\n      });\n      updateBooks(resp);\n    }\n  });\n};\n\nconst onAddBook = (book_id) => {\n  console.log(`ADDING BOOK ${book_id}`);\n};\n\nconst BookRows = styled.p`{\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"left\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  height: \"100%\",\n  padding: \"1rem\",\n}`;\n\nreturn (\n  <div>\n    <input\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n      type=\"text\"\n      className=\"form-control\"\n      value={state.text ?? \"\"}\n      onChange={(e) => {\n        console.log(\"EVENT\", e);\n        const text = e.target.value;\n        update(text);\n        search(text);\n      }}\n      placeholder={props.placeholder ?? `\ud83d\udd0d Search Books`}\n    />\n\n    <BookRows>\n      {state.showBooks &&\n        state.books &&\n        state.books.map((book) => (\n          <Widget\n            key={i}\n            src={\"serhii.near/widget/BookTile\"}\n            props={{ book, showAddToRead: true, showAddToWantToRead: true }}\n          />\n        ))}\n    </BookRows>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chaotictempest.near/widget/BookSearchPane"}