{"tx_hash": "5mtxgtMPCgyNUMQeGV1MV6PJzMcKzSfCMGakHuHQP2pK", "action_id_social": "GjYpxFpLd69qdef7yokmW4kCgjMWA3nGhxkP37dmYu6w-0-widget", "block_id": 80744581, "block_timestamp": "2022-12-16 01:33:38.713", "signer_id": "chaotictempest.near", "widget_name": "BooksFeed", "source_code": "const accountId = context.accountId;\nconst defaultDate = \"Dec 15 2022 10:00:00 AM\";\n\nif (!accountId) {\n  return \"\";\n}\n\nconst peopleIFollow = Social.get(`${accountId}/graph/follow/**`) ?? {};\n\nif (!peopleIFollow) {\n  return \"You are not following anybody\";\n}\n\nconst peopleIFollowWithBooks = {};\nObject.keys(peopleIFollow).map((follow) => {\n  const followBooks = Social.get(`${follow}/books/read/**`);\n  if (followBooks) {\n    peopleIFollowWithBooks[follow] = followBooks;\n  }\n});\n\nconsole.log(\"followBooks\", peopleIFollowWithBooks);\n\nif (!peopleIFollowWithBooks) {\n  return \"Your friend dos not have any books\";\n}\n\nconst timeline = Object.entries(peopleIFollowWithBooks).flatMap(\n  ([acc, books]) => Object.values(books).map((book) => [acc, book])\n);\ntimeline.sort(\n  ([_accA, bookA], [_accB, bookB]) =>\n    new Date(bookB[\"createdAt\"]) - new Date(bookA[\"createdAt\"])\n);\nconsole.log(\"timeline\", timeline);\n\nconst BookRows = styled.p`{\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"left\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  height: \"100%\",\n  padding: \"1rem\",\n}`;\n\nreturn (\n  <BookRows>\n    {timeline.map(([acc, book]) => {\n      return (\n        <div>\n          <div>\n            {acc} on {book.createdAt} added\n          </div>\n          <div>\n            <Widget\n              key={i}\n              src={\"serhii.near/widget/BookTile\"}\n              props={{ book }}\n            />\n          </div>\n        </div>\n      );\n    })}\n  </BookRows>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chaotictempest.near/widget/BooksFeed"}