{"tx_hash": "FWVpa4Ram4kYwiX7iYo9mvUmLTbYd4GvAxpk2psGaLWt", "action_id_social": "AzK75MY5YifJtB4jSJsT72qcEEfoennP6vdzEhCidEWy-0-widget", "block_id": 89716553, "block_timestamp": "2023-04-16 13:14:32.049", "signer_id": "markeljan.near", "widget_name": "pyth-price-pusher", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) return <Web3Connect connectLabel=\"Connect with Web3\" />;\n\nconst pythAbi = fetch(\n  \"https://gist.githubusercontent.com/Markeljan/621c03c5f50a180c908ea5195564997e/raw/056f3429c077a406444ae8e2e8a5afc8dacb8368/abi.json\"\n);\nif (!pythAbi.ok) {\n  return \"abi failed to load\";\n}\n\nconst iface = new ethers.utils.Interface(pythAbi.body);\n\ninitState({\n  latestPrice: \"\",\n  index: \"\",\n});\n\nconst priceFeeds = {\n  \"Select Feed\": \"\",\n  \"ETH/USD\":\n    \"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace\",\n};\n\nconst feedMenuItems = Object.keys(priceFeeds).map((feed) => (\n  <option value={priceFeeds[feed]}>{feed}</option>\n));\n\nconst setSubToUpdate = (subToUpdate) => {\n  State.update({ subToUpdate, receiver: receiver ?? \"\" });\n  refreshBalances();\n};\n\nconst setFeed = (feed) => {\n  State.update({ feed });\n};\n\nconst sendUpdate = () => {\n  const ppp = new ethers.Contract(\n    \"0x843e499e54d8d0c2274da668faa748d8206846f8\",\n    pythAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  ppp\n    .updateSubscription(state.index)\n    .then((result) => {\n      console.log(result);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  console.log(\"transactionHash is \" + transactionHash);\n};\n\nconst getPrice = () => {\n  State.update({ latestPrice: \"...fetching\" });\n  const ppp = new ethers.Contract(\n    \"0x843e499e54d8d0c2274da668faa748d8206846f8\",\n    pythAbi.body,\n    Ethers.provider()\n  );\n  const priceData = ppp.subscriptions(state.index).then((result) => {\n    State.update({ latestPrice: JSON.stringify(result) });\n  });\n};\n\nreturn (\n  <>\n    <h3>Pyth Price Pusher</h3>\n    <div class=\"mb-3\">\n      <label for=\"selectFeed\">Price Feed</label>\n      <select\n        class=\"form-select\"\n        id=\"selectFeed\"\n        onChange={(e) => {\n          setFeed(e.target.value);\n        }}\n      >\n        {feedMenuItems}\n      </select>\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"amount\" class=\"form-label\">\n        Subscription Index\n      </label>\n      <input\n        value={state.index}\n        class=\"form-control\"\n        id=\"amount\"\n        placeholder=\"\"\n        onChange={(e) => State.update({ index: e.target.value })}\n      />\n    </div>\n    <div class=\"mb-3\">\n      <button onClick={sendUpdate} class=\"ms-2\">\n        Send\n      </button>\n      <button onClick={getPrice} class=\"ms-2\">\n        Get Price\n      </button>\n    </div>\n    {state.latestPrice && (\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Latest Price</label>\n        <div>{state.latestPrice.toString()}</div>\n      </div>\n    )}\n  </>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/markeljan.near/widget/pyth-price-pusher", "metadata.tags.ethdenver2023": NaN, "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN}