{"tx_hash": "GxKF7SGMLqmVuA7i5FsmNBMME7RW4Q9enHTk2pmY5Mtk", "action_id_social": "838UKA4VNDgmN7juNqzLALAuuUoyJbqjYpEqhvT95ysF-0-widget", "block_id": 84275315, "block_timestamp": "2023-02-01 11:11:03.112", "signer_id": "contribut3.near", "widget_name": "ModeratorEntityForm", "source_code": "const ownerId = \"contribut3.near\";\r\nconst accountId = props.accountId ? [{ name: props.accountId }] : [];\r\n\r\nconst kind = props.kind ? [{ name: props.kind }] : [];\r\nconst entityStatus = props.status ? [{ name: props.status }] : [];\r\nconst startDate = props.startDate ?? \"\";\r\nconst endDate = props.endDate ?? \"\";\r\n\r\nconst isModerator = Near.view(\r\n  ownerId,\r\n  \"check_is_moderator\",\r\n  { account_id: context.accountId },\r\n  \"final\",\r\n  true\r\n);\r\n\r\nif (isModerator === false) {\r\n  return \"You are not authorized to access this widget!\";\r\n}\r\n\r\nif (!isModerator) {\r\n  return \"Loading...\";\r\n}\r\n\r\ninitState({\r\n  fixed: !!props.accountId,\r\n  accountId,\r\n  accountIdValid: true,\r\n  name: props.name ?? \"\",\r\n  kind,\r\n  entityStatus,\r\n  startDate,\r\n  endDate,\r\n  updated: false,\r\n  existing: accountId.name\r\n    ? Near.view(ownerId, \"get_entity\", { account_id: accountId.name }, \"final\")\r\n    : null,\r\n});\r\n\r\nconst allStatuses = [\"Active\", \"Flagged\"].map((name) => ({ name }));\r\nconst allAccountIds = (\r\n  Near.view(ownerId, \"get_entities\", {}, \"final\", true) ?? []\r\n).map(([name]) => ({ name }));\r\n\r\nconst accountIdInput = (\r\n  <Widget\r\n    src={`${ownerId}/widget/ModeratorAccountIdInput`}\r\n    props={{\r\n      accountId: state.accountId,\r\n      allAccountIds,\r\n      fixed: state.fixed,\r\n      update: (update, accountIdValid) =>\r\n        State.update({ ...update, accountIdValid }),\r\n      valid: state.accountIdValid,\r\n    }}\r\n  />\r\n);\r\n\r\nconst nameInput = (\r\n  <div className=\"col-lg-12 mb-2\">\r\n    <Widget\r\n      src={`${ownerId}/widget/NameInput`}\r\n      props={{\r\n        label: \"Name of entity:\",\r\n        value: state.name,\r\n        update: (name) => State.update({ name }),\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst kindInput = (\r\n  <div className=\"col-lg-6  mb-2\">\r\n    <Widget\r\n      src={`${ownerId}/widget/EntityTypeInput`}\r\n      props={{\r\n        kind: state.kind,\r\n        update: (kind) => State.update({ kind, updated: true }),\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst statusInput = (\r\n  <div className=\"col-lg-6  mb-2\">\r\n    Status of entity:\r\n    <Typeahead\r\n      labelKey=\"name\"\r\n      onChange={(entityStatus) => State.update({ entityStatus, updated: true })}\r\n      options={allStatuses}\r\n      placeholder=\"Active or Flagged\"\r\n      selected={state.entityStatus}\r\n      positionFixed\r\n    />\r\n  </div>\r\n);\r\n\r\nconst startDateInput = (\r\n  <div className=\"col-lg-6 mb-2\">\r\n    <Widget\r\n      src={`${ownerId}/widget/DateInput`}\r\n      props={{\r\n        id: \"start-date\",\r\n        text: \"Start date of entity:\",\r\n        date: state.startDate,\r\n        update: (startDate) => State.update({ startDate, updated: true }),\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst endDateInput = (\r\n  <div className=\"col-lg-6 mb-2\">\r\n    <Widget\r\n      src={`${ownerId}/widget/DateInput`}\r\n      props={{\r\n        id: \"end-date\",\r\n        text: \"End date of entity:\",\r\n        date: state.endDate,\r\n        update: (endDate) => State.update({ endDate, updated: true }),\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst onSubmit = () => {\r\n  if (!state.accountIdValid) {\r\n    return;\r\n  }\r\n\r\n  const args = {\r\n    account_id: state.accountId[0].name,\r\n    entity: {\r\n      status: state.entityStatus[0].name,\r\n      name: state.name,\r\n      kind: state.kind[0].name,\r\n      start_date: `${new Date(state.startDate).getTime()}`,\r\n    },\r\n  };\r\n\r\n  if (state.endDate) {\r\n    args.entity.end_date = `${new Date(state.endDate).getTime()}`;\r\n  }\r\n\r\n  Near.call(ownerId, \"set_entity\", args);\r\n};\r\n\r\nconst header = (\r\n  <div className=\"card-header\">\r\n    {state.fixed ? \"Update\" : \"Edit/Create\"} an entity\r\n  </div>\r\n);\r\n\r\nconst body = (\r\n  <div className=\"card-body\">\r\n    <div className=\"row\">\r\n      {accountIdInput}\r\n      {nameInput}\r\n      {kindInput}\r\n      {statusInput}\r\n      {startDateInput}\r\n      {endDateInput}\r\n    </div>\r\n\r\n    <a\r\n      className={`btn ${\r\n        state.accountIdValid ? \"btn-primary\" : \"btn-secondary\"\r\n      } mb-2`}\r\n      onClick={onSubmit}\r\n    >\r\n      Submit\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst footer = (\r\n  <div className=\"card-footer\">\r\n    Preview:\r\n    {state.accountIdValid ? (\r\n      <Widget\r\n        src={`${ownerId}/widget/Entity`}\r\n        props={{\r\n          isPreview: true,\r\n          accountId: state.accountId[0].name,\r\n          notStandalone: true,\r\n          entity:\r\n            state.updated || !state.existing\r\n              ? {\r\n                  kind: state.kind[0].name,\r\n                  status: state.entityStatus[0].name,\r\n                  start_date: `${new Date(state.startDate).getTime()}`,\r\n                  end_date: `${new Date(state.endDate).getTime()}`,\r\n                }\r\n              : state.existing,\r\n        }}\r\n      />\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <div className=\"card\">\r\n    {header}\r\n    {body}\r\n    {footer}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ModeratorEntityForm"}