{"tx_hash": "FaXaqMsDKnqvtV7WFDNbt9GD4zJfbATLFSS443c8eS5y", "action_id_social": "BjDygJhVpJp1yk5tCYg6yYzj3Tty3g8y8US2b4cQHeFL-0-widget", "block_id": 90003276, "block_timestamp": "2023-04-20 08:04:12.185", "signer_id": "contribut3.near", "widget_name": "Vendor.Details", "source_code": "const ownerId = \"contribut3.near\";\nconst isAdmin = props.isAdmin;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1em;\n  padding: 0.5em 0.2em;\n  max-width: 100%;\n`;\n\nconst Heading = styled.div`\n  padding-bottom: 0.5em;\n  border-bottom: 1px solid #eceef0;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1em;\n  line-height: 1.4em;\n  color: #000;\n  width: 100%;\n`;\n\nState.init({\n  profile: null,\n  profileIsFetched: false,\n});\n\nif (!state.profileIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${accountId}/profile/**`] },\n    \"final\",\n    false\n  ).then((profile) =>\n    State.update({\n      profile: profile[accountId].profile,\n      profileIsFetched: true,\n    })\n  );\n  return <>Loading...</>;\n}\n\nconst onSave = (profile) => {\n  Near.call(\"social.near\", \"set\", {\n    data: { [accountId]: { profile }, },\n  });\n};\n\nreturn (\n  <Container>\n    <Heading>Details</Heading>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Text`}\n      props={{\n        label: \"Website\",\n        id: \"website\",\n        value: state.profile.linktree.website,\n        link: `https://${state.profile.linktree.website}`,\n        onSave: (website) => onSave({ linktree: { website } }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Links`}\n      props={{\n        label: \"Links\",\n        id: \"links\",\n        value: state.profile.linktree,\n        onSave: (linktree) => onSave({ linktree }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Select`}\n      props={{\n        label: \"Vendor type\",\n        id: \"type\",\n        value: state.profile.vendor_type,\n        options: [\n          { name: \"Individual contributor\", id: \"individual\" },\n          { name: \"Organization\", id: \"organization\" },\n        ],\n        onSave: ([{ id: vendor_type }]) => onSave({ vendor_type }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Tags`}\n      props={{\n        label: \"Skills\",\n        id: \"skills\",\n        value: Object.keys(state.profile.skills).map((name) => ({ name })),\n        options: [\n          { name: \"defi\" },\n          { name: \"exchange\" },\n          { name: \"staking\" },\n          { name: \"farming\" },\n        ],\n        onSave: (skills) =>\n          onSave({\n            skills: tags.reduce(\n              (acc, { name }) => Object.assign(acc, { [name]: \"\" }),\n              {}\n            ),\n          }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.MultiSelect`}\n      props={{\n        label: \"Payment\",\n        id: \"payment\",\n        value: Object.keys(state.profile.payments).map((id) => ({ id, name: id[0].toUpperCase() + id.slice(1) })),\n        options: [\n          { name: \"Fiat\", id: \"fiat\" },\n          { name: \"Crypto\", id: \"crypto\" },\n          { name: \"Credits\", id: \"credits\" },\n        ],\n        onSave: (payments) =>\n          onSave({\n            payments: payments.reduce(\n              (acc, { id }) => Object.assign(acc, { [id]: \"\" }),\n              {}\n            ),\n          }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Number`}\n      props={{\n        label: \"Rate\",\n        id: \"rate\",\n        value: state.profile.rate,\n        onSave: (rate) => onSave({ rate }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.MultiSelect`}\n      props={{\n        label: \"Available for\",\n        id: \"work\",\n        value: Object.keys(state.profile.work).map((id) => ({ id, name: id === \"short\" ? \"Short-term work\" : id === \"long\" ? \"Long-term work\" : \"Full-time job\" })),\n        options: [\n          { name: \"Short-term work\", id: \"short\" },\n          { name: \"Long-term work\", id: \"long\" },\n          { name: \"Full-time job\", id: \"full\" },\n        ],\n        onSave: (work) =>\n          onSave({\n            work: work.reduce(\n              (acc, { id }) => Object.assign(acc, { [id]: \"\" }),\n              {}\n            ),\n          }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Text`}\n      props={{\n        label: \"Location\",\n        id: \"location\",\n        value: state.profile.location,\n        onSave: (location) => onSave({ location }),\n        canEdit: isAdmin,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Vendor.Details"}