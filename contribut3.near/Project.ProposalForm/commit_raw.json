{"tx_hash": "Gic1DiPcqq5rfqugVcGaR6mxp1DtSKtzL5LFrS4ETSDM", "action_id_social": "HX3wFqxfExVboKBFD4Pbjm98TgGSTzDKSKdTVtJgqj5X-0-widget", "block_id": 89480517, "block_timestamp": "2023-04-13 10:06:44.820", "signer_id": "contribut3.near", "widget_name": "Project.ProposalForm", "source_code": "const ownerId = \"contribut3.near\";\n\nconst LineContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.25em;\n\n  img {\n    vertical-align: top;\n  }\n`;\n\nconst Name = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1em;\n  color: #101828;\n`;\n\nconst AccountId = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 0.75em;\n  line-height: 1em;\n  color: #7e868c;\n`;\n\nconst ImageCircle = styled.img`\n  background: #fafafa;\n  border-radius: 8px;\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ImageContainer = styled.div`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n`;\n\nconst createProjectLine = (accountId, name, image) => {\n  const fullName = name ?? accountId;\n  const url =\n    (image.ipfs_cid\n      ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\n      : image.url) || \"https://thewiki.io/static/media/sasha_anon.6ba19561.png\";\n  const imageSrc = `https://i.near.social/thumbnail/${url}`;\n\n  return (\n    <LineContainer>\n      <ImageContainer title={`${fullName} @${accountId}`}>\n        <ImageCircle src={imageSrc} alt=\"profile image\" />\n      </ImageContainer>\n      <Name>{name}</Name>\n      <AccountId>@{accountId}</AccountId>\n    </LineContainer>\n  );\n};\n\nState.init({\n  requestId: [],\n  message: \"\",\n  projectId: [],\n  projects: [],\n  projectsIsFetched: false,\n  requests: [],\n  requestsIsFetched: false,\n  methods: [],\n  method: [],\n});\n\nif (!state.projectsIsFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_admin_projects\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((projects) => {\n    Near.asyncView(\n      \"social.near\",\n      \"get\",\n      { keys: projects.map((accountId) => `${accountId}/profile/**`) },\n      \"final\",\n      false\n    ).then((data) =>\n      State.update({\n        projects: projects.map((accountId) => ({\n          // text: <Widget\n          //   src={`${ownerId}/widget/Project.Line`}\n          //   props={{ accountId, size: \"1em\" }}\n          // />,\n          text: createProjectLine(\n            accountId,\n            data[accountId].profile.name,\n            data[accountId].profile.image\n          ),\n          value: accountId,\n        })),\n        projectsIsFetched: true,\n      })\n    );\n  });\n  return <>Loading...</>;\n}\n\n// if (!state.requestsIsFetched) {\n//   Near.asyncView(\n//     ownerId,\n//     \"get_admin_requests\",\n//     { account_id: context.accountId },\n//     \"final\",\n//     false,\n//   ).then((requests) => State.update({ requests, requestsIsFetched: true }));\n//   return <>Loading...</>;\n// }\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: 100%;\n  flex-grow: 1;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst CloseButton = styled.button`\n  padding: 0.75em 1em;\n  gap: 0.5em;\n  background: #fafafa;\n  border: 1px solid #eceef0;\n  border-radius: 50px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1em;\n  text-align: center;\n  color: #101828;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1em;\n  width: 100%;\n`;\n\nreturn (\n  <Container>\n    <Form>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Propose as *\",\n          options: state.projects,\n          value: state.projectId,\n          onChange: (projectId) => {\n            State.update({ projectId });\n            Near.asyncView(\n              ownerId,\n              \"get_project_requests\",\n              { account_id: projectId.value },\n              \"final\",\n              false\n            ).then((requests) =>\n              State.update({\n                requests: requests.map(([accountId, cid]) => ({\n                  name: (\n                    <Widget\n                      src={`${ownerId}/widget/Request.Line`}\n                      props={{ accountId, cid, size: \"1em\" }}\n                    />\n                  ),\n                  value: cid,\n                })),\n                requestsIsFetched: true,\n              })\n            );\n          },\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Subject *\",\n          options: state.requests,\n          value: state.requestId,\n          onChange: (requestId) => State.update({ requestId }),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.TextArea`}\n        props={{\n          label: \"Message *\",\n          placeholder: \"Describe the contribution you would like to request\",\n          value: state.message,\n          onChange: (message) => State.update({ message }),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.RadioGroup`}\n        props={{\n          label: \"Proposal terms\",\n          items: [{ value: \"specify\", name: \"Specify proposal terms\" }, { value: \"no\", name: \"Don't specify\" }],\n          value: state.term,\n          onChange: (term) => State.update({ term }),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Service terms\",\n          options: state.terms,\n          value: state.term,\n          onChange: (term) => State.update({ term }),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Payment type\",\n          options: state.paymentTypes,\n          value: state.paymentType,\n          onChange: (paymentType) => State.update({ paymentType }),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Number`}\n        props={{\n          label: \"Price\",\n          value: state.price,\n          onChange: (price) => State.update({ price }),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Payment method\",\n          options: state.methods,\n          value: state.method,\n          onChange: (method) => State.update({ method }),\n        }}\n      />\n    </Form>\n    <Footer>\n      <Dialog.Close asChild>\n        <CloseButton>Close</CloseButton>\n      </Dialog.Close>\n      <Widget\n        src={`${ownerId}/widget/Buttons.Green`}\n        props={{\n          text: (\n            <>\n              <svg\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 18 18\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M7.87464 10.1251L15.7496 2.25013M7.97033 10.3712L9.94141 15.4397C10.1151 15.8862 10.2019 16.1094 10.327 16.1746C10.4354 16.2311 10.5646 16.2312 10.6731 16.1748C10.7983 16.1098 10.8854 15.8866 11.0596 15.4403L16.0023 2.77453C16.1595 2.37164 16.2381 2.1702 16.1951 2.04148C16.1578 1.92969 16.0701 1.84197 15.9583 1.80462C15.8296 1.76162 15.6281 1.84023 15.2252 1.99746L2.55943 6.94021C2.11313 7.11438 1.88997 7.20146 1.82494 7.32664C1.76857 7.43516 1.76864 7.56434 1.82515 7.67279C1.89033 7.7979 2.11358 7.88472 2.56009 8.05836L7.62859 10.0294C7.71923 10.0647 7.76455 10.0823 7.80271 10.1095C7.83653 10.1337 7.86611 10.1632 7.89024 10.1971C7.91746 10.2352 7.93508 10.2805 7.97033 10.3712Z\"\n                  stroke=\"#11181C\"\n                  stroke-width=\"1.66667\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </svg>\n              Send request\n            </>\n          ),\n          onClick: () => {\n            console.log(\"Send request\");\n          },\n        }}\n      />\n    </Footer>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Project.ProposalForm"}