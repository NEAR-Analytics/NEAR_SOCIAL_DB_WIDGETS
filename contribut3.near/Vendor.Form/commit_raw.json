{"tx_hash": "E9VPLb9z2k7yFXf678FfVHBNuNH7r8ifzLQHDDzDumJP", "action_id_social": "6jueJaTc2Kq2tpMkSKxeuPajLBeMtCQjSUcXRF1YPY4z-0-widget", "block_id": 92163114, "block_timestamp": "2023-05-18T18:37:44.422Z", "signer_id": "contribut3.near", "widget_name": "Vendor.Form", "source_code": "const ownerId = \"contribut3.near\";\n\nif (!context.accountId) {\n  return (\n    <Widget\n      src={`${ownerId}/widget/InfoSegment`}\n      props={{\n        title: \"Not logged in!\",\n        description: \"You must log in to create a new vendor!\",\n      }}\n    />\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  gap: 3em;\n  padding-bottom: 3em;\n`;\n\nconst Header = styled.h1`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 2em;\n  line-height: 1.4em;\n  text-align: center;\n  color: #000000;\n`;\n\nconst SubHeader = styled.h2`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 0.95em;\n  line-height: 1.25em;\n  text-align: center;\n  color: #101828;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 60%;\n  gap: 1em;\n`;\n\nconst FormHeader = styled.h3`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 0px 0px 0.5em;\n  border-bottom: 1px solid #eceef0;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 1.125em;\n  line-height: 1.25em;\n  color: #000000;\n  width: 100%;\n`;\n\nconst FormFooter = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nState.init({\n  name: \"\",\n  nameError: \"\",\n  accountId: \"\",\n  accountIdError: \"\",\n  tagline: \"\",\n  taglineError: \"\",\n  description: \"\",\n  descriptionError: \"\",\n  tags: [],\n  tagsError: \"\",\n  website: \"\",\n  websiteError: \"\",\n  geo: \"\",\n  geoError: \"\",\n  accountsWithPermissions: [],\n  accountsWithPermissionsIsFetched: false,\n});\n\nif (!state.accountsWithPermissionsIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"debug_get_permissions\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((data) =>\n    State.update({\n      accountsWithPermissions: data\n        .map(([info]) => info)\n        .filter((info) => \"AccountId\" in info)\n        .map(({ AccountId }) => AccountId),\n      accountsWithPermissionsIsFetched: true,\n    })\n  );\n}\n\nconst slideDown = styled.keyframes`\n  from {\n    height: 0;\n  }\n  to {\n    height: var(--radix-collapsible-content-height);\n  }\n`;\n\nconst slideUp = styled.keyframes`\n  from {\n    height: var(--radix-collapsible-content-height);\n  }\n  to {\n    height: 0;\n  }\n`;\n\nconst Hidable = styled(\"Collapsible.Content\")`\n  overflow: hidden;\n\n  &[data-state=\"open\"] {\n    animation: ${slideDown} 0.3s ease-in-out;\n  }\n\n  &[data-state=\"closed\"] {\n    animation: ${slideUp} 0.3s ease-in-out;\n  }\n`;\n\nconst validateForm = () => {\n  return (\n    state.name &&\n    state.nameError === \"\" &&\n    state.accountId &&\n    state.accountIdError === \"\" &&\n    (!state.tagline || state.taglineError === \"\") &&\n    (!state.description || state.descriptionError === \"\") &&\n    (!state.tags || state.tagsError === \"\") &&\n    (!state.website || state.websiteError === \"\") &&\n    (!state.geo || state.geoError === \"\")\n  );\n};\n\nreturn (\n  <Container>\n    <div>\n      <Header>Create new vendor</Header>\n    </div>\n    <Form>\n      <FormHeader>General</FormHeader>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Text`}\n        props={{\n          label: \"Vendor name *\",\n          placeholder: \"Enter contributor name\",\n          value: state.name,\n          onChange: (name) => State.update({ name }),\n          validate: () => {\n            if (state.name.length < 3) {\n              State.update({ nameError: \"Name must be at least 3 characters\" });\n              return;\n            }\n\n            if (state.name.length > 100) {\n              State.update({\n                nameError: \"Name must be less than 100 characters\",\n              });\n              return;\n            }\n\n            State.update({ nameError: \"\" });\n          },\n          error: state.nameError,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.AccountId`}\n        props={{\n          label: \"NEAR Account *\",\n          placeholder:\n            \"Enter the NEAR account ID of your contributor (wallet address like contribut3.near)\",\n          value: state.accountId,\n          type: \"vendor\",\n          onChange: (accountId) => State.update({ accountId }),\n          addInfo: (addInfo) => State.update({ addInfo }),\n        }}\n      />\n      {state.addInfo && state.accountId !== context.accountId ? (\n        <Widget\n          src={`${ownerId}/widget/InfoSegment`}\n          props={{\n            title: \"Account ID of contributor\",\n            description: (\n              <>\n                Your contributor has its own account. In order to add admins on\n                a contributor, including yourself, you must log in with the\n                contributor account id, and visit the{\" \"}\n                <a\n                  target=\"_blank\"\n                  href={`/${ownerId}/widget/Index?tab=permissions&accountIds=${context.accountId}`}\n                >\n                  link\n                </a>{\" \"}\n                to grant appropriate permissions to yourself and your team. Once\n                completed, log back in with your user account (the account you\n                are using now) to complete the set up process.\n              </>\n            ),\n          }}\n        />\n      ) : (\n        <></>\n      )}\n      <Widget\n        src={`${ownerId}/widget/Inputs.Text`}\n        props={{\n          label: \"Tagline\",\n          placeholder: \"Write a one liner about your contributor\",\n          value: state.tagline,\n          onChange: (tagline) => State.update({ tagline }),\n          validate: () => {\n            if (state.tagline.length > 50) {\n              State.update({\n                taglineError: \"Tagline must be less than 50 characters\",\n              });\n              return;\n            }\n\n            State.update({ taglineError: \"\" });\n          },\n          error: state.taglineError,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.TextArea`}\n        props={{\n          label: \"Description\",\n          placeholder: \"Give a short description of your contributor\",\n          value: state.description,\n          onChange: (description) => State.update({ description }),\n          validate: () => {\n            if (state.description.length > 500) {\n              State.update({\n                descriptionError:\n                  \"Description must be less than 500 characters\",\n              });\n              return;\n            }\n\n            State.update({ descriptionError: \"\" });\n          },\n          error: state.descriptionError,\n        }}\n      />\n      {/*<Widget\n        src={`${ownerId}/widget/Inputs.MultiSelect`}\n        props={{\n          label: \"Tags\",\n          placeholder: \"Add tags\",\n          options: [{ name: \"wallets\" }, { name: \"games\" }],\n          value: state.tags,\n          onChange: (tags) =>\n            State.update({\n              tags: tags.map(({ name }) => ({\n                name: name.trim().replaceAll(/\\s+/g, \"-\"),\n              })),\n            }),\n        }}\n      />*/}\n      <Widget\n        src={`${ownerId}/widget/Inputs.Text`}\n        props={{\n          label: \"Website\",\n          placeholder: \"Website URL (near.org)\",\n          value: state.website,\n          onChange: (website) => State.update({ website }),\n          validate: () => {\n            if (state.website.length > 50) {\n              State.update({\n                websiteError: \"The URL must be less than 50 characters\",\n              });\n              return;\n            }\n\n            State.update({ websiteError: \"\" });\n          },\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Text`}\n        props={{\n          label: \"Location\",\n          placeholder: \"San Fancisco, CA\",\n          value: state.geo,\n          onChange: (geo) => State.update({ geo }),\n          validate: () => {\n            if (state.geo.length > 100) {\n              State.update({\n                geoError: \"Location must be less than 100 characters\",\n              });\n              return;\n            }\n\n            State.update({ geoError: \"\" });\n          },\n        }}\n      />\n      <FormFooter>\n        <Widget\n          src={`${ownerId}/widget/Buttons.Green`}\n          props={{\n            disabled: !validateForm(),\n            onClick: () => {\n              if (!validateForm()) return;\n              const data = {\n                [state.accountId]: {\n                  profile: {\n                    name: state.name,\n                    // category: state.category.value,\n                    ...(state.team ? { team: `${state.team}` } : {}),\n                    ...(state.tagline ? { tagline: state.tagline } : {}),\n                    ...(state.description\n                      ? { description: state.description }\n                      : {}),\n                    ...(state.tags.length\n                      ? {\n                          tags: state.tags.reduce(\n                            (acc, { name }) =>\n                              Object.assign(acc, { [name]: \"\" }),\n                            {}\n                          ),\n                        }\n                      : {}),\n                    ...(state.website || state.socials\n                      ? {\n                          ...state.socials,\n                          ...(state.website\n                            ? {\n                                website: state.website.startsWith(\"http://\")\n                                  ? state.website.substring(7)\n                                  : state.website.startsWith(\"https://\")\n                                  ? state.website.substring(8)\n                                  : state.website,\n                              }\n                            : {}),\n                        }\n                      : {}),\n                  },\n                },\n              };\n              const deposit = Big(JSON.stringify(data).length * 16).mul(\n                Big(10).pow(20)\n              );\n              const transactions = [\n                {\n                  contractName: \"social.near\",\n                  methodName: \"set\",\n                  deposit,\n                  args: { data },\n                },\n                {\n                  contractName: ownerId,\n                  methodName: \"register_vendor\",\n                  args: { account_id: state.accountId },\n                },\n              ];\n              Near.call(transactions);\n            },\n            text: (\n              <>\n                <svg\n                  width=\"17\"\n                  height=\"18\"\n                  viewBox=\"0 0 17 18\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M2.875 16.5V12.75M2.875 5.25V1.5M1 3.375H4.75M1 14.625H4.75M9.25 2.25L7.94937 5.63165C7.73786 6.18157 7.6321 6.45653 7.46765 6.68781C7.32189 6.8928 7.1428 7.07189 6.93781 7.21765C6.70653 7.3821 6.43157 7.48786 5.88165 7.69937L2.5 9L5.88165 10.3006C6.43157 10.5121 6.70653 10.6179 6.93781 10.7824C7.1428 10.9281 7.32189 11.1072 7.46765 11.3122C7.6321 11.5435 7.73786 11.8184 7.94937 12.3684L9.25 15.75L10.5506 12.3684C10.7621 11.8184 10.8679 11.5435 11.0324 11.3122C11.1781 11.1072 11.3572 10.9281 11.5622 10.7824C11.7935 10.6179 12.0684 10.5121 12.6184 10.3006L16 9L12.6184 7.69937C12.0684 7.48786 11.7935 7.3821 11.5622 7.21765C11.3572 7.07189 11.1781 6.8928 11.0324 6.68781C10.8679 6.45653 10.7621 6.18157 10.5506 5.63165L9.25 2.25Z\"\n                    stroke=\"#11181C\"\n                    stroke-width=\"1.66667\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                </svg>\n                Create contributor\n              </>\n            ),\n          }}\n        />\n      </FormFooter>\n    </Form>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Vendor.Form", "__row_index": 0}