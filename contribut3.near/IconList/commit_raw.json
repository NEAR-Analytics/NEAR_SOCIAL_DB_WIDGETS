{"tx_hash": "5LdgKzWWg9fP9K1FT3hj3UqJCZ6uGu8LqC19AqUqWGYx", "action_id_social": "FkSCPWdVn2hSESg6EFwRsw2GB3fMo3czXQmDsz1LWbf6-0-widget", "block_id": 89933941, "block_timestamp": "2023-04-19 10:08:15.776", "signer_id": "contribut3.near", "widget_name": "IconList", "source_code": "const ownerId = \"contribut3.near\";\nconst ids = props.ids ?? [];\nconst onlyOne = !props.iconOnly && ids.length === 1;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: .25em;\n  width: 100%;\n`;\n\nconst Item = styled.a`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: .125em;\n  width: 100%;\n`;\n\nState.init({\n  names: null,\n  namesIsFetched: false,\n});\n\nif (!state.namesIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: ids.map((id) => `${id}/profile/name`) },\n    \"final\",\n    false\n  ).then((data) =>\n    State.update({\n      names: ids.reduce((acc, id) => ({ ...acc, [id]: data[id].profile.name }), {}),\n      namesIsFetched: true,\n    })\n  );\n}\n\nconst createItem = (accountId) => (\n  <Item key={accountId} href={`/near/widget/ProfilePage?accountId=${accountId}`}>\n    <Widget src={`${ownerId}/widget/Vendor.Icon`} props={{ accountId }} />\n    {onlyOne ? (\n      <Widget src={`${ownerId}/widget/NameAndAccount`} props={{ accountId, name: state.names[accountId], nameSize: \".75em\", accountSize: \".75em\" }} />\n    ) : <></>}\n  </Item>\n);\n\nreturn (\n  <Container>\n    {ids.map(createItem)}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/IconList"}