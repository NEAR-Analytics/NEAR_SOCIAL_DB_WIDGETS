{"tx_hash": "A5DnEqWxVwWmuxkKNEDHVwkb62TYocHJHjuEvxLtX8Em", "action_id_social": "DZy9nf43X7irdphrYJ1Gta6SHKZGjg44MSH9cxN8DSjo-0-widget", "block_id": 89325858, "block_timestamp": "2023-04-11 09:29:37.790", "signer_id": "contribut3.near", "widget_name": "ContributorForm", "source_code": "const ownerId = \"contribut3.near\";\nconst accountId = props.accountId ?? \"\";\nconst kind = props.kind ? [{ name: props.kind }] : [];\nconst startDate = props.startDate ?? \"\";\nconst allContributionTypes = (\n  Near.view(ownerId, \"get_contribution_types\", {}, \"final\", true) ?? []\n).map((name) => ({ name }));\n\nconst convertType = (contributionType) => {\n  if (allContributionTypes.some(({ name }) => name === contributionType.name)) {\n    return contributionType.name;\n  }\n\n  return { Other: contributionType.name };\n};\n\nState.init({\n  contributionTypes: [],\n  skills: [],\n  resume: \"\",\n  lookingForWork: true,\n  existing: false,\n});\n\nif (!state.existing) {\n  Near.asyncView(\n    ownerId,\n    \"get_vendor\",\n    { account_id: context.accountId },\n    \"final\"\n  ).then((contributor) => {\n    if (contributor) {\n      State.update({\n        contributionTypes: contributor.contribution_types.map((t) =>\n          typeof t === \"string\" ? { name: t } : { name: t.Other }\n        ),\n        skills: contributor.skills.map((name) => ({ name })),\n        resume: contributor.resume,\n        lookingForWork: contributor.looking_for_work,\n        existing: true,\n      });\n    }\n  });\n}\n\nconst contributionTypesInput = (\n  <div className=\"col-lg-12 mb-2\">\n    <Widget\n      src={`${ownerId}/widget/ContributionTypeInput`}\n      props={{\n        text: \"Contribution types:\",\n        contributionType: state.contributionTypes,\n        multiple: true,\n        update: (contributionTypes) => State.update({ contributionTypes }),\n        allContributionTypes,\n      }}\n    />\n  </div>\n);\n\nconst skillsInput = (\n  <div className=\"col-lg-12 mb-2\">\n    <label htmlFor=\"skills\">Skills:</label>\n    <Typeahead\n      id=\"skills\"\n      labelKey=\"name\"\n      onChange={(skills) => State.update({ skills })}\n      options={[]}\n      placeholder=\"Rust, JavaScript, React...\"\n      selected={state.skills}\n      positionFixed\n      multiple\n      allowNew\n    />\n  </div>\n);\n\nconst resumeInput = (\n  <div className=\"col-lg-12  mb-2\">\n    <label htmlFor=\"Resume\">Resume:</label>\n    <textarea\n      id=\"Resume\"\n      value={state.resume}\n      type=\"text\"\n      rows={6}\n      className=\"form-control\"\n      onChange={(event) => State.update({ resume: event.target.value })}\n    />\n  </div>\n);\n\nconst lookingForWorkInput = !state.existing ? null : (\n  <div className=\"col-lg-6  mb-2\">\n    <div className=\"form-check\">\n      <label htmlFor=\"looking-for-work\" className=\"form-check-label\">\n        Looking for work:\n      </label>\n      <Typeahead\n        id=\"looking-for-work\"\n        labelKey=\"name\"\n        selected={[{ name: state.lookingForWork ? \"Yes\" : \"No\" }]}\n        options={[{ name: \"Yes\" }, { name: \"No\" }]}\n        positionFixed\n        onChange={(selected) =>\n          State.update({ lookingForWorkInput: selected[0].name === \"Yes\" })\n        }\n      />\n    </div>\n  </div>\n);\n\nconst onSubmit = () => {\n  const args = {\n    contribution_types: state.contributionTypes.map((t) => convertType(t)),\n    skills: state.skills.map(({ name }) => name),\n    resume: state.resume,\n    looking_for_work: state.lookingForWork,\n  };\n\n  if (state.existing) {\n    Near.call(ownerId, \"edit_contributor\", args);\n  } else {\n    Near.call(ownerId, \"register\", args, \"30000000000000\", \"1\");\n  }\n};\n\nconst header = <div className=\"card-header\">Edit contributor details</div>;\n\nconst body = (\n  <div className=\"card-body\">\n    <div className=\"row\">\n      {contributionTypesInput}\n      {skillsInput}\n      {resumeInput}\n    </div>\n\n    <a className=\"btn btn-primary mb-2\" onClick={onSubmit}>\n      Submit\n    </a>\n  </div>\n);\n\nconst footer = (\n  <div className=\"card-footer\">\n    Preview:\n    <Widget\n      src={`${ownerId}/widget/Contributor`}\n      props={{\n        isPreview: true,\n        accountId: context.accountId,\n        contributor: {\n          contribution_types: state.contributionTypes.map((t) =>\n            convertType(t)\n          ),\n          skills: state.skills.map(({ name }) => name),\n          resume: state.resume,\n        },\n      }}\n    />\n  </div>\n);\n\nreturn (\n  <div className=\"card\">\n    <div className=\"card-header\">\n      {state.existing ? \"Edit profile\" : \"Register as contributor\"}\n    </div>\n    {body}\n    {footer}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ContributorForm"}