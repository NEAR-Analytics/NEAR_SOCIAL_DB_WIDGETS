{"tx_hash": "4rrJWFdQx5PYdk3jpeSquBiwTtPt4dQtSXf6kgF9wwvm", "action_id_social": "C9VAcB59ujnhuUPYAhErtbg5zBjExViduuu7dTbjXahh-0-widget", "block_id": 91292610, "block_timestamp": "2023-05-07T08:56:00.421Z", "signer_id": "contribut3.near", "widget_name": "Inputs.Team", "source_code": "const ownerId = \"contribut3.near\";\nconst team = props.team ?? {};\nconst update = props.update ?? (() => {});\nconst onSave = props.onSave ?? (() => {});\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.75em 0.95em;\n  gap: 0.75em;\n  width: 100%;\n  background: #f9fafb;\n  border-bottom: 1px solid #eaecf0;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.75em;\n  line-height: 1em;\n  color: #475467;\n`;\n\nconst Name = styled.div`\n  width: 70%;\n`;\n\nconst Other = styled.div`\n  text-align: center;\n  width: 15%;\n`;\n\nconst Container = styled.div`\n  .cont {\n    width: 100% !important;\n  }\n`;\n\nState.init({\n  team: [],\n  following: [],\n  followingIsFetched: false,\n  followers: [],\n  followersIsFetched: false,\n});\n\nif (!state.followingIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${context.accountId}/graph/follow/*`] },\n    \"final\",\n    false\n  ).then((data) => {\n    const following = (\n      Object.keys(data).length > 0\n        ? Object.keys(data[context.accountId]?.graph?.follow ?? {})\n        : []\n    ).map((name) => ({ name }));\n    State.update({\n      following,\n      followingIsFetched: true,\n    });\n  });\n}\n\nif (!state.followersIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`*/graph/follow/${context.accountId}`] },\n    \"final\",\n    false\n  ).then((data) => {\n    const followers = Object.keys(data ?? {}).map((name) => ({ name }));\n    State.update({\n      followers,\n      followersIsFetched: true,\n    });\n  });\n}\n\nconst SaveButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em 1em;\n  background: #00ec97;\n  border-radius: 50px;\n  border: none;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1em;\n  text-align: center;\n  color: #11181c;\n`;\n\nconst teamMembers = Object.keys(team);\n\nconst getPermission = (accountId) => {\n  let [permission] = team[accountId] ?? [];\n  if (!permission) {\n    permission = \"Member\";\n  }\n  return { id: permission, text: permission };\n};\n\nreturn (\n  <Container>\n    <Widget\n      src={`${ownerId}/widget/Inputs.MultiSelect`}\n      props={{\n        label: \"Add team members\",\n        placeholder: \"Start typing\",\n        options: [...state.followers, ...state.following].filter(\n          ({ name }) => !teamMembers.includes(name)\n        ),\n        value: state.team,\n        onChange: (team) => State.update({ team }),\n      }}\n    />\n    <Header>\n      <Name>User</Name>\n      <Other>Permissions</Other>\n      <Other />\n    </Header>\n    {teamMembers.map((accountId) => (\n      <Widget\n        src={`${ownerId}/widget/Inputs.TeamMember`}\n        props={{\n          accountId,\n          name: team[accountId]?.name ?? accountId,\n          permission: getPermission(accountId),\n          onToggle: (id) => {\n            const permissions = id === \"Admin\" ? [\"Admin\"] : [];\n            Object.assign(team, { [accountId]: permissions });\n            update(team);\n          },\n          onRemove: () => {\n            delete team[accountId];\n            update(team);\n          },\n        }}\n      />\n    ))}\n    <SaveButton\n      onClick={() => {\n        Object.assign(\n          team,\n          Object.fromEntries(\n            state.team.map(({ name }) => [name, { permissions: [\"Admin\"] }])\n          )\n        );\n        onSave(team);\n      }}\n    >\n      Save changes\n    </SaveButton>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Inputs.Team", "__row_index": 12}