{"tx_hash": "3hkeeAMH9Bws1aUYsksX5VZmoiTYt3955rKC234troZn", "action_id_social": "wZFsFYuqxLpH9ETrAAUSadEp2uHddDbfD1N8mD1cgWa-0-widget", "block_id": 86758624, "block_timestamp": "2023-03-07 12:19:20.923", "signer_id": "contribut3.near", "widget_name": "ContributionList", "source_code": "const ownerId = \"contribut3.near\";\nconst isEntity = props.isEntity ?? false;\nconst limit = 10;\n\nState.init({\n  items: [],\n  shown: [],\n  from: 0,\n  hasMore: true,\n});\n\nif (state.items.length === 0) {\n  Near.asyncView(\n    ownerId,\n    isEntity ? \"get_entity_contributions\" : \"get_contributor_contributions\",\n    { account_id: props.accountId },\n    \"final\",\n    false\n  ).then((accountIds) =>\n    State.update({\n      items: accountIds.sort(),\n      shown: accountIds.slice(0, limit),\n      from: limit,\n      hasMore: accountIds.length > limit,\n    })\n  );\n}\n\nconst loadMore = () => {\n  State.update({\n    shown: state.items.slice(0, state.from + limit),\n    from: state.from + limit,\n    hasMore: state.from + limit < state.items.length,\n  });\n};\n\nconst WidgetContainer = styled.div`\n  margin: 0.5em 0;\n`;\n\nreturn (\n  <InfiniteScroll loadMore={loadMore} hasMore={state.hasMore}>\n    {state.shown\n      .filter((accountId) => accountId.includes(search))\n      .map((accountId) => (\n        <WidgetContainer key={accountId}>\n          <Widget\n            src={`${ownerId}/widget/Contribution`}\n            props={{\n              entityId: isEntity ? props.accountId : accountId,\n              contributorId: !isEntity ? props.accountId : accountId,\n              isEntity,\n              update: props.update,\n            }}\n          />\n          <Widget\n            src={`${ownerId}/widget/Need`}\n            props={{\n              accountId,\n              cid,\n              update: props.update,\n            }}\n          />\n        </WidgetContainer>\n      ))}\n  </InfiniteScroll>\n);\n\nif (!accountId) {\n  return \"Cannot render contribution list without account ID!\";\n}\n\nconst contributions = Object.keys(\n  Near.view(\n    ownerId,\n    isEntity ? \"get_entity_contributions\" : \"get_contributor_contributions\",\n    { account_id: accountId },\n    \"final\",\n    true\n  ) ?? {}\n);\n\nif (!contributions) {\n  return \"Loading...\";\n}\n\nif (Array.isArray(contributions) && contributions.length === 0) {\n  return \"No contributions found!\";\n}\n\nconst allContributions = contributions.filter((id) =>\n  id.includes(props.search)\n);\n\nif (!allContributions || allContributions.length === 0) {\n  return \"No contributions match search criteria!\";\n}\n\nreturn (\n  <>\n    {allContributions.map((id) => (\n      <div key={id} className=\"mt-3\">\n        <Widget\n          src={`${ownerId}/widget/Contribution`}\n          props={{\n            entityId: isEntity ? accountId : id,\n            contributorId: isEntity ? id : accountId,\n            isEntity,\n            update: props.update,\n          }}\n        />\n      </div>\n    ))}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ContributionList"}