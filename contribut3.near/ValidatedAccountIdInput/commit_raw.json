{"tx_hash": "6WPdYapgNjB8uymbtmD8GCS1YWGAGDyjH2pkg9CNWoh", "action_id_social": "C3vSZyL9AaVYkxMjmXGW3RWgZcd9zmgQATWxRLFHR5x5-0-widget", "block_id": 83920921, "block_timestamp": "2023-01-27 15:28:33.305", "signer_id": "contribut3.near", "widget_name": "ValidatedAccountIdInput", "source_code": "const label = props.label ?? \"Account ID:\";\r\nconst forbiddenIds = props.forbiddenIds ?? new Set();\r\nconst update = props.update;\r\nconst value = props.value;\r\n\r\ninitState({\r\n  valid: props.valid ?? true,\r\n  errorMessage: <></>,\r\n});\r\n\r\nconst validate = (accountId) => {\r\n  const accountIdRegex =\r\n    /^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$/;\r\n\r\n  if (typeof accountId !== \"string\") {\r\n    State.update({\r\n      valid: false,\r\n      errorMessage: \"Account ID must be a text value!\",\r\n    });\r\n    update(accountId, false);\r\n    return;\r\n  }\r\n\r\n  if (accountId.length < 2) {\r\n    State.update({\r\n      valid: false,\r\n      errorMessage: \"Account ID must be at least 2 characters long!\",\r\n    });\r\n    update(accountId, false);\r\n    return;\r\n  }\r\n\r\n  if (accountId.length > 64) {\r\n    State.update({\r\n      valid: false,\r\n      errorMessage: \"Account ID must be at most 64 characters long!\",\r\n    });\r\n    update(accountId, false);\r\n    return;\r\n  }\r\n\r\n  if (!accountIdRegex.test(accountId)) {\r\n    State.update({\r\n      valid: false,\r\n      errorMessage: (\r\n        <>\r\n          Account ID must follow the rules specified{\" \"}\r\n          <a href=\"https://nomicon.io/DataStructures/Account#account-id-rules\">\r\n            here\r\n          </a>\r\n          !\r\n        </>\r\n      ),\r\n    });\r\n    update(accountId, false);\r\n    return;\r\n  }\r\n\r\n  if (forbiddenIds.has(accountId)) {\r\n    State.update({\r\n      valid: false,\r\n      errorMessage: \"This account ID has already been used!\",\r\n    });\r\n    update(accountId, false);\r\n    return;\r\n  }\r\n\r\n  State.update({ valid: true, errorMessage: \"\" });\r\n  update(accountId, true);\r\n};\r\n\r\nif (typeof value !== \"string\") {\r\n  return \"Cannot accept non string value for input!\";\r\n}\r\n\r\nif (!update) {\r\n  return \"Cannot render account ID input without update function!\";\r\n}\r\n\r\nreturn (\r\n  <>\r\n    <label htmlFor=\"account-id\">{label}</label>\r\n    <small style={{ color: \"red\" }}>\r\n      {state.valid ? null : state.errorMessage}\r\n    </small>\r\n    <input\r\n      type=\"text\"\r\n      id=\"account-id\"\r\n      className={`form-control ${\r\n        state.valid ? \"\" : \"was-validated is-invalid\"\r\n      }`}\r\n      value={value}\r\n      onChange={({ target }) => update(target.value)}\r\n      onBlur={() => validate(value)}\r\n      style={{\r\n        ...(!state.valid ? { borderColor: \"red\" } : {}),\r\n      }}\r\n    />\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ValidatedAccountIdInput"}