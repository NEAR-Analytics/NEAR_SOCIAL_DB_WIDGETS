{"tx_hash": "HzUgoSXi2q4oWSKTf5kfA81QqCw8e9FzoyLTGT1fH32j", "action_id_social": "DodHTbwvyjKsqzAWiikimEi66ox2oiMEStknZMFPhJRR-0-widget", "block_id": 89474887, "block_timestamp": "2023-04-13 08:21:25.713", "signer_id": "contribut3.near", "widget_name": "Vendor.RequestForm", "source_code": "const ownerId = \"contribut3.near\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.25em;\n\n  img {\n    vertical-align: top;\n  }\n`;\n\nconst Name = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1em;\n  color: #101828;\n`;\n\nconst AccountId = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 0.75em;\n  line-height: 1em;\n  color: #7e868c;\n`;\n\nconst ImageCircle = styled.img`\n  background: #fafafa;\n  border-radius: 8px;\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ImageContainer = styled.div`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n`;\n\nconst createProjectLine = (accountId, name, image) => {\n  const fullName = name ?? accountId;\n  const url =\n    (image.ipfs_cid\n      ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\n      : image.url) || \"https://thewiki.io/static/media/sasha_anon.6ba19561.png\";\n  const imageSrc = `https://i.near.social/thumbnail/${url}`;\n\n  return (\n    <Container>\n      <ImageContainer title={`${fullName} @${accountId}`}>\n        <ImageCircle src={imageSrc} alt=\"profile image\" />\n      </ImageContainer>\n      <Name>{name}</Name>\n      <AccountId>@{accountId}</AccountId>\n    </Container>\n  );\n};\n\nState.init({\n  requestId: [],\n  message: \"\",\n  projectId: [],\n  projects: [],\n  projectsIsFetched: false,\n  requests: [],\n  requestsIsFetched: false,\n});\n\nif (!state.projectsIsFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_admin_projects\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((projects) => {\n    Near.asyncView(\n      \"social.near\",\n      \"get\",\n      { keys: projects.map((accountId) => `${accountId}/profile/**`) },\n      \"final\",\n      false\n    ).then((data) =>\n      State.update({\n        projects: projects.map((accountId) => ({\n          // text: <Widget\n          //   src={`${ownerId}/widget/Project.Line`}\n          //   props={{ accountId, size: \"1em\" }}\n          // />,\n          text: createProjectLine(\n            accountId,\n            data[accountId].profile.name,\n            data[accountId].profile.image\n          ),\n          value: accountId,\n        })),\n        projectsIsFetched: true,\n      })\n    );\n  });\n  return <>Loading...</>;\n}\n\n// if (!state.requestsIsFetched) {\n//   Near.asyncView(\n//     ownerId,\n//     \"get_admin_requests\",\n//     { account_id: context.accountId },\n//     \"final\",\n//     false,\n//   ).then((requests) => State.update({ requests, requestsIsFetched: true }));\n//   return <>Loading...</>;\n// }\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1em;\n  width: 100%;\n`;\n\nreturn (\n  <Form>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Select`}\n      props={{\n        label: \"Request as *\",\n        options: state.projects,\n        value: state.projectId,\n        onChange: (projectId) => {\n          State.update({ projectId });\n          Near.asyncView(\n            ownerId,\n            \"get_project_requests\",\n            { account_id: projectId.value },\n            \"final\",\n            false\n          ).then((requests) =>\n            State.update({\n              requests: requests.map(([accountId, cid]) => ({\n                name: (\n                  <Widget\n                    src={`${ownerId}/widget/Request.Line`}\n                    props={{ accountId, cid, size: \"1em\" }}\n                  />\n                ),\n                value: cid,\n              })),\n              requestsIsFetched: true,\n            })\n          );\n        },\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Select`}\n      props={{\n        label: \"Contribution to *\",\n        options: state.requests,\n        value: state.requestId,\n        onChange: (requestId) => State.update({ requestId }),\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"Message\",\n        placeholder: \"Describe the contribution you would like to request\",\n        value: state.message,\n        onChange: (message) => State.update({ message }),\n      }}\n    />\n  </Form>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Vendor.RequestForm"}