{"tx_hash": "EB7M8v8tz5v4Fto13vaqfJcHNj2dhF1KDrecqmRMRi11", "action_id_social": "8q5HquzLS35WmmdUbH26vrkDi8E5YjXqkmaguDRN9z2A-0-widget", "block_id": 85645337, "block_timestamp": "2023-02-20 13:12:24.857", "signer_id": "contribut3.near", "widget_name": "Entity", "source_code": "const ownerId = \"contribut3.near\";\r\nconst accountId = props.accountId;\r\nconst notStandalone = props.notStandalone ?? false;\r\nconst isPreview = props.isPreview ?? false;\r\nconst inboxView = props.inboxView;\r\n\r\nif (!accountId) {\r\n  return \"Cannot show entity without account ID!\";\r\n}\r\n\r\nconst entity = Near.view(\r\n  ownerId,\r\n  \"get_entity\",\r\n  { account_id: accountId },\r\n  \"final\"\r\n);\r\n\r\nconst currentContributor = Near.view(\r\n  ownerId,\r\n  \"get_contribution\",\r\n  { entity_id: accountId, contributor_id: context.accountId },\r\n  \"final\"\r\n);\r\n\r\nconst isAuthorized =\r\n  !!currentContributor && currentContributor.permissions.includes(\"Admin\");\r\n\r\nconst contributions = Near.view(\r\n  ownerId,\r\n  \"get_entity_contributions\",\r\n  { entity_id: accountId },\r\n  \"final\"\r\n);\r\n\r\nconst profile = Social.getr(`${accountId}/profile`);\r\n\r\nconst tags = Object.keys(profile.tags ?? {});\r\nconst image = profile.image;\r\nconst url =\r\n  (image.ipfs_cid\r\n    ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\r\n    : image.url) || \"https://thewiki.io/static/media/sasha_anon.6ba19561.png\";\r\n\r\nconst circle = (\r\n  <div\r\n    className=\"profile-circle d-inline-block\"\r\n    title={`${entity.name || profile.name} @${accountId}`}\r\n    style={{ width: \"4em\", height: \"4em\" }}\r\n  >\r\n    <img\r\n      className=\"rounded-circle w-100 h-100\"\r\n      style={{ objectFit: \"cover\" }}\r\n      src={`https://i.near.social/thumbnail/${url}`}\r\n      alt=\"profile image\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst [[founder]] = (contributions ?? []).filter((contribution) => {\r\n  const [_, details] = contribution;\r\n  const all = [...details.history, details.current];\r\n  return all.some((detail) => detail.description === \"\");\r\n});\r\n\r\nconst founderProfile = Social.getr(`${founder}/profile`);\r\nconst founderImage = profile.image;\r\nconst founderImageUrl =\r\n  (founderImage.ipfs_cid\r\n    ? `https://ipfs.near.social/ipfs/${founderImage.ipfs_cid}`\r\n    : founderImage.url) ||\r\n  \"https://thewiki.io/static/media/sasha_anon.6ba19561.png\";\r\n\r\nconst founderCircle = (\r\n  <div\r\n    className=\"profile-circle d-inline-block\"\r\n    title={`${founderProfile.name} @${founder}`}\r\n    style={{ width: \"1.5em\", height: \"1.5em\" }}\r\n  >\r\n    <img\r\n      className=\"rounded-circle w-100 h-100\"\r\n      style={{ objectFit: \"cover\" }}\r\n      src={`https://i.near.social/thumbnail/${founderImageUrl}`}\r\n      alt=\"profile image\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst ctas = inboxView ? (\r\n  <></>\r\n) : (\r\n  <>\r\n    <div className=\"vr mx-3\" />\r\n    <div className=\"d-flex flex-row justify-content-end align-items-start py-3\">\r\n      <a\r\n        className=\"btn btn-outline-secondary me-2\"\r\n        href={`https://near.social/#/${ownerId}/widget/Index?tab=entity&accountId=${accountId}`}\r\n        onClick={() => props.update(\"entity\")}\r\n      >\r\n        View details\r\n      </a>\r\n      <a className=\"btn btn-outline-secondary\">\r\n        <i className=\"bi-box-arrow-up-right\" />\r\n      </a>\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst buttonAction = ({ text, icon, id }) => (\r\n  <li>\r\n    <a className=\"dropdown-item\" id={id}>\r\n      <i className={icon} />\r\n      <span>{text}</span>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nconst body = (\r\n  <div\r\n    className=\"d-flex flex-row justify-content-start\"\r\n    id={accountId}\r\n    style={{ minHeight: \"10em\" }}\r\n  >\r\n    <div className=\"flex-grow-1 py-3\">\r\n      <div className=\"d-flex flex-row justify-content-start\">\r\n        <div className=\"m-2\">{circle}</div>\r\n        <div className=\"d-flex flex-column justify-content-between align-items-start w-100\">\r\n          <div className=\"w-100 d-flex flex-row justify-content-between align-items-start\">\r\n            <div>\r\n              <b>{profile.name}</b>\r\n              <span className=\"text-muted\">@{accountId}</span>\r\n            </div>\r\n            {inboxView ? (\r\n              <></>\r\n            ) : (\r\n              <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                <div className=\"text-success me-3\">\r\n                  <i className=\"bi-play\" />\r\n                  <span className=\"ms-1\">{entity.status}</span>\r\n                </div>\r\n                <div className=\"btn-group dropstart\">\r\n                  <a\r\n                    className=\"btn btn-outline-secondary dropdown-toggle\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <i className=\"bi-three-dots-vertical\" />\r\n                  </a>\r\n\r\n                  <ul className=\"dropdown-menu\">\r\n                    {buttonAction({\r\n                      text: \"Propose contribution\",\r\n                      icon: \"bi-person-up\",\r\n                      id: \"contribute\",\r\n                    })}\r\n                    <li>\r\n                      <hr className=\"dropdown-divider\" />\r\n                    </li>\r\n                    {buttonAction({\r\n                      text: \"Invite to contribute\",\r\n                      icon: \"bi-person-plus\",\r\n                      id: \"invite\",\r\n                    })}\r\n                    <li>\r\n                      <hr className=\"dropdown-divider\" />\r\n                    </li>\r\n                    {buttonAction({\r\n                      text: \"View details\",\r\n                      icon: \"bi-info-circle\",\r\n                      id: \"info\",\r\n                    })}\r\n                    <li>\r\n                      <hr className=\"dropdown-divider\" />\r\n                    </li>\r\n                    {buttonAction({\r\n                      text: \"Share\",\r\n                      icon: \"bi-arrow-up-right\",\r\n                      id: \"share\",\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex flex-row justify-content-start align-items-center my-1\">\r\n            {founderCircle}\r\n            <span className=\"mx-1\">{founderProfile.name}</span>\r\n            <span className=\"text-muted\">@{founder}</span>\r\n          </div>\r\n          <div className=\"text-truncate text-muted\">\r\n            {tags.length > 0 ? (\r\n              <>\r\n                {tags.map((tag) => (\r\n                  <span\r\n                    className=\"d-inline-block mx-1 py-1 px-2 badge border border-secondary text-secondary text-muted text-center\"\r\n                    key={tag}\r\n                  >\r\n                    {tag}\r\n                  </span>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"text-truncate my-2\">{profile.description}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <div className=\"border-bottom border-secondary-subtle\">\r\n    <div className=\"px-3 py-0\">{body}</div>\r\n    {isAuthorized && !notStandalone ? (\r\n      <div className=\"card-footer\">\r\n        <Widget\r\n          src={`${ownerId}/widget/ContributionRequestList`}\r\n          props={{ accountId }}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    )}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Entity"}