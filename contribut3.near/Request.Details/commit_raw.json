{"tx_hash": "F6eWm4GagWa45sCF8UitaLoB38C3yEXpfRrJE1wAQH3v", "action_id_social": "FSD7L7Aahppfc1nzwgfcpCnDuHaNWPxQzBRaGhMW7cuY-0-widget", "block_id": 90081725, "block_timestamp": "2023-04-21 08:49:11.055", "signer_id": "contribut3.near", "widget_name": "Request.Details", "source_code": "const onSave = props.onSave ?? (() => { });\nconst ownerId = \"contribut3.near\";\nconst isAdmin = props.isAdmin;\nconst request = props.request;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1em;\n  padding: 0.5em 0.2em;\n  max-width: 100%;\n`;\n\nconst Heading = styled.div`\n  padding-bottom: 0.5em;\n  border-bottom: 1px solid #eceef0;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1em;\n  line-height: 1.4em;\n  color: #000;\n  width: 100%;\n`;\n\nState.init({\n  paymentSources: [],\n  paymentTypes: [],\n  requestTypes: [],\n  isFetched: false,\n  name: \"\",\n  nameIsFetched: false,\n});\n\nif (!state.isFetched) {\n  Near.asyncView(ownerId, \"get_payment_types\", {}, \"final\", false).then(\n    (paymentTypes) =>\n      State.update({\n        paymentTypes: paymentTypes.map((value) => ({ value, text: value })),\n      })\n  );\n  Near.asyncView(ownerId, \"get_payment_sources\", {}, \"final\", false).then(\n    (paymentSources) =>\n      State.update({\n        paymentSources: paymentSources.map((value) => ({ value, text: value })),\n      })\n  );\n  Near.asyncView(ownerId, \"get_request_types\", {}, \"final\", false).then(\n    (requestTypes) =>\n      State.update({\n        requestTypes: requestTypes.map((value) => ({ value, text: value })),\n      })\n  );\n  State.update({ isFetched: true });\n}\n\nif (!state.nameIsFetched) {\n  Near.asyncView(\"social.near\", \"get\", { keys: [`${request.project_id}/profile/name`] }, \"final\", false).then(\n    (data) => State.update({ name: data[request.project_id].profile.name, nameIsFetched: true }));\n  return <>Loading...</>;\n}\n\nconst Project = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: .25em;\n  width: 100%;\n`;\n\nreturn (\n  <Container>\n    <Heading>Request Details</Heading>\n    <Project>\n      <Widget\n        src={`${ownerId}/widget/Project.Icon`}\n        props={{ accountId: request.project_id, size: \"2.5em\" }}\n      />\n      <Widget\n        src={`${ownerId}/widget/NameAndAccount`}\n        props={{\n          accountId: request.project_id,\n          name: state.name,\n          nameSize: \".95em\",\n          accountSize: \".75em\",\n        }}\n      />\n    </Project>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Number`}\n      props={{\n        label: \"Budget\",\n        id: \"bugdet\",\n        value: request.budget,\n        onSave: (budget) => onSave({ budget }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Select`}\n      props={{\n        label: \"Payment source\",\n        id: \"source\",\n        value: [{ name: request.source }],\n        options: state.paymentSources.map((value) => ({ value, text: value })),\n        onSave: (source) => onSave({ source }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Select`}\n      props={{\n        label: \"Payment type\",\n        id: \"payment_type\",\n        value: [{ name: request.payment_type }],\n        options: state.paymentTypes.map((value) => ({ value, text: value })),\n        onSave: (payment_type) => onSave({ payment_type }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Select`}\n      props={{\n        label: \"Request type\",\n        id: \"request_type\",\n        value: [{ name: request.request_type }],\n        options: state.requestTypes.map((value) => ({ value, text: value })),\n        onSave: (request_type) => onSave({ request_type }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Date`}\n      props={{\n        label: \"Deadline\",\n        id: \"deadline\",\n        value: request.deadline,\n        onSave: (deadline) => onSave({ deadline: `${new Date(deadline).getTime()}` }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Tags`}\n      props={{\n        label: \"Tags\",\n        id: \"tags\",\n        value: request.tags.map((name) => ({ name })),\n        options: [\n          { name: \"defi\" },\n          { name: \"exchange\" },\n          { name: \"staking\" },\n          { name: \"farming\" },\n        ],\n        onSave: (tags) => onSave({ tags: tags.map(({ name }) => name) }),\n        canEdit: isAdmin,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Request.Details"}