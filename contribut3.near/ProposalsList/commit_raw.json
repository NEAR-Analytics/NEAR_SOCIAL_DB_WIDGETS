{"tx_hash": "DoZs6ofsczRoXiHAKTBciw9dMwGm1q4yA7eRoDxSrZu4", "action_id_social": "Hkw6KyGgbhB2MaVwNTzRQ8kbEHNNjRd8o1TThWzi1SAt-0-widget", "block_id": 89325896, "block_timestamp": "2023-04-11 09:30:19.434", "signer_id": "contribut3.near", "widget_name": "ProposalsList", "source_code": "const ownerId = \"contribut3.near\";\nconst search = props.search ?? \"\";\nconst accountId = props.accountId;\nconst limit = 10;\n\nState.init({\n  items: [],\n  shown: [],\n  from: 0,\n  hasMore: true,\n});\n\nif (state.items.length === 0) {\n  Near.asyncView(\n    ownerId,\n    \"get_vendor_proposals\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((requests) =>\n    State.update({\n      items: requests.sort(),\n      shown: requests.slice(0, limit),\n      from: limit,\n      hasMore: requests.length > limit,\n    })\n  );\n}\n\nconst loadMore = () => {\n  State.update({\n    shown: state.items.slice(0, state.from + limit),\n    from: state.from + limit,\n    hasMore: state.from + limit < state.items.length,\n  });\n};\n\nconst WidgetContainer = styled.div`\n  margin: 0.5em 0;\n`;\n\nreturn (\n  <InfiniteScroll loadMore={loadMore} hasMore={state.hasMore}>\n    {state.shown\n      .filter((entityId) => entityId.includes(search))\n      .map((entityId) => (\n        <WidgetContainer key={entityId}>\n          <Widget\n            src={`${ownerId}/widget/ContributionRequest`}\n            props={{\n              entityId,\n              contributorId: accountId,\n              update: props.update,\n            }}\n          />\n        </WidgetContainer>\n      ))}\n  </InfiniteScroll>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ProposalsList"}