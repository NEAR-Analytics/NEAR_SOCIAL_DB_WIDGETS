{"tx_hash": "DgNTi1Y4iTiW5w7uyUpZRh4CiU3eh5u2fGZr5RDvc5Mb", "action_id_social": "7Z1xvv8FFsUnhKyw49Fgecqg3tZeq5zj1bCiTMeh5z5t-0-widget", "block_id": 90082309, "block_timestamp": "2023-04-21 08:59:55.726", "signer_id": "contribut3.near", "widget_name": "Request.ProposalList", "source_code": "const ownerId = \"contribut3.near\";\nconst search = props.search ?? \"\";\nconst cid = props.cid;\nconst accountId = props.accountId;\n\nState.init({\n  items: [],\n  itemsIsFetched: false,\n});\n\nif (!state.itemsIsFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_request_proposals\",\n    { account_id: accountId, cid },\n    \"final\",\n    false\n  ).then((items) => State.update({ items, itemsIsFetched: true }));\n\n  return <>Loading...</>;\n}\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/List`}\n    props={{\n      search,\n      items: state.items,\n      createItem: ([[projectId, cid], vendorId]) => (\n        <Widget\n          src={`${ownerId}/widget/Proposal.AdminCard`}\n          props={{ projectId, cid, vendorId }}\n        />\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Request.ProposalList"}