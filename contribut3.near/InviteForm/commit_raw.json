{"tx_hash": "DXBeoPahm6H4GpR6DSgS4za1yPFnQTi1mmtCRMen2BQ8", "action_id_social": "5JB72t58H1zAtTZNUENKudvLZJUqszwFbWQU22z7L4Kc-0-widget", "block_id": 86839724, "block_timestamp": "2023-03-08 14:52:10.316", "signer_id": "contribut3.near", "widget_name": "InviteForm", "source_code": "const createDate = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n  const day = date.getDate().toString().padStart(2, \"0\");\r\n\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst ownerId = \"contribut3.near\";\r\nconst accountId = props.accountId ?? \"\";\r\nconst kind = props.kind ? [{ name: props.kind }] : [];\r\nconst startDate = props.startDate ?? createDate();\r\nconst id = props.id;\r\n\r\nconst allContributionTypes = (\r\n  Near.view(ownerId, \"get_contribution_types\", {}, \"final\", true) ?? []\r\n).map((name) => ({ name }));\r\n\r\nconst convertType = (contributionType) => {\r\n  if (allContributionTypes.some(({ name }) => name === contributionType.name)) {\r\n    return contributionType.name;\r\n  }\r\n\r\n  return { Other: contributionType.name };\r\n};\r\n\r\nState.init({\r\n  entityId: [],\r\n  accountId,\r\n  permissions: [],\r\n  description: props.description ?? \"\",\r\n  contributionType: [],\r\n  accountIdValid: true,\r\n  startDate,\r\n  forbiddenIds: new Set(),\r\n});\r\n\r\nconst onSubmit = () => {\r\n  if (!state.accountIdValid) {\r\n    return;\r\n  }\r\n\r\n  const args = {\r\n    entity_id: state.entityId[0].name,\r\n    contributor_id: state.accountId,\r\n    description: state.description,\r\n    start_date: `${new Date(state.startDate).getTime()}`,\r\n    contribution_type: convertType(state.contributionType[0]),\r\n    permissions: state.permissions.map(({ name }) => name),\r\n  };\r\n\r\n  Near.call(ownerId, \"invite_contributor\", args);\r\n};\r\n\r\nconst header = <div className=\"card-header\">Invite contributor</div>;\r\n\r\nconst Label = styled.label`\r\n  font-weight: 600;\r\n  color: #344054;\r\n`;\r\n\r\nconst EntityInput = styled.div`\r\n  margin-bottom: 0.5em;\r\n`;\r\n\r\nconst SelectedEntity = styled.div`\r\n  border-radius: 4px;\r\n  background-color: #f2f4f7;\r\n  height: 5em;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  margin-bottom: 0.5em;\r\n`;\r\n\r\nconst body = (\r\n  <div className=\"row\">\r\n    <InputWrapper>\r\n      {accountId ? (\r\n        <>\r\n          <Label htmlFor=\"account-id\">You're inviting:</Label>\r\n          <SelectedEntity id=\"account-id\">\r\n            <Widget\r\n              src={`${ownerId}/widget/ProfileLine`}\r\n              props={{ accountId, imageSize: \"4em\" }}\r\n            />\r\n          </SelectedEntity>\r\n        </>\r\n      ) : (\r\n        <Widget\r\n          src={`${ownerId}/widget/ValidatedAccountIdInput`}\r\n          props={{\r\n            label: \"Account ID of contributor:\",\r\n            value: state.accountId,\r\n            update: (accountId, accountIdValid) =>\r\n              State.update({ accountId, accountIdValid }),\r\n            forbiddenIds: state.forbiddenIds,\r\n          }}\r\n        />\r\n      )}\r\n    </InputWrapper>\r\n    <InputWrapper>\r\n      <Widget\r\n        src={`${ownerId}/widget/AdminEntityAccountIdInput`}\r\n        props={{\r\n          update: (entityId) => {\r\n            State.update({ entityId });\r\n            Near.asyncView(\r\n              ownerId,\r\n              \"get_entity_invites\",\r\n              { account_id: entityId[0].name },\r\n              \"final\"\r\n            ).then((invites) =>\r\n              State.update({\r\n                forbiddenIds: new Set(Object.keys(invites)),\r\n              })\r\n            );\r\n          },\r\n          accountId: context.accountId,\r\n          selected: state.entityId,\r\n        }}\r\n      />\r\n    </InputWrapper>\r\n    <InputWrapper>\r\n      <Widget\r\n        src={`${ownerId}/widget/ContributionTypeInput`}\r\n        props={{\r\n          contributionType: state.contributionType,\r\n          update: (contributionType) => State.update({ contributionType }),\r\n          allContributionTypes,\r\n        }}\r\n      />\r\n    </InputWrapper>\r\n    <InputWrapper>\r\n      <Widget\r\n        src={`${ownerId}/widget/DateInput`}\r\n        props={{\r\n          id: \"start-date\",\r\n          text: \" Start date of contribution:\",\r\n          date: state.startDate,\r\n          update: (startDate) => State.update({ startDate }),\r\n        }}\r\n      />\r\n    </InputWrapper>\r\n    <InputWrapper>\r\n      <Label htmlFor=\"permissions-input\">Permissions for contributor:</Label>\r\n      <Typeahead\r\n        id=\"permissions-input\"\r\n        labelKey=\"name\"\r\n        onChange={(permissions) =>\r\n          State.update({\r\n            permissions,\r\n          })\r\n        }\r\n        options={[{ name: \"Admin\" }]}\r\n        placeholder=\"Admin or leave blank\"\r\n        selected={state.permissions}\r\n        positionFixed\r\n      />\r\n    </InputWrapper>\r\n    <InputWrapper>\r\n      <Widget\r\n        src={`${ownerId}/widget/DescriptionInput`}\r\n        props={{\r\n          description: state.description,\r\n          text: \"Details:\",\r\n          update: (description) => State.update({ description }),\r\n        }}\r\n      />\r\n    </InputWrapper>\r\n  </div>\r\n);\r\n\r\nconst Page = styled.div`\r\n  padding: 0 0.75em;\r\n  max-width: 100%;\r\n\r\n  h1 {\r\n    font-size: 2em;\r\n    margin-bottom: 0.75em;\r\n    padding-bottom: 0.75em;\r\n  }\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 0.75em;\r\n  padding: 1em;\r\n  border-radius: 4px;\r\n  background-color: #f9fafb;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst CloseButton = styled.a`\r\n  background-color: white;\r\n  padding: 0.7em;\r\n  border-radius: 4px;\r\n  border: 0;\r\n  color: #344054;\r\n  transition: box-shadow 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: unset;\r\n    box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\r\n  }\r\n`;\r\n\r\nconst ConfirmButton = styled.button`\r\n  padding: 0.7em;\r\n  border-radius: 4px;\r\n  border: 0;\r\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\r\n  background-color: ${({ valid }) => (valid ? \"#7f56d9\" : \"#344054\")};\r\n  color: white;\r\n  transition: background-color 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    ${({ valid }) => (valid ? \"background-color: #4f56d9;\" : \"\")}\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <Page>\r\n    <h1>Propose contribution</h1>\r\n    <Form>{body}</Form>\r\n    <Controls>\r\n      <CloseButton\r\n        href={`/#/${ownerId}/widget/Index?tab=home`}\r\n        onClick={() => props.update({ tab: \"home\" })}\r\n      >\r\n        Cancel\r\n      </CloseButton>\r\n      <ConfirmButton\r\n        valid={\r\n          state.contributionType.length === 1 && state.description.length > 0\r\n        }\r\n        onClick={onConfirm}\r\n      >\r\n        {confirmText}\r\n      </ConfirmButton>\r\n    </Controls>\r\n  </Page>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/InviteForm"}