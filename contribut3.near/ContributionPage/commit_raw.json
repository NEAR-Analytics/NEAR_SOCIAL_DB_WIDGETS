{"tx_hash": "GBE8bXAExWFH2MPMFw5bu4YpqbD1WsAascjNBdoqhoP5", "action_id_social": "F7QtvvQ8qcpKudHdagshKyCXnX3egQBZ8JJR5xBMzvoM-0-widget", "block_id": 86317362, "block_timestamp": "2023-03-01 13:52:02.756", "signer_id": "contribut3.near", "widget_name": "ContributionPage", "source_code": "const ownerId = \"contribut3.near\";\nconst entityId = props.entityId;\nconst contributorId = props.contributorId;\n\nif (!entityId || !contributorId) {\n  return \"Cannot show contribution without entity and contributor ID!\";\n}\n\nState.init({\n  finishFormHidden: true,\n});\n\nconst contribution = Near.view(\n  ownerId,\n  \"get_contribution\",\n  { entity_id: entityId, contributor_id: contributorId },\n  \"final\",\n  true\n);\n\nconst entity = Near.view(\n  ownerId,\n  \"get_entity\",\n  { account_id: entityId },\n  \"final\"\n);\n\nconst isAuthorized = Near.view(\n  ownerId,\n  \"check_is_manager_or_higher\",\n  { entity_id: entityId, account_id: context.accountId },\n  \"final\"\n);\n\nconst contributions = Near.view(\n  ownerId,\n  \"get_entity_contributions\",\n  { account_id: entityId },\n  \"final\"\n);\n\nconst [founder] = Object.keys(contributions ?? {}).filter((contribution) => {\n  const details = contributions[contribution];\n  const all = [...details.history, details.current];\n  return all.some((detail) => detail.description === \"\");\n});\n\nconst profile = Social.getr(`${entityId}/profile`);\n\nconst controls = isAuthorized ? (\n  <div className=\"d-flex flex-column justify-content-start align-items-stretch\">\n    <a\n      className=\"btn btn-danger me-2 text-light\"\n      style={{ width: \"13em\" }}\n      onClick={() => State.update({ finishFormHidden: false })}\n    >\n      <i className=\"bi-slash-circle\" />\n      <span className=\"text-nowrap\">Stop contribution</span>\n    </a>\n    <Widget\n      src={`${ownerId}/widget/ContributionForm`}\n      props={{\n        id: `${entityId}${contributorId}ContributionForm`,\n        entityId: entityId,\n        contributorId: contributorId,\n        hidden: state.finishFormHidden,\n        onClose: () => State.update({ finishFormHidden: true }),\n      }}\n    />\n  </div>\n) : (\n  <></>\n);\n\nconst body = (\n  <div className=\"px-3\">\n    <div className=\"d-flex flex-row justify-content-start\" id={entityId}>\n      <div className=\"flex-grow-1 py-3\">\n        <Widget\n          src={`${ownerId}/widget/ProfileLine`}\n          props={{\n            accountId: contributorId,\n            isEntity: false,\n            imageSize: \"4em\",\n            update: props.update,\n            additionalColumn: controls,\n            additionalRow: (\n              <>\n                <div className=\"d-flex flex-row justify-content-start align-items-center\">\n                  <span className=\"text-muted me-2\">\n                    From{\" \"}\n                    {new Date(\n                      Number(contribution.current.start_date)\n                    ).toLocaleDateString()}\n                  </span>\n                  {!!contribution.curre.end_date ? (\n                    <span>\n                      To{\" \"}\n                      {new Date(\n                        Number(contribution.current.end_date)\n                      ).toLocaleDateString()}\n                    </span>\n                  ) : (\n                    <></>\n                  )}\n                  <Widget\n                    src={`${ownerId}/widget/ActiveIndicator`}\n                    props={{ active: !contribution.current.end_date }}\n                  />\n                </div>\n                <div className=\"d-flex flex-row justify-content-start align-items-center\">\n                  <span className=\"me-2\">\n                    contributed{\" \"}\n                    {typeof contribution.current.contribution_type === \"string\"\n                      ? contribution.current.contribution_type\n                      : contribution.current.contribution_type.Other}{\" \"}\n                    to\n                  </span>\n                  <Widget\n                    src={`${ownerId}/widget/ProfileLine`}\n                    props={{\n                      accountId: entityId,\n                      isEntity: true,\n                      imageSize: \"2em\",\n                      update: props.update,\n                    }}\n                  />\n                </div>\n              </>\n            ),\n          }}\n        />\n      </div>\n    </div>\n    <Widget\n      src={`${ownerId}/widget/DescriptionArea`}\n      props={{ description: contribution.current.description }}\n    />\n  </div>\n);\n\nconst content = contribution.history\n  .filter(\n    ({ description, contribution_type }) =>\n      description.includes(props.search) ||\n      (typeof contribution_type === \"string\"\n        ? contribution_type\n        : contribution_type.Other\n      ).includes(props.search)\n  )\n  .map(\n    ({ description, contribution_type, need, start_date, end_date }, index) => (\n      <Widget\n        src={`${ownerId}/widget/ContributionDetail`}\n        props={{\n          need,\n          entityId,\n          description,\n          contributionType:\n            typeof contribution_type === \"string\"\n              ? contribution_type\n              : contribution_type.Other,\n          startDate: start_date,\n          endDate: end_date,\n        }}\n        key={index}\n      />\n    )\n  );\n\nreturn (\n  <div>\n    <div className=\"mb-5\">{body}</div>\n    <div className=\"d-flex flex-row justify-content-between ps-3\">\n      {contentSelector}\n      <Widget\n        src={`${ownerId}/widget/SearchInput`}\n        props={{ search: props.search, update: props.update }}\n      />\n    </div>\n    <div className=\"px-3 pt-3\">{content}</div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ContributionPage"}