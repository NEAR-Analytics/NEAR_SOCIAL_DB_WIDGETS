{"tx_hash": "8eYsNBjRepnBEt4ueRRaJkhGdSfroti6t7jdX6uFQySB", "action_id_social": "4z1xu7zUdou4FS1nmfaCMQWEH58CQuGn9ssisjxu3Ygp-0-widget", "block_id": 82181925, "block_timestamp": "2023-01-04 13:05:10.212", "signer_id": "betteryou.near", "widget_name": "language_challenge", "source_code": "const challengeLogo =\n  \"https://user-images.githubusercontent.com/91919554/208149476-d77664d7-868d-4995-8bac-feeb026cd64e.png\";\n\nconst plaqTemplateWidget = \"betteryou.near/widget/plaque_v2\";\nconst signupTemplateWidget = \"betteryou.near/widget/language_signup\";\nconst contractId = \"language.betteryou.near\";\nconst accountId = props.accountId ?? context.accountId;\n\nlet contractChallengeState = None;\n\nif (!accountId) {\n  return \"Please log in to view your own challenge or specify account id to view in props.\";\n}\n\nconst activeButton = {\n  backgroundColor: \"#2D949A\",\n  color: \"white\",\n  borderRadius: \"100px\",\n  border: \"0px\",\n  paddingLeft: \"24px\",\n  paddingRight: \"24px\",\n  paddingTop: \"10px\",\n  paddingBottom: \"10px\",\n  marginTop: \"10px\",\n};\n\nconst inactiveButton = {\n  backgroundColor: \"#a0a5ab\",\n  color: \"white\",\n  borderRadius: \"100px\",\n  border: \"0px\",\n  paddingLeft: \"24px\",\n  paddingRight: \"24px\",\n  paddingTop: \"10px\",\n  paddingBottom: \"10px\",\n  marginTop: \"10px\",\n};\n\nfunction isOwnerLoggedIn() {\n  return accountId == context.accountId;\n}\n\nfunction updateContractChallengeState() {\n  contractChallengeState =\n    props.debugChallengeState ??\n    Near.view(contractId, \"get_challenge\", {\n      account_id: accountId,\n    });\n}\n\nfunction finish_challenge() {\n  console.log(\"finish challenge\");\n  const result = Near.call(contractId, \"finish_challenge\", {});\n  console.log(\"finish result\", result);\n}\n\nfunction abandon_challenge() {\n  console.log(\"abandon challenge\");\n  Near.call(contractId, \"abandon_challenge\", {});\n}\n\n// Conversion function from the contract state format to the widget state format.\nfunction toWidgetChallengeState(contractChallengeState) {\n  return contractChallengeState;\n}\n\nfunction getPublicNoChallenge() {\n  return \"No challenge found.\";\n}\n\nfunction getOwnerNoChallenge() {\n  return <Widget src={signupTemplateWidget} />;\n}\n\nfunction getNoChallenge() {\n  if (props.emptyIfNoChallenge) {\n    return \"\";\n  }\n  if (isOwnerLoggedIn()) {\n    return getOwnerNoChallenge();\n  } else {\n    return getPublicNoChallenge();\n  }\n}\n\nfunction getPublicCustomBox() {\n  return (\n    <div>\n      <b>{accountId}</b> is participating in this challenge. They have committed\n      to learn <b>{contractChallengeState.language}</b> for\n      <b>{contractChallengeState.total_days} days </b>\n      <br />\n      <br />\n      {getDayStatus()} <br />\n      Do you want to support them?\n    </div>\n  );\n}\n\nlet supportValue = 1.0;\n\nfunction on_change_support(change) {\n  supportValue = parseFloat(change.target.value);\n  console.log(\"on_change_support\", supportValue);\n}\n\nfunction add_support() {\n  Near.call(\n    contractId,\n    \"add_prize\",\n    { account_id: accountId },\n    None,\n    parseFloat(supportValue) * Math.pow(10, 24)\n  );\n}\n\nfunction getSupportBox() {\n  return (\n    <div>\n      <input onChange={on_change_support}></input> NEAR\n      <button style={activeButton} onClick={add_support}>\n        Support\n      </button>\n    </div>\n  );\n}\n\nfunction getDayStatus() {\n  if (\n    contractChallengeState.days_left == 0 ||\n    contractChallengeState.lives_left == 0\n  ) {\n    return (\n      <div>\n        <div>\n          The challenge has now finished. Please press the finish button to wrap\n          it up.\n        </div>\n        <br />\n        <button style={activeButton} onClick={finish_challenge}>\n          {\" \"}\n          Finish{\" \"}\n        </button>\n      </div>\n    );\n  }\n\n  let pointsRequired =\n    contractChallengeState.quota_per_day -\n    contractChallengeState.current_daily_xp;\n  if (pointsRequired < 0) {\n    return (\n      <div>Enough XP points today ({-pointsRequired} over the quota) </div>\n    );\n  } else {\n    return (\n      <div>\n        <b>{pointsRequired} points still needed today </b>(this value is\n        refreshed every hour)\n      </div>\n    );\n  }\n}\n\nfunction getAbandonButton() {\n  return <button onClick={abandon_challenge}> Abandon challenge </button>;\n}\n\nfunction getOwnerCustomBox() {\n  return (\n    <div>\n      <h1 style={{ color: \"black\" }}> Learn a language! </h1>\n      <b>You</b> are participating in this challenge. You have committed to\n      learn <b>{contractChallengeState.language}</b> for\n      <b>{contractChallengeState.total_days} days </b>\n      <br />\n      <br />\n      {getDayStatus()} <br />\n    </div>\n  );\n}\n\nfunction getCustomBox() {\n  if (isOwnerLoggedIn()) {\n    return getOwnerCustomBox();\n  } else {\n    return getPublicCustomBox();\n  }\n}\n\nupdateContractChallengeState();\n\nif (!contractChallengeState) {\n  return getNoChallenge();\n}\n\nconsole.log(\"challenge state \", contractChallengeState);\nconst widgetChallengeState = toWidgetChallengeState(contractChallengeState);\n\nconst challengeMotto = \"Learn a language\";\n\nreturn (\n  <div>\n    <Widget\n      src={plaqTemplateWidget}\n      props={{\n        challengeState: widgetChallengeState,\n        customBox: getCustomBox(),\n        challengeLogo: challengeLogo,\n        challengeMotto: challengeMotto,\n        isOwner: isOwnerLoggedIn(),\n        abandonButton: getAbandonButton(),\n        supportBox: getSupportBox(),\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/betteryou.near/widget/language_challenge"}