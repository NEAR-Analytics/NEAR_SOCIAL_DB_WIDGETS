{"tx_hash": "Dcywqw3QmKALdpD6GUMzebZQPP2HfdG48grfinnbhMDV", "action_id_social": "EQhkwFh2zo5yevberovtjmPpmpTRLxzjoVJEusnMTBgR-0-widget", "block_id": 85151149, "block_timestamp": "2023-02-13 16:04:43.340", "signer_id": "betteryou.near", "widget_name": "wakeup_challenge", "source_code": "const challengeLogo =\n  \"https://user-images.githubusercontent.com/91919554/208149479-340325cd-5151-4594-b7d6-ad91abe9d1ec.png\";\n\nconst plaqTemplateWidget = \"betteryou.near/widget/plaque_v2\";\nconst signupTemplateWidget = \"betteryou.near/widget/wakeup_signup\";\nconst contractId = \"wakeup.betteryou.near\";\nconst accountId = props.accountId ?? context.accountId;\n\nlet contractChallengeState = None;\n\nif (!accountId) {\n  return \"Please log in to view your own challenge or specify account id to view in props.\";\n}\n\nconst activeButton = {\n  backgroundColor: \"#2D949A\",\n  color: \"white\",\n  borderRadius: \"100px\",\n  border: \"0px\",\n  paddingLeft: \"24px\",\n  paddingRight: \"24px\",\n  paddingTop: \"10px\",\n  paddingBottom: \"10px\",\n  marginTop: \"10px\",\n};\n\nconst inactiveButton = {\n  backgroundColor: \"#a0a5ab\",\n  color: \"white\",\n  borderRadius: \"100px\",\n  border: \"0px\",\n  paddingLeft: \"24px\",\n  paddingRight: \"24px\",\n  paddingTop: \"10px\",\n  paddingBottom: \"10px\",\n  marginTop: \"10px\",\n};\n\nfunction isOwnerLoggedIn() {\n  //return accountId == context.accountId;\n  return true;\n}\n\nfunction ms2s(ms) {\n  return Math.floor(ms / 1000);\n}\n\nfunction updateContractChallengeState() {\n  contractChallengeState =\n    props.debugChallengeState ??\n    Near.view(contractId, \"get_challenge\", {\n      account_id: accountId,\n    });\n}\n\n// Update challenge should be called when user wants to register a wakeup.\nfunction updateChallenge() {\n  console.log(\"update challenge\");\n  const result = Near.call(contractId, \"update_challenge\", {});\n  console.log(\"update challenge result\", result);\n  updateContractChallengeState();\n  // TOOD reload the page ideally or the info\n}\n\nfunction finish_challenge() {\n  console.log(\"finish challenge\");\n  const result = Near.call(contractId, \"finish\", {});\n  console.log(\"finish result\", result);\n}\n\nfunction abandon_challenge() {\n  console.log(\"abandon challenge\");\n  Near.call(contractId, \"abandon_challenge\", {});\n}\n\n// Conversion function from the contract state format to the widget state format.\nfunction toWidgetChallengeState(contractChallengeState) {\n  let result = {};\n  result.total_days = contractChallengeState.config.days;\n  result.total_lives = contractChallengeState.config.lives;\n\n  result.days_left = result.total_days - contractChallengeState.days_passed;\n  result.lives_left = result.total_lives - contractChallengeState.lives_used;\n\n  result.funding = contractChallengeState.funding;\n  result.day_status = contractChallengeState.day_status;\n\n  return result;\n}\n\nfunction getPublicNoChallenge() {\n  return \"No challenge found.\";\n}\n\nfunction getOwnerNoChallenge() {\n  return <Widget src={signupTemplateWidget} />;\n}\n\nfunction getNoChallenge() {\n  if (props.emptyIfNoChallenge) {\n    return \"\";\n  }\n\n  if (isOwnerLoggedIn()) {\n    return getOwnerNoChallenge();\n  } else {\n    return getPublicNoChallenge();\n  }\n}\n\nfunction getPublicCustomBox() {\n  return (\n    <div>\n      <b>{accountId}</b> is participating in this challenge. They have committed\n      to wake up early for <b>{contractChallengeState.config.days} days</b>{\" \"}\n      between <b> {getStartEndTimes()} </b>\n      Do you want to support them?\n    </div>\n  );\n}\n\nfunction time_diff_to_string(time_diff) {\n  const hours = Math.floor(time_diff / 60 / 60);\n  const minutes = Math.floor((time_diff / 60) % 60);\n  const seconds = Math.floor(time_diff % 60);\n  return `${hours}h ${minutes}m ${seconds}s`;\n}\n\nfunction getWakeUpButton() {\n  const config = contractChallengeState.config;\n  const button_msg = \"I'm awake!\";\n  const day_length = contractChallengeState.day_length ?? 24 * 60 * 60;\n  const timeout = config.timeout;\n  const start = config.first_day;\n\n  const now = ms2s(Date.now());\n  if (now < start) {\n    const start_date = new Date(1000 * start);\n    const start_string = start_date.toString();\n    return <div> The challenge will begin on {start_string} </div>;\n  }\n\n  // Recalculate days passed in case the user missed out some days.\n  const time_since_start = now - start;\n  const days_passed = Math.floor(time_since_start / day_length);\n\n  console.log(new Date(1000 * start).toString());\n\n  console.log(\"In finishes\");\n  console.log(config.days, \" \", days_passed);\n  console.log(now, \" \", config.first_day);\n\n  // The challenge is over.\n  // - the actual days_passed is larger than the total number of days - can't do equal because user needs to register wake up on the last day.\n  // - the contract state days passed is equal to total number of days - we're finished and contract knows about it\n  // - the user is out of lives\n  if (\n    config.days < days_passed ||\n    config.days == contractChallengeState.days_passed ||\n    config.lives <= contractChallengeState.lives_used\n  ) {\n    return (\n      <div>\n        <div>\n          The challenge has now finished. Please press the finish button to wrap\n          it up.\n        </div>\n        <br />\n        <button style={activeButton} onClick={finish_challenge}>\n          {\" \"}\n          Finish{\" \"}\n        </button>\n      </div>\n    );\n  }\n\n  // The user has already registered wake up today.\n  if (days_passed < contractChallengeState.days_passed) {\n    const time_left = start + (days_passed + 1) * day_length - now;\n    return (\n      <div>\n        <div>\n          Well done, you have registered your wake up today. Come back in{\" \"}\n          {time_diff_to_string(time_left)}.\n        </div>\n        <br />\n        <button\n          disabled={true}\n          style={inactiveButton}\n          onClick={updateChallenge}\n        >\n          {button_msg}\n        </button>\n      </div>\n    );\n  }\n\n  // We're counting time since the start time.\n  const time_of_day = now - start - days_passed * day_length;\n  if (time_of_day < timeout) {\n    const time_left = timeout - time_of_day;\n    return (\n      <div>\n        <div>\n          You can register your wake up now. You have\n          {time_diff_to_string(time_left)} to register the wakeup today.\n        </div>{\" \"}\n        <br />\n        <button style={activeButton} onClick={updateChallenge}>\n          {\" \"}\n          {button_msg}{\" \"}\n        </button>\n      </div>\n    );\n  } else {\n    const time_left = start + (days_passed + 1) * day_length - now;\n    return (\n      <div>\n        <div>\n          It's too late to register the wake up today. Come back in\n          {time_diff_to_string(time_left)}.\n        </div>\n        <br />\n        <button\n          disabled={true}\n          style={inactiveButton}\n          onClick={updateChallenge}\n        >\n          {button_msg}\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction getAbandonButton() {\n  return <button onClick={abandon_challenge}> Abandon challenge </button>;\n}\n\nfunction getStartEndTimes() {\n  let d = new Date(contractChallengeState.config.first_day * 1000);\n  let startTime =\n    d.getHours().toString() + \":\" + d.getMinutes().toString().padStart(2, \"0\");\n\n  let d1 = new Date(\n    (contractChallengeState.config.first_day +\n      contractChallengeState.config.timeout) *\n      1000\n  );\n  let endTime =\n    d1.getHours().toString() +\n    \":\" +\n    d1.getMinutes().toString().padStart(2, \"0\");\n  return (\n    <span>\n      {startTime} - {endTime}\n    </span>\n  );\n}\n\nfunction getOwnerCustomBox() {\n  return (\n    <div>\n      <h1 style={{ color: \"black\" }}> Wake up challenge! </h1>\n      <b>You</b> are participating in this challenge. You have committed to wake\n      up early for <b>{contractChallengeState.config.days} days </b> between{\" \"}\n      <b> {getStartEndTimes()}.</b> <br />\n      <br />\n      {getWakeUpButton()} <br />\n    </div>\n  );\n}\n\nfunction getCustomBox() {\n  if (isOwnerLoggedIn()) {\n    return getOwnerCustomBox();\n  } else {\n    return getPublicCustomBox();\n  }\n}\n\nlet supportValue = 1.0;\n\nfunction on_change_support(change) {\n  supportValue = parseFloat(change.target.value);\n  console.log(\"on_change_support\", supportValue);\n}\n\nfunction add_support() {\n  Near.call(\n    contractId,\n    \"add_prize\",\n    { account_id: accountId },\n    None,\n    parseFloat(supportValue) * Math.pow(10, 24)\n  );\n}\n\nfunction getSupportBox() {\n  return (\n    <div>\n      <input onChange={on_change_support}></input> NEAR\n      <button style={activeButton} onClick={add_support}>\n        Support\n      </button>\n    </div>\n  );\n}\n\nupdateContractChallengeState();\n\nif (!contractChallengeState) {\n  return getNoChallenge();\n}\n\nconsole.log(\"challenge state \", contractChallengeState);\nconst widgetChallengeState = toWidgetChallengeState(contractChallengeState);\n\nconst challengeMotto = \"Wake up earlier\";\n\nreturn (\n  <div>\n    <Widget\n      src={plaqTemplateWidget}\n      props={{\n        challengeState: widgetChallengeState,\n        customBox: getCustomBox(),\n        challengeLogo: challengeLogo,\n        challengeMotto: challengeMotto,\n        isOwner: isOwnerLoggedIn(),\n        abandonButton: getAbandonButton(),\n        supportBox: getSupportBox(),\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/betteryou.near/widget/wakeup_challenge"}