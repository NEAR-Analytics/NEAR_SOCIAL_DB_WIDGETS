{"tx_hash": "8713ZkDavrdEAviQWENu1ZtdC9VLLrvgYF8dZYLEQyDR", "action_id_social": "5UiRyJQpZTU49J1UBawsrbRFZrfv73kTtA3p4GP5nnzW-0-widget", "block_id": 87345943, "block_timestamp": "2023-03-15 11:07:22.704", "signer_id": "0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422", "widget_name": "NEAR-Segmentation-Tool-For-MDAO", "source_code": "let chart4Props = {\r\n  query: `\r\n    with\r\n  social_inits as (\r\n    select\r\n      *\r\n    from\r\n      near.core.fact_actions_events_addkey\r\n    where\r\n      receiver_id = 'social.near'\r\n  ),\r\n  add_signer as (\r\n    select\r\n      k.tx_hash,\r\n      k.block_id,\r\n      k.block_timestamp,\r\n      t.tx_signer,\r\n      k.allowance,\r\n      t.tx_signer = t.tx_receiver\r\n    from\r\n      social_inits k\r\n      left join near.core.fact_transactions t using (tx_hash)\r\n  ),\r\n  de_dupe_resigners as (\r\n    select\r\n      block_timestamp,\r\n      tx_signer\r\n    from\r\n      add_signer\r\n    qualify\r\n      ROW_NUMBER() over (\r\n        PARTITION BY\r\n          tx_signer\r\n        ORDER BY\r\n          block_timestamp ASC\r\n      ) = 1\r\n  ),\r\n  final as (\r\n    select\r\n      block_timestamp::date as day_date,\r\n      count(distinct tx_signer) as Unique_Authorizers,\r\n      sum(Unique_Authorizers) over (\r\n        order by\r\n          day_date\r\n      ) as Cumulative_Unique_Authorizers\r\n    from\r\n      de_dupe_resigners\r\n    group by\r\n      1\r\n    order by\r\n      1\r\n  )\r\nselect\r\n  *\r\nfrom\r\n  final\r\n`,\r\n  title: \"Near Social - New Authorizers Over Time\",\r\n  chartWidth: 640,\r\n  chartHeight: 200,\r\n};\r\n\r\nlet ageChartProps = {\r\n  query: `with\r\n  social_inits as (\r\n    select\r\n      *\r\n    from\r\n      near.core.fact_actions_events_addkey\r\n    where\r\n      receiver_id = 'social.near'\r\n  ),\r\n  add_signer as (\r\n    select\r\n      k.tx_hash,\r\n      k.block_id,\r\n      k.block_timestamp,\r\n      t.tx_signer,\r\n      k.allowance,\r\n      t.tx_signer = t.tx_receiver\r\n    from\r\n      social_inits k\r\n      left join near.core.fact_transactions t using (tx_hash)\r\n  ),\r\n  de_dupe_resigners as (\r\n    select\r\n      block_timestamp,\r\n      tx_signer\r\n    from\r\n      add_signer\r\n    qualify\r\n      ROW_NUMBER() over (\r\n        PARTITION BY\r\n          tx_signer\r\n        ORDER BY\r\n          block_timestamp ASC\r\n      ) = 1\r\n  ),\r\n  interested_addresses as (\r\n    select\r\n      tx_signer\r\n    from\r\n      de_dupe_resigners\r\n    WHERE\r\n      block_timestamp BETWEEN '2022-01-01' and '2022-06-01'\r\n  ),\r\n  first_tx_table as (\r\n    select\r\n      min(t.block_timestamp) as first_tx,\r\n      ia.tx_signer\r\n    from\r\n      interested_addresses ia\r\n      left join near.core.fact_transactions t using (tx_signer)\r\n    group by\r\n      2\r\n  ),\r\n  date_diff_table as (\r\n    select\r\n      DATEDIFF('day', first_tx, current_date()) as wallet_age_day,\r\n      tx_signer\r\n    from\r\n      first_tx_table\r\n  ),\r\n  final as (\r\n    select\r\n      COUNT_IF(wallet_age_day > 7) as week_old_wallets,\r\n      COUNT_IF(wallet_age_day > 30) as month_old_wallets,\r\n      COUNT_IF(wallet_age_day > 365) as year_old_wallets,\r\n      COUNT_IF(1 = 1) as total_wallets\r\n    from\r\n      date_diff_table\r\n  ),\r\n  flip as (\r\n    select\r\n      *\r\n    from\r\n      final unpivot (\r\n        my_count for wallet_age in (\r\n          week_old_wallets,\r\n          month_old_wallets,\r\n          year_old_wallets,\r\n          total_wallets\r\n        )\r\n      )\r\n  )\r\nselect\r\n  *\r\nfrom\r\n  flip`,\r\n  title: \"Age of Wallets\",\r\n  chartWidth: 640,\r\n  chartHeight: 200,\r\n};\r\n\r\n// bypass because server cannot handle newline..\r\nchart4Props.query = chart4Props.query.replaceAll(\"\\n\", \" \");\r\nageChartProps.query = ageChartProps.query.replaceAll(\"\\n\", \" \");\r\n\r\nconsole.log(ageChartProps.query);\r\n/*\r\n- age of wallets\r\n- Staking history, average amount staked, average number of times staking\r\n- DEX swaps\r\n- What % of users bridged assets into NEAR vs using a centralized exchange, which bridges & centralized exchanges are most popular.\r\n- NEAR Social Activity\r\n*/\r\n\r\nreturn (\r\n  <div>\r\n    <h2>NEAR - Segmentation Tool</h2>\r\n    <div>\r\n      Bounty Question: Create a segmentation tool to help us understand the NEAR\r\n      profiles of new users on Near.social. The intention is to allow users to\r\n      select a new group of Near users based on when they joined then look at\r\n      that group of users wallet behavior\r\n    </div>\r\n    <Widget\r\n      src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/Flipside-BarChart-V2\"\r\n      props={chart4Props}\r\n    />\r\n    <div>Date Start</div>\r\n    <div>Date End</div>\r\n    <div>Go</div>\r\n    <div>\r\n      <h4>Age of Wallets</h4>\r\n      <Widget\r\n        src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/Flipside-BarChart-V2\"\r\n        props={ageChartProps}\r\n      />\r\n    </div>\r\n    <div>Staking History</div>\r\n    <div>Average Amount Staked</div>\r\n    <div>Average Number of Times Staked</div>\r\n    <div>\r\n      What % of users bridged assets into NEAR vs using a centralized exchange,\r\n      which bridges & centralized exchanges are most popular.\r\n    </div>\r\n    <div>NEAR Social Activity</div>\r\n    <div>DEX Swaps</div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/NEAR-Segmentation-Tool-For-MDAO"}