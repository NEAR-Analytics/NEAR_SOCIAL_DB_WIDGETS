{"tx_hash": "A85WuACA39oUuu3LecrxHugNsqmnEBk7X9XPv5d8yFHN", "action_id_social": "4NVZo8dFMR6ww6arGLSLjDAkNN6wpg1ZASvMWVPAyHrv-0-widget", "block_id": 87352890, "block_timestamp": "2023-03-15 13:22:33.549", "signer_id": "0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422", "widget_name": "NEAR-Segmentation-Tool-For-MDAO", "source_code": "State.init({\r\n  retriggerQuery: false,\r\n  mainQuery: \"\",\r\n  tmpStart: \"2023-01-01\",\r\n  tmpEnd: \"2023-02-01\",\r\n  dateStart: \"2023-01-01\",\r\n  dateEnd: \"2023-02-01\",\r\n  dexSwapChartProps: { dateStart: \"2023-01-01\", dateEnd: \"2023-02-01\" },\r\n});\r\n\r\nlet mainChartProps = {\r\n  query: `with\r\n  social_inits as (\r\n    select\r\n      *\r\n    from\r\n      near.core.fact_actions_events_addkey\r\n    where\r\n      receiver_id = 'social.near'\r\n  ),\r\n  add_signer as (\r\n    select\r\n      k.tx_hash,\r\n      k.block_id,\r\n      k.block_timestamp,\r\n      t.tx_signer,\r\n      k.allowance,\r\n      t.tx_signer = t.tx_receiver\r\n    from\r\n      social_inits k\r\n      left join near.core.fact_transactions t using (tx_hash)\r\n  ),\r\n  de_dupe_resigners as (\r\n    select\r\n      block_timestamp,\r\n      tx_signer\r\n    from\r\n      add_signer\r\n    qualify\r\n      ROW_NUMBER() over (\r\n        PARTITION BY\r\n          tx_signer\r\n        ORDER BY\r\n          block_timestamp ASC\r\n      ) = 1\r\n  ),\r\n  final as (\r\n    select\r\n      block_timestamp::date as day_date,\r\n      count(distinct tx_signer) as Unique_Authorizers,\r\n      sum(Unique_Authorizers) over (\r\n        order by\r\n          day_date\r\n      ) as Cumulative_Unique_Authorizers\r\n    from\r\n      de_dupe_resigners\r\n    group by\r\n      1\r\n    order by\r\n      1\r\n  )\r\nselect\r\n  *\r\nfrom\r\n  final`,\r\n  title: \"New Wallets Over Time\",\r\n  chartWidth: 640,\r\n  chartHeight: 200,\r\n};\r\n\r\nlet ageChartProps = {\r\n  queryTemplate: `with\r\n  social_inits as (\r\n    select\r\n      *\r\n    from\r\n      near.core.fact_actions_events_addkey\r\n    where\r\n      receiver_id = 'social.near'\r\n  ),\r\n  add_signer as (\r\n    select\r\n      k.tx_hash,\r\n      k.block_id,\r\n      k.block_timestamp,\r\n      t.tx_signer,\r\n      k.allowance,\r\n      t.tx_signer = t.tx_receiver\r\n    from\r\n      social_inits k\r\n      left join near.core.fact_transactions t using (tx_hash)\r\n  ),\r\n  de_dupe_resigners as (\r\n    select\r\n      block_timestamp,\r\n      tx_signer\r\n    from\r\n      add_signer\r\n    qualify\r\n      ROW_NUMBER() over (\r\n        PARTITION BY\r\n          tx_signer\r\n        ORDER BY\r\n          block_timestamp ASC\r\n      ) = 1\r\n  ),\r\n  interested_addresses as (\r\n    select\r\n      tx_signer\r\n    from\r\n      de_dupe_resigners\r\n    WHERE\r\n      block_timestamp BETWEEN '$$(dateStart)' and '$$(dateEnd)'\r\n  ),\r\n  first_tx_table as (\r\n    select\r\n      min(t.block_timestamp) as first_tx,\r\n      ia.tx_signer\r\n    from\r\n      interested_addresses ia\r\n      left join near.core.fact_transactions t using (tx_signer)\r\n    group by\r\n      2\r\n  ),\r\n  date_diff_table as (\r\n    select\r\n      DATEDIFF('day', first_tx, current_date()) as wallet_age_day,\r\n      tx_signer\r\n    from\r\n      first_tx_table\r\n  ),\r\n  final as (\r\n    select\r\n      COUNT_IF(wallet_age_day > 7) as week_old_wallets,\r\n      COUNT_IF(wallet_age_day > 30) as month_old_wallets,\r\n      COUNT_IF(wallet_age_day > 365) as year_old_wallets,\r\n      COUNT_IF(1 = 1) as total_wallets\r\n    from\r\n      date_diff_table\r\n  ),\r\n  flip as (\r\n    select\r\n      *\r\n    from\r\n      final unpivot (\r\n        my_count for wallet_age in (\r\n          week_old_wallets,\r\n          month_old_wallets,\r\n          year_old_wallets,\r\n          total_wallets\r\n        )\r\n      )\r\n  )\r\nselect\r\n  *\r\nfrom\r\n  flip`,\r\n  title: \"Age of Wallets\",\r\n  chartWidth: 640,\r\n  chartHeight: 200,\r\n};\r\n\r\nlet stakeChartProps = {\r\n  queryTemplate: `with\r\n  social_inits as (\r\n    select\r\n      *\r\n    from\r\n      near.core.fact_actions_events_addkey\r\n    where\r\n      receiver_id = 'social.near'\r\n  ),\r\n  add_signer as (\r\n    select\r\n      k.tx_hash,\r\n      k.block_id,\r\n      k.block_timestamp,\r\n      t.tx_signer,\r\n      k.allowance,\r\n      t.tx_signer = t.tx_receiver\r\n    from\r\n      social_inits k\r\n      left join near.core.fact_transactions t using (tx_hash)\r\n  ),\r\n  de_dupe_resigners as (\r\n    select\r\n      block_timestamp,\r\n      tx_signer\r\n    from\r\n      add_signer\r\n    qualify\r\n      ROW_NUMBER() over (\r\n        PARTITION BY\r\n          tx_signer\r\n        ORDER BY\r\n          block_timestamp ASC\r\n      ) = 1\r\n  ),\r\n  interested_addresses as (\r\n    select\r\n      tx_signer\r\n    from\r\n      de_dupe_resigners\r\n    WHERE\r\n      block_timestamp BETWEEN '$$(dateStart)' and '$$(dateEnd)'\r\n  ),\r\n  data_table as (\r\n    select\r\n      substr(date_trunc('month', t.block_timestamp), 0, 10) as day_date,\r\n      ia.tx_signer,\r\n      CASE\r\n        WHEN t.action = 'Stake' then stake_amount / pow(10, 24)\r\n      END as amount_staked,\r\n      CASE\r\n        WHEN t.action = 'Unstake' then - stake_amount / pow(10, 24)\r\n      END as amount_unstaked\r\n    from\r\n      interested_addresses ia\r\n      left join near.core.dim_staking_actions t on ia.tx_signer = t.tx_signer\r\n  ),\r\n  final as (\r\n    select\r\n      day_date,\r\n      sum(nvl(amount_staked, 0) + nvl(amount_unstaked, 0)) as net_stake\r\n    from\r\n      data_table\r\n    WHERE len(day_date) > 0\r\n    group by\r\n      1\r\n  )\r\nselect\r\n  *\r\nfrom\r\n  final\r\norder by\r\n  1`,\r\n  title: \"Staking Wallet Behavior\",\r\n  chartWidth: 640,\r\n  chartHeight: 200,\r\n};\r\n\r\nlet nearSocialChartProps = {\r\n  queryTemplate: `with\r\n  social_inits as (\r\n    select\r\n      *\r\n    from\r\n      near.core.fact_actions_events_addkey\r\n    where\r\n      receiver_id = 'social.near'\r\n  ),\r\n  add_signer as (\r\n    select\r\n      k.tx_hash,\r\n      k.block_id,\r\n      k.block_timestamp,\r\n      t.tx_signer,\r\n      k.allowance,\r\n      t.tx_signer = t.tx_receiver\r\n    from\r\n      social_inits k\r\n      left join near.core.fact_transactions t using (tx_hash)\r\n  ),\r\n  de_dupe_resigners as (\r\n    select\r\n      block_timestamp,\r\n      tx_signer\r\n    from\r\n      add_signer\r\n    qualify\r\n      ROW_NUMBER() over (\r\n        PARTITION BY\r\n          tx_signer\r\n        ORDER BY\r\n          block_timestamp ASC\r\n      ) = 1\r\n  ),\r\n  interested_addresses as (\r\n    select\r\n      tx_signer\r\n    from\r\n      de_dupe_resigners\r\n    WHERE\r\n      block_timestamp BETWEEN '$$(dateStart)' and '$$(dateEnd)'\r\n  ),\r\n  data_table as (\r\n    select\r\n      substr(date_trunc('month', t.block_timestamp), 0, 10) as day_date,\r\n      ia.tx_signer,\r\n      count(1) as num_actions\r\n    from\r\n      interested_addresses ia\r\n      left join near.social.fact_decoded_actions t on ia.tx_signer = t.signer_id\r\n    group by\r\n      1,\r\n      2\r\n  ),\r\n  final as (\r\n    select\r\n      day_date,\r\n      sum(num_actions) as net_actions\r\n    from\r\n      data_table\r\n    WHERE\r\n      len(day_date) > 0\r\n    group by\r\n      1\r\n  )\r\nselect\r\n  *\r\nfrom\r\n  final\r\norder by\r\n  1`,\r\n  title: \"Near Social Activity\",\r\n  chartWidth: 640,\r\n  chartHeight: 200,\r\n};\r\n\r\n// bypass because server cannot handle newline..\r\nmainChartProps.query = mainChartProps.query.replaceAll(\"\\n\", \" \");\r\nageChartProps.query = ageChartProps.queryTemplate\r\n  .replace(\"$$(dateStart)\", state.dateStart)\r\n  .replace(\"$$(dateEnd)\", state.dateEnd)\r\n  .replaceAll(\"\\n\", \" \");\r\n\r\nstakeChartProps.query = stakeChartProps.queryTemplate\r\n  .replace(\"$$(dateStart)\", state.dateStart)\r\n  .replace(\"$$(dateEnd)\", state.dateEnd)\r\n  .replaceAll(\"\\n\", \" \");\r\n\r\nnearSocialChartProps.query = nearSocialChartProps.queryTemplate\r\n  .replace(\"$$(dateStart)\", state.dateStart)\r\n  .replace(\"$$(dateEnd)\", state.dateEnd)\r\n  .replaceAll(\"\\n\", \" \");\r\n\r\n//console.log(\"new\", stakeChartProps.query);\r\n\r\nconst Button = styled.button`\r\n  /* Adapt the colors based on primary prop */\r\n  background: ${(props) => (props.primary ? \"palevioletred\" : \"white\")};\r\n  color: ${(props) => (props.primary ? \"white\" : \"palevioletred\")};\r\n\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid palevioletred;\r\n  border-radius: 10px;\r\n`;\r\n\r\nfunction updateStart(value) {\r\n  console.log(\"start\", value);\r\n  State.update({\r\n    tmpStart: value,\r\n  });\r\n}\r\n\r\nfunction updateEnd(value) {\r\n  console.log(\"end\", value);\r\n  State.update({\r\n    tmpEnd: value,\r\n  });\r\n}\r\n\r\nfunction goButtonPressed() {\r\n  console.log(\"hit\");\r\n  State.update({\r\n    dateStart: state.tmpStart,\r\n    dateEnd: state.tmpEnd,\r\n    dexSwapChartProps: {\r\n      dateStart: state.tmpStart,\r\n      dateEnd: state.tmpEnd,\r\n    },\r\n  });\r\n  ageChartProps.query = ageChartProps.queryTemplate\r\n    .replace(\"$$(dateStart)\", state.tmpStart)\r\n    .replace(\"$$(dateEnd)\", state.tmpEnd)\r\n    .replaceAll(\"\\n\", \" \");\r\n  stakeChartProps.query = stakeChartProps.queryTemplate\r\n    .replace(\"$$(dateStart)\", state.dateStart)\r\n    .replace(\"$$(dateEnd)\", state.dateEnd)\r\n    .replaceAll(\"\\n\", \" \");\r\n  nearSocialChartProps.query = nearSocialChartProps.queryTemplate\r\n    .replace(\"$$(dateStart)\", state.dateStart)\r\n    .replace(\"$$(dateEnd)\", state.dateEnd)\r\n    .replaceAll(\"\\n\", \" \");\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <h2>NEAR - Segmentation Tool</h2>\r\n    <div>\r\n      <b>Bounty Question:</b> Create a segmentation tool to help us understand\r\n      the NEAR profiles of new users on Near.social.\r\n    </div>\r\n    <div>\r\n      <b>Methodology:</b> Powered by flipside GODMODE... Check the queries in\r\n      the SourceCode\r\n    </div>\r\n    <div>\r\n      <b>SourceCode:</b>\r\n      <a href=\"https://near.social/#/mob.near/widget/WidgetSource?src=0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/NEAR-Segmentation-Tool-For-MDAO\">\r\n        NEAR-Segmentation-Tool-For-MDAO\r\n      </a>\r\n    </div>\r\n    <Widget\r\n      src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/Flipside-BarChart-V2\"\r\n      props={mainChartProps}\r\n    />\r\n    <div>\r\n      <hr />\r\n      <h4>Select the Interval in which users joined near.social...</h4>\r\n      <b>Date Start</b>\r\n      <input\r\n        id=\"1\"\r\n        type=\"date\"\r\n        value={state.tmpStart}\r\n        onChange={({ target: { value } }) => updateStart(value)}\r\n      />\r\n      <b>Date End</b>\r\n      <input\r\n        id=\"1\"\r\n        type=\"date\"\r\n        value={state.tmpEnd}\r\n        onChange={({ target: { value } }) => updateEnd(value)}\r\n      />\r\n    </div>\r\n    <Button onClick={() => goButtonPressed()}>Go</Button>\r\n    <h6>\r\n      {\" \"}\r\n      The following charts shows the activities of the users who has signed up\r\n      between {state.dateStart} and {state.dateEnd}\r\n    </h6>\r\n    <div>\r\n      <Widget\r\n        src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/Flipside-BarChart-V2\"\r\n        props={ageChartProps}\r\n      />\r\n    </div>\r\n    <div>\r\n      <Widget\r\n        src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/Flipside-BarChart-V2\"\r\n        props={stakeChartProps}\r\n      />\r\n    </div>\r\n    <div>\r\n      <Widget\r\n        src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/Flipside-BarChart-V2\"\r\n        props={nearSocialChartProps}\r\n      />\r\n    </div>\r\n    <div>\r\n      <Widget\r\n        src=\"0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/NEAR-Segment-DEXSWAP\"\r\n        props={state.dexSwapChartProps}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0e7a82d0ef92b5559ef04df11f5de68ac4c4479319da5a72b3e2799c4717a422/widget/NEAR-Segmentation-Tool-For-MDAO"}