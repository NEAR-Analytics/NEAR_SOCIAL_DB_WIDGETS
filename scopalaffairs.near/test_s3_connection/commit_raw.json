{"tx_hash": "85mTBezbphbjoV45qEnxnjScbZGGYshRqSvgJ6hwD15o", "action_id_social": "7RX8pZph5aCbNF3YDrxiZhLdAfUEFdbA8Q1YXXysDHYV-0-widget", "block_id": 94054047, "block_timestamp": "2023-06-12T17:17:58.712Z", "signer_id": "scopalaffairs.near", "widget_name": "test_s3_connection", "source_code": null, "metadata": null, "branch": {"draft": {"": "let noDataScreen = null;\nlet trendingUsersContent = null;\nlet similarPostsContent = null;\nlet similarTagsContent = null;\n\nconst getRecommendationsFor = (_accountId) => {\n  const bucketName = \"near-public-lakehouse\";\n  const url = `https://${bucketName}.s3.amazonaws.com/silver/near-social/${_accountId}.json`;\n  const res = fetch(url);\n\n  if (res.ok) {\n    return res.body;\n  } else {\n    noDataScreen = (\n      <>\n        <h1>No Data Available</h1>\n        <p>No trending users or similar posts or similar profile tags found.</p>\n      </>\n    );\n  }\n};\n\nconst accountId = context.userId;\nconst rec = getRecommendationsFor(accountId);\n\nif (!!rec[0].trending_users) {\n  const trendingUsers = JSON.parse(rec[0].trending_users).user_name;\n  const trendingUsersList = Object.values(trendingUsers).map(\n    (accountId, index) => (\n      <li key={index}>\n        <Widget\n          src=\"near/widget/AccountProfile\"\n          props={{\n            accountId,\n            showTags: props.showTags,\n            showFollowerStats: true,\n            showFollowButton: state.multiSelectMode === false,\n          }}\n        />\n      </li>\n    )\n  );\n\n  trendingUsersContent = (\n    <>\n      <h1>Trending Users</h1>\n      <p>Finding the most relevant users for you based on common metrics.</p>\n      <ul className=\"list-group\">{trendingUsersList}</ul>\n    </>\n  );\n}\n\nif (!!rec[1].similar_posts) {\n  const similarPosts = rec[1].similar_posts;\n  const similarPostsList = similarPosts.map((accountId, index) => (\n    <li key={index}>\n      <Widget\n        src=\"near/widget/AccountProfile\"\n        props={{\n          username: accountId[2],\n          showTags: props.showTags,\n          showFollowerStats: true,\n          showFollowButton: state.multiSelectMode === false,\n        }}\n      />\n      <p>Similarity Score: {accountId[1].toFixed(2)}</p>\n    </li>\n  ));\n\n  similarPostsContent = (\n    <>\n      <h1>Users with similar content</h1>\n      <p>Because you recently posted.</p>\n      <ul className=\"list-group\">{similarPostsList}</ul>\n    </>\n  );\n}\n\nif (!!rec[2].similar_tags) {\n  const similarTags = rec[2].similar_tags;\n  console.log(\"similar+tags\", similarTags);\n\n  const similarTagsList = similarTags.map((accountId, index) => (\n    <li key={index}>\n      <Widget\n        src=\"near/widget/AccountProfile\"\n        props={{\n          username: accountId[2],\n          showTags: props.showTags,\n          showFollowerStats: true,\n          showFollowButton: state.multiSelectMode === false,\n        }}\n      />\n      <p>Similarity Score: {accountId[1].toFixed(2)}</p>\n    </li>\n  ));\n\n  similarTagsContent = (\n    <>\n      <h1>Users with similar profiles</h1>\n      <p>Because you added tags.</p>\n      <ul className=\"list-group\">{similarTagsList}</ul>\n    </>\n  );\n}\n\nreturn (\n  <>\n    {noDataScreen}\n    {trendingUsersContent}\n    {similarPostsContent}\n    {similarTagsContent}\n  </>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/test_s3_connection", "__row_index": 2}