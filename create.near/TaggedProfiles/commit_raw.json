{"tx_hash": "Hs5WojBFQV8StVTmUPCmpupXrNFoEx35zM9KHaN95MK8", "action_id_social": "DPMi6Pdt5u15L7LyfdJRDqs6oDtsowbjSpzra9f5C6Qj-0-widget", "block_id": 88680072, "block_timestamp": "2023-04-02 22:06:32.874", "signer_id": "create.near", "widget_name": "TaggedProfiles", "source_code": "const tag = props.tag;\n\n/*\nlet keys = `${accountId ?? \"*\"}/profile/*`;\n\nconst profiles = Social.get(`profile/tags`, \"final\") || {};\n\nconst profilesWithTags = { ...profiles };\nObject.entries(profiles).forEach(([key, valueObj]) => {\n  if (!valueObj?.profile?.hasOwnProperty(\"tags\")) {\n    delete profilesWithTags[key];\n  }\n});\nconst taggedProfiles = Social.keys(`profile/tags`, \"final\") || {};\n\nconst processData = (data) => {\n  const members = Object.entries(data);\n\n  members.sort((a, b) => b.blockHeight - a.blockHeight);\n  return members;\n};\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const members = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].widget).map((kv) => ({\n        accountId,\n        widgetName: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderTag = (tag, tagBadge) => (\n  <a href={makeLink(accountId, tag)}>{tagBadge}</a>\n);\n\nconst renderItem = (a) => {\n  return (\n    <a\n      href={`#/mob.near/widget/ProfilePage?accountId=${a.accountId}`}\n      className=\"text-decoration-none\"\n      key={JSON.stringify(a)}\n    >\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId: a.accountId,\n          tooltip: true,\n          className: \"d-inline-block overflow-hidden\",\n        }}\n      />\n    </a>\n  );\n};\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    members: processData(data),\n  });\n}\n\nreturn (\n  <div className=\"d-flex flex-wrap gap-1 my-3\">\n    {state.members\n      .slice(0, props.limit ? parseInt(props.limit) : 999)\n      .map(renderItem)}\n  </div>\n);\n*/\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nconst limit = props.limit || 21;\n\nif (!data) {\n  return \"Loading\";\n}\n\nlet accounts = Object.entries(data);\nconst numAccounts = accounts.length;\naccounts = accounts.slice(numAccounts - limit, numAccounts);\n\nconst allProfiles = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n\n  allProfiles.push(\n    <a\n      href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n      className=\"text-decoration-none\"\n      key={i}\n    >\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId,\n          tooltip: true,\n          className: \"d-inline-block overflow-hidden\",\n        }}\n      />\n    </a>\n  );\n}\n\nreturn <div className=\"d-flex flex-wrap gap-1\">{allProfiles}</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/create.near/widget/TaggedProfiles"}