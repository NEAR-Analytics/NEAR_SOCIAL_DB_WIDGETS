{"tx_hash": "75aLNR5PUw2KFdw2gj96qawbHuqZHHGcaEbr5BJGLKCK", "action_id_social": "52jE9gRja1u9MqpsunmPPtgoaBsAdVSizXVUcXrmagMx-0-widget", "block_id": 92266492, "block_timestamp": "2023-05-20T02:55:30.181Z", "signer_id": "fblauer.near", "widget_name": "FB_CollectionSelector-fork", "source_code": null, "metadata": null, "branch": {"draft": {"": "const accountId = props.accountId || context.accountId;\nconst onChange = props.onChange;\nconst compressImages = props.compressImages || false; // TODO: default to false\nconst size = \"100%\";\n\nif (!accountId) {\n  return <></>;\n}\n\nState.init({\n  tokens: [],\n  totalTokens: 0,\n  limit: 50,\n  offset: 0,\n});\n\nconst fetchData = (offset) => {\n  asyncFetch(\"https://graph.mintbase.xyz\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n    body: JSON.stringify({\n      query: `\n        query v2_omnisite_GetOwnedTokens($accountId: String, $limit: Int = 50, $offset: Int = 0) {\n          tokens: mb_views_nft_owned_tokens(where: {owner: {_eq: $accountId}}, limit: $limit, offset: $offset) {\n            tokenId: token_id\n            contractId: nft_contract_id\n            media\n          }\n          totalOwnedTokens: mb_views_nft_owned_tokens_aggregate(where: {owner: {_eq: $accountId}}) {\n            aggregate {\n              count\n            }\n          }\n        }\n  `,\n      variables: {\n        accountId: accountId,\n        limit: state.limit,\n        offset: offset,\n      },\n    }),\n  }).then((res) => {\n    state.tokens = [...state.tokens, ...res?.body?.data?.tokens] || [];\n    state.totalTokens = res?.body?.data?.totalOwnedTokens?.aggregate?.count;\n    state.offset = offset;\n\n    State.update();\n  });\n};\n\nif (state.tokens.length === 0) {\n  fetchData(0);\n\n  return <>Loading...</>;\n}\n\nreturn (\n  <div\n    style={{\n      height: \"300px\",\n      overflow: \"auto\",\n    }}\n  >\n    <InfiniteScroll\n      className=\"d-flex flex-wrap gap-2 justify-content-center\"\n      pageStart={0}\n      initialLoad={false}\n      hasMore={state.tokens.length < state.totalTokens}\n      loadMore={() => {\n        fetchData(state.offset + state.limit);\n      }}\n      useWindow={false}\n    >\n      {state.tokens.map((nft, index) => (\n        <div\n          key={`${nft.contractId}-${nft.tokenId}-${index}`}\n          role=\"button\"\n          style={{ width: \"15%\", aspectRatio: \"1/1\" }}\n          onClick={() => {\n            onChange({\n              contractId: nft.contractId,\n              tokenId: nft.tokenId,\n            });\n          }}\n        >\n          <Widget\n            src=\"mob.near/widget/NftImage\"\n            props={{\n              nft: { tokenId: nft.tokenId, contractId: nft.contractId },\n              style: {\n                width: size,\n                height: size,\n                objectFit: \"cover\",\n                minWidth: size,\n                minHeight: size,\n                maxWidth: size,\n                maxHeight: size,\n                overflowWrap: \"break-word\",\n              },\n              thumbnail: compressImages ? \"thumbnail\" : \"\",\n              className: \"\",\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n              alt: `NFT ${nft.contractId} ${nft.tokenId}`,\n            }}\n          />\n        </div>\n      ))}\n    </InfiniteScroll>\n  </div>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/fblauer.near/widget/FB_CollectionSelector-fork", "__row_index": 0}