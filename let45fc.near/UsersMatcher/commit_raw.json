{"tx_hash": "AtRe8HkhubfGPnWCEhj6SgyVH4gcS9ymj6quRXDjQKEn", "action_id_social": "7PXjBh1esCtybtgSVPm3dT46qgz9hPCXZiVAvYbuGsvQ-1-widget", "block_id": 85750460, "block_timestamp": "2023-02-21 23:01:24.023", "signer_id": "let45fc.near", "widget_name": "UsersMatcher", "source_code": "// inspired by https://near.social/#/wendersonpires.near/widget/Chat\n\nif (typeof props.loadRoomCallback != \"function\") {\n  return (\n    <h2>\n      You have to pass the loadRoomCallback function in props. Found type:{\" \"}\n      {typeof props.loadRoomCallback}\n    </h2>\n  );\n}\n\nState.init({\n  roomId: null,\n  roomData: null,\n  errorMessage: null,\n});\n\nconst uuidv4 = () => {\n  var u = \"\",\n    i = 0;\n  while (i++ < 36) {\n    var c = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"[i - 1],\n      r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    u += c == \"-\" || c == \"4\" ? c : v.toString(16);\n  }\n  return u;\n};\n\nconst placeHolder = \"Enter room id\";\n\nconst findRoom = (created) => {\n  if (!created) {\n    created = false;\n  }\n  console.log(\"getting roomData\");\n  const roomData = Social.index(props.widgetKey, state.roomId);\n  console.log(props.widgetKey, state.roomId);\n  console.log(roomData);\n  const roomExists = roomData && roomData.length > 0;\n  if (!roomExists) {\n    State.update({ errorMessage: \"Room not found\" });\n    return;\n  }\n  const parsedRoomData = roomData[0].value;\n  State.update({\n    roomData: parsedRoomData,\n  });\n  if (props.loadRoomCallback && roomData) {\n    props.loadRoomCallback(parsedRoomData, state.roomId, created);\n  }\n};\n\nconst generateRoomId = () => {\n  return `${props.widgetKey}-room-${uuidv4()}`;\n};\n\nlet newRoomId = generateRoomId();\nif (!state.room) {\n  return (\n    <div class=\"container\">\n      <div class=\"row mt-3\">\n        <div class=\"col-12\">\n          <h3>{props.roomName}</h3>\n        </div>\n        <div class=\"col-12\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeHolder={placeHolder}\n            value={state.roomId}\n            onChange={(e) => {\n              const roomId = e.target.value;\n              State.update({ roomId });\n            }}\n          />\n        </div>\n      </div>\n      <div class=\"row mt-4\">\n        <div class=\"col-6 text-end\">\n          <button class=\"btn btn-success\" onClick={findRoom}>\n            Connect to room\n          </button>\n        </div>\n        <div class=\"col-6\">\n          <CommitButton\n            class=\"btn btn-primary\"\n            onClick={() => State.update({ roomId: newRoomId })}\n            onCommit={() => findRoom(true)}\n            data={{\n              index: {\n                [props.widgetKey]: JSON.stringify({\n                  key: newRoomId,\n                  value: {\n                    createdTimestamp: Date.now(),\n                    initial: props.initialValue || null,\n                  },\n                }),\n              },\n            }}\n          >\n            Create new room\n          </CommitButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nreturn;\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/let45fc.near/widget/UsersMatcher", "metadata.tags.widget": NaN, "metadata": NaN, "metadata.name": "Users in rooms matcher widget", "metadata.description": NaN, "metadata.tags.hackathon": NaN}