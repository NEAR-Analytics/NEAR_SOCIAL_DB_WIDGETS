{"tx_hash": "Cfd1eUA32UV5Qoms33ytt3mkgLnyXPLwVVhcQ3aKy72Z", "action_id_social": "2NRZ1TH4E9Dy8Abe6A8q88QnT7eXhF36nfaYgj884Hvy-0-widget", "block_id": 85997984, "block_timestamp": "2023-02-25 07:29:15.432", "signer_id": "let45fc.near", "widget_name": "LaserChess3D", "source_code": "if (context.accountId == null) {\n  return <h1 class=\"text-danger\">You have to sign in to play Laser Chess</h1>;\n}\n\nconst pages = {\n  menu: \"MENU\",\n  aiGame: \"AI_GAME\",\n  usersMatcher: \"USERS_MATCHER\",\n  initializingData: \"INITIALIZING_DATA\",\n  loadingGame: \"LOADING_GAME\",\n  game: \"GAME\",\n};\n\nconst indexedPages = () => {\n  const pagesValues = Object.values(pages);\n  const toReturn = {};\n  for (let i = 0; i < pagesValues.length; i++) {\n    toReturn[pagesValues[i]] = i;\n  }\n  return toReturn;\n};\n\nconst comparePages = (firstPage, secondPage) => {\n  // return if first page goes earlier than second page\n  return indexedPages()[firstPage] > indexedPages()[secondPage];\n};\n\nconst boardSetups = {\n  ace: \"l++3d++kd++b+++2/2b7/3B+6/b++1B1ss+1b+++1B+/b+++1B+1S+S1b++1B/6b+++3/7B++2/2B+DKD3L\",\n  curiosity:\n    \"l++3d++kd++s+++2/19/3B+2b++3/b++B2B+++s+2b+++B+/b+++B+2S+b+2b++B/3B2b+++3/19/2S+DKD3L\",\n  grail:\n    \"l++3bd++b+++3/5k4/b++3bd++s+3/b+++1s1B+1B+++3/3b+1b+++1S1B+/3S+DB++3B/4K5/3B+DB++3L\",\n  mercury:\n    \"l+3bkb+++2S+/5d++b+++3/b+++2s+1d++4/b++3B+3B1/1b++3b+++3B/4D1S+2B+/3B+D5/s+2B+KB++3L+++\",\n  sophie:\n    \"l++3kB+b+++3/3d++1d+3B/b++3bb+++1S+1B+/7s2/2S7/b+++1s+1B+B++3B/b++3D+++1D3/3B+b+++K3L\",\n  random: \"null\",\n};\n\nconst gameTypes = {\n  ai: \"ai\",\n  online: \"online\",\n};\n\nconst widgetKey = \"laserchess3d\";\nconst widgetName = \"Laser chess\";\n\nState.init({\n  // currentPage: pages.usersMatcher,\n  currentPage: pages.menu,\n  gameType: null,\n\n  dataInitializingCalled: false,\n\n  roomData: null,\n  roomId: props.roomId || null,\n  gameCreated: null,\n  sn: boardSetups.random,\n});\n\nif (state.roomId && comparePages(pages.initializingData, state.currentPage)) {\n  State.update({ currentPage: pages.initializingData });\n}\n\nconst iframeHtml = `\n<!doctype html>\n<html lang=\"en\">\n   <head>\n      <meta charset=\"UTF-8\">\n      <title>Laser chess</title>\n      <link rel=\"stylesheet\" href=\"https://near-social-laser-chess.github.io/laser-chess-3d/css/style.css\">\n      <script defer=\"defer\" src=\"https://near-social-laser-chess.github.io/laser-chess-3d/bundle.js\"></script>\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\n   </head>\n   <body>\n      <div class=\"rotate-buttons\">\n         <div class=\"rotate-header\">Rotate</div>\n         <div class=\"buttons\">\n            <button class=\"rotate-button\" type=\"button\" aria-label=\"rotate piece left\" disabled=\"disabled\">\n               <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"></path>\n               </svg>\n            </button>\n            <button class=\"rotate-button\" type=\"button\" aria-label=\"rotate piece right\" disabled=\"disabled\">\n               <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z\"></path>\n               </svg>\n            </button>\n         </div>\n      </div>\n      <div class=\"winner-message\" aria-label=\"winner message\">\n        <div class=\"winner-message__content\">\n            <div id=\"winner-message__header\"></div>\n            <div id=\"winner-message__info\"></div>\n                <div class=\"container\">\n                  <div class=\"row winner-message-buttons\" style=\"width: 100%;\">\n                    <div class=\"col-md-6\">\n                      <button type=\"button\" class=\"btn btn-primary\"><a href=\"https://wallet.near.org/send-money/hockeyclubmanager.near\" style=\"color: #fff;\">Support developers</a></button>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <button type=\"button\" class=\"btn btn-warning\"><a href=\"https://unchain.fund/#donate\">Support Ukraine</a></button>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"padding-top: 50px;\">\n                      <button type=\"button\" id=\"go-home-button\"><a href=\"https://near.social/#/let45fc.near/widget/LaserChess3D\" style=\"color: #fff; text-decoration: none;\">Go to main menu</a></button>\n                    </div>\n                  </div>\n                </div>\n        </div>\n    </div>\n      <script>window.addEventListener('load', (e) => EntryPoint.initGame({\n         type: ${`\"${state.gameType ? state.gameType : gameTypes.ai}\"`},\n         userColor: \"blue\",\n         opponentColor: \"red\",\n         \n         sn: ${\n           state.sn != boardSetups.random ? `\"${state.sn}\"` : boardSetups.random\n         },\n         }))\n      </script>\n   </body>\n</html>\n`;\n\nconst exit = () => {\n  console.log(\"EXIT\");\n  State.update({\n    currentPage: pages.menu,\n    roomId: null,\n    roomData: null,\n  });\n};\n\nconsole.log(\n  Object.values(boardSetups)[\n    Math.floor(Math.random() * Object.values(boardSetups).length)\n  ]\n);\n\nconst menuCallback = (isPve, sn) => {\n  State.update({\n    currentPage: isPve ? pages.aiGame : pages.usersMatcher,\n    gameType: isPve ? gameTypes.ai : gameTypes.online,\n    sn:\n      sn.toLowerCase() == \"random\"\n        ? Object.values(boardSetups)[\n            Math.floor(Math.random() * Object.values(boardSetups).length)\n          ]\n        : boardSetups[sn.toLowerCase()],\n  });\n};\n\nif (state.currentPage == pages.menu) {\n  return (\n    <Widget\n      src=\"let45fc.near/widget/MainMenu\"\n      props={{\n        callback: menuCallback,\n        connectToGameCallback: () =>\n          State.update({\n            currentPage: pages.usersMatcher,\n            gameType: gameTypes.online,\n          }),\n      }}\n    />\n  );\n}\n\nif (state.currentPage == pages.aiGame) {\n  return (\n    <>\n      <h1>Playing against AI</h1>\n      <button class=\"btn btn-danger\" onClick={exit}>\n        Exit\n      </button>\n      <iframe\n        srcDoc={iframeHtml}\n        class=\"w-100 h-100\"\n        style={{ width: \"100%\", height: \"700px\" }}\n      />\n    </>\n  );\n}\n\nconst usersMatcherCallback = (roomData, roomId, created) => {\n  State.update({\n    roomData,\n    roomId,\n    gameCreated: created,\n    currentPage: pages.initializingData,\n  });\n};\n\nif (state.currentPage == pages.usersMatcher) {\n  return (\n    <Widget\n      src=\"let45fc.near/widget/UsersMatcher\"\n      props={{\n        widgetKey: \"laserchess3d\",\n        widgetName: \"Laser chess\",\n        loadRoomCallback: usersMatcherCallback,\n        urlPrefix:\n          \"https://near.social/#/let45fc.near/widget/LaserChess3D?roomId=\",\n        initialValue: {\n          sn: state.sn,\n        },\n      }}\n    />\n  );\n}\n\nif (state.currentPage == pages.initializingData) {\n  // TODO: check if there are already two players in game\n  const keysQuery = `*/${widgetKey}/${state.roomId}/`;\n  let keysResult = Social.keys(keysQuery, \"final\", {\n    subscribe: true,\n  });\n  if (keysResult === null) {\n    return <h1>Getting game data</h1>;\n  }\n  const accountsInGame = Object.keys(keysResult);\n\n  if (accountsInGame.length == 0) {\n    exit();\n  }\n  if (\n    accountsInGame.length == 2 &&\n    !accountsInGame.find((el) => el == context.accountId)\n  ) {\n    return <h1>Already two users in game</h1>;\n  }\n\n  const ownerAccountId = state.roomId.split(\"---\")[0];\n  const queryString = `${ownerAccountId}/${widgetKey}/${state.roomId}`;\n  let roomData = state.roomData || Social.getr(queryString);\n  console.log(queryString, roomData);\n  if (!roomData) {\n    return <h1>Getting room data</h1>;\n  }\n  State.update({ roomData, gameCreated: false, sn: roomData.sn });\n\n  if (\n    accountsInGame.length == 1 &&\n    !accountsInGame.find((el) => el == context.accountId)\n  ) {\n    // Initialize data if not initialized already\n    if (!state.dataInitializingCalled) {\n      console.log(\"before\");\n      Social.set({\n        [widgetKey]: {\n          [state.roomId]: { ...roomData },\n        },\n      });\n      console.log(\"after\");\n      State.update({ dataInitializingCalled: true });\n    }\n    return <h1>Initializing your game</h1>;\n  }\n  console.log(state.currentPage);\n  State.update({ currentPage: pages.loadingGame });\n\n  return <h1>Initializing your game</h1>;\n}\n\nif (state.currentPage == pages.loadingGame) {\n  let keysResult = Social.keys(`*/laserchess3d/${state.roomId}/`, \"final\", {\n    subscribe: true,\n  });\n  if (keysResult === null) {\n    return <h1>Getting game data</h1>;\n  }\n\n  if (Object.keys(keysResult).length == 0) {\n    exit();\n  }\n\n  if (Object.keys(keysResult).length == 1) {\n    return (\n      <>\n        <h1>Waiting for your opponent</h1>\n        <h2>Your room link:</h2>\n        <pre\n          style={{ color: \"red\" }}\n        >{`https://near.social/#/let45fc.near/widget/LaserChess3D?roomId=${state.roomId}`}</pre>\n      </>\n    );\n  }\n  if (Object.keys(keysResult).length == 2) {\n    State.update({ currentPage: pages.game });\n    return <h1>{\"Loading your game...\"}</h1>;\n  }\n\n  return <h1>{\"Something went wrong. (We really don't know what exactly)\"}</h1>;\n}\nconsole.log(state.sn);\nif (state.currentPage == pages.game) {\n  return (\n    <Widget\n      src=\"let45fc.near/widget/LaserChess3DOnline\"\n      props={{\n        exitCallback: exit,\n        roomId: state.roomId,\n        roomData: state.roomData,\n        sn: state.sn,\n      }}\n    />\n  );\n}\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/let45fc.near/widget/LaserChess3D", "metadata.image.ipfs_cid": NaN, "metadata.tags.hackathon": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.game": NaN}