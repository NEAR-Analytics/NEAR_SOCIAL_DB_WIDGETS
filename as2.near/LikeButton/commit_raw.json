{"tx_hash": "ZsYJt6p2Ywp3xux2Y9aJz1xBJfpSMDqA4yXUauN61wU", "action_id_social": "FkVudq9Tffs6ZgfjuKcZSbAkVPQdQrn7n7LFNCfhVrSw-0-widget", "block_id": 82649749, "block_timestamp": "2023-01-10 18:23:56.007", "signer_id": "as2.near", "widget_name": "LikeButton", "source_code": "const item = props.item;\n\nif (!item) {\n  return \"\";\n}\n\nconst likes = Social.index(\"like\", item);\n\nconst dataLoading = likes === null;\n\nconst likesByUsers = {};\n\n(likes || []).forEach((like) => {\n  if (like.value.type === \"like\") {\n    likesByUsers[like.accountId] = like;\n  } else if (like.value.type === \"unlike\") {\n    delete likesByUsers[like.accountId];\n  }\n});\nif (state.hasLike === true) {\n  likesByUsers[context.accountId] = true;\n} else if (state.hasLike === false) {\n  delete likesByUsers[context.accountId];\n}\n\nconst numLikes = Object.keys(likesByUsers).length;\nconst hasLike = context.accountId && !!likesByUsers[context.accountId];\n\nconst LikeButton = styled.button`\n  &:hover {\n    color: red;\n    .heart {\n      background: pink;\n    }\n  }\n  .bi-heart-fill {\n    color: red;\n  }\n`;\n\nconst likeClick = () => {\n  if (state.loading) {\n    return;\n  }\n  State.update({\n    loading: true,\n  });\n  const data = {\n    index: {\n      like: JSON.stringify({\n        key: item,\n        value: {\n          type: hasLike ? \"unlike\" : \"like\",\n        },\n      }),\n    },\n  };\n\n  if (!hasLike && props.notifyAccountId) {\n    data.index.notify = JSON.stringify({\n      key: props.notifyAccountId,\n      value: {\n        type: \"like\",\n        item,\n      },\n    });\n  }\n  Social.set(data, {\n    onCommit: () => State.update({ loading: false, hasLike: !hasLike }),\n    onCancel: () => State.update({ loading: false }),\n  });\n};\n\nconst title = hasLike ? \"Unlike\" : \"Like\";\n\nconst liTooltip = styled.div`\n  width: 8em;\n  text-align: left;\n  text-overflow: ellipsis;\n  overflow: hidden; \n  white-space: nowrap;\n`;\n\nconst accountsWithLikes = Object.keys(likesByUsers) ?? [];\n\nreturn (\n  <OverlayTrigger\n    placement=\"right\"\n    overlay={\n      accountsWithLikes.length ? (\n        <Tooltip>\n          <liTooltip>Liked by:</liTooltip>\n          {accountsWithLikes.slice(0, 10).map((account_id) => (\n            <liTooltip>{account_id}</liTooltip>\n          ))}\n          {accountsWithLikes.length > 10 ? (\n            <liTooltip>... and {accountsWithLikes.length - 10} more</liTooltip>\n          ) : (\n            \"\"\n          )}\n        </Tooltip>\n      ) : (\n        <></>\n      )\n    }\n  >\n    <LikeButton\n      disabled={state.loading || dataLoading || !context.accountId}\n      className={`btn border-0`}\n      title={title}\n      onClick={likeClick}\n    >\n      {state.loading ? (\n        <span\n          className=\"spinner-grow spinner-grow-sm p-2\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      ) : dataLoading ? (\n        \"Loading\"\n      ) : hasLike ? (\n        <i className=\"heart p-2 rounded-circle bi bi-heart-fill\"></i>\n      ) : (\n        <i className=\"heart p-2 rounded-circle bi bi-heart\"></i>\n      )}\n      {numLikes > 0 ? <span className=\"text-muted\">{numLikes}</span> : \"\"}\n    </LikeButton>\n  </OverlayTrigger>\n);\n", "metadata": null, "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/as2.near/widget/LikeButton", "branch.draft.": NaN, "branch.draft.metadata": NaN}