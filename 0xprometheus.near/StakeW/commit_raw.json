{"tx_hash": "H9BXrFAjRyfb4T7VZhrRUeZ7KT2BmZFB582LG4eniEXp", "action_id_social": "GATpLxTozNZ6N6BF6TqTpyBCiECnr6wnE7n1vZhfjc1H-0-widget", "block_id": 87938341, "block_timestamp": "2023-03-23 11:10:44.479", "signer_id": "0xprometheus.near", "widget_name": "StakeW", "source_code": "// CUSTOM CSS\n\nconst cds = `\n.LidoFormTopContainer{\n    margin-top: 0px;\n    display: flex;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    position: relative;\n}\n\n.roast{\n  position: absolute;\n  margin-top: -50px;\n  top: 0%;\n  left: 49%;\n  right: -3%;\n  color: #fff;\n  padding: 10px;\n  font-size: 14px;\n  border-radius: 6px;\n  background: white;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  opacity: 0;\n  transform: translateX(calc(100% + 30px));\n  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.25, 1.35);\n}\n.roast.active{\n  opacity: 0.2;\n  transform: translateX(-35%);\n}\n.roast.error{\n  opacity: 1;\n  border-left: 8px solid red;\n  transform: translateX(-35%);\n}\n.roast.success{\n  opacity: 1;\n  border-left: 8px solid #40f467;\n  transform: translateX(-35%);\n}\n.roast-content{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.roast-check{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  color: #fff;\n  font-size: 20px;\n}\n\n.roast-check.error{\n  background-color: red;\n}\n.roast-check.success{\n  background-color: #40f467;\n}\n.message{\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n}\n.message-text{\n  font-size: 20px;\n  font-weight: 600;\n}\n.text-1{\n  color: #333;\n}\n.text-2{\n  color: #666;\n  font-weight: 400;\n  font-size: 16px;\n}\na {\n  outline: none;\n}\n\na:link {\n  color: #6900ff;\n}\na:visited {\n  color: #a5c300;\n}\na:hover {\n  text-decoration: none;\n  background: #cdfeaa;\n}\na:active {\n  background: #6900ff;\n  color: #cdfeaa;\n}\na:focus {\n  text-decoration: none;\n  background: #bae498;\n}\n\n.LidoWithdrawFormSubmitContainer{\n    color: #7a8aa0;\n    -webkit-box-flex: 1;\n    flex-grow: 1;\n}\n.LidoForm{\n    background: linear-gradient(65.21deg, rgb(0 0 0) 19.1%, rgb(70, 131, 154) 100%);\n    margin-bottom: -20px;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n    padding-bottom: 52px;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.6em;\n    border-radius: 20px;\n    margin: 0px;\n    padding: 32px;\n    box-shadow: none;\n    color: #fff;    \n}\n.LidoFormTopContainerLeftContent1Circle{\n    background-color: rgb(5 240 34);\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    margin-left: 8px;\n}\n`;\n\n// FETCH CSS\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n).body;\n\nif (!cssFont || !css) return \"\";\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n    ${cds}\n`,\n  });\n}\n\nconst getSender = () => {\n  return !props.state.sender\n    ? \"\"\n    : props.state.sender.substring(0, 6) +\n        \"...\" +\n        props.state.sender.substring(\n          props.state.sender.length - 4,\n          props.state.sender.length\n        );\n};\nconst Theme = state.theme;\nconsole.log(\"pasd\", props);\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Gains Network Staking Pool(ARBITRUM)</div>\n      <div class=\"SubHeader\">\n        Stake GNS and receive DAI rewards while staking.\n      </div>\n\n      <div class=\"LidoForm\">\n        <>\n          <div class=\"LidoFormTopContainer\">\n            <div class={`roast ${props.state.type}`}>\n              <div class=\"roast-content\">\n                <div class={`roast-check ${props.state.type}`}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    id=\"checkmark\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"white\"\n                  >\n                    <g data-name=\"Layer 2\">\n                      <g data-name=\"checkmark\">\n                        <rect width=\"24\" height=\"24\" opacity=\"0\"></rect>\n                        <path d=\"M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                </div>\n                <div class=\"message\">\n                  <span class=\"message-text text-1\">{props.state.message}</span>\n                  <span class=\"message-text text-2\">\n                    {props.state.reason}{\" \"}\n                    {props.state.link ? (\n                      <a href={`${props.state.link}`} target=\"_blank\">\n                        View Transaction\n                      </a>\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerLeft\">\n              <div class=\"LidoFormTopContainerLeftContent1\">\n                <div class=\"LidoFormTopContainerLeftContent1Container\">\n                  <span>GNS balance to stake</span>\n                  <div class=\"LidoFormTopContainerLeftContent1Circle\" />\n                </div>\n              </div>\n              <div class=\"LidoFormTopContainerLeftContent2\">\n                <span>\n                  {props.state.balance ?? (!props.state.sender ? \"0\" : \"...\")}\n                  &nbsp;GNS\n                </span>\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerRight\">\n              <div class=\"LidoFormTopContainerRightContent1\">\n                <div class=\"LidoFormTopContainerRightContent1Text\">\n                  <span>{props.state.sender ? getSender() : \"0x00...\"}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"LidoSplitter\" />\n        </>\n        <div\n          class={\n            props.state.sender\n              ? \"LidoFormBottomContainer\"\n              : \"LidoFormTopContainer\"\n          }\n        >\n          <div class=\"LidoFormTopContainerLeft\">\n            <div class=\"LidoFormTopContainerLeftContent1\">\n              <div class=\"LidoFormTopContainerLeftContent1Container\">\n                <span>Your Staked amount</span>\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerLeftContent2\">\n              <span>\n                {props.state.stakedBalance ?? (!props.state.sender ? \"0\" : \"0\")}\n                &nbsp;GNS\n              </span>\n            </div>\n            <button\n              class=\"LidoStakeFormInputContainerSpan3Content\"\n              onClick={() => props.unStakeTokens()}\n            >\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">Unstake</span>\n            </button>\n          </div>\n          <div class=\"LidoFormTopContainerRight\">\n            <div class=\"LidoAprContainer\">\n              <div class=\"LidoAprTitle\">Total Dai rewards distributed</div>\n              <div class=\"LidoAprValue\">\n                {props.state.totalRewards ?? \"0\"} Dai\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"LidoStakeForm\">\n        <div class=\"LidoStakeFormInputContainer\">\n          <span class=\"LidoStakeFormInputContainerSpan1\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path\n                opacity=\"0.6\"\n                d=\"M11.999 3.75v6.098l5.248 2.303-5.248-8.401z\"\n              ></path>\n              <path d=\"M11.999 3.75L6.75 12.151l5.249-2.303V3.75z\"></path>\n              <path\n                opacity=\"0.6\"\n                d=\"M11.999 16.103v4.143l5.251-7.135L12 16.103z\"\n              ></path>\n              <path d=\"M11.999 20.246v-4.144L6.75 13.111l5.249 7.135z\"></path>\n              <path\n                opacity=\"0.2\"\n                d=\"M11.999 15.144l5.248-2.993-5.248-2.301v5.294z\"\n              ></path>\n              <path\n                opacity=\"0.6\"\n                d=\"M6.75 12.151l5.249 2.993V9.85l-5.249 2.3z\"\n              ></path>\n            </svg>\n          </span>\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              disabled={!props.state.sender}\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={props.state.tokenAmount}\n              onChange={(e) => props.updator(e.target.value)}\n              placeholder=\"Amount\"\n            />\n          </span>\n          <span\n            class=\"LidoStakeFormInputContainerSpan3\"\n            onClick={() =>\n              props.updator(parseFloat(props.state.balance).toFixed(2))\n            }\n          >\n            <button\n              class=\"LidoStakeFormInputContainerSpan3Content\"\n              disabled={!props.state.sender}\n            >\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">MAX</span>\n            </button>\n          </span>\n        </div>\n        {!!props.state.sender ? (\n          props.state.allowance > 0 ? (\n            <button\n              class=\"LidoStakeFormSubmitContainer\"\n              onClick={() => props.stakeTokens(props.state.tokenAmount)}\n            >\n              <span>Stake</span>\n            </button>\n          ) : (\n            <button\n              class=\"LidoStakeFormSubmitContainer\"\n              onClick={() => props.approveToken()}\n            >\n              <span>Approve</span>\n            </button>\n          )\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Wallet\"\n          />\n        )}\n\n        <div class=\"LidoFooterContainer\">\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Pending Dai Rewards</div>\n            <div class=\"LidoFooterRawRight\">{props.state.rewards ?? 0} DAI</div>\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <button\n              class=\"LidoWithdrawFormSubmitContainer\"\n              onClick={() => props.withdrawReward()}\n            >\n              <span>Withdraw Rewards</span>\n            </button>\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Your APR</div>\n            <div class=\"LidoFooterRawRight\">{props.apr}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xprometheus.near/widget/StakeW", "metadata.tags.ethdenver2023": NaN}