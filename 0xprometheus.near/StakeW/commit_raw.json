{"tx_hash": "DDWUzEB3697wCdcwzSvUvPCQp582vL4KPPYZBpxtGwd7", "action_id_social": "8vmd4S7gVn4zmKnbcTQUA5Az3s6fqrxjJqX1UqJXv9Wg-0-widget", "block_id": 87353088, "block_timestamp": "2023-03-15 13:26:15.791", "signer_id": "0xprometheus.near", "widget_name": "StakeW", "source_code": "// FETCH CSS\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n).body;\n\nif (!cssFont || !css) return \"\";\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\nconsole.log(\"pasd\", props);\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Gains Network Staking Pool</div>\n      <div class=\"SubHeader\">\n        Stake GNS and receive DAI rewards while staking.\n      </div>\n\n      <div class=\"LidoForm\">\n        {props.state.sender && (\n          <>\n            <div class=\"LidoFormTopContainer\">\n              <div class=\"LidoFormTopContainerLeft\">\n                <div class=\"LidoFormTopContainerLeftContent1\">\n                  <div class=\"LidoFormTopContainerLeftContent1Container\">\n                    <span>GNS balance to stake</span>\n                    <div class=\"LidoFormTopContainerLeftContent1Circle\" />\n                  </div>\n                </div>\n                <div class=\"LidoFormTopContainerLeftContent2\">\n                  <span>\n                    {state.balance ?? (!state.sender ? \"0\" : \"...\")}&nbsp;GNS\n                  </span>\n                </div>\n              </div>\n              <div class=\"LidoFormTopContainerRight\">\n                <div class=\"LidoFormTopContainerRightContent1\">\n                  <div class=\"LidoFormTopContainerRightContent1Text\">\n                    <span>{getSender()}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"LidoSplitter\" />\n          </>\n        )}\n        <div\n          class={\n            state.sender ? \"LidoFormBottomContainer\" : \"LidoFormTopContainer\"\n          }\n        >\n          <div class=\"LidoFormTopContainerLeft\">\n            <div class=\"LidoFormTopContainerLeftContent1\">\n              <div class=\"LidoFormTopContainerLeftContent1Container\">\n                <span>Your Staked amount</span>\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerLeftContent2\">\n              <span>\n                {state.stakedBalance ?? (!state.sender ? \"0\" : \"0\")}\n                &nbsp;GNS\n              </span>\n            </div>\n            <button\n              class=\"LidoStakeFormInputContainerSpan3Content\"\n              onClick={() => unStakeTokens(state.tokenAmount)}\n            >\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">Unstake</span>\n            </button>\n          </div>\n          <div class=\"LidoFormTopContainerRight\">\n            <div class=\"LidoAprContainer\">\n              <div class=\"LidoAprTitle\">Total Dai rewards distributed</div>\n              <div class=\"LidoAprValue\">{state.totalRewards ?? \"0\"} Dai</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"LidoStakeForm\">\n        <div class=\"LidoStakeFormInputContainer\">\n          <span class=\"LidoStakeFormInputContainerSpan1\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path\n                opacity=\"0.6\"\n                d=\"M11.999 3.75v6.098l5.248 2.303-5.248-8.401z\"\n              ></path>\n              <path d=\"M11.999 3.75L6.75 12.151l5.249-2.303V3.75z\"></path>\n              <path\n                opacity=\"0.6\"\n                d=\"M11.999 16.103v4.143l5.251-7.135L12 16.103z\"\n              ></path>\n              <path d=\"M11.999 20.246v-4.144L6.75 13.111l5.249 7.135z\"></path>\n              <path\n                opacity=\"0.2\"\n                d=\"M11.999 15.144l5.248-2.993-5.248-2.301v5.294z\"\n              ></path>\n              <path\n                opacity=\"0.6\"\n                d=\"M6.75 12.151l5.249 2.993V9.85l-5.249 2.3z\"\n              ></path>\n            </svg>\n          </span>\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              disabled={!state.sender}\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={state.tokenAmount}\n              onChange={(e) => State.update({ tokenAmount: e.target.value })}\n              placeholder=\"Amount\"\n            />\n          </span>\n          <span\n            class=\"LidoStakeFormInputContainerSpan3\"\n            onClick={() => {\n              State.update({\n                tokenAmount: parseFloat(state.balance).toFixed(2),\n              });\n            }}\n          >\n            <button\n              class=\"LidoStakeFormInputContainerSpan3Content\"\n              disabled={!state.sender}\n            >\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">MAX</span>\n            </button>\n          </span>\n        </div>\n        {!!state.sender ? (\n          state.allowance > 0 ? (\n            <button\n              class=\"LidoStakeFormSubmitContainer\"\n              onClick={() => stakeTokens(state.tokenAmount)}\n            >\n              <span>Stake</span>\n            </button>\n          ) : (\n            <button\n              class=\"LidoStakeFormSubmitContainer\"\n              onClick={() => approveToken()}\n            >\n              <span>Approve</span>\n            </button>\n          )\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Wallet\"\n          />\n        )}\n\n        <div class=\"LidoFooterContainer\">\n          {state.sender && (\n            <div class=\"LidoFooterRaw\">\n              <div class=\"LidoFooterRawLeft\">Pending Dai Rewards</div>\n              <div class=\"LidoFooterRawRight\">{state.rewards ?? 0} DAI</div>\n            </div>\n          )}\n          <div class=\"LidoFooterRaw\">\n            <button\n              class=\"LidoWithdrawFormSubmitContainer\"\n              onClick={() => withdrawReward()}\n            >\n              <span>Withdraw Rewards</span>\n            </button>\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Your APR</div>\n            <div class=\"LidoFooterRawRight\">{apr}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xprometheus.near/widget/StakeW", "metadata.tags.ethdenver2023": NaN}