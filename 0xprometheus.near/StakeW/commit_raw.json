{"tx_hash": "EhHfp2ntSRAdm7FvTrQA8essWN4yAH65cnCFybNQiKCB", "action_id_social": "FdeYm1PekAYceHCptTZvLJcqyN1Gi9RUL9CwWdRbX4aG-0-widget", "block_id": 87803703, "block_timestamp": "2023-03-21 15:18:35.707", "signer_id": "0xprometheus.near", "widget_name": "StakeW", "source_code": "// CUSTOM CSS\r\n\r\nconst cds = `\r\n.LidoFormTopContainer{\r\n    margin-top: 0px;\r\n    display: flex;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    position: relative;\r\n}\r\n.toast-message {\r\n  position: absolute;\r\n  margin-top: -30px;\r\n  top: 0%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: #fff;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  opacity: 0;\r\n}\r\n.toast-message.show {\r\n  opacity: 1;\r\n}\r\n\r\n.LidoWithdrawFormSubmitContainer{\r\n    color: #7a8aa0;\r\n    -webkit-box-flex: 1;\r\n    flex-grow: 1;\r\n}\r\n.LidoForm{\r\n    background: linear-gradient(65.21deg, rgb(0 0 0) 19.1%, rgb(70, 131, 154) 100%);\r\n    margin-bottom: -20px;\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    padding-bottom: 52px;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 1.6em;\r\n    border-radius: 20px;\r\n    margin: 0px;\r\n    padding: 32px;\r\n    box-shadow: none;\r\n    color: #fff;    \r\n}\r\n.LidoFormTopContainerLeftContent1Circle{\r\n    background-color: rgb(5 240 34);\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    margin-left: 8px;\r\n}\r\n`;\r\n\r\n// FETCH CSS\r\n\r\nconst cssFont = fetch(\r\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\r\n).body;\r\nconst css = fetch(\r\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\r\n).body;\r\n\r\nif (!cssFont || !css) return \"\";\r\nif (!state.theme) {\r\n  State.update({\r\n    theme: styled.div`\r\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n    ${cssFont}\r\n    ${css}\r\n    ${cds}\r\n`,\r\n  });\r\n}\r\nconst Theme = state.theme;\r\nconsole.log(\"pasd\", props);\r\nreturn (\r\n  <Theme>\r\n    <div class=\"LidoContainer\">\r\n      <div class=\"Header\">Gains Network Staking Pool(ARBITRUM)</div>\r\n      <div class=\"SubHeader\">\r\n        Stake GNS and receive DAI rewards while staking.\r\n      </div>\r\n\r\n      <div class=\"LidoForm\">\r\n        <>\r\n          <div class=\"LidoFormTopContainer\">\r\n            {props.state.errorMessage && (\r\n              <div\r\n                class={`toast-message ${\r\n                  props.state.errorMessage ? \"show\" : \"\"\r\n                }`}\r\n              >\r\n                {props.state.errorMessage}\r\n              </div>\r\n            )}\r\n            <div class=\"LidoFormTopContainerLeft\">\r\n              <div class=\"LidoFormTopContainerLeftContent1\">\r\n                <div class=\"LidoFormTopContainerLeftContent1Container\">\r\n                  <span>GNS balance to stake</span>\r\n                  <div class=\"LidoFormTopContainerLeftContent1Circle\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"LidoFormTopContainerLeftContent2\">\r\n                <span>\r\n                  {props.state.balance ?? (!props.state.sender ? \"0\" : \"...\")}\r\n                  &nbsp;GNS\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"LidoFormTopContainerRight\">\r\n              <div class=\"LidoFormTopContainerRightContent1\">\r\n                <div class=\"LidoFormTopContainerRightContent1Text\">\r\n                  <span>\r\n                    {props.state.sender ? props.state.getSender() : \"0x00...\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"LidoSplitter\" />\r\n        </>\r\n        <div\r\n          class={\r\n            props.state.sender\r\n              ? \"LidoFormBottomContainer\"\r\n              : \"LidoFormTopContainer\"\r\n          }\r\n        >\r\n          <div class=\"LidoFormTopContainerLeft\">\r\n            <div class=\"LidoFormTopContainerLeftContent1\">\r\n              <div class=\"LidoFormTopContainerLeftContent1Container\">\r\n                <span>Your Staked amount</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"LidoFormTopContainerLeftContent2\">\r\n              <span>\r\n                {props.state.stakedBalance ?? (!props.state.sender ? \"0\" : \"0\")}\r\n                &nbsp;GNS\r\n              </span>\r\n            </div>\r\n            <button\r\n              class=\"LidoStakeFormInputContainerSpan3Content\"\r\n              onClick={() => props.unStakeTokens()}\r\n            >\r\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">Unstake</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"LidoFormTopContainerRight\">\r\n            <div class=\"LidoAprContainer\">\r\n              <div class=\"LidoAprTitle\">Total Dai rewards distributed</div>\r\n              <div class=\"LidoAprValue\">\r\n                {props.state.totalRewards ?? \"0\"} Dai\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"LidoStakeForm\">\r\n        <div class=\"LidoStakeFormInputContainer\">\r\n          <span class=\"LidoStakeFormInputContainerSpan1\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path\r\n                opacity=\"0.6\"\r\n                d=\"M11.999 3.75v6.098l5.248 2.303-5.248-8.401z\"\r\n              ></path>\r\n              <path d=\"M11.999 3.75L6.75 12.151l5.249-2.303V3.75z\"></path>\r\n              <path\r\n                opacity=\"0.6\"\r\n                d=\"M11.999 16.103v4.143l5.251-7.135L12 16.103z\"\r\n              ></path>\r\n              <path d=\"M11.999 20.246v-4.144L6.75 13.111l5.249 7.135z\"></path>\r\n              <path\r\n                opacity=\"0.2\"\r\n                d=\"M11.999 15.144l5.248-2.993-5.248-2.301v5.294z\"\r\n              ></path>\r\n              <path\r\n                opacity=\"0.6\"\r\n                d=\"M6.75 12.151l5.249 2.993V9.85l-5.249 2.3z\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n          <span class=\"LidoStakeFormInputContainerSpan2\">\r\n            <input\r\n              disabled={!props.state.sender}\r\n              class=\"LidoStakeFormInputContainerSpan2Input\"\r\n              value={props.state.tokenAmount}\r\n              onChange={(e) => props.updator(e.target.value)}\r\n              placeholder=\"Amount\"\r\n            />\r\n          </span>\r\n          <span\r\n            class=\"LidoStakeFormInputContainerSpan3\"\r\n            onClick={() =>\r\n              props.updator(parseFloat(props.state.balance).toFixed(2))\r\n            }\r\n          >\r\n            <button\r\n              class=\"LidoStakeFormInputContainerSpan3Content\"\r\n              disabled={!props.state.sender}\r\n            >\r\n              <span class=\"LidoStakeFormInputContainerSpan3Max\">MAX</span>\r\n            </button>\r\n          </span>\r\n        </div>\r\n        {!!props.state.sender ? (\r\n          props.state.allowance > 0 ? (\r\n            <button\r\n              class=\"LidoStakeFormSubmitContainer\"\r\n              onClick={() => props.stakeTokens(props.state.tokenAmount)}\r\n            >\r\n              <span>Stake</span>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              class=\"LidoStakeFormSubmitContainer\"\r\n              onClick={() => props.approveToken()}\r\n            >\r\n              <span>Approve</span>\r\n            </button>\r\n          )\r\n        ) : (\r\n          <Web3Connect\r\n            className=\"LidoStakeFormSubmitContainer\"\r\n            connectLabel=\"Connect with Wallet\"\r\n          />\r\n        )}\r\n\r\n        <div class=\"LidoFooterContainer\">\r\n          <div class=\"LidoFooterRaw\">\r\n            <div class=\"LidoFooterRawLeft\">Pending Dai Rewards</div>\r\n            <div class=\"LidoFooterRawRight\">{props.state.rewards ?? 0} DAI</div>\r\n          </div>\r\n          <div class=\"LidoFooterRaw\">\r\n            <button\r\n              class=\"LidoWithdrawFormSubmitContainer\"\r\n              onClick={() => props.withdrawReward()}\r\n            >\r\n              <span>Withdraw Rewards</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"LidoFooterRaw\">\r\n            <div class=\"LidoFooterRawLeft\">Your APR</div>\r\n            <div class=\"LidoFooterRawRight\">{props.apr}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Theme>\r\n);\r\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xprometheus.near/widget/StakeW", "metadata.tags.ethdenver2023": NaN}