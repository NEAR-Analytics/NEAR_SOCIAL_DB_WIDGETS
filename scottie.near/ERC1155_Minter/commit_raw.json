{"tx_hash": "66CeWebcDc93GnZYugaDyjGeCuviAtFPoUBGAs2KAAUq", "action_id_social": "EUjC3YiePVUNaC4c3NrXrtCVnZoFoyVGcYZVb1AVXvDK-0-widget", "block_id": 87452649, "block_timestamp": "2023-03-16 22:35:56.747", "signer_id": "scottie.near", "widget_name": "ERC1155_Minter", "source_code": "const provider = Ethers.provider();\nconst sender = Ethers.listAccounts()[0];\n\n// if (!sender) {\n//   return <Web3Connect />;\n// }\n// return sender;\n\nconst contractAddress = \"0xA024b318069c932263940def479A915f96E4e882\";\n\n// Fetch contract abi\nconst contractAbi = fetch(\n  \"https://raw.githubusercontent.com/Scott-Canning/abis/main/abi.json\"\n);\nif (!contractAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(contractAbi.body);\n\nconst getUri = (tokenId) => {\n  const encodedData = iface.encodeFunctionData(\"uri\", [tokenId]);\n\n  return Ethers.provider()\n    .call({\n      to: contractAddress,\n      data: encodedData,\n    })\n    .then((cid) => {\n      const res = iface.decodeFunctionResult(\"uri\", cid);\n      State.update({ cid: res.toString() });\n    });\n};\n\nconst getOwner = () => {\n  const encodedData = iface.encodeFunctionData(\"owner\", []);\n\n  return Ethers.provider()\n    .call({\n      to: contractAddress,\n      data: encodedData,\n    })\n    .then((address) => {\n      const res = iface.decodeFunctionResult(\"owner\", address);\n      State.update({ owner: res });\n    });\n};\n\nreturn (\n  <div>\n    <button onClick={() => getOwner()}>Get Owner</button>\n    <div>{state.owner ?? \"...\"}</div>\n  </div>\n);\n", "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/scottie.near/widget/ERC1155_Minter", "metadata.tags.ethdenver2023": ""}