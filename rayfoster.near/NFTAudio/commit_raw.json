{"tx_hash": "8QWechTRWuMbzNyW5wCK5rMiz4uqi7nutwUBJc4sG2CY", "action_id_social": "HzxbRwajCq9E41pUN9DDJg1UTbXsLCg2uwc62rvCdrmm-0-widget", "block_id": 85158959, "block_timestamp": "2023-02-13 18:35:55.246", "signer_id": "rayfoster.near", "widget_name": "NFTAudio", "source_code": "const nftSelectArea = styled.div`\n  text-align:center;\n  margin-bottom:20px;\n`;\n\nconst nftSelect = styled.select`\nwidth: 300px;\n    background-color: #62949b;\n    color: white;\n    text-shadow: 0 0 4px white;\n    text-align: center;\n`;\n\nconst playerArea = styled.div`\n  width:500px;\n  height:500px;\n  background-color:rgba(240,240,240,0.5);\n  border-radius:30px;\n  padding:30px;\n  backdrop-filter: blur(50px);\n`;\n\nconst broadcaster = styled.h2`\n  color:#555;\n  text-align:center;\n`;\nconst song = styled.h3`\n  color:#666;\n  text-align:center;\n`;\nconst description = styled.p`\n  display:block;\n  font-size:11px;\n  border-radius:10px;\n  padding:10px;\n  background-color:rgb(219, 219, 219,0.2);;\n`;\nconst uiButtons = styled.button`\n  background-color:  rgba(255,255,255,0.2);\n  border-radius:20px;\n  width:50px;\n  height:50px;\n  border-width:0px;\n  filter: drop-shadow(0px 1px 2px #555);\n  margin-left:10px;\n  margin-right:10px;\n  &:hover {\n    background-color: white;\n    }\n`;\n\nconst uiButtonArea = styled.div`\n  margin:auto;\n  text-align:center;\n`;\nconst rotate = styled.keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }`;\nconst bgThumb = styled.img`\n    position: absolute;\n    top: 160px;\n    width: 350px;\n    max-height: 350px;\n    left:85px;\n    z-index: -1;\n    animation: ${rotate} 10s linear infinite;\n`;\nconst fgThumb = styled.img`\n  width: 200px;\n    margin-left: 120px;\n    margin-top: 10px;\n    filter: drop-shadow(2px 4px 6px black);\n    border-radius:15px;\n`;\nconst playThis = styled.button`\n  padding:20px;\n`;\n\nconst accountId = context.accountId;\nconst nftList = fetch(\"https://graph.mintbase.xyz\", {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"omni-site\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n        query MyQuery ($accountId: String){\n            mb_views_nft_owned_tokens(limit: 100, where: {listing_kind: {_is_null: true}, owner: {_eq: $accountId}}) {\n                token_id\n                nft_contract_id\n                metadata_id\n                title\n                minter                \n            }\n        }\n`,\n    variables: {\n      accountId: accountId,\n    },\n  }),\n}).body.data.mb_views_nft_owned_tokens;\nlet thisIndex = state.index ?? 0;\nlet thisToken = nftList[thisIndex];\n\nconst tokenId = thisToken.token_id;\nconst contractId = thisToken.nft_contract_id;\n\nlet rootVals = thisToken.token_id.split(\"-\");\nlet rootValPop = rootVals.pop();\nconst rootId = rootVals.join(\"-\");\n\nconst nftMetadata = Near.view(contractId, \"nft_metadata\");\nconst tokenMetadata = Near.view(contractId, \"nft_token\", {\n  token_id: tokenId,\n}).metadata;\nlet extra = JSON.parse(tokenMetadata.extra);\nlet audioExist = !!extra.music_cid;\n\nlet audioUri = `https://daorecords.io:8443/fetch?cid=${extra.music_cid}`;\nlet newAudio = new Audio(audioUri);\nlet artUrl = `https://daorecords.io:8443/get/thumbnail?root_id=${rootId}&contract=${contractId}`;\nlet artRes = fetch(artUrl).body.thumbnail;\nlet artData = `data:image/webp;base64,${artRes}`;\n\n//Get's current time\n//newAudio.currentTime\n\nfunction playAudio() {\n  newAudio.play();\n}\n\nfunction pauseAudio() {\n  newAudio.pause();\n}\n\nfunction stopAudio() {\n  newAudio.load();\n}\n\nfunction selectedValue(v) {\n  let index = parseInt(v.target.value);\n  index = index === 0 ? 0 : index - 1;\n  State.update({ index });\n}\n\nreturn (\n  <div>\n    <nftSelectArea>\n      <h5>Select Audio NFT</h5>\n      <nftSelect name=\"token\" onChange={selectedValue}>\n        <option value=\"0\">Tokens</option>\n        {nftList.map((x, i) => (\n          <option value={i + 1}>{`${x.title} (${x.nft_contract_id})`}</option>\n        ))}\n      </nftSelect>\n    </nftSelectArea>\n    {(!state.index && state.index !== 0) || !audioExist ? (\n      <p>Select a compatible NFT</p>\n    ) : (\n      <div>\n        <bgThumb src={artData} />\n\n        <playerArea>\n          <broadcaster>{nftMetadata.symbol}</broadcaster>\n\n          <song>{tokenMetadata.title}</song>\n          <description> {tokenMetadata.description}</description>\n\n          <uiButtonArea>\n            <uiButtons\n              style={ui.btnPlay ? { \"background-color\": \"#fff\" } : {}}\n              onClick={playAudio}\n            >\n              <svg width=\"24\" height=\"24\">\n                <path d=\"M23 12l-22 12v-24l22 12zm-21 10.315l18.912-10.315-18.912-10.315v20.63z\" />\n              </svg>\n            </uiButtons>\n\n            <uiButtons\n              style={ui.btnPause ? { \"background-color\": \"#fff\" } : {}}\n              onClick={pauseAudio}\n            >\n              <svg width=\"24\" height=\"24\">\n                <path d=\"M10 24h-6v-24h6v24zm10 0h-6v-24h6v24zm-11-23h-4v22h4v-22zm10 0h-4v22h4v-22z\" />\n              </svg>\n            </uiButtons>\n\n            <uiButtons\n              style={ui.btnStop ? { \"background-color\": \"#fff\" } : {}}\n              onClick={stopAudio}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\">\n                <path d=\"M2 2h20v20h-20z\" />\n              </svg>\n            </uiButtons>\n          </uiButtonArea>\n          <fgThumb src={artData} />\n        </playerArea>\n      </div>\n    )}\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rayfoster.near/widget/NFTAudio", "metadata.name": NaN}