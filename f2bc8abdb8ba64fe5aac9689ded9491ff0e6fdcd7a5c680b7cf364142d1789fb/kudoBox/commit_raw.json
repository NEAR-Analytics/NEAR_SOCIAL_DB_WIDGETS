{"tx_hash": "RprGwLUAnwcCu3ezvQdiX7gecbWreo7qcG7iHyQqEnQ", "action_id_social": "DMwCWv7nT8YKWUuLM2YBdpBYbcJRfBuuzdHQYG7tsmts-0-widget", "block_id": 91050489, "block_timestamp": "2023-05-04 03:37:34.251", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "kudoBox", "source_code": "const d = props.d;\nconst index = props.index;\n\nconst commentBlockHeight = props.commentBlockHeight ?? undefined;\n\nconst tabs = props.tabs;\nconst oppenedTab = props.oppenedTab;\n\nconst thisWidgetInlineStyles = props.allWidgetsInlineStyles.kudos;\nconst thisWidgetClassNames = props.allWidgetsClassNames.kudos;\n\nconst updateGeneralState = props.updateGeneralState ?? undefined;\nconst upvotes = props.upvotes;\n\nState.init({\n  hoveringElement: \"\",\n  onlyShowSharedComment: commentBlockHeight ? true : false,\n  showComments: commentBlockHeight ? true : false,\n});\n\nconst widgetOwner = props.widgetOwner;\n\nfunction getAnswersContainerStyles() {\n  let styles = thisWidgetInlineStyles.allCommentAnswerBox.cardsContainer;\n\n  styles[\"zIndex\"] = `${999999999 - index}`;\n  return styles;\n}\n\nlet standardcardContainer =\n  thisWidgetInlineStyles.allCommentAnswerBox.cardContainer;\nlet highlightedCardContainer = standardcardContainer;\n\nhighlightedCardContainer[\n  \"boxShadow\"\n] = `0px 0px 49px 1px rgba(45,255,51,0.47) inset`;\n\nfunction getAnswerContainerStyle(c) {\n  let styles;\n\n  if (commentBlockHeight && c.blockHeight == commentBlockHeight) {\n    console.log(true);\n    styles = highlightedCardContainer;\n  } else {\n    console.log(false);\n    styles = standardcardContainer;\n  }\n\n  return styles;\n}\n\nconst RenderCommentAnswerBox = (d) => {\n  return (\n    <>\n      {state.showComments && (\n        <div\n          style={getAnswersContainerStyles()}\n          key={`comment-answer-box-${state.onlyShowSharedComment}-${state.showComments}`}\n        >\n          {d.value.comments.map((c) => {\n            if (\n              !state.onlyShowSharedComment ||\n              (state.onlyShowSharedComment &&\n                c.blockHeight == commentBlockHeight)\n            ) {\n              return (\n                <>\n                  <div\n                    style={getAnswerContainerStyle(c)}\n                    key={`${c.blockHeight}-${state.onlyShowSharedComment}-${state.showComments}`}\n                    className={\n                      oppenedTab == tabs.KUDO.id\n                        ? thisWidgetClassNames.allCommentAnswerBox\n                            .cardContainerSingleCard\n                        : thisWidgetClassNames.allCommentAnswerBox.cardContainer\n                    }\n                  >\n                    <div\n                      className={\n                        thisWidgetClassNames.allCommentAnswerBox\n                          .userAnswerHeader\n                      }\n                    >\n                      <Widget\n                        src=\"mob.near/widget/ProfileImage\"\n                        props={{\n                          accountId: c.accountId,\n                          className: \"d-inline-block\",\n                          style:\n                            thisWidgetInlineStyles.allCommentAnswerBox\n                              .profileImageStyles,\n                        }}\n                      />\n                      <a\n                        style={\n                          thisWidgetInlineStyles.allCommentAnswerBox\n                            .commentUserNick\n                        }\n                        href={`#/mob.near/widget/ProfilePage?accountId=${c.accountId}`}\n                      >\n                        {c.accountId}\n                      </a>\n                      <div\n                        style={\n                          props.allWidgetsInlineStyles.mainPage_post\n                            .followButtonContainer\n                        }\n                      >\n                        <Widget\n                          src={`${widgetOwner}/widget/FollowButton`}\n                          props={{ accountId: c.accountId }}\n                        />\n                      </div>\n                    </div>\n                    <b\n                      style={thisWidgetInlineStyles.allCommentAnswerBox.comment}\n                    >\n                      {c.value.commentAnswer}&nbsp;&nbsp;&nbsp;\n                    </b>\n                  </div>\n                </>\n              );\n            }\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nfunction getKudoBoxContainerStyles() {\n  let styles = thisWidgetInlineStyles.renderKudoBox.cardContainer;\n\n  styles[\"zIndex\"] = `${999999999 - index}`;\n  return styles;\n}\n\nfunction updateStateFunction(objetc) {\n  State.update(objetc);\n}\n\nreturn (\n  <>\n    <div\n      style={getKudoBoxContainerStyles()}\n      className={\n        oppenedTab == tabs.ALL_kUDOS.id\n          ? thisWidgetClassNames.renderKudoBox.cardContainer\n          : thisWidgetClassNames.renderKudoBox.cardContainerSingleCard\n      }\n    >\n      <Widget\n        src={`${widgetOwner}/widget/MainPage.Post`}\n        props={{\n          widgetOwner,\n          content: d,\n          upvotes,\n          updateGeneralState,\n          allWidgetsInlineStyles: props.allWidgetsInlineStyles,\n          allWidgetsClassNames: props.allWidgetsClassNames,\n        }}\n      />\n      <div\n        style={thisWidgetInlineStyles.renderKudoBox.displayHandlersContainer}\n        className={thisWidgetClassNames.renderKudoBox.displayHandlersContainer}\n      >\n        {commentBlockHeight ? (\n          <div\n            style={thisWidgetInlineStyles.renderKudoBox.switchButtonContainer}\n          >\n            <span>Show all comments</span>\n            <input\n              style={\n                state.onlyShowSharedComment\n                  ? thisWidgetInlineStyles.renderKudoBox.switchButtonInactive\n                  : thisWidgetInlineStyles.renderKudoBox.switchButtonActive\n              }\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              checked={!state.onlyShowSharedComment}\n              key={\n                \"switch-button-\" +\n                `${!state.onlyShowSharedComment ? \"false\" : \"true\"}`\n              }\n              onChange={() => {\n                State.update({\n                  onlyShowSharedComment: !state.onlyShowSharedComment,\n                  showComments: true,\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ width: \"33%\" }}>{/*Decorative div do not delete*/}</div>\n        )}\n        <div\n          style={thisWidgetInlineStyles.renderKudoBox.commentButtonBigContainer}\n        >\n          {!state.onlyShowSharedComment ? (\n            <Widget\n              src={`${widgetOwner}/widget/showCommentsButton`}\n              props={{\n                thisWidgetInlineStyles,\n                thisWidgetClassNames,\n                fatherStateUpdate: updateStateFunction,\n                showComments: state.showComments,\n                d,\n              }}\n            />\n          ) : (\n            <div>{/*Decorative div do not delete*/}</div>\n          )}\n        </div>\n\n        <div style={{ width: \"33%\", minHeight: \"57px\" }}>\n          {/*Decorative div do not delete*/}\n        </div>\n      </div>\n\n      {RenderCommentAnswerBox(d)}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/kudoBox"}