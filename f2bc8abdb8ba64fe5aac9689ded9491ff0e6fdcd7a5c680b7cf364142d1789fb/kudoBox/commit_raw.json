{"tx_hash": "HhHyosPb2uqbvMZwpBsXPZXhajuEqs3hqTjzBKfgzToj", "action_id_social": "Hq7xXtAvqvJPPh3agpPnFzou4924aEvHRbPxf7kHXLSh-0-widget", "block_id": 91049350, "block_timestamp": "2023-05-04 03:16:14.511", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "kudoBox", "source_code": "const d = props.d;\r\nconst index = props.index;\r\n\r\nconst commentBlockHeight = props.commentBlockHeight ?? undefined;\r\n\r\nconst tabs = props.tabs;\r\nconst oppenedTab = props.oppenedTab;\r\n\r\nconst thisWidgetInlineStyles = props.allWidgetsInlineStyles.kudos;\r\nconst thisWidgetClassNames = props.allWidgetsClassNames.kudos;\r\n\r\nconst updateGeneralState = props.updateGeneralState ?? undefined;\r\nconst upvotes = props.upvotes;\r\n\r\nState.init({\r\n  hoveringElement: \"\",\r\n  onlyShowSharedComment: commentBlockHeight ? true : false,\r\n  showComments: commentBlockHeight ? true : false,\r\n});\r\n\r\nconst widgetOwner = props.widgetOwner;\r\n\r\nfunction getAnswersContainerStyles() {\r\n  let styles = thisWidgetInlineStyles.allCommentAnswerBox.cardsContainer;\r\n\r\n  styles[\"zIndex\"] = `${999999999 - index}`;\r\n  return styles;\r\n}\r\n\r\nfunction getAnswerContainerStyle(c) {\r\n  let styles = thisWidgetInlineStyles.allCommentAnswerBox.cardContainer;\r\n\r\n  if (commentBlockHeight && c.blockHeight == commentBlockHeight) {\r\n    styles[\"boxShadow\"] = `0px 0px 49px 1px rgba(45,255,51,0.47) inset`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nconst RenderCommentAnswerBox = (d) => {\r\n  return (\r\n    <>\r\n      {state.showComments && (\r\n        <div style={getAnswersContainerStyles()}>\r\n          {d.value.comments.map((c) => {\r\n            if (\r\n              !state.onlyShowSharedComment ||\r\n              (state.onlyShowSharedComment &&\r\n                c.blockHeight == commentBlockHeight)\r\n            ) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    style={getAnswerContainerStyle(c)}\r\n                    className={\r\n                      oppenedTab == tabs.KUDO.id\r\n                        ? thisWidgetClassNames.allCommentAnswerBox\r\n                            .cardContainerSingleCard\r\n                        : thisWidgetClassNames.allCommentAnswerBox.cardContainer\r\n                    }\r\n                  >\r\n                    <div\r\n                      className={\r\n                        thisWidgetClassNames.allCommentAnswerBox\r\n                          .userAnswerHeader\r\n                      }\r\n                    >\r\n                      <Widget\r\n                        src=\"mob.near/widget/ProfileImage\"\r\n                        props={{\r\n                          accountId: c.accountId,\r\n                          className: \"d-inline-block\",\r\n                          style:\r\n                            thisWidgetInlineStyles.allCommentAnswerBox\r\n                              .profileImageStyles,\r\n                        }}\r\n                      />\r\n                      <a\r\n                        style={\r\n                          thisWidgetInlineStyles.allCommentAnswerBox\r\n                            .commentUserNick\r\n                        }\r\n                        href={`#/mob.near/widget/ProfilePage?accountId=${c.accountId}`}\r\n                      >\r\n                        {c.accountId}\r\n                      </a>\r\n                      <div\r\n                        style={\r\n                          props.allWidgetsInlineStyles.mainPage_post\r\n                            .followButtonContainer\r\n                        }\r\n                      >\r\n                        <Widget\r\n                          src={`${widgetOwner}/widget/FollowButton`}\r\n                          props={{ accountId: c.accountId }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <b\r\n                      style={thisWidgetInlineStyles.allCommentAnswerBox.comment}\r\n                    >\r\n                      {c.value.commentAnswer}&nbsp;&nbsp;&nbsp;\r\n                    </b>\r\n                  </div>\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction getKudoBoxContainerStyles() {\r\n  let styles = thisWidgetInlineStyles.renderKudoBox.cardContainer;\r\n\r\n  styles[\"zIndex\"] = `${999999999 - index}`;\r\n  return styles;\r\n}\r\n\r\nfunction updateStateFunction(objetc) {\r\n  State.update(objetc);\r\n}\r\n\r\nreturn (\r\n  <>\r\n    <div\r\n      style={getKudoBoxContainerStyles()}\r\n      className={\r\n        oppenedTab == tabs.ALL_kUDOS.id\r\n          ? thisWidgetClassNames.renderKudoBox.cardContainer\r\n          : thisWidgetClassNames.renderKudoBox.cardContainerSingleCard\r\n      }\r\n    >\r\n      <Widget\r\n        src={`${widgetOwner}/widget/MainPage.Post`}\r\n        props={{\r\n          widgetOwner,\r\n          content: d,\r\n          upvotes,\r\n          updateGeneralState,\r\n          allWidgetsInlineStyles: props.allWidgetsInlineStyles,\r\n          allWidgetsClassNames: props.allWidgetsClassNames,\r\n        }}\r\n      />\r\n      <div\r\n        style={thisWidgetInlineStyles.renderKudoBox.displayHandlersContainer}\r\n        className={thisWidgetClassNames.renderKudoBox.displayHandlersContainer}\r\n      >\r\n        {commentBlockHeight ? (\r\n          <div\r\n            style={thisWidgetInlineStyles.renderKudoBox.switchButtonContainer}\r\n          >\r\n            <span>Show all comments</span>\r\n            <input\r\n              style={\r\n                state.onlyShowSharedComment\r\n                  ? thisWidgetInlineStyles.renderKudoBox.switchButtonInactive\r\n                  : thisWidgetInlineStyles.renderKudoBox.switchButtonActive\r\n              }\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              checked={!state.onlyShowSharedComment}\r\n              key={\r\n                \"switch-button-\" +\r\n                `${!state.onlyShowSharedComment ? \"false\" : \"true\"}`\r\n              }\r\n              onChange={() => {\r\n                State.update({\r\n                  onlyShowSharedComment: !state.onlyShowSharedComment,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div style={{ width: \"33%\" }}>{/*Decorative div do not delete*/}</div>\r\n        )}\r\n\r\n        {state.onlyShowSharedComment ? (\r\n          <Widget\r\n            src={`${widgetOwner}/widget/showCommentsButton`}\r\n            props={{\r\n              thisWidgetInlineStyles,\r\n              thisWidgetClassNames,\r\n              fatherStateUpdate: updateStateFunction,\r\n              showComments: state.showComments,\r\n              d,\r\n            }}\r\n          />\r\n        ) : (\r\n          <div style={{ width: \"33%\" }}>{/*Decorative div do not delete*/}</div>\r\n        )}\r\n\r\n        <div style={{ width: \"33%\", minHeight: \"57px\" }}>\r\n          {/*Decorative div do not delete*/}\r\n        </div>\r\n      </div>\r\n\r\n      {RenderCommentAnswerBox(d)}\r\n    </div>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/kudoBox"}