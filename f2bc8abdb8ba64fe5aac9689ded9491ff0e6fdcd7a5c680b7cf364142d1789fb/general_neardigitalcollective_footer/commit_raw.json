{"tx_hash": null, "action_id_social": "5CMPmWYrvt7dikvn1QrkZJoELDRnWrfQeteHs4iNvRH9-0-widget", "block_id": 93770384, "block_timestamp": "2023-06-08T23:19:24.424Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "general_neardigitalcollective_footer", "source_code": "//--------------------------------------Start get props-----------------------------------------------------------------\r\nconst cardData = props.cardData ?? {\r\n  accountId: \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\r\n  blockHeight: 83806538,\r\n  value: {\r\n    isDraft: false,\r\n    title: \"Last test?\",\r\n    description: \"Is this the last test?\",\r\n    tgLink: \"\",\r\n    startTimestamp: 1674701520000,\r\n    endTimestamp: 1674787920000,\r\n    questions: [\r\n      {\r\n        question: \"What do you think?\",\r\n        questionType: \"0\",\r\n        choicesOptions: [\"Yes\", \"No\"],\r\n      },\r\n      {\r\n        question: \"Why?\",\r\n        questionType: \"1\",\r\n        choicesOptions: [\r\n          \"Because it can't be other way\",\r\n          \"Because i'm sure\",\r\n          \"Why not?\",\r\n        ],\r\n      },\r\n      {\r\n        question: \"Multiselect?\",\r\n        questionType: \"2\",\r\n        choicesOptions: [\"1\", \"2\", \"3\"],\r\n      },\r\n      {\r\n        question: \"Give me a feedback\",\r\n        questionType: \"3\",\r\n        choicesOptions: [],\r\n      },\r\n    ],\r\n    timestamp: 1674701636048,\r\n  },\r\n};\r\n\r\nconst footerFormat = props.footerFormat ?? {\r\n  comment: {\r\n    status: true,\r\n    key: \"kudo\",\r\n    path: \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/Kudos\",\r\n    pushDataModel:\r\n      '{\"kudo\":\"{\\\\\"key\\\\\":\\\\\"commentAnswers\\\\\",\\\\\"value\\\\\":{\\\\\"commentAnswer\\\\\":\\\\\"\\\\\",\\\\\"blockHeight\\\\\":0}}\"}',\r\n  },\r\n  repost: {\r\n    status: true,\r\n  },\r\n  upVoteButton: {\r\n    status: true,\r\n    pushDataModel:\r\n      '{\"kudo\":\"{\\\\\"key\\\\\":\\\\\"upvote\\\\\",\\\\\"value\\\\\":{\\\\\"blockHeight\\\\\":0}}\"}',\r\n  },\r\n  shareWidget: {\r\n    status: true,\r\n    popUpDescription: \"Use this link to share the kudo\",\r\n    shareingWidget: \"Kudos.Styles\",\r\n    propName: \"sharedBlockHeight\",\r\n  },\r\n};\r\n\r\n//---------------------------------------End get props------------------------------------------------------------------\r\n\r\n//--------------------------------------Start consts-----------------------------------------------------------------\r\nconst widgetOwner =\r\n  props.widgetOwner ??\r\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\r\n\r\nlet item = {\r\n  type: \"social\",\r\n  path: `${cardData.accountId}/post/main`,\r\n  blockHeight: cardData.blockHeight,\r\n};\r\n\r\nconst reposts = Social.index(\"repost\", item);\r\n\r\nconst repostsByUsers = Object.fromEntries(\r\n  (reposts || [])\r\n    .filter((repost) => repost.value.type === \"repost\")\r\n    .map((repost) => [repost.accountId, repost])\r\n);\r\n\r\nif (state.hasRepost === true) {\r\n  repostsByUsers[context.accountId] = {\r\n    accountId: context.accountId,\r\n  };\r\n}\r\n\r\nconst hasRepost = context.accountId && !!repostsByUsers[context.accountId];\r\n\r\n//---------------------------------------End consts------------------------------------------------------------------\r\n\r\n//--------------------------------------Start styles-----------------------------------------------------------------\r\nconst repostSvg = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"32\"\r\n    height=\"32\"\r\n    fill=\"currentColor\"\r\n    viewBox=\"0 0 24 24\"\r\n    style={{\r\n      marginTop: \"-0.2em\",\r\n    }}\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\r\n      transform=\"rotate(180, 12, 12), translate(0, 4)\"\r\n    />\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\r\n      transform=\"translate(0, 4)\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst hoveringButtonStyles = {\r\n  border: \"2px solid black\",\r\n  color: \"black\",\r\n  backgroundColor: \"white\",\r\n  fontWeight: \"500\",\r\n  fontSize: font_big,\r\n  padding: \"0.3rem 0.5rem\",\r\n  borderRadius: \"12px\",\r\n  textDecoration: \"none\",\r\n  margin: \"0 1rem\",\r\n};\r\n\r\nconst standardButtonSyles = {\r\n  border: \"2px solid transparent\",\r\n  fontWeight: \"500\",\r\n  fontSize: font_big,\r\n  padding: \"0.3rem 0.5rem\",\r\n  backgroundColor: \"#010A2D\",\r\n  borderRadius: \"12px\",\r\n  color: \"white\",\r\n  textDecoration: \"none\",\r\n  margin: \"0 1rem\",\r\n};\r\n\r\nconst standardButtonStylesWithoutMargin = {\r\n  border: \"2px solid transparent\",\r\n  fontWeight: \"500\",\r\n  fontSize: font_big,\r\n  padding: \"0.3rem 0.5rem\",\r\n  backgroundColor: \"#010A2D\",\r\n  borderRadius: \"12px\",\r\n  color: \"white\",\r\n  textDecoration: \"none\",\r\n};\r\n\r\nconst hoveringButtonStylesWithoutMargin = {\r\n  border: \"2px solid black\",\r\n  color: \"black\",\r\n  backgroundColor: \"white\",\r\n  fontWeight: \"500\",\r\n  fontSize: font_big,\r\n  padding: \"0.3rem 0.5rem\",\r\n  borderRadius: \"12px\",\r\n  textDecoration: \"none\",\r\n};\r\n\r\nconst repostButton = {\r\n  border: \"0\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  borderRadius: \"50%\",\r\n  width: \"2.5em\",\r\n  height: \"2.5em\",\r\n  fill: \"currentColor\",\r\n};\r\n\r\nconst repostButtonHovering = {\r\n  border: \"0\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  borderRadius: \"50%\",\r\n  width: \"2.5em\",\r\n  height: \"2.5em\",\r\n  fill: \"currentColor\",\r\n  color: \"rgb(0, 184, 124)\",\r\n  background: \"rgb(0, 184, 124, 0.1)\",\r\n};\r\n\r\nconst textAreaStyle = {\r\n  backgroundColor: \"rgb(230, 230, 230)\",\r\n  border: \"1px solid #ced4da\",\r\n  borderRadius: \"0.375rem\",\r\n  width: \"100%\",\r\n  verticalAlign: \"middle\",\r\n  marginBottom: \"0.5rem\",\r\n};\r\n//---------------------------------------End styles------------------------------------------------------------------\r\n\r\n//--------------------------------------Start functions-----------------------------------------------------------------\r\nState.init({ hoveringElement: \"\", displayCommentBox: false });\r\n\r\nfunction startCommentTo() {\r\n  State.update({ displayCommentBox: !state.displayCommentBox });\r\n}\r\n\r\nfunction getRepostCommentCallData() {\r\n  return {\r\n    key: footerFormat.comment.key,\r\n    value: {\r\n      type: \"repost\",\r\n      item: {\r\n        type: \"social\",\r\n        path: footerFormat.comment.path,\r\n        blockHeight: cardData.blockHeight,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nfunction getVoteUpButtonCommentCallData() {\r\n  let pushDataModel = JSON.parse(footerFormat.upVoteButton.pushDataModel);\r\n  let pushDataPrimaryKey = Object.keys(pushDataModel)[0];\r\n  let oldPushData = JSON.parse(pushDataModel[pushDataPrimaryKey]);\r\n\r\n  let newPushData = oldPushData;\r\n  newPushData.value.blockHeight = cardData.blockHeight;\r\n\r\n  let finalPushData = { index: {} };\r\n  finalPushData.index[pushDataPrimaryKey] = JSON.stringify(\r\n    newPushData,\r\n    undefined,\r\n    0\r\n  );\r\n\r\n  return finalPushData;\r\n}\r\n\r\nfunction getCommitCommentData() {\r\n  let pushDataModel = JSON.parse(footerFormat.upVoteButton.pushDataModel);\r\n  let pushDataPrimaryKey = Object.keys(pushDataModel)[0];\r\n  let oldPushData = JSON.parse(pushDataModel[pushDataPrimaryKey]);\r\n\r\n  let newPushData = oldPushData;\r\n  newPushData.value.commentAnswer = state.answer ?? \"caca\";\r\n  newPushData.value.blockHeight = cardData.blockHeight;\r\n\r\n  let finalPushData = { index: {} };\r\n  finalPushData.index[pushDataPrimaryKey] = JSON.stringify(\r\n    newPushData,\r\n    undefined,\r\n    0\r\n  );\r\n  console.log(finalPushData);\r\n\r\n  return finalPushData;\r\n}\r\n\r\n//---------------------------------------End functions------------------------------------------------------------------\r\n\r\n//--------------------------------------Start components-----------------------------------------------------------------\r\nconst RenderCommentInput = (blockHeight) => {\r\n  return state.displayCommentBox ? (\r\n    <div\r\n      style={{\r\n        margin: \"10px 0px\",\r\n      }}\r\n      className=\"w-100 d-flex align-items-end flex-column\"\r\n    >\r\n      <textarea\r\n        style={textAreaStyle}\r\n        rows=\"2\"\r\n        value={state.commentTextMap[blockHeight]}\r\n        onChange={(e) => {\r\n          State.update({ answer: e.target.value });\r\n        }}\r\n      />\r\n      <CommitButton\r\n        style={\r\n          state.hoveringElement == \"commitCommentButton\"\r\n            ? hoveringButtonStyles\r\n            : standardButtonSyles\r\n        }\r\n        data={getCommitCommentData()}\r\n        onCommit={() => {\r\n          let ctm = state.commentTextMap;\r\n          ctm[blockHeight] = \"\";\r\n          State.update({\r\n            commentTextMap: ctm,\r\n            reloadData: true,\r\n          });\r\n        }}\r\n        onMouseEnter={() => {\r\n          State.update({ hoveringElement: \"commitCommentButton\" });\r\n        }}\r\n        onMouseLeave={() => {\r\n          State.update({ hoveringElement: \"\" });\r\n        }}\r\n      >\r\n        Comment\r\n      </CommitButton>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n//---------------------------------------End components------------------------------------------------------------------\r\n\r\nreturn (\r\n  <>\r\n    <div className=\"w-100 d-flex align-items-center justify-content-between\">\r\n      {footerFormat.comment.status && (\r\n        <Widget\r\n          src=\"mob.near/widget/CommentButton\"\r\n          props={{\r\n            onClick: startCommentTo,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {footerFormat.repost.status && (\r\n        <CommitButton\r\n          style={\r\n            state.hoveringElement == \"repostButton\"\r\n              ? repostButtonHovering\r\n              : repostButton\r\n          }\r\n          title=\"Repost\"\r\n          className=\"btn me-1\"\r\n          onMouseEnter={() => {\r\n            State.update({ hoveringElement: \"repostButton\" });\r\n          }}\r\n          onMouseLeave={() => {\r\n            State.update({ hoveringElement: \"\" });\r\n          }}\r\n          data={{\r\n            index: {\r\n              repost: JSON.stringify(getRepostCommentCallData(), undefined, 0),\r\n            },\r\n          }}\r\n        >\r\n          <span\r\n            style={\r\n              hasRepost\r\n                ? {\r\n                    color: \"rgb(0, 184, 124)\",\r\n                  }\r\n                : {}\r\n            }\r\n          >\r\n            {repostSvg}\r\n          </span>\r\n        </CommitButton>\r\n      )}\r\n      {footerFormat.upVoteButton.status && (\r\n        <div className=\"d-flex align-items-center justify-content-center\">\r\n          <CommitButton\r\n            style={\r\n              state.hoveringElement == \"upVoteButton\"\r\n                ? hoveringButtonStylesWithoutMargin\r\n                : standardButtonStylesWithoutMargin\r\n            }\r\n            onMouseEnter={() => {\r\n              State.update({ hoveringElement: \"upVoteButton\" });\r\n            }}\r\n            onMouseLeave={() => {\r\n              State.update({ hoveringElement: \"\" });\r\n            }}\r\n            data={getVoteUpButtonCommentCallData()}\r\n          >\r\n            Upvote\r\n          </CommitButton>\r\n          <span\r\n            style={{\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {cardData.value.upvotes ?? 0}{\" \"}\r\n            {cardData.value.upvotes == 1 ? \"upvote\" : \"upvotes\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {footerFormat.shareWidget.status && (\r\n        <div style={{ margin: \"0 0.5rem\" }}>\r\n          <Widget\r\n            src=\"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/shareWidget\"\r\n            props={{\r\n              popUpDescription: footerFormat.shareWidget.popUpDescription,\r\n              shareingWidget: footerFormat.shareWidget.shareingWidget,\r\n              propName: footerFormat.shareWidget.propName,\r\n              blockHeight: cardData.blockHeight,\r\n              widgetOwner,\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n    {RenderCommentInput(Number(cardData.blockHeight))}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/general_neardigitalcollective_footer", "__row_index": 0}