{"tx_hash": "2bEjJPvFVBnsnv1HZmWtrqfzqr3QRnDMWwajkeBbcnGk", "action_id_social": "DgDKjy4FuDwwQfrac8uCiYQmruSuyHePvqiWmHPLJucW-0-widget", "block_id": 78443268, "block_timestamp": "2022-11-14 19:03:38.695", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "Test", "source_code": "// Returns the account Id from the logged person\r\nconst accountId = context.accountId;\r\n\r\n// Returns JSON with profile data from the accountId\r\nconst profile = Social.getr(`${accountId}/profile`);\r\n\r\n// Returns the widgets contents (not committed data) from the user in accountId\r\nconst widgets = Social.get(`${accountId}/widget/*`);\r\n\r\n// Returns the Test widget contents (not committed data) from the user in accountId\r\nconst testWidget = Social.getr(`${accountId}/widget/Test`);\r\n\r\n// Returns a JSON object with only one key that is accountId\r\n// After that, contains many keys, containing an array of blockHeights. Examples for silkking.near are \"widgets\", \"post\", \"profile\", \"test\"\r\nconst allBlockHeights = Social.keys(`${accountId}/*`, \"final\", {\r\n  return_type: \"History\",\r\n});\r\n\r\n// Returns a JSON object with only one key that is accountId\r\n// That key will only contain one key names test and the blockHeights associated\r\nconst testBlockHeights = Social.keys(`${accountId}/post/test`, \"final\", {\r\n  return_type: \"History\",\r\n});\r\n\r\n//Returns Object with user account containing only the key post. At the same time post contains the key test.\r\n//test value is boolean\r\nconst data = Social.keys(`${accountId}/post/test`);\r\n\r\n//Returns the text you have posted with the commitButton. Documentation says\r\n//that it will return the lastest blockheigt of that key\r\nconst data2 = Social.get(`${accountId}/post/test`);\r\n\r\n//So we can wrap testBlockHeights to get a bockheight\r\nconst testBlockHeightsObjectToString = JSON.stringify(testBlockHeights);\r\n\r\nconst indexOfTestInString = testBlockHeightsObjectToString.indexOf('\"test\": ');\r\nconst testKeyString = testBlockHeightsObjectToString.slice(\r\n  indexOfTestInString,\r\n  -1\r\n);\r\n\r\nconst testKeyContentString = testKeyString\r\n  .replace('\"test\": [', \"\")\r\n  .replace(\r\n    `\r\n      ]\r\n    }\r\n  }`,\r\n    \"\"\r\n  )\r\n  .split(\" \")\r\n  .join(\"\")\r\n  .replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\nconst blockHeightsArrayNotClean = testKeyContentString.split(\",\");\r\n\r\n//And when we have the different blockHeights use them to call the value we want with the .get method\r\nconst data3 = Social.get(\r\n  `${accountId}/post/test`,\r\n  blockHeightsArrayNotClean[0]\r\n);\r\n\r\n//You can access to all users blockheights of post/test\r\nconst data4 = Social.keys(`*/post/test`, \"final\", {\r\n  return_type: \"History\",\r\n});\r\n\r\nconsole.log(data4);\r\n\r\nreturn (\r\n  <div>\r\n    {JSON.stringify(testBlockHeights)}\r\n    <CommitButton data={{ post: { test: \"probando2\" } }}>\r\n      Post this\r\n    </CommitButton>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/Test"}