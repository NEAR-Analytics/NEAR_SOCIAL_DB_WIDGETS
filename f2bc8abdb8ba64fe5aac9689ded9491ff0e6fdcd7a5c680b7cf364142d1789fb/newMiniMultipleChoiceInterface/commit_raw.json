{"tx_hash": "AshA6GzWfVhtDsLmNSyGmART8GN3ubT3hSFx2krPwwX5", "action_id_social": "Hqe3WzPZfCfmfw7ruvqyHYi5CLa1FDeQ1rSgZK4Goo3F-0-widget", "block_id": 80294114, "block_timestamp": "2022-12-09 23:34:28.608", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "newMiniMultipleChoiceInterface", "source_code": "let question = props.question ?? {\n  title: \"Multiple choice test\",\n  tgLink: \"\",\n  accountId: \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n  choicesOptions: [\"a\", \"b\", \"c\"],\n  question: \"Testing multiple choice\",\n  description: \"\",\n  questionBlockHeight: 79932918,\n  startDate: Date.now(),\n  endDate: Date.now() + 10000000,\n  storingTimestamp: Date.now(),\n  questionType: \"1\",\n  answers: [\n    {\n      accountId:\n        \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n      answer: \"0\",\n      timeStamp: Date.now(),\n    },\n  ],\n};\n\nfunction calculatePercentage(votesToThisOption) {\n  return (votesToThisOption / question.answers.length) * 100;\n}\n\nlet countVotes = [];\nfor (let i = 0; i < question.choicesOptions.length; i++) {\n  countVotes.push(0);\n}\n\nfor (let i = 0; i < question.answers.length; i++) {\n  countVotes[Number(question.answers[i].answer)] += 1;\n}\n\nfunction displayableOptionName(option) {\n  if (option.length > 12) {\n    return option.slice(0, 12) + \"...\";\n  }\n  return option;\n}\n\nconst renderOption = (option, index) => {\n  return (\n    <div>\n      <div className=\"d-flex\">\n        <div style={{ color: \"#000\", width: \"90%\" }}>\n          {/* Set the width of the next div to make the bar grow. At the same, use the same value to fill the span tag */}\n          <div\n            style={{\n              margin: \"0.3rem 0px\",\n              content: \"\",\n              display: \"table\",\n              clear: \"both\",\n              padding: \"0.01em 16px\",\n              display: \"inline-block\",\n              width: `${calculatePercentage(countVotes[index])}%`,\n              textAlign: \"center\",\n              overflow: \"visible\",\n              whiteSpace: \"nowrap\",\n              textAlign: \"left\",\n              backgroundColor: \"lightgray\",\n            }}\n          >\n            <span style={{ overflow: \"visible\" }}>\n              {displayableOptionName(option)}\n              <span className=\"text-secondary\" style={{ marginLeft: \"1rem\" }}>\n                ({question.answers.length} votes)\n              </span>\n            </span>\n          </div>\n        </div>\n        <span style={{ minWidth: \"max-content\", marginLeft: \"0.3rem\" }}>\n          {calculatePercentage(countVotes[index])}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nreturn (\n  <div className=\"m-2\">\n    {question.choicesOptions.map((option, index) => {\n      return renderOption(option, index);\n    })}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/newMiniMultipleChoiceInterface"}