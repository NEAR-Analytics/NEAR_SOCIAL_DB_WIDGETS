{"tx_hash": "928DyeN1uNHPxXBaTPZWgkwZgoCk9iFjTKaC2zyzmZ4x", "action_id_social": "FNacjCaHvssDDZkJmtnRnnACop21pASuW88admK3Jbpd-0-widget", "block_id": 83789473, "block_timestamp": "2023-01-25 21:32:25.557", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "newTextAnswerInterface", "source_code": "if (!props.blockHeight) {\r\n  return \"Property blockHeight not set\";\r\n}\r\n\r\nState.init({ vote: \"\", showErrorsInForm: false, questions: {}, answers: {} });\r\n\r\nconst questionBlockHeight = props.blockHeight;\r\nconst questions = Social.index(\"poll_question\", \"question-v3.1.1\");\r\n\r\nif (JSON.stringify(questions) != JSON.stringify(state.questions)) {\r\n  State.update({ questions: questions });\r\n}\r\n\r\nif (!questions) {\r\n  return \"Loading\";\r\n}\r\nconst questionParams = questions.find(\r\n  (q) => q.blockHeight == questionBlockHeight\r\n);\r\n\r\nconst answers = Social.index(\"poll_question\", \"answer-v3.1.1\");\r\n\r\nif (JSON.stringify(answers) != JSON.stringify(state.answers)) {\r\n  State.update({ answers: answers });\r\n}\r\n\r\nif (!answers) {\r\n  return \"Loading\";\r\n}\r\nconst answersToThisQuestion = answers.filter(\r\n  (a) => a.value.questionBlockHeight == questionBlockHeight\r\n);\r\n\r\nlet usersWithAnswersToThisQuestion = [];\r\nconst validAnswersToThisQuestion = answersToThisQuestion.filter((a) => {\r\n  const didUserAlreadyAnswered = usersWithAnswersToThisQuestion.includes(\r\n    a.accountId\r\n  );\r\n  if (!didUserAlreadyAnswered) {\r\n    usersWithAnswersToThisQuestion.push(a.accountId);\r\n  }\r\n  return !didUserAlreadyAnswered;\r\n});\r\n\r\nfunction getBlockTimestamp(blockHeight) {\r\n  // It is stored in nanoseconds which is 1e-6 miliseconds\r\n  return Near.block(blockHeight).header.timestamp / 1e6;\r\n}\r\n\r\nconst profileLink = (accId, c) => (\r\n  <a\r\n    className=\"text-decoration-none link-dark\"\r\n    href={`#/mob.near/widget/ProfilePage?accountId=${accId}`}\r\n  >\r\n    {c}\r\n  </a>\r\n);\r\n\r\nfunction makeAnswerAccIdShorter(accId) {\r\n  if (accId.length > 18) {\r\n    return accId.slice(0, 18) + \"...\";\r\n  }\r\n  return accId;\r\n}\r\n\r\nreturn (\r\n  <>\r\n    {validAnswersToThisQuestion.length == 0\r\n      ? \"This question does not have any answers yet. Be the first one!\"\r\n      : validAnswersToThisQuestion.map((answerParams) => {\r\n          if (!answerParams.accountId) return \"\";\r\n          let profile = Social.getr(`${answerParams.accountId}/profile`);\r\n          if (!profile) {\r\n            return \"Loading\";\r\n          }\r\n          return (\r\n            <>\r\n              <div\r\n                className=\"d-flex align-items-start\"\r\n                style={{\r\n                  padding: \"1.5rem 0\",\r\n                  borderBottom: \"1px solid #e9e9e9\",\r\n                }}\r\n              >\r\n                <div>\r\n                  {profileLink(\r\n                    answerParams.accountId,\r\n                    <Widget\r\n                      src=\"mob.near/widget/ProfileImage\"\r\n                      props={{ accountId: answerParams.accountId }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                  <div className=\"flex-grow-1 me-1 text-truncate\">\r\n                    {profileLink(\r\n                      answerParams.accountId,\r\n                      <>\r\n                        <p\r\n                          style={{ margin: \"0 2px 0 2px\" }}\r\n                          className=\"fw-bold\"\r\n                        >\r\n                          {profile.name}\r\n                        </p>\r\n                        <p\r\n                          style={{ margin: \"0 2px 0 2px\" }}\r\n                          className=\"text-secondary\"\r\n                        >\r\n                          @{makeAnswerAccIdShorter(answerParams.accountId)}\r\n                        </p>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <small className=\"ps-1 text-nowrap text-muted ms-auto\">\r\n                      <i className=\"bi bi-clock me-1\"></i>\r\n                      <Widget\r\n                        src=\"silkking.near/widget/timeAgo\"\r\n                        props={{\r\n                          timeInFuture: getBlockTimestamp(\r\n                            answerParams.blockHeight\r\n                          ),\r\n                          reduced: true,\r\n                        }}\r\n                      />\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p className=\"w-100\">{answerParams.value.answer}</p>\r\n            </>\r\n          );\r\n        })}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/newTextAnswerInterface"}