{"tx_hash": "4agC5uJHGJD7GhFa45cQDkxzvyCKagkRCnfGpunULDvU", "action_id_social": "BdCs7UVMxhgsXonv3oTDMKRpXTxEFPJ7LisXXqFhNBaf-0-widget", "block_id": 78229574, "block_timestamp": "2022-11-11 21:11:40.697", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "AddMeme", "source_code": "// console.log(\"props: \", props);\n\nconst accountId = props.accountId ?? context.accountId;\nconst currentAccountId = context.accountId;\n\nconst profile = Social.getr(`${accountId}/profile`);\n\nconst question =\n  props.question ?? Social.getr(`${accountId}/post/poll_question`, blockHeight);\n\n// console.log(\"question\", question);\n\nconst questionTimeMs = props.question.timeStamp ?? Date.now();\nconst actualQuestion = question.question;\nconst questionId = question.questionId;\n\nconst processAllAnswers = () => {};\n\nconst answer = Social.getr(\n  `${currentAccountId}/post/${questionId}`,\n  blockHeight\n);\n\n// console.log(\"answer: \", answer);\n\nconst oldAnswers = answer.userAnswers.slice(1, -1).toString();\nconsole.log(oldAnswers);\n\nconst newAnswers = \"[\" + oldAnswers + `,\"` + state.currentAnswer + `\"]`;\nconsole.log(newAnswers);\n\nconst profileLink = (c) => (\n  <a\n    className=\"text-decoration-none link-dark\"\n    href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n  >\n    {c}\n  </a>\n);\nState.init({ vote: \"\", currentAnswer: \"\" });\n// console.log(\"input vote value: \", state.vote, \"textarea value: \", state.currentAnswer);\nconst allowVote = () => {\n  if (answer.userVote == \"\") {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst getForm = () => (\n  <div>\n    <div class=\"form-check\">\n      <input\n        disabled={allowVote()}\n        key={state.vote}\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        id=\"voteYes\"\n        value=\"yes\"\n        onChange={onValueChange}\n        checked={state.vote == \"yes\"}\n      />\n      <label class=\"form-check-label\" for=\"voteYes\">\n        Yes\n      </label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        disabled={allowVote()}\n        key={state.vote}\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        id=\"voteNo\"\n        value=\"no\"\n        onChange={onValueChange}\n        checked={state.vote == \"no\"}\n      />\n      <label class=\"form-check-label\" for=\"voteNo\">\n        No\n      </label>\n    </div>\n    {answer.userVote != \"\" && (\n      <p className=\"text-danger\">You can only vote once</p>\n    )}\n\n    <div class=\"form-group\">\n      <label for=\"answer\">Post answer</label>\n      <textarea\n        class=\"form-control mb-1\"\n        id=\"answer\"\n        rows=\"3\"\n        value={state.currentAnswer}\n        onChange={(e) => {\n          const currentAnswer = e.target.value;\n          State.update({ currentAnswer });\n        }}\n      ></textarea>\n    </div>\n    <CommitButton\n      data={{\n        post: {\n          [questionId]: {\n            userVote: state.vote == \"\" ? answer.userVote : state.vote,\n            userVoting: currentAccountId,\n            userAnswers: newAnswers,\n            answerTimestamps: [Date.now()],\n          },\n        },\n      }}\n    >\n      Confirm\n    </CommitButton>\n  </div>\n);\n\nfunction onValueChange(e) {\n  const vote = e.target.value;\n\n  State.update({ vote });\n}\n\nconst timeAgo = (diffSec) =>\n  diffSec < 60000\n    ? `${(diffSec / 1000) | 0} seconds ago`\n    : diffSec < 3600000\n    ? `${(diffSec / 60000) | 0} minutes ago`\n    : diffSec < 86400000\n    ? `${(diffSec / 3600000) | 0} hours ago`\n    : `${(diffSec / 86400000) | 0} days ago`;\n\nreturn (\n  <div style={{ maxWidth: \"40em\" }}>\n    <div\n      className=\"d-flex align-items-start\"\n      style={{\n        padding: \"1.5rem 0\",\n        borderBottom: \"1px solid #e9e9e9\",\n      }}\n    >\n      <div>\n        {profileLink(\n          <Widget src=\"mob.near/widget/ProfileImage\" props={{ accountId }} />\n        )}\n      </div>\n      <div className=\"ms-2 flex-grow-1\" style={{ minWidth: 0 }}>\n        <div className=\"d-flex justify-content-start\">\n          <div className=\"flex-grow-1 me-1 text-truncate\">\n            {profileLink(\n              <>\n                <span className=\"fw-bold\">{profile.name}</span>\n                <span className=\"text-secondary\">@{accountId}</span>\n              </>\n            )}\n          </div>\n          <div>\n            <small className=\"ps-1 text-nowrap text-muted ms-auto\">\n              <i className=\"bi bi-clock me-1\"></i>\n              {timeAgo(Date.now() - questionTimeMs)}\n            </small>\n          </div>\n        </div>\n        <div>{actualQuestion}</div>\n        <>{getForm()}</>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/AddMeme", "metadata.name": NaN, "metadata.tags.meme": NaN}