{"tx_hash": "Hi5gDdMwdMRfBuDYxbMHpheFeA68dQnqFDiftKJKDpFy", "action_id_social": "3ia5zUeiPWjHnN2HTnDbUoC5LDGm4vZUMgGt84Tr6aaP-0-widget", "block_id": 78025474, "block_timestamp": "2022-11-09 00:42:26.939", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "AddMeme", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst currentAccountId = context.accountId;\n// let blockHeight = props.blockHeight ? parseInt(props.blockHeight) : undefined;\nconst profile = Social.getr(`${accountId}/profile`);\n\nconst question = Social.getr(`${accountId}/post/poll_question`, blockHeight);\n\n// let idVote = Social.keys(`${currentAccountId}/post/*`, \"final\", {\n//   return_type: \"History\",\n// });\n\n//let answerBlockheight =\n//  idVote.f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb.post[\n//    `${blockHeight}`\n//  ][0];\n\n//let oneAnswer = Social.getr(`${currentAccountId}/*`, blockHeight);\n\n// console.log(\n//   \"R\",\n//   idVote.f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb.post[\n//     `${blockHeight}`\n//   ][0]\n// );\n\n// console.log(\"answerBlockheight\", answerBlockheight);\n// console.log(\"oneAnswer\", oneAnswer);\n\nconsole.log(\"question\", question);\n\n// if (!question) {\n//   return \"Loading\";\n// }\n\n// if (!props.question && !blockHeight) {\n//   blockHeight = Social.keys(`${accountId}/post/meme`, undefined, {\n//     return_type: \"BlockHeight\",\n//   })[accountId].post.meme;\n//   if (!blockHeight) {\n//     return \"Loading\";\n//   }\n// }\n\nconst questionTimeMs = props.meme\n  ? Date.now()\n  : parseFloat(Near.block(blockHeight).header.timestamp_nanosec) / 1e6;\n\nconst actualQuestion = question.question;\nconst questionId = question.questionId;\n\nlet answer = Social.getr(`${currentAccountId}/post/${questionId}`, blockHeight);\nconsole.log(\"answer\", answer);\n\nconst profileLink = (c) => (\n  <a\n    className=\"text-decoration-none link-dark\"\n    href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n  >\n    {c}\n  </a>\n);\n\nconst getButtons = () => (\n  <div>\n    <CommitButton\n      data={{\n        post: {\n          [questionId]: {\n            userVoting: currentAccountId,\n            userVote: \"yes\",\n          },\n        },\n      }}\n    >\n      Yes\n    </CommitButton>\n    <CommitButton\n      data={{\n        post: {\n          [questionId]: {\n            userVoting: currentAccountId,\n            userVote: \"no\",\n          },\n        },\n      }}\n    >\n      No\n    </CommitButton>\n  </div>\n);\n\nconst getResponses = () => (\n  <p className=\"small text-muted mt-2 mb-0\">\n    <span>\n      <i className=\"bi bi-star me-1\"></i>4\n    </span>\n    <span className=\"ms-2\">\n      <i className=\"bi bi-chat-square-fill me-1\"></i>20\n    </span>\n    <span className=\"ms-2\">\n      <i className=\"bi bi-reply\"></i>\n    </span>\n  </p>\n);\n\nconst timeAgo = (diffSec) =>\n  diffSec < 60000\n    ? `${(diffSec / 1000) | 0} seconds ago`\n    : diffSec < 3600000\n    ? `${(diffSec / 60000) | 0} minutes ago`\n    : diffSec < 86400000\n    ? `${(diffSec / 3600000) | 0} hours ago`\n    : `${(diffSec / 86400000) | 0} days ago`;\n\nreturn (\n  <div style={{ maxWidth: \"40em\" }}>\n    <div\n      className=\"d-flex align-items-start\"\n      style={{\n        padding: \"1.5rem 0\",\n        borderBottom: \"1px solid #e9e9e9\",\n      }}\n    >\n      <div>\n        {profileLink(\n          <Widget src=\"mob.near/widget/ProfileImage\" props={{ accountId }} />\n        )}\n      </div>\n      <div className=\"ms-2 flex-grow-1\" style={{ minWidth: 0 }}>\n        <div className=\"d-flex justify-content-start\">\n          <div className=\"flex-grow-1 me-1 text-truncate\">\n            {profileLink(\n              <>\n                <span className=\"fw-bold\">{profile.name}</span>\n                <span className=\"text-secondary\">@{accountId}</span>\n              </>\n            )}\n          </div>\n          <div>\n            <small className=\"ps-1 text-nowrap text-muted ms-auto\">\n              <i className=\"bi bi-clock me-1\"></i>\n              {timeAgo(Date.now() - questionTimeMs)}\n            </small>\n          </div>\n        </div>\n        <div>{actualQuestion}</div>\n        <>{getButtons()}</>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/AddMeme", "metadata.name": NaN, "metadata.tags.meme": NaN}