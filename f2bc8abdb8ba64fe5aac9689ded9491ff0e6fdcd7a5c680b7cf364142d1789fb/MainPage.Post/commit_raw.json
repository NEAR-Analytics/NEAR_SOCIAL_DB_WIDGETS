{"tx_hash": "AVdBfvzUxVi87hp2nx6FLnXZHAjdCqc3S1sGwqo89Pjm", "action_id_social": "2CJLjgkEykP2Tt9AzVBJjkMvHBFeG7xoL49TYRy7Uikf-0-widget", "block_id": 89834093, "block_timestamp": "2023-04-18 02:30:40.435", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "MainPage.Post", "source_code": "const updateGeneralState = props.updateGeneralState;\nconst thisWidgetInlineStyles = props.allWidgetsInlineStyles.mainPage_post;\nconst thisWidgetClassNames = props.allWidgetsClassNames.mainPage_post;\nconst standardButtonStyles = props.allWidgetsInlineStyles.standardButtonStyles;\nconst hoveringButtonStyles = props.allWidgetsInlineStyles.hoveringButtonStyles;\n\nconst content = props.content;\nconst accountId = content.accountId;\nconst blockHeight = parseInt(content.blockHeight);\n\nconst widgetOwner = props.widgetOwner;\n\nState.init({\n  displayCommentBox: false,\n  answer: \"\",\n  hoveringElement: \"\",\n});\n\nlet item = {\n  type: \"social\",\n  path: `${accountId}/post/main`,\n  blockHeight,\n};\n\nconst reposts = Social.index(\"repost\", item);\n\nconst repostsByUsers = Object.fromEntries(\n  (reposts || [])\n    .filter((repost) => repost.value.type === \"repost\")\n    .map((repost) => [repost.accountId, repost])\n);\n\nif (state.hasRepost === true) {\n  repostsByUsers[context.accountId] = {\n    accountId: context.accountId,\n  };\n}\n\nconst hasRepost = context.accountId && !!repostsByUsers[context.accountId];\n\nconst repostSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"32\"\n    height=\"32\"\n    fill=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n    style={thisWidgetInlineStyles.repostSvg}\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"rotate(180, 12, 12), translate(0, 4)\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"translate(0, 4)\"\n    />\n  </svg>\n);\n\nconst notifyAccountId = accountId;\n\nconst link = `#/mob.near/widget/MainPage.Post.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\n\nconst startCommentTo = () => {\n  State.update({ displayCommentBox: !state.displayCommentBox });\n};\n\nconst RenderCommentInput = (blockHeight) => {\n  return state.displayCommentBox ? (\n    <div\n      style={thisWidgetInlineStyles.commentInput.container}\n      className={thisWidgetClassNames.commentInput.container}\n    >\n      <textarea\n        style={thisWidgetInlineStyles.commentInput.textArea}\n        rows=\"2\"\n        value={state.commentTextMap[blockHeight]}\n        onChange={(e) => {\n          State.update({ answer: e.target.value });\n        }}\n      />\n      <CommitButton\n        style={\n          state.hoveringElement == \"commitCommentButton\"\n            ? hoveringButtonStyles\n            : standardButtonStyles\n        }\n        data={{\n          index: {\n            kudo: JSON.stringify(\n              {\n                key: \"commentAnswers\",\n                value: {\n                  commentAnswer: state.answer,\n                  blockHeight,\n                },\n              },\n              undefined,\n              0\n            ),\n          },\n        }}\n        onCommit={() => {\n          let ctm = state.commentTextMap;\n          ctm[blockHeight] = \"\";\n          State.update({\n            commentTextMap: ctm,\n            reloadData: true,\n          });\n        }}\n        onMouseEnter={() => {\n          State.update({ hoveringElement: \"commitCommentButton\" });\n        }}\n        onMouseLeave={() => {\n          State.update({ hoveringElement: \"\" });\n        }}\n      >\n        Comment\n      </CommitButton>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\n/* START KudoBox */\nconst RenderKudoBox = (d) => {\n  const text = `From @${d.accountId} Kudos ${d.value.answer} `;\n  const content = { text };\n  return (\n    <>\n      <div className={thisWidgetClassNames.headerContainer}>\n        <Widget\n          src={`${widgetOwner}/widget/MainPage.Post.Header`}\n          props={{\n            widgetOwner,\n            accountId,\n            blockHeight: d.blockHeight,\n            link,\n            postType: \"post\",\n            flagItem: item,\n          }}\n        />\n        <div>{/*Decorative div, do not delete*/}</div>\n      </div>\n      <div\n        className={thisWidgetClassNames.cardContent}\n        style={thisWidgetInlineStyles.cardContent}\n      >\n        <div style={thisWidgetInlineStyles.postContentContainer}>\n          <Widget\n            src=\"mob.near/widget/MainPage.Post.Content\"\n            props={{ content, raw }}\n          />\n        </div>\n      </div>\n      {d.value.url != \"\" && d.value.url && (\n        <div\n          style={thisWidgetInlineStyles.postUrl}\n          className={thisWidgetClassNames.postUrl}\n        >\n          <span style={thisWidgetInlineStyles.postUrlSpan}>Url:</span>\n          <a href={`${urlPrefix}${d.value.url}`} target=\"_blank\">\n            {d.value.url}\n          </a>\n        </div>\n      )}\n      <div\n        style={thisWidgetInlineStyles.interactionButtonsContainer}\n        className={thisWidgetClassNames.interactionButtonsContainer}\n      >\n        <Widget\n          src=\"mob.near/widget/CommentButton\"\n          props={{\n            onClick: startCommentTo,\n          }}\n        />\n\n        <CommitButton\n          style={\n            state.hoveringElement == \"repostButton\"\n              ? thisWidgetInlineStyles.repostButtonHovering\n              : thisWidgetInlineStyles.repostButton\n          }\n          className={thisWidgetClassNames.repostButton}\n          onMouseEnter={() => {\n            State.update({ hoveringElement: \"repostButton\" });\n          }}\n          onMouseLeave={() => {\n            State.update({ hoveringElement: \"\" });\n          }}\n          data={{\n            index: {\n              repost: JSON.stringify(\n                {\n                  key: \"kudo\",\n                  value: {\n                    type: \"repost\",\n                    item: {\n                      type: \"social\",\n                      path: \"silkking.near/widget/Kudos\",\n                      blockHeight: d.blockHeight,\n                    },\n                  },\n                },\n                undefined,\n                0\n              ),\n            },\n          }}\n        >\n          <span style={hasRepost ? thisWidgetInlineStyles.repostSvgSpan : {}}>\n            {repostSvg}\n          </span>\n        </CommitButton>\n        <div className={thisWidgetClassNames.upVoteContainer}>\n          <CommitButton\n            style={\n              state.hoveringElement == \"upVoteButton\"\n                ? props.allWidgetsInlineStyles.hoveringButtonStylesWithoutMargin\n                : props.allWidgetsInlineStyles.standardButtonStylesWithoutMargin\n            }\n            onMouseEnter={() => {\n              State.update({ hoveringElement: \"upVoteButton\" });\n            }}\n            onMouseLeave={() => {\n              State.update({ hoveringElement: \"\" });\n            }}\n            data={{\n              index: {\n                kudo: JSON.stringify(\n                  {\n                    key: \"upvote\",\n                    value: {\n                      blockHeight: d.blockHeight,\n                    },\n                  },\n                  undefined,\n                  0\n                ),\n              },\n            }}\n          >\n            Upvote\n          </CommitButton>\n          <span style={thisWidgetInlineStyles.upVoteCounter}>\n            {d.value.upvotes} {d.value.upvotes == 1 ? \"upvote\" : \"upvotes\"}\n          </span>\n        </div>\n        <Widget\n          src=\"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/shareWidget\"\n          props={{\n            popUpDescription: \"Use this link to share the kudo\",\n            shareingWidget: \"Kudos.Styles\",\n            propName: \"sharedBlockHeight\",\n            blockHeight: d.blockHeight,\n            widgetOwner,\n          }}\n        />\n      </div>\n      {RenderCommentInput(Number(d.blockHeight))}\n    </>\n  );\n};\n/* END KudoBox  */\n\nreturn <>{RenderKudoBox(content)}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/MainPage.Post"}