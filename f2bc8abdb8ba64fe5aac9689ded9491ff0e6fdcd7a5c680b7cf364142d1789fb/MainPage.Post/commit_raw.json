{"tx_hash": "4YteLEdY3FWPKgbqanEz9X7DRZN3opiK3oA2iwv4CoXZ", "action_id_social": "5pY3V86q2ipRvuVqs12U2NdtKk38HJMv5Af2swvGkiZP-0-widget", "block_id": 88185310, "block_timestamp": "2023-03-26 22:23:40.660", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "MainPage.Post", "source_code": "const updateGeneralState = props.updateGeneralState;\nconst thisWidgetInlineStyles = props.allWidgetsInlineStyles.mainPage_post;\nconst thisWidgetClassNames = props.allWidgetsClassNames.mainPage_post;\nconst standardButtonStyles = props.allWidgetsInlineStyles.standardButtonStyles;\nconst hoveringButtonStyles = props.allWidgetsInlineStyles.hoveringButtonStyles;\n\nconst content = props.content;\nconst accountId = content.accountId;\nconst blockHeight = parseInt(content.blockHeight);\n\nconst widgetOwner = props.widgetOwner;\n\nState.init({\n  displayCommentBox: false,\n  answer: \"\",\n  hoveringElement: \"\",\n});\n\nconst notifyAccountId = accountId;\nconst item = {\n  type: \"social\",\n  path: `${accountId}/post/main`,\n  blockHeight,\n};\n\nconst link = `#/mob.near/widget/MainPage.Post.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\n\nconst startCommentTo = () => {\n  State.update({ displayCommentBox: !state.displayCommentBox });\n};\n\nconst RenderCommentInput = (blockHeight) => {\n  return state.displayCommentBox ? (\n    <div\n      style={thisWidgetInlineStyles.commentInput.container}\n      className={thisWidgetClassNames.commentInput.container}\n    >\n      <textarea\n        style={thisWidgetInlineStyles.commentInput.textArea}\n        rows=\"2\"\n        value={state.commentTextMap[blockHeight]}\n        onChange={(e) => {\n          State.update({ answer: e.target.value });\n        }}\n      />\n      <CommitButton\n        style={\n          state.hoveringElement == \"commitCommentButton\"\n            ? hoveringButtonStyles\n            : standardButtonStyles\n        }\n        data={{\n          index: {\n            kudo: JSON.stringify(\n              {\n                key: \"commentAnswers\",\n                value: {\n                  commentAnswer: state.answer,\n                  blockHeight,\n                },\n              },\n              undefined,\n              0\n            ),\n          },\n        }}\n        onCommit={() => {\n          let ctm = state.commentTextMap;\n          ctm[blockHeight] = \"\";\n          State.update({\n            commentTextMap: ctm,\n            reloadData: true,\n          });\n        }}\n        onMouseEnter={() => {\n          State.update({ hoveringElement: \"commitCommentButton\" });\n        }}\n        onMouseLeave={() => {\n          State.update({ hoveringElement: \"\" });\n        }}\n      >\n        Comment\n      </CommitButton>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\n/* START KudoBox */\nconst RenderKudoBox = (d) => {\n  const text = `From @${d.accountId} Kudos ${d.value.answer} `;\n  const content = { text };\n  return (\n    <>\n      <div className={thisWidgetClassNames.headerContainer}>\n        <Widget\n          src={`${widgetOwner}/widget/MainPage.Post.Header`}\n          props={{\n            accountId,\n            blockHeight,\n            link,\n            postType: \"post\",\n            flagItem: item,\n          }}\n        />\n        <div>{/*Decorative div, do not delete*/}</div>\n      </div>\n      <div\n        className={thisWidgetClassNames.cardContent}\n        style={thisWidgetInlineStyles.cardContent}\n      >\n        <div style={thisWidgetInlineStyles.postContentContainer}>\n          <Widget\n            src=\"mob.near/widget/MainPage.Post.Content\"\n            props={{ content, raw }}\n          />\n        </div>\n\n        <div>\n          <Widget\n            src=\"mob.near/widget/CommentButton\"\n            props={{\n              onClick: startCommentTo,\n            }}\n          />\n        </div>\n      </div>\n      {d.value.url != \"\" && d.value.url && (\n        <div\n          style={thisWidgetInlineStyles.postUrl}\n          className={thisWidgetClassNames.postUrl}\n        >\n          <span style={thisWidgetInlineStyles.postUrlSpan}>Url:</span>\n          <a href={`${urlPrefix}${d.value.url}`} target=\"_blank\">\n            {d.value.url}\n          </a>\n        </div>\n      )}\n      <div\n        style={thisWidgetInlineStyles.upVoteContainer}\n        className={thisWidgetClassNames.upVoteContainer}\n      >\n        <CommitButton\n          style={\n            state.hoveringElement == \"upVoteButton\"\n              ? hoveringButtonStyles\n              : standardButtonStyles\n          }\n          onMouseEnter={() => {\n            State.update({ hoveringElement: \"upVoteButton\" });\n          }}\n          onMouseLeave={() => {\n            State.update({ hoveringElement: \"\" });\n          }}\n          data={{\n            index: {\n              kudo: JSON.stringify(\n                {\n                  key: \"upvote\",\n                  value: {\n                    blockHeight: d.blockHeight,\n                  },\n                },\n                undefined,\n                0\n              ),\n            },\n          }}\n        >\n          Upvote\n        </CommitButton>\n        <span style={thisWidgetInlineStyles.upVoteCounter}>\n          {d.value.upvotes} {d.value.upvotes == 1 ? \"upvote\" : \"upvotes\"}\n        </span>\n      </div>\n      {RenderCommentInput(Number(d.blockHeight))}\n\n      {\n        //RenderAllCommentAnswerBox(d)\n      }\n    </>\n  );\n};\n/* END KudoBox  */\n\nreturn <>{RenderKudoBox(props.content)}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/MainPage.Post"}