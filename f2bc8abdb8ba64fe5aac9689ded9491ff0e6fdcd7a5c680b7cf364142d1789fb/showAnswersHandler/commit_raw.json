{"tx_hash": "VkHcmoQAaBJkYmQSh3rwWWzuioEtR19c7RmivVmZvej", "action_id_social": "DFs7ziVfPS824ru3h5e9mdockA7pmZhfZ4q6XUA3645s-0-widget", "block_id": 80208562, "block_timestamp": "2022-12-08 19:40:58.099", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "showAnswersHandler", "source_code": "const displayAnswerWidgetNames = [\n  \"newTextAnswerInterface\",\n  \"newYesNoAnswerInterface\",\n  \"newMiniMultipleChoiceInterface\",\n];\n\n//You have to use social.index to get all the questions and then process it to get something like the next array of objects.\nconst questions = [\n  {\n    accountId:\n      \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n    choicesOptions: [\"a\", \"b\", \"c\"],\n    question: \"Testing multiple choice\",\n    description: \"\",\n    questionBlockHeight: 79932918,\n    startDate: \"2022/12/08\",\n    endDate: \"2022/12/31\",\n    questionType: \"2\",\n  },\n  {\n    accountId:\n      \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n    choicesOptions: undefined,\n    question: \"Testing text\",\n    description: \"\",\n    questionBlockHeight: 79932900,\n    startDate: \"2022/12/08\",\n    endDate: \"2022/12/31\",\n    questionType: \"1\",\n  },\n  {\n    accountId:\n      \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n    choicesOptions: undefined,\n    question: \"Testing vote yes/no\",\n    description: \"\",\n    questionBlockHeight: 79932883,\n    startDate: \"2022/12/08\",\n    endDate: \"2022/12/31\",\n    questionType: \"0\",\n  },\n];\n\nconst renderAnswers = () => {\n  questions.map((question) => {\n    let widget;\n    let props;\n\n    if (typeOfAnswer == \"0\") {\n      widget = displayAnswerWidgetNames[0];\n      props = {\n        questionBlockHeight: question.questionBlockHeight,\n        userMakingQuestion: question.accountId,\n      };\n    } else if (typeOfAnswer == \"1\") {\n      widget = displayAnswerWidgetNames[1];\n      props = {\n        questionTimestamp: question.startDate,\n        questionBlockHeight: question.questionBlockHeight,\n        userMakingQuestion: question.accountId,\n      };\n    } else if (typeOfAnswer == \"2\") {\n      widget = displayAnswerWidgetNames[2];\n      props = {\n        questionBlockHeight: question.questionBlockHeight,\n        choicesOptions: question.choicesOptions,\n      };\n    }\n\n    return (\n      <>\n        <Widget\n          src=\"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/answersHeader\"\n          props={{\n            title: question.question,\n            description: question.description,\n            startDate: question.startDate,\n            endDate: question.endDate,\n            userMakingQuestion: question.accountId,\n          }}\n        />\n        <Widget\n          src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/${widget}`}\n          props={props}\n        />\n      </>\n    );\n  });\n};\n\nreturn (\n  <div className=\"d-flex flex-column\">\n    <div className=\"d-flex\">\n      {/* Filters */}\n      <button type=\"button\" class=\"btn btn-outline-primary\">\n        ALL STATUS\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-primary\">\n        ALL CATEGORY\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-primary\">\n        CREATED BY ME\n      </button>\n    </div>\n\n    {renderAnswers()}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/showAnswersHandler"}