{"tx_hash": "23TwEPCJHBgdgfTbJsR1choPZc6bXFUDY2TVVmqueJfZ", "action_id_social": "9cUz27ftdCdK4QCvfxnVcjtNiLc1J8u96nPZYx77KrcW-0-widget", "block_id": 81762410, "block_timestamp": "2022-12-30 00:43:05.837", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "showQuestionsHandler", "source_code": "State.init({\r\n  questions: {},\r\n  showQuestion: true,\r\n  modalBlockHeight: question.blockHeight,\r\n});\r\n\r\n//TODO considering this new prop use te context accoutId to filter the questions\r\nconst onlyUsersPolls = props.onlyUser ?? false;\r\n\r\nconst displayAnswerWidgetNames = [\r\n  \"newTextAnswerInterface\",\r\n  \"newMiniMultipleChoiceInterface\",\r\n];\r\n\r\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\");\r\n\r\nif (!questions) {\r\n  return \"Loading\";\r\n}\r\n\r\nquestions = questions.sort((q1, q2) => {\r\n  const isQ1Finished = q1.value.endTimestamp < Date.now();\r\n  const isQ2Finished = q2.value.endTimestamp < Date.now();\r\n  if (isQ1Finished && !isQ2Finished) return 1;\r\n  if (!isQ1Finished && isQ2Finished) return -1;\r\n  if (isQ1Finished && isQ2Finished)\r\n    return q2.value.endTimestamp - q1.value.endTimestamp;\r\n  return q1.value.endTimestamp - q2.value.endTimestamp;\r\n});\r\n\r\n//TODO review this\r\nlet usersMakingQuestions = [];\r\nfor (let i = 0; i < questions.length; i++) {\r\n  if (!usersMakingQuestions.includes(questions[i].accountId)) {\r\n    usersMakingQuestions.push(questions[i].accountId);\r\n  }\r\n}\r\n\r\nif (JSON.stringify(questions) != JSON.stringify(state.questions)) {\r\n  State.update({ questions: questions });\r\n}\r\n\r\nconst widgetOwner =\r\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\r\n\r\nconst renderModal = () => {\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      id=\"modal\"\r\n      style={\r\n        state.showQuestion && { display: \"block\", backgroundColor: \"#7e7e7e70\" }\r\n      }\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      onClick={closeModalClickingOnTransparent()}\r\n    >\r\n      <div className=\"modal-dialog\" style={{ maxWidth: \"95%\" }} role=\"document\">\r\n        <div\r\n          className=\"modal-content\"\r\n          style={{ backgroundColor: \"rgb(230, 230, 230)\" }}\r\n        >\r\n          <div className=\"modal-header flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              dataDismiss=\"modal\"\r\n              ariaLabel=\"Close\"\r\n              onClick={() => State.update({ showQuestion: false })}\r\n            >\r\n              <span ariaHidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"modal-body\"\r\n            style={{\r\n              width: \"90%\",\r\n              borderRadius: \"1rem\",\r\n              backgroundColor: \"white\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <Widget\r\n              src={`${widgetOwner}/widget/newVotingInterface`}\r\n              props={{\r\n                blockHeight: state.modalBlockHeight,\r\n                shouldDisplayViewAll: props.accountId == undefined,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              onClick={() => State.update({ showQuestion: false })}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderQuestions = (onlyUsersPolls) => {\r\n  if (onlyUsersPolls) {\r\n    return questions.map((question, index) => {\r\n      return (\r\n        <div\r\n          className={index % 2 == 0 ? \"mr-2 py-3 px-4 my-2\" : \"py-3 px-4 my-2\"}\r\n          style={{\r\n            boxSizing: \"border-box\",\r\n            boxShadow: \"0px 8px 28px rgba(43, 68, 106, 0.05)\",\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"1rem\",\r\n            cursor: \"pointer\",\r\n            width: \"48%\",\r\n          }}\r\n          onClick={() => {\r\n            State.update({\r\n              showQuestion: true,\r\n              modalBlockHeight: question.blockHeight,\r\n            });\r\n          }}\r\n        >\r\n          <Widget\r\n            src={\r\n              \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/minimalistQuestionHeader\"\r\n            }\r\n            props={{ ...question }}\r\n          />\r\n          <Widget\r\n            src={\r\n              \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/minimalistQuestionGeneralInfo\"\r\n            }\r\n            props={{ ...question }}\r\n          />\r\n          {state.showQuestion && renderModal()}\r\n        </div>\r\n      );\r\n    });\r\n  } else {\r\n    return (\r\n      <>\r\n        {usersMakingQuestions.map((accountId, index) => {\r\n          return (\r\n            <div\r\n              className={\r\n                index % 2 == 0 ? \"mr-2 py-3 px-4 my-2\" : \"py-3 px-4 my-2\"\r\n              }\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                boxShadow: \"0px 8px 28px rgba(43, 68, 106, 0.05)\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"1rem\",\r\n                width: \"48%\",\r\n              }}\r\n            >\r\n              <Widget\r\n                src={`${widgetOwner}/widget/displayQuestionHeader`}\r\n                props={{ allUsersQuestions: questions, accountId }}\r\n              />\r\n              <Widget\r\n                src={`${widgetOwner}/widget/questionsByCreator`}\r\n                props={{ accountId }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nreturn (\r\n  <div\r\n    style={{\r\n      borderRadius: \"3px\",\r\n      backgroundColor: \"rgb(230, 230, 230)\",\r\n    }}\r\n  >\r\n    <div className=\"d-flex flex-wrap justify-content-between\">\r\n      {renderQuestions(onlyUsersPolls)}\r\n    </div>\r\n    {/*TODO add a page picker instead the infinite scroll?*/}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/showQuestionsHandler"}