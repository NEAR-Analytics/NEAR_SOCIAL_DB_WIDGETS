{"tx_hash": "BnnXwHFDVzGGrxxUehkpFnQ4rHzN6Fmt7J89oH6Cc7ww", "action_id_social": "3r2R4UkJbNuW3YXB7mXifHtp6VTsTzTKjUga4t1MLbR4-0-widget", "block_id": 80437398, "block_timestamp": "2022-12-11 21:37:08.610", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "showQuestionsHandler", "source_code": "function validateProps(props) {\r\n  let errors = [];\r\n  if (!props.accountId) errors.push(\"Props don't contain accountId key\");\r\n  if (!props.blockHeight) errors.push(\"Props don't contain blockHeight key\");\r\n  if (!props.value) {\r\n    errors.push(\"Props don't contain value key\");\r\n  } else {\r\n    if (!props.value.answers)\r\n      errors.push(\"Prop value doesn't contain answers key\");\r\n  }\r\n  return errors;\r\n}\r\n\r\nfunction addAnswersToQuestion(questions, answers) {\r\n  questions = questions.map((q) => {\r\n    q.value.answers = [];\r\n    return q;\r\n  });\r\n  for (let i = 0; i < answers.length; i++) {\r\n    const answer = answers[i];\r\n    const qIndex = questions.findIndex(\r\n      (q) => q.blockHeight == answer.value.questionBlockHeight\r\n    );\r\n    if (qIndex != -1) questions[qIndex].answers.push(answer);\r\n    if (qIndex == -1) console.log(`Answer has no related question!`, answer);\r\n  }\r\n  return questions;\r\n}\r\n\r\nconst displayAnswerWidgetNames = [\r\n  \"newTextAnswerInterface\",\r\n  \"newMiniMultipleChoiceInterface\",\r\n];\r\n\r\nconsole.log(\"props.accountId: \", props.accountId);\r\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\", {\r\n  accountId: props.accountId,\r\n});\r\nconsole.log(\"question: \", question);\r\nconst answers = Social.index(\"poll_question\", \"answer-v3.0.1\");\r\nquestions = addAnswersToQuestion(questions, answers);\r\n\r\nconst renderQuestions = () => {\r\n  return questions.map((question) => {\r\n    console.log(\r\n      \"W1\",\r\n      `${props.accountId}/widget/${\r\n        displayAnswerWidgetNames[question.value.questionType]\r\n      }`\r\n    );\r\n    return (\r\n      <a\r\n        href={`#${\r\n          context.accountId\r\n        }/widget/newVotingInterface?question=${JSON.stringify(question)}`}\r\n        style={{ textDecoration: \"none\", color: \"black\" }}\r\n      >\r\n        <div\r\n          className=\"my-5 py-3 px-4\"\r\n          style={{ backgroundColor: \"#f2f2f2\", borderRadius: \"1rem\" }}\r\n        >\r\n          <Widget\r\n            src={`${props.accountId}/widget/answersHeader`}\r\n            props={{ ...question }}\r\n          />\r\n          <Widget\r\n            src={`${props.accountId}/widget/${\r\n              displayAnswerWidgetNames[question.value.questionType]\r\n            }`}\r\n            props={{ ...question }}\r\n          />\r\n        </div>\r\n      </a>\r\n    );\r\n  });\r\n};\r\n\r\nreturn (\r\n  <div\r\n    style={{\r\n      borderRadius: \"3px\",\r\n      padding: \"8% 5% 1% 5%\",\r\n    }}\r\n  >\r\n    {renderQuestions()}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/showQuestionsHandler"}