{"tx_hash": "wQMKe4cSbq31xxeM4QHdmHzL1NNo223wQqJKZCEJUkf", "action_id_social": "DWrLyfYMzedDH7XxMCL6nw6rg1X4a4wwyWj1X96XzqaJ-0-widget", "block_id": 80433782, "block_timestamp": "2022-12-11 20:28:20.785", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "showQuestionsHandler", "source_code": "function validateProps(props) {\n  let errors = [];\n  if (!props.accountId) errors.push(\"Props don't contain accountId key\");\n  if (!props.blockHeight) errors.push(\"Props don't contain blockHeight key\");\n  if (!props.value) {\n    errors.push(\"Props don't contain value key\");\n  } else {\n    if (!props.value.answers)\n      errors.push(\"Prop value doesn't contain answers key\");\n  }\n  return errors;\n}\n\nfunction addAnswersToQuestion(questions, answers) {\n  questions = questions.map((q) => {\n    q.value.answers = [];\n    return q;\n  });\n  for (let i = 0; i < answers.length; i++) {\n    const answer = answers[i];\n    const qIndex = questions.findIndex(\n      (q) => q.blockHeight == answer.value.questionBlockHeight\n    );\n    if (qIndex != -1) questions[qIndex].answers.push(answer);\n    if (qIndex == -1) console.log(`Answer has no related question!`, answer);\n  }\n  return JSON.parse(props.questions) ?? questions;\n}\n\nconst displayAnswerWidgetNames = [\n  \"newTextAnswerInterface\",\n  \"newMiniMultipleChoiceInterface\",\n];\n\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\");\nconst answers = Social.index(\"poll_question\", \"answer-v3.0.1\");\nquestions = addAnswersToQuestion(questions, answers);\n\nconst renderQuestions = () => {\n  return questions.map((question) => {\n    console.log(\n      \"W1\",\n      `${props.accountId}/widget/${\n        displayAnswerWidgetNames[question.value.questionType]\n      }`\n    );\n    return (\n      <a\n        href={`#${\n          context.accountId\n        }/widget/newVotingInterface?question=${JSON.stringify(question)}`}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n      >\n        <div\n          className=\"my-5 py-3 px-4\"\n          style={{ backgroundColor: \"#f2f2f2\", borderRadius: \"1rem\" }}\n        >\n          <Widget\n            src={`${props.accountId}/widget/answersHeader`}\n            props={{ ...question }}\n          />\n          <Widget\n            src={`${props.accountId}/widget/${\n              displayAnswerWidgetNames[question.value.questionType]\n            }`}\n            props={{ ...question }}\n          />\n        </div>\n      </a>\n    );\n  });\n};\n\nreturn (\n  <div\n    style={{\n      borderRadius: \"3px\",\n      padding: \"8% 5% 1% 5%\",\n    }}\n  >\n    {renderQuestions()}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/showQuestionsHandler"}