{"tx_hash": "jVxWZqNebzaX1z9pa93hpevmerM6yaHYjcnbbbSE37A", "action_id_social": "y9dfTWus3K4AsSnk6FxrSw393NAtYHciYU8HVmZrxSA-0-widget", "block_id": 80586870, "block_timestamp": "2022-12-13 22:14:14.978", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "showQuestionsHandler", "source_code": "State.init({ showQuestion: false, modalBlockHeight: 0 });\r\n\r\nconst displayAnswerWidgetNames = [\r\n  \"newTextAnswerInterface\",\r\n  \"newMiniMultipleChoiceInterface\",\r\n];\r\n\r\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\", {\r\n  accountId: props.accountId,\r\n});\r\n\r\nfunction closeModalClickingOnTransparent() {\r\n  console.log(\"n3\");\r\n  return (e) => {\r\n    e.target.id == \"modal\" && State.update({ showQuestion: false });\r\n  };\r\n}\r\n\r\nconst renderModal = () => {\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      id=\"modal\"\r\n      style={\r\n        state.showQuestion && { display: \"block\", backgroundColor: \"#7e7e7e70\" }\r\n      }\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      onClick={closeModalClickingOnTransparent()}\r\n    >\r\n      <div className=\"modal-dialog\" style={{ maxWidth: \"95%\" }} role=\"document\">\r\n        <div\r\n          className=\"modal-content\"\r\n          style={{ backgroundColor: \"rgb(230, 230, 230)\" }}\r\n        >\r\n          <div className=\"modal-header flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              dataDismiss=\"modal\"\r\n              ariaLabel=\"Close\"\r\n              onClick={() => State.update({ showQuestion: false })}\r\n            >\r\n              <span ariaHidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"modal-body\"\r\n            style={{\r\n              width: \"90%\",\r\n              borderRadius: \"1rem\",\r\n              backgroundColor: \"white\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <Widget\r\n              src={`${context.accountId}/widget/newVotingInterface`}\r\n              props={{ blockHeight: state.modalBlockHeight }}\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              onClick={() => State.update({ showQuestion: false })}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderQuestions = () => {\r\n  return questions.map((question) => {\r\n    return (\r\n      <div\r\n        className=\"my-5 py-3 px-4\"\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          borderRadius: \"1rem\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => {\r\n          State.update({\r\n            showQuestion: true,\r\n            modalBlockHeight: question.blockHeight,\r\n          });\r\n        }}\r\n      >\r\n        <Widget\r\n          src={`${context.accountId}/widget/answersHeader`}\r\n          props={{ ...question }}\r\n        />\r\n        <Widget\r\n          src={`${context.accountId}/widget/${\r\n            displayAnswerWidgetNames[question.value.questionType]\r\n          }`}\r\n          props={{ ...question }}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nreturn (\r\n  <div\r\n    style={{\r\n      borderRadius: \"3px\",\r\n      padding: \"0px 2%\",\r\n    }}\r\n  >\r\n    {renderQuestions()}\r\n    {state.showQuestion && renderModal()}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/showQuestionsHandler"}