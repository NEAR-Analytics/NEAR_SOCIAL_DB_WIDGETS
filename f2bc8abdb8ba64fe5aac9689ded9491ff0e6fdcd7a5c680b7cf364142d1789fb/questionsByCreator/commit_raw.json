{"tx_hash": "4Tb9ftoLpFDirQNG7t5XufGMMSphXaCxpx7a6Rt8RUuC", "action_id_social": "452NdZqAVtf52EagwhKQUfxFmk4Fs6pxwtK182urN4L7-0-widget", "block_id": 81761550, "block_timestamp": "2022-12-30 00:26:55.968", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "questionsByCreator", "source_code": "State.init({ showQuestion: false, modalBlockHeight: 0 });\r\n\r\nlet isShort = props.isShort;\r\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\", {\r\n  accountId: props.accountId,\r\n});\r\n\r\nfunction sliceString(string, newStringLength) {\r\n  if (string.length > newStringLength) {\r\n    return string.slice(0, newStringLength) + \"...\";\r\n  }\r\n  return string;\r\n}\r\n\r\nfunction isQuestionActive(question) {\r\n  return (\r\n    question.value.startTimestamp < Date.now() &&\r\n    Date.now() < question.value.endTimestamp\r\n  );\r\n}\r\n\r\nfunction getValidAnswersQtyFromQuestion(questionBlockHeight) {\r\n  // let questionParams = questions.find(q => q.blockHeight == questionBlockHeight)\r\n\r\n  const answers = Social.index(\"poll_question\", \"answer-v3.0.1\");\r\n  if (!answers) {\r\n    return \"Loading\";\r\n  }\r\n  const answersFromThisQuestion = answers.filter(\r\n    (a) => a.value.questionBlockHeight == questionBlockHeight\r\n  );\r\n  const usersWithAnswers = answersFromThisQuestion.map((a) => a.accountId);\r\n  const usersWithAnswersWithoutDuplicates = usersWithAnswers.filter(\r\n    (u, index) => usersWithAnswers.indexOf(u) == index\r\n  );\r\n  return usersWithAnswersWithoutDuplicates.length;\r\n}\r\n\r\nfunction closeModalClickingOnTransparent() {\r\n  return (e) => {\r\n    e.target.id == \"modal\" && State.update({ showQuestion: false });\r\n  };\r\n}\r\n\r\nconst renderModal = () => {\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      id=\"modal\"\r\n      style={\r\n        state.showQuestion && { display: \"block\", backgroundColor: \"#7e7e7e70\" }\r\n      }\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      onClick={closeModalClickingOnTransparent()}\r\n    >\r\n      <div className=\"modal-dialog\" style={{ maxWidth: \"95%\" }} role=\"document\">\r\n        <div\r\n          className=\"modal-content\"\r\n          style={{ backgroundColor: \"rgb(230, 230, 230)\" }}\r\n        >\r\n          <div className=\"modal-header flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              dataDismiss=\"modal\"\r\n              ariaLabel=\"Close\"\r\n              onClick={() => State.update({ showQuestion: false })}\r\n            >\r\n              <span ariaHidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"modal-body\"\r\n            style={{\r\n              width: \"90%\",\r\n              borderRadius: \"1rem\",\r\n              backgroundColor: \"white\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <Widget\r\n              src={`${widgetOwner}/widget/newVotingInterface`}\r\n              props={{\r\n                blockHeight: state.modalBlockHeight,\r\n                shouldDisplayViewAll: props.accountId == undefined,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              onClick={() => State.update({ showQuestion: false })}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nreturn (\r\n  <>\r\n    {questions.map((questionByCreator, index) => {\r\n      if ((isShort && index < 2) || !isShort) {\r\n        return (\r\n          <div\r\n            className=\"mt-2\"\r\n            style={\r\n              index == 0\r\n                ? {}\r\n                : {\r\n                    paddingTop: \"1rem\",\r\n                    backGroundColor: \"white\",\r\n                    borderTop: \"1px solid #ced4da\",\r\n                    marginTop: \"1rem\",\r\n                  }\r\n            }\r\n            onClick={() => {\r\n              State.update({\r\n                showQuestion: true,\r\n                modalBlockHeight: questionByCreator.blockHeight,\r\n              });\r\n            }}\r\n          >\r\n            <div className=\"d-flex align-content-center\">\r\n              <div\r\n                className=\"d-flex justify-content-center\"\r\n                style={{\r\n                  maxHeight: \"2.8rem\",\r\n                  aspectRatio: \"1\",\r\n                  borderRadius: \"16px\",\r\n                  backgroundColor: \"#F2F6FA\",\r\n                  marginRight: \"0.8rem\",\r\n                }}\r\n              >\r\n                {questionByCreator.value.questionType == \"0\" ? (\r\n                  <i\r\n                    className=\"bi bi-file-text\"\r\n                    style={{ padding: \"0.6rem 0.8rem\" }}\r\n                  ></i>\r\n                ) : (\r\n                  questionByCreator.value.questionType == \"1\" && (\r\n                    <i\r\n                      style={{\r\n                        transform: \"rotate(90deg)\",\r\n                        padding: \"0.6rem 0.8rem\",\r\n                      }}\r\n                      className=\"bi bi-bar-chart-line\"\r\n                    ></i>\r\n                  )\r\n                )}\r\n              </div>\r\n              <p style={{ margin: \"0.5rem 0 0 0\", fontWeight: \"500\" }}>\r\n                {sliceString(questionByCreator.value.title, 20)}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className=\"d-flex justify-content-center\"\r\n                style={{\r\n                  width: \"2.8rem\",\r\n                  marginRight: \"0.8rem\",\r\n                }}\r\n              >\r\n                {/*Structural div, do not delete*/}\r\n              </div>\r\n              <div className=\"d-flex w-100 justify-content-between flex-nowrap text-secondary mb-2\">\r\n                <div>\r\n                  <i className=\"bi bi-people\"></i>\r\n                  <span>\r\n                    {getValidAnswersQtyFromQuestion(\r\n                      questionByCreator.blockHeight\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <span>\r\n                  Ends\r\n                  <Widget\r\n                    src={`silkking.near/widget/timeAgo`}\r\n                    props={{\r\n                      timeInFuture: questionByCreator.value.endTimestamp,\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    backgroundColor: isQuestionActive(questionByCreator)\r\n                      ? \"#D9FCEF\"\r\n                      : \"#FFE5E5\",\r\n\r\n                    height: \"1.5rem\",\r\n                    width: \"4rem\",\r\n                    textAlign: \"center\",\r\n                    borderRadius: \"16px\",\r\n                    marginRight: \"1rem\",\r\n                    lineHeight: \"1.5rem\",\r\n                    fontSize: \"0.8rem\",\r\n                    letterSpacing: \"-0.025rem\",\r\n                    color: isQuestionActive(questionByCreator)\r\n                      ? \"#00B37D\"\r\n                      : \"#FF4747\",\r\n                    fontWeight: \"500\",\r\n                  }}\r\n                >\r\n                  {isQuestionActive(questionByCreator) ? \"Active\" : \"Closed\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    })}\r\n    {state.showQuestion && renderModal()}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/questionsByCreator"}