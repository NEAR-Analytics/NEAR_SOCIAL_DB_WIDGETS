{"tx_hash": "4h9G5ooqMPLaHqxfxLPEj2b7ZFGNEt1seJauH28iS4tt", "action_id_social": "Ctzmt4q7i4q9xHaf6M8JkcCWHbkGLf3iizBYFY8DC76W-0-widget", "block_id": 81759601, "block_timestamp": "2022-12-29 23:49:20.230", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "questionsByCreator", "source_code": "let isShort = props.isShort;\nlet questions = Social.index(\"poll_question\", \"question-v3.0.1\", {\n  accountId: props.accountId,\n});\n\nfunction sliceString(string, newStringLength) {\n  if (string.length > newStringLength) {\n    return string.slice(0, newStringLength) + \"...\";\n  }\n  return string;\n}\n\nfunction isQuestionActive(question) {\n  return (\n    question.value.startTimestamp < Date.now() &&\n    Date.now() < question.value.endTimestamp\n  );\n}\n\nfunction getValidAnswersQtyFromQuestion(questionBlockHeight) {\n  // let questionParams = questions.find(q => q.blockHeight == questionBlockHeight)\n\n  const answers = Social.index(\"poll_question\", \"answer-v3.0.1\");\n  if (!answers) {\n    return \"Loading\";\n  }\n  const answersFromThisQuestion = answers.filter(\n    (a) => a.value.questionBlockHeight == questionBlockHeight\n  );\n  const usersWithAnswers = answersFromThisQuestion.map((a) => a.accountId);\n  const usersWithAnswersWithoutDuplicates = usersWithAnswers.filter(\n    (u, index) => usersWithAnswers.indexOf(u) == index\n  );\n  return usersWithAnswersWithoutDuplicates.length;\n}\n\nreturn (\n  <>\n    {questions.map((questionByCreator, index) => {\n      if ((isShort && index < 2) || !isShort) {\n        return (\n          <div\n            style={\n              index == 0\n                ? {}\n                : {\n                    backGroundColor: \"white\",\n                    borderTop: \"1px solid #ced4da\",\n                    marginTop: \"1rem\",\n                  }\n            }\n          >\n            <div className=\"d-flex align-content-center\">\n              <div\n                className=\"d-flex justify-content-center\"\n                style={{\n                  maxHeight: \"2.8rem\",\n                  aspectRatio: \"1\",\n                  borderRadius: \"16px\",\n                  backgroundColor: \"#F2F6FA\",\n                  marginRight: \"0.8rem\",\n                }}\n              >\n                {questionByCreator.value.questionType == \"0\" ? (\n                  <i\n                    className=\"bi bi-file-text\"\n                    style={{ padding: \"0.6rem 0.8rem\" }}\n                  ></i>\n                ) : (\n                  questionByCreator.value.questionType == \"1\" && (\n                    <i\n                      style={{\n                        transform: \"rotate(90deg)\",\n                        padding: \"0.6rem 0.8rem\",\n                      }}\n                      className=\"bi bi-bar-chart-line\"\n                    ></i>\n                  )\n                )}\n              </div>\n              <p style={{ margin: \"0.5rem 0 0 0\", fontWeight: \"500\" }}>\n                {sliceString(questionByCreator.value.title, 20)}\n              </p>\n            </div>\n            <div className=\"d-flex\">\n              <div\n                className=\"d-flex justify-content-center\"\n                style={{\n                  width: \"2.8rem\",\n                  marginRight: \"0.8rem\",\n                }}\n              >\n                {/*Structural div, do not delete*/}\n              </div>\n              <div className=\"d-flex justify-content-between flex-nowrap text-secondary mb-2\">\n                <div>\n                  <i className=\"bi bi-people\"></i>\n                  <span>\n                    {getValidAnswersQtyFromQuestion(\n                      questionByCreator.blockHeight\n                    )}\n                  </span>\n                </div>\n                <span>\n                  Ends\n                  <Widget\n                    src={`silkking.near/widget/timeAgo`}\n                    props={{\n                      timeInFuture: questionByCreator.value.endTimestamp,\n                    }}\n                  />\n                </span>\n                <span\n                  style={{\n                    backgroundColor: isQuestionActive(questionByCreator)\n                      ? \"#D9FCEF\"\n                      : \"#FFE5E5\",\n\n                    height: \"1.5rem\",\n                    width: \"4rem\",\n                    textAlign: \"center\",\n                    borderRadius: \"16px\",\n                    marginRight: \"1rem\",\n                    lineHeight: \"1.5rem\",\n                    fontSize: \"0.8rem\",\n                    letterSpacing: \"-0.025rem\",\n                    color: isQuestionActive(questionByCreator)\n                      ? \"#00B37D\"\n                      : \"#FF4747\",\n                    fontWeight: \"500\",\n                  }}\n                >\n                  {isQuestionActive(questionByCreator) ? \"Active\" : \"Closed\"}\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    })}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/questionsByCreator"}