{"tx_hash": "8o38XQKNzN4L2VP9rtdonpoViaGGy4apzBR6exo6dWJo", "action_id_social": "3vra4ejJKedURt9PuQM6j7ZoTWtKVFqzfNF8BFHaqoiy-0-widget", "block_id": 81753143, "block_timestamp": "2022-12-29 21:46:18.504", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "questionsByCreator", "source_code": "let isShort = props.isShort ?? false;\n\nfunction sliceString(string, newStringLength) {\n  if (string.length > newStringLength) {\n    return string.slice(0, newStringLength) + \"...\";\n  }\n  return string;\n}\n\nfunction isQuestionActive(question) {\n  return (\n    question.value.startTimestamp < Date.now() &&\n    Date.now() < question.value.endTimestamp\n  );\n}\n\nfunction getValidAnswersQtyFromQuestion(questionBlockHeight) {\n  // let questionParams = questions.find(q => q.blockHeight == questionBlockHeight)\n\n  const answers = Social.index(\"poll_question\", \"answer-v3.0.1\");\n  if (!answers) {\n    return \"Loading\";\n  }\n  const answersFromThisQuestion = answers.filter(\n    (a) => a.value.questionBlockHeight == questionBlockHeight\n  );\n  const usersWithAnswers = answersFromThisQuestion.map((a) => a.accountId);\n  const usersWithAnswersWithoutDuplicates = usersWithAnswers.filter(\n    (u, index) => usersWithAnswers.indexOf(u) == index\n  );\n  return usersWithAnswersWithoutDuplicates.length;\n}\n\nreturn props.questionsByThisCreator.map((questionByCreator, index) => {\n  let divStyle =\n    index == 0\n      ? {}\n      : { backGroundColor: \"white\", borderTop: \"1px solid #ced4da\" };\n  if ((isShort && index < 2) || !isShort) {\n    return (\n      <div style={divStyle}>\n        <p style={{ fontWeight: \"500\" }}>\n          {sliceString(questionByCreator.value.title, 20)}\n        </p>\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary mb-2\">\n          <div>\n            <i className=\"bi bi-people\"></i>\n            <span>\n              {getValidAnswersQtyFromQuestion(questionByCreator.blockHeight)}\n            </span>\n          </div>\n          <span>\n            Ends\n            <Widget\n              src={`silkking.near/widget/timeAgo`}\n              props={{ timeInFuture: questionByCreator.value.endTimestamp }}\n            />\n          </span>\n          <span\n            style={{\n              backgroundColor: isQuestionActive(questionByCreator)\n                ? \"#D9FCEF\"\n                : \"#FFE5E5\",\n\n              height: \"1.5rem\",\n              width: \"4rem\",\n              textAlign: \"center\",\n              borderRadius: \"16px\",\n              marginRight: \"1rem\",\n              lineHeight: \"1.5rem\",\n              fontSize: \"0.8rem\",\n              letterSpacing: \"-0.025rem\",\n              color: isQuestionActive(questionByCreator)\n                ? \"#00B37D\"\n                : \"#FF4747\",\n              fontWeight: \"500\",\n            }}\n          >\n            {isQuestionActive(questionByCreator) ? \"Active\" : \"Closed\"}\n          </span>\n        </div>\n      </div>\n    );\n  }\n});\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/questionsByCreator"}