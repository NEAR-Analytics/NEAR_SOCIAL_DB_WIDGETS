{"tx_hash": "FHSfmYfhpV7Dv3m1iRZyin59WCeoxyhHEBPBnbwhXGSv", "action_id_social": "Dctf4Rc8mA9ErYxgQycxYeNmQTcPVP3WRkuzTjmJfs7S-0-widget", "block_id": 80436200, "block_timestamp": "2022-12-11 21:14:50.038", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "newVotingInterface", "source_code": "let question = JSON.parse(props.question) ?? props;\r\n\r\nlet profile = Social.getr(`${question.accountId}/profile`);\r\n\r\nlet questionsByThisCreator = Social.index(\"poll_question\", \"question-v3.0.1\", {\r\n  accountId: question.accountId,\r\n});\r\n\r\nlet userVote;\r\nfunction userHaveVoted() {\r\n  //TODO validate this to return boolean and if it's true set value to thisUserVote\r\n  return false;\r\n}\r\n\r\nfunction sliceString(string, newStringLenght) {\r\n  if (string.length > newStringLenght) {\r\n    return string.slice(0, newStringLenght) + \"...\";\r\n  }\r\n  return string;\r\n}\r\n\r\nfunction transformDateFormat(date) {\r\n  //TODO\r\n  return date;\r\n}\r\n\r\nconst renderVoteMultipleChoice = () => {\r\n  return question.value.choicesOptions.map((option, index) => {\r\n    //TODO you have to do the commit button inside this component. Remember to change the accountId of the src\r\n    return (\r\n      <Widget\r\n        src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/voteMultipleChoice`}\r\n        props={{\r\n          question: question,\r\n          option: option,\r\n          index: index,\r\n          haveVoted: userHaveVoted(),\r\n          userVote: userVote,\r\n        }}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nconst renderVoteText = () => {\r\n  //TODO you have to do the commit button inside this component. Remember to change the accountId of the src\r\n  return (\r\n    <Widget\r\n      src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/voteWithText`}\r\n      props={{ question: question, haveVoted: userHaveVoted() }}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderOtherQuestions = () => {\r\n  return questionsByThisCreator.map((questionByCreator, index) => {\r\n    let divStyle = index == 0 ? {} : { borderTop: \"1px solid #ced4da\" };\r\n    return (\r\n      <div style={divStyle}>\r\n        <p style={{ fontWeight: \"500\" }}>\r\n          {sliceString(questionByCreator.value.title, 20)}\r\n        </p>\r\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary\">\r\n          <span>End date</span>\r\n          <span>\r\n            {transformDateFormat(questionByCreator.value.endTimestamp)}\r\n          </span>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between flex-nowrap text-secondary\">\r\n          <span>Votes</span>\r\n          <span>({questionsByThisCreator.length})</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nfunction calculateTimeLeft() {\r\n  return Number(question.value.endTimestamp) - Date.now();\r\n}\r\n\r\nreturn (\r\n  <div\r\n    className=\"d-flex content-align-start justify-content-between\"\r\n    style={{ borderRadius: \"3px\", padding: \"2rem 3rem\" }}\r\n  >\r\n    <div style={{ width: \"75%\", marginRight: \"2rem\" }}>\r\n      <div className=\"d-flex\">\r\n        <span\r\n          style={{\r\n            backgroundColor:\r\n              question.value.startTimestamp < Date.now() &&\r\n              question.value.endTimestamp > Date.now()\r\n                ? \"rgb(153, 255, 153)\"\r\n                : \"rgb(255, 128, 128)\",\r\n\r\n            height: \"max-content\",\r\n            width: \"6rem\",\r\n            border: \"1px solid rgb(0, 82, 204)\",\r\n            textAlign: \"center\",\r\n            borderRadius: \"80px\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n        >\r\n          {question.value.startTimestamp < Date.now() &&\r\n          question.value.endTimestamp > Date.now()\r\n            ? \"Active\"\r\n            : \"Closed\"}\r\n        </span>\r\n\r\n        <span\r\n          style={{\r\n            paddingLeft: \"1.5rem\",\r\n            borderLeft: \"2px solid #ced4da\",\r\n          }}\r\n        >\r\n          End in {transformDateFormat(calculateTimeLeft())}\r\n        </span>\r\n      </div>\r\n\r\n      <h2>{question.value.title}</h2>\r\n\r\n      <div className=\"d-flex\">\r\n        <span className=\"mr-3\" style={{ fontWeight: \"500\" }}>\r\n          Created by\r\n        </span>\r\n\r\n        <Widget\r\n          src=\"mob.near/widget/ProfileImage\"\r\n          props={{\r\n            profile,\r\n            question: question.accountId,\r\n            className: \"float-start d-inline-block me-2\",\r\n            style: {\r\n              width: \"1.5rem\",\r\n              marginLeft: \"1rem\",\r\n            },\r\n          }}\r\n        />\r\n\r\n        <span style={{ fontWeigth: \"500\" }}>\r\n          {sliceString(question.accountId, 12)}\r\n        </span>\r\n      </div>\r\n\r\n      <p>{question.value.description}</p>\r\n\r\n      {question.value.tgLink != \"\" && question.value.tgLink != undefined && (\r\n        <h4>\r\n          Discussion link:\r\n          <a href={question.value.tgLink}>{question.value.tgLink}</a>\r\n        </h4>\r\n      )}\r\n\r\n      <div\r\n        style={{ border: \"1px solid #ced4da\", borderRadius: \"0.375rem\" }}\r\n        className=\"p-3 my-3\"\r\n      >\r\n        <h4>{question.value.question}</h4>\r\n\r\n        {question.value.questionType == \"0\"\r\n          ? renderVoteText()\r\n          : renderVoteMultipleChoice()}\r\n      </div>\r\n    </div>\r\n\r\n    <div style={{ minWidth: \"17rem\" }}>\r\n      <h5>Information</h5>\r\n      <div\r\n        className=\"mb-2\"\r\n        style={{\r\n          border: \"1px solid #ced4da\",\r\n          borderRadius: \"0.375rem\",\r\n          fontWeight: \"500\",\r\n          padding: \"0.5rem 1rem\",\r\n        }}\r\n      >\r\n        <div className=\"d-flex justify-content-between\">\r\n          <span>Status</span>\r\n          <span>\r\n            {question.value.startTimestamp < Date.now() &&\r\n            question.value.endTimestamp > Date.now()\r\n              ? \"Active\"\r\n              : \"Closed\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <span>Start date</span>\r\n          <span>{transformDateFormat(question.value.startTimestamp)}</span>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <span>End date</span>\r\n          <span>{transformDateFormat(question.value.endTimestamp)}</span>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <span>Creator</span>\r\n          <span>{sliceString(question.accountId, 8)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {questionsByCreator.lengh > 1 && (\r\n        <div className=\"d-flex\">\r\n          <h5>Poll by creator</h5>\r\n          <h5 style={{ marginLeft: \"0.5rem\" }}>\r\n            ({questionsByThisCreator.length})\r\n          </h5>\r\n        </div>\r\n      )}\r\n\r\n      {questionsByCreator.length > 1 && (\r\n        <div\r\n          style={{\r\n            border: \"1px solid #ced4da\",\r\n            borderRadius: \"0.375rem\",\r\n            padding: \"0.5rem 1rem\",\r\n          }}\r\n        >\r\n          {renderOtherQuestions()}\r\n          <div style={{ margin: \"1rem 0\", textAlign: \"center\" }}>\r\n            <a\r\n              href={`#${\r\n                context.accountId\r\n              }/widget/showQuestionsHandler?questions=${JSON.stringify(\r\n                questionsByThisCreator\r\n              )}`}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <button className=\"btn btn-outline-primary w-75\">View all</button>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/newVotingInterface"}