{"tx_hash": "2rCpMDCAbwETSa7c6qEWXEBPgEojgLodMGrujzyZhUCn", "action_id_social": "7yNjMTHPipPqzpsSDL2ocsv8P7SBCyJYQDM85p57puib-0-widget", "block_id": 89329217, "block_timestamp": "2023-04-11 10:32:59.957", "signer_id": "birchmd.near", "widget_name": "tic-tac-toe", "source_code": "const account_id = \"ttt.nearcon.birchmd.near\";\r\nconst method_name = \"get_move\";\r\nconst default_state = [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"];\r\n\r\ninitState({\r\n  board: default_state,\r\n  player: \"X\",\r\n  pendingPlayer: \"X\",\r\n  winner: null,\r\n});\r\n\r\nconst resetState = () => {\r\n  const player = state.pendingPlayer;\r\n  State.update({\r\n    board: default_state,\r\n    player,\r\n    winner: null,\r\n  });\r\n  if (player == \"O\") {\r\n    computerMove();\r\n  }\r\n};\r\n\r\nconst setPendingPlayer = (pendingPlayer) => {\r\n  State.update({ pendingPlayer });\r\n};\r\n\r\nconst computerMove = () => {\r\n  const response = Near.view(account_id, method_name, {\r\n    state: state.board.join(\"\"),\r\n  });\r\n  let winner;\r\n  if (response.winner) {\r\n    if (response.winner == \"Empty\") {\r\n      winner = \"Draw\";\r\n    } else {\r\n      winner = [\"Winner:\", response.winner].join(\" \");\r\n    }\r\n  } else {\r\n    winner = null;\r\n  }\r\n  State.update({\r\n    board: Array.from(response.updated_state),\r\n    winner,\r\n  });\r\n};\r\n\r\nconst playerMove = (index) => {\r\n  if (!state.winner && state.board[index] == \".\") {\r\n    state.board[index] = state.player;\r\n    computerMove();\r\n  }\r\n};\r\n\r\nconst getCell = (index) => {\r\n  let value = state.board[index];\r\n  if (value == \".\") {\r\n    value = \"kk\";\r\n  }\r\n  value;\r\n};\r\n\r\nconst BottomCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n`;\r\nconst TopLeftCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-right: 1px solid;\r\n    border-bottom: 1px solid;\r\n`;\r\nconst TopCenterCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-bottom: 1px solid;\r\n`;\r\nconst TopRightCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-left: 1px solid;\r\n    border-bottom: 1px solid;\r\n`;\r\nconst MiddleLeftCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-right: 1px solid;\r\n    border-bottom: 1px solid;\r\n`;\r\nconst MiddleCenterCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-bottom: 1px solid;\r\n`;\r\nconst MiddleRightCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-left: 1px solid;\r\n    border-bottom: 1px solid;\r\n`;\r\nconst BottomLeftCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-right: 1px solid;\r\n`;\r\nconst BottomCenterCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n`;\r\nconst BottomRightCell = styled.td`\r\n    padding: 15px;\r\n    border-collapse: collapse;\r\n    border-left: 1px solid;\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    <table>\r\n      <tr>\r\n        <TopLeftCell onClick={() => playerMove(0)}>\r\n          {state.board[0]}\r\n        </TopLeftCell>\r\n        <TopCenterCell onClick={() => playerMove(1)}>\r\n          {state.board[1]}\r\n        </TopCenterCell>\r\n        <TopRightCell onClick={() => playerMove(2)}>\r\n          {state.board[2]}\r\n        </TopRightCell>\r\n      </tr>\r\n      <tr>\r\n        <MiddleLeftCell onClick={() => playerMove(3)}>\r\n          {state.board[3]}\r\n        </MiddleLeftCell>\r\n        <MiddleCenterCell onClick={() => playerMove(4)}>\r\n          {state.board[4]}\r\n        </MiddleCenterCell>\r\n        <MiddleRightCell onClick={() => playerMove(5)}>\r\n          {state.board[5]}\r\n        </MiddleRightCell>\r\n      </tr>\r\n      <tr>\r\n        <BottomLeftCell onClick={() => playerMove(6)}>\r\n          {state.board[6]}\r\n        </BottomLeftCell>\r\n        <BottomCenterCell onClick={() => playerMove(7)}>\r\n          {state.board[7]}\r\n        </BottomCenterCell>\r\n        <BottomRightCell onClick={() => playerMove(8)}>\r\n          {state.board[8]}\r\n        </BottomRightCell>\r\n      </tr>\r\n    </table>\r\n    <br></br>\r\n    {state.winner && <div>{state.winner}</div>}\r\n    <br></br>\r\n    <label for=\"selectPlayer\">Play as:</label>\r\n    <select\r\n      id=\"selectPlayer\"\r\n      onChange={(e) => setPendingPlayer(e.target.value)}\r\n    >\r\n      <option value=\"X\">X</option>\r\n      <option value=\"O\">O</option>\r\n    </select>\r\n    <div class=\"mb-3\">\r\n      <button onClick={() => resetState()}>New Game</button>\r\n    </div>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/birchmd.near/widget/tic-tac-toe"}