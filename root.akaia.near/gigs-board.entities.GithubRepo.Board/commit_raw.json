{"tx_hash": "FcWtWHYTqkmGvoBcUMQbQEiDeBbV2Mqbz4kb7UDR3US3", "action_id_social": "BkMxZJktDGaWyZQSuG1JgN3Ndjwn5z6Nvi8yUetiwmpd-0-widget", "block_id": 91650348, "block_timestamp": "2023-05-12T02:21:00.792Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.entities.GithubRepo.Board", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst GithubRepoBoard = ({\n  boardId,\n  contentTypes,\n  columns,\n  linkedPage,\n  name,\n  repoURL,\n}) => {\n  State.init({\n    ticketByColumn: columns.reduce(\n      (registry, { title }) => ({ ...registry, [title]: [] }),\n      {}\n    ),\n  });\n\n  if (repoURL) {\n    if (contentTypes.PullRequest) {\n      const pullRequests = (\n        fetch(\n          `https://api.github.com/repos/${repoURL\n            .split(\"/\")\n            .slice(-2)\n            .join(\"/\")}/pulls`\n        ).body ?? []\n      ).map((pullRequest) => ({ ...pullRequest, type: \"PullRequest\" }));\n\n      State.update({\n        ticketByColumn: columns.reduce(\n          (registry, column) => ({\n            ...registry,\n\n            [column.title]: [\n              ...(registry[column.title] ?? []),\n\n              ...pullRequests.filter((pullRequest) =>\n                pullRequest.labels.some((label) =>\n                  column?.labelFilters.some((searchTerm) =>\n                    label.name.includes(searchTerm)\n                  )\n                )\n              ),\n            ],\n          }),\n\n          ticketByColumn\n        ),\n      });\n    }\n\n    console.log(state.ticketByColumn);\n\n    if (contentTypes.Issue) {\n      const issues = (\n        fetch(\n          `https://api.github.com/repos/${repoURL\n            .split(\"/\")\n            .slice(-2)\n            .join(\"/\")}/issues`\n        ).body ?? []\n      ).map((issue) => ({ ...issue, type: \"Issue\" }));\n    }\n  }\n\n  return (\n    <div>\n      <div class=\"row mb-2\">\n        {boardId ? (\n          <div class=\"col\">\n            <small class=\"text-muted\">\n              <a\n                class=\"card-link\"\n                href={href(linkedPage, { boardId })}\n                rel=\"noreferrer\"\n                role=\"button\"\n                target=\"_blank\"\n                title=\"Link to this board\"\n              >\n                <span class=\"hstack gap-3\">\n                  <i class=\"bi bi-share\" />\n                  <span>Link to this board</span>\n                </span>\n              </a>\n            </small>\n          </div>\n        ) : null}\n      </div>\n\n      <div class=\"row\">\n        {columns.map((column) => (\n          <div class=\"col-3\" key={column.title}>\n            <div class=\"card\">\n              <div class=\"card-body border-secondary\">\n                <h6 class=\"card-title d-flex align-items-center gap-2\">\n                  {column.title}\n\n\t\t\t\t\t\t\t\t\t<span class=\"badge rounded-pill bg-secondary\">\n\t\t\t\t\t\t\t\t\t\t{state.ticketByColumn[column.title].length}\n\t\t\t\t\t\t\t\t\t</span>\n                </h6>\n\n                {(state.ticketByColumn[column.title] ?? []).map((data) =>\n                  widget(\"entities.GithubRepo.TicketCard\", { data }, data.id)\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nreturn GithubRepoBoard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.entities.GithubRepo.Board", "__row_index": 1}