{"tx_hash": "8upnY4kExTn4XcUDTWbeJNdmz2985TyqGXC4YaWvA22C", "action_id_social": "7ks9ambX2z8ocHF3gaAqhRJe2bsWvC7AuS6dLZTy23RC-0-widget", "block_id": 92638978, "block_timestamp": "2023-05-25T00:38:55.876Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.pages.community.github", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"shared/mocks\" */\n/**\n * Reads a board config from DevHub contract storage.\n * Currently a mock.\n *\n * Boards are indexed by their ids.\n */\nconst boardConfigByBoardId = ({ boardId }) => ({\n  id: boardId,\n\n  columns: {\n    [uuid()]: {\n      description: \"Lorem ipsum\",\n      labelTerms: [\"S-draft\"],\n      title: \"Draft\",\n    },\n  },\n\n  dataTypes: {\n    Issue: { enabled: false, locked: true },\n    PullRequest: { enabled: true, locked: true },\n  },\n\n  description: \"Latest NEAR Enhancement Proposals by status\",\n  repoURL: \"https://github.com/near/NEPs\",\n  title: \"NEAR Protocol NEPs\",\n});\n/* END_INCLUDE: \"shared/mocks\" */\n/* INCLUDE: \"shared/lib/form\" */\n/**\n *! TODO: Extract into separate library module\n *! once `useForm` is converted into a form factory widget\n */\nconst traversalUpdate = ({\n  input,\n  target: treeOrBranch,\n  path: [currentBranchKey, ...remainingBranch],\n  params,\n  via: nodeUpdate,\n}) => ({\n  ...treeOrBranch,\n\n  [currentBranchKey]:\n    remainingBranch.length > 0\n      ? traversalUpdate({\n          input,\n\n          target:\n            typeof treeOrBranch[currentBranchKey] === \"object\"\n              ? treeOrBranch[currentBranchKey]\n              : {\n                  ...((treeOrBranch[currentBranchKey] ?? null) !== null\n                    ? { __archivedLeaf__: treeOrBranch[currentBranchKey] }\n                    : {}),\n                },\n\n          path: remainingBranch,\n          via: nodeUpdate,\n        })\n      : nodeUpdate({\n          input,\n          lastKnownState: treeOrBranch[currentBranchKey],\n          params,\n        }),\n});\n\nconst fieldDefaultUpdate = ({\n  input,\n  lastKnownState,\n  params: { arrayDelimiter },\n}) => {\n  switch (typeof input) {\n    case \"boolean\":\n      return input;\n\n    case \"object\":\n      return Array.isArray(input) && typeof lastKnownState === \"string\"\n        ? input.join(arrayDelimiter ?? \",\")\n        : input;\n\n    case \"string\":\n      return Array.isArray(lastKnownState)\n        ? input.split(arrayDelimiter ?? \",\").map((string) => string.trim())\n        : input;\n\n    default: {\n      if ((input ?? null) === null) {\n        switch (typeof lastKnownState) {\n          case \"boolean\":\n            return !lastKnownState;\n\n          default:\n            return lastKnownState;\n        }\n      } else return input;\n    }\n  }\n};\n\nconst useForm = ({ stateKey: formStateKey }) => ({\n  formState: state[formStateKey],\n\n  formUpdate:\n    ({ path: fieldPath, via: fieldCustomUpdate, ...params }) =>\n    (fieldInput) =>\n      State.update((lastKnownState) =>\n        traversalUpdate({\n          input: fieldInput?.target?.value ?? fieldInput,\n          target: lastKnownState,\n          path: [formStateKey, ...fieldPath],\n          params,\n\n          via:\n            typeof fieldCustomUpdate === \"function\"\n              ? fieldCustomUpdate\n              : fieldDefaultUpdate,\n        })\n      ),\n});\n/* END_INCLUDE: \"shared/lib/form\" */\n/* INCLUDE: \"shared/lib/gui\" */\nconst Card = styled.div`\n  &:hover {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n\nconst CompactContainer = styled.div`\n  width: fit-content !important;\n  max-width: 100%;\n`;\n/* END_INCLUDE: \"shared/lib/gui\" */\n/* INCLUDE: \"shared/lib/uuid\" */\nconst uuid = () =>\n  [Date.now().toString(16)]\n    .concat(\n      Array.from(\n        { length: 4 },\n        () => Math.floor(Math.random() * 0xffffffff) & 0xffffffff\n      ).map((value) => value.toString(16))\n    )\n    .join(\"-\");\n/* END_INCLUDE: \"shared/lib/uuid\" */\n\nconst GithubPage = ({ boardId, label }) => {\n  State.init({\n    boardConfig: {\n      id: uuid(),\n      columns: {},\n\n      dataTypes: {\n        Issue: { enabled: false, locked: true },\n        PullRequest: { enabled: true, locked: true },\n      },\n\n      description: \"Latest NEAR Enhancement Proposals by status\",\n      repoURL: \"https://github.com/near/NEPs\",\n      title: \"NEAR Protocol NEPs\",\n    },\n\n    isEditorEnabled: false,\n    ...Storage.get(\n      \"state\",\n      `${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.components.community.CommunityHeader`\n    ),\n  });\n\n  const { formState, formUpdate } = useForm({ stateKey: \"boardConfig\" });\n\n  console.log(formState);\n\n  const onEditorToggle = () =>\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      isEditorEnabled: !lastKnownState.isEditorEnabled,\n    }));\n\n  const columnsCreateNew = ({ lastKnownState }) => {\n    if (Object.keys(lastKnownState).length < 6) {\n      const id = uuid();\n\n      return {\n        ...lastKnownState,\n        [id]: { id, description: \"\", labelTerms: [], title: \"New column\" },\n      };\n    }\n  };\n\n  return widget(\"components.community.Layout\", {\n    label,\n    tab: \"GitHub\",\n    children: (\n      <div className=\"d-flex flex-column gap-5\">\n        {widget(\"components.toggle\", {\n          active: state.isEditorEnabled,\n\n          className: [\n            \"position-fixed\",\n            \"d-flex justify-content-center align-items-center\",\n            \"shadow-md rounded-pill p-4\",\n          ].join(\" \"),\n\n          direction: \"rtl\",\n          key: \"editor-toggle\",\n          label: \"Editor mode\",\n          onSwitch: onEditorToggle,\n\n          style: {\n            zIndex: 99,\n            right: 24,\n            bottom: 24,\n            backgroundColor: \"#f3f3f3\",\n          },\n        })}\n\n        {state.isEditorEnabled ? (\n          <div\n            className={[\n              \"d-flex flex-column gap-3\",\n              \"border border-2 border-primary rounded-2 p-3 w-100\",\n            ].join(\" \")}\n          >\n            <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n              <i className=\"bi bi-kanban-fill\" />\n              <span>{formState.title} board configuration</span>\n            </h5>\n\n            <div className=\"d-flex gap-3 flex-column flex-lg-row\">\n              <div className=\"input-group-text border-0 d-flex flex-column flex-1 flex-shrink-0\">\n                <span id={`${formState.id}-title`}>Title</span>\n\n                <input\n                  aria-describedby={`${formState.id}-title`}\n                  className=\"form-control\"\n                  onChange={formUpdate({ path: [\"title\"] })}\n                  placeholder=\"NEAR Protocol NEPs\"\n                  type=\"text\"\n                  value={formState.title}\n                />\n              </div>\n\n              <div\n                className={[\n                  \"input-group-text border-0\",\n                  \"d-flex flex-column justify-content-evenly flex-4 w-100\",\n                ].join(\" \")}\n              >\n                <span id={`${formState.id}-repoURL`}>\n                  GitHub repository URL\n                </span>\n\n                <input\n                  aria-describedby={`${formState.id}-repoURL`}\n                  className=\"form-control\"\n                  onChange={formUpdate({ path: [\"repoURL\"] })}\n                  placeholder=\"https://github.com/example-org/example-repo\"\n                  type=\"text\"\n                  value={formState.repoURL}\n                />\n              </div>\n            </div>\n\n            <div className=\"d-flex gap-3 flex-column flex-lg-row\">\n              <CompactContainer className=\"d-flex gap-3 flex-column justify-content-start p-3 ps-0\">\n                <span\n                  className=\"d-inline-flex gap-2\"\n                  id={`${formState.id}-dataTypes`}\n                >\n                  <i class=\"bi bi-database-fill\" />\n                  <span>Tracked data</span>\n                </span>\n\n                {Object.entries(formState.dataTypes).map(\n                  ([typeName, { enabled, locked }]) =>\n                    widget(\n                      \"components.toggle\",\n                      {\n                        active: enabled,\n                        className: \"w-100\",\n                        disabled: locked,\n                        key: typeName,\n                        label: typeName,\n\n                        onSwitch: formUpdate({\n                          path: [\"dataTypes\", typeName, \"enabled\"],\n                        }),\n                      },\n\n                      typeName\n                    )\n                )}\n              </CompactContainer>\n\n              <div className=\"input-group-text border-0 d-flex flex-column w-100\">\n                <span id={`${formState.id}-description`}>Description</span>\n\n                <textarea\n                  aria-describedby={`${formState.id}-description`}\n                  className=\"form-control h-75\"\n                  onChange={formUpdate({ path: [\"description\"] })}\n                  placeholder=\"Latest NEAR Enhancement Proposals by status.\"\n                  type=\"text\"\n                  value={formState.description}\n                />\n              </div>\n            </div>\n\n            <div className=\"d-flex align-items-center justify-content-between\">\n              <span className=\"d-inline-flex gap-2 m-0\">\n                <i className=\"bi bi-list-task\" />\n                <span>Columns ( max. 6 )</span>\n              </span>\n            </div>\n\n            <div className=\"d-flex flex-column align-items-center gap-3\">\n              {Object.values(formState.columns).map(\n                ({ id, description, labelTerms, title }) => (\n                  <div\n                    class=\"d-flex flex-column gap-3 rounded-2 p-3 w-100 bg-secondary bg-opacity-25\"\n                    key={id}\n                  >\n                    <div className=\"d-flex flex-column flex-lg-row gap-3 align-items-center w-100\">\n                      <div className=\"d-flex flex-column flex-grow-1 flex-md-grow-0 flex-shrink-0\">\n                        <span id={`${formState.id}-column-${id}-title`}>\n                          Title\n                        </span>\n\n                        <input\n                          aria-describedby={`${formState.id}-column-${id}-title`}\n                          className=\"form-control\"\n                          onChange={formUpdate({\n                            path: [\"columns\", id, \"title\"],\n                          })}\n                          placeholder=\"\ud83d\udc40 Review\"\n                          type=\"text\"\n                          value={title}\n                        />\n                      </div>\n\n                      <div className=\"d-flex flex-column flex-grow-1 border-0 bg-transparent w-100\">\n                        <span id={`${formState.id}-column-${id}-description`}>\n                          Description\n                        </span>\n\n                        <input\n                          aria-describedby={`${formState.id}-column-${id}-description`}\n                          className=\"form-control\"\n                          onChange={formUpdate({\n                            path: [\"columns\", id, \"description\"],\n                          })}\n                          placeholder=\"NEPs that need a review by Subject Matter Experts.\"\n                          type=\"text\"\n                          value={description}\n                        />\n                      </div>\n                    </div>\n\n                    <div\n                      className=\"d-flex flex-column\"\n                      style={{ width: \"inherit\" }}\n                    >\n                      <span\n                        className=\"text-wrap\"\n                        id={`${formState.id}-column-${title}-searchTerms`}\n                      >\n                        Search terms for labels to attach, comma-separated\n                      </span>\n\n                      <input\n                        aria-describedby={`${formState.id}-column-${title}-searchTerms`}\n                        aria-label=\"Search terms for included labels\"\n                        className=\"form-control\"\n                        onChange={formUpdate({\n                          path: [\"columns\", id, \"labelTerms\"],\n                        })}\n                        placeholder=\"WG-, draft, review, proposal, ...\"\n                        type=\"text\"\n                        value={labelTerms.join(\", \")}\n                      />\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n\n            <div className=\"d-flex align-items-center justify-content-between\">\n              <button\n                className=\"btn btn-secondary d-inline-flex gap-2\"\n                disabled={Object.keys(formState.columns).length >= 6}\n                onClick={formUpdate({\n                  path: [\"columns\"],\n                  via: columnsCreateNew,\n                })}\n              >\n                <i class=\"bi bi-plus-lg\" />\n                <span>New column</span>\n              </button>\n\n              <button\n                disabled={!formState.hasChanges || \"DELETE WHEN DONE\"}\n                className={[\n                  \"btn\",\n                  (boardId ?? null) === null ? \"btn-primary\" : \"btn-secondary\",\n                  \"d-inline-flex gap-2 align-items-center\",\n                ].join(\" \")}\n                style={{ width: \"fit-content\" }}\n              >\n                <span>\ud83d\udcbe</span>\n                <span>( WIP ) Save as new board</span>\n              </button>\n\n              {(boardId ?? null) === null ? null : (\n                <button\n                  disabled={!formState.hasChanges}\n                  className=\"btn btn-primary d-inline-flex gap-2 align-items-center\"\n                  style={{ width: \"fit-content\" }}\n                >\n                  <span>\ud83d\udcbe</span>\n                  <span>Save changes</span>\n                </button>\n              )}\n            </div>\n          </div>\n        ) : null}\n\n        {!boardId && widget(\"entity.github-repo.board\", formState)}\n\n        {boardId &&\n          widget(\"entity.github-repo.board\", {\n            ...boardConfigByBoardId(boardId),\n            pageURL: boardId ? href(\"community.github\", { boardId }) : null,\n          })}\n      </div>\n    ),\n  });\n};\n\nreturn GithubPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.pages.community.github", "__row_index": 2}