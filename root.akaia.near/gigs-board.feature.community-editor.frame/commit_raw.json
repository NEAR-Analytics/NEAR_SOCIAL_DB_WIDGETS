{"tx_hash": "8pBa3pQXvy28bmeBzKzLdJzjWKKpSmD2yXf9xG5udiyM", "action_id_social": "DpZcxg92hujvkz5fJtPVJm8TV8HVbpsraCAcN8dRyoCD-0-widget", "block_id": 94338069, "block_timestamp": "2023-06-16T21:19:13.801Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.feature.community-editor.frame", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/lib/record\" */\nconst pick = (object, subsetKeys) =>\n  Object.fromEntries(\n    Object.entries(object ?? {}).filter(([key, _]) => subsetKeys.includes(key))\n  );\n/* END_INCLUDE: \"core/lib/record\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst contractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  edit_community_github: ({ handle, github }) =>\n    Near.call(contractAccountId, \"edit_community_github\", { handle, github }) ??\n    null,\n\n  get_access_control_info: () =>\n    Near.view(contractAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_communities: () =>\n    Near.view(contractAccountId, \"get_all_communities\") ?? null,\n\n  get_community: ({ handle }) =>\n    Near.view(contractAccountId, \"get_community\", { handle }) ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(contractAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  get_root_members: () =>\n    Near.view(contractAccountId, \"get_root_members\") ?? null,\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nconst communityDefaults = {\n  handle: \"\",\n  name: \"\",\n  description: \"\",\n  tag: \"\",\n  bio_markdown: \"\",\n  admins: [context.accountId],\n};\n\nconst CommunityEditorFrame = ({ handle }) => {\n  const accessControlInfo = DevHub.get_access_control_info();\n\n  if (accessControlInfo === null || communityData === null) {\n    return <div>Loading...</div>;\n  }\n\n  State.init({\n    activeSection: 0,\n    data: null,\n    isCommunityNew: true,\n    isEditingAllowed: false,\n\n    isSupervisionAllowed:\n      accessControlInfo.members_list[\"team:moderators\"]?.children?.includes?.(\n        context.accountId\n      ) ?? false,\n  });\n\n  if (typeof handle === \"string\" && state.data === null) {\n    const data = DevHub.get_community({ handle });\n\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      data,\n      isCommunityNew: false,\n      isEditingAllowed: (data?.admins ?? []).includes(context.accountId),\n    }));\n  } else if (typeof handle !== \"string\" && state.data === null) {\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      data: communityDefaults,\n      isCommunityNew: true,\n      isEditingAllowed: true,\n    }));\n  }\n\n  const onSubformSubmit = (partial) => {\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      data: { ...lastKnownState.data, ...partial },\n    }));\n  };\n\n  const onSubmit = () =>\n    Near.call(\n      nearDevGovGigsContractAccountId,\n      state.isCommunityNew ? \"add_community\" : \"edit_community\",\n\n      {\n        handle: state.isCommunityNew ? state.data.handle : handle,\n\n        community: {\n          ...state.data,\n\n          admins: state.data.admins.filter(\n            (maybeAccountId) => maybeAccountId.length > 0\n          ),\n        },\n      }\n    );\n\n  const onDelete = () =>\n    Near.call(nearDevGovGigsContractAccountId, \"delete_community\", { handle });\n\n  return (\n    <div className=\"d-flex flex-column align-items-center gap-4 p-4\">\n      {state.data !== null ? (\n        <>\n          {widget(\"feature.community-editor.branding-section\", {\n            data: state.data,\n            isEditingAllowed: state.isEditingAllowed,\n            onSubmit: onSubformSubmit,\n          })}\n\n          {widget(\"components.organism.form\", {\n            classNames: { submitAdornment: \"bi-arrow-down-circle-fill\" },\n            data: state.data,\n            heading: \"Basic information\",\n            isEditorActive: state.isCommunityNew,\n            isMutable: state.isEditingAllowed || state.isSupervisionAllowed,\n            onSubmit: onSubformSubmit,\n            submitLabel: state.isCommunityNew ? \"Next\" : \"Save\",\n\n            schema: {\n              name: {\n                inputProps: {\n                  min: 2,\n                  max: 30,\n                  placeholder: \"Community name.\",\n                  required: true,\n                },\n\n                label: \"Name\",\n                order: 1,\n              },\n\n              description: {\n                inputProps: {\n                  min: 2,\n                  max: 60,\n\n                  placeholder:\n                    \"Describe your community in one short sentence that will appear in the discovery communities page.\",\n\n                  required: true,\n                },\n\n                label: \"Description\",\n                order: 2,\n              },\n\n              handle: {\n                inputProps: {\n                  min: 2,\n                  max: 40,\n\n                  placeholder:\n                    \"Choose unique URL handle for your community by adding letters and numbers. Example: zero-knowledge.\",\n\n                  required: true,\n                },\n\n                label: \"Handle\",\n                order: 3,\n              },\n\n              tag: {\n                inputProps: {\n                  min: 2,\n                  max: 20,\n\n                  placeholder:\n                    \"Choose one tag for your community. Any posts with this tag will show up in your community feed.\",\n\n                  required: true,\n                },\n\n                label: \"Tag\",\n                order: 4,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.form\", {\n            classNames: { submitAdornment: \"bi-arrow-down-circle-fill\" },\n            data: state.data,\n            heading: \"About\",\n            isMutable: state.isEditingAllowed || state.isSupervisionAllowed,\n            onSubmit: onSubformSubmit,\n            submitLabel: state.isCommunityNew ? \"Next\" : \"Save\",\n\n            schema: {\n              bio_markdown: {\n                format: \"markdown\",\n\n                inputProps: {\n                  min: 2,\n                  max: 200,\n\n                  placeholder:\n                    \"Tell more about your community. This will appear in the About section of your community\u2019s homepage.\",\n                },\n\n                label: \"Bio\",\n                multiline: true,\n                order: 1,\n              },\n\n              twitter_handle: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Twitter\",\n                order: 2,\n              },\n\n              github_handle: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Github\",\n                order: 3,\n              },\n\n              telegram_handle: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Telegram handle\",\n                order: 4,\n              },\n\n              website_url: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Website\",\n                order: 5,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.form\", {\n            classNames: { submitAdornment: \"bi-arrow-down-circle-fill\" },\n            data: state.data,\n            heading: \"Permissions\",\n            isMutable: state.isEditingAllowed || state.isSupervisionAllowed,\n            onSubmit: onSubformSubmit,\n            submitLabel: state.isCommunityNew ? \"Next\" : \"Save\",\n\n            schema: {\n              admins: {\n                format: \"comma-separated\",\n                inputProps: { required: true },\n                label: \"Admins\",\n                order: 1,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.form\", {\n            classNames: { submitAdornment: \"bi-arrow-down-circle-fill\" },\n            data: state.data?.wiki1 ?? {},\n            heading: \"Wiki page 1\",\n            isMutable: state.isEditingAllowed || state.isSupervisionAllowed,\n            onSubmit: (value) => onSubformSubmit({ wiki1: value }),\n            submitLabel: state.isCommunityNew ? \"Next\" : \"Save\",\n\n            schema: {\n              name: {\n                label: \"Name\",\n                order: 1,\n              },\n\n              content_markdown: {\n                format: \"markdown\",\n                label: \"Content\",\n                multiline: true,\n                order: 2,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.form\", {\n            classNames: { submitAdornment: \"bi-arrow-down-circle-fill\" },\n            data: state.data?.wiki2 ?? {},\n            heading: \"Wiki page 2\",\n            isMutable: state.isEditingAllowed || state.isSupervisionAllowed,\n            onSubmit: (value) => onSubformSubmit({ wiki2: value }),\n            submitLabel: state.isCommunityNew ? \"Next\" : \"Save\",\n\n            schema: {\n              name: {\n                label: \"Name\",\n                order: 1,\n              },\n\n              content_markdown: {\n                format: \"markdown\",\n                label: \"Content\",\n                multiline: true,\n                order: 2,\n              },\n            },\n          })}\n\n          {state.isSupervisionAllowed || state.isEditingAllowed ? (\n            <div\n              className=\"d-flex justify-content-center p-4 w-100\"\n              style={{ maxWidth: 896 }}\n            >\n              {state.isSupervisionAllowed && !state.isCommunityNew\n                ? widget(\"components.atom.button\", {\n                    classNames: {\n                      root: \"btn-lg btn-outline-danger border-none\",\n                    },\n\n                    disabled: !state.isSupervisionAllowed,\n                    label: \"Delete community\",\n                    onClick: onDelete,\n                  })\n                : null}\n\n              {widget(\"components.atom.button\", {\n                classNames: {\n                  root: \"btn-lg btn-success\",\n                  adornment: [\n                    \"bi\",\n                    state.isCommunityNew\n                      ? \"bi-rocket-takeoff-fill\"\n                      : \"bi-cloud-arrow-up-fill\",\n                  ].join(\" \"),\n                },\n\n                disabled: !(state.isCommunityNew\n                  ? true\n                  : state.isSupervisionAllowed || state.isEditingAllowed),\n\n                label: state.isCommunityNew ? \"Launch\" : \"Save\",\n                onClick: onSubmit,\n              })}\n            </div>\n          ) : null}\n        </>\n      ) : (\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center w-100\"\n          style={{ height: 384 }}\n        >\n          <h2 className=\"h2\">Community doesn't exist.</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nreturn CommunityEditorFrame(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.feature.community-editor.frame", "__row_index": 1}