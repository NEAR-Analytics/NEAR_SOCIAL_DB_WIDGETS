{"tx_hash": "5vPPuqGHCeR2CNeK29uRpfeYNscVEpuTsrouRh9CCZNg", "action_id_social": "AzSY3hoqEcBZ3btF2ZHwMbkeSZkNWfoz32J8W86N7kik-0-widget", "block_id": 92968940, "block_timestamp": "2023-05-29T08:47:43.460Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.feature.github.integration.kanban", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"shared/lib/form\" */\n/**\n *! TODO: Extract into separate library module\n *! once `useForm` is converted into a form factory widget\n */\nconst traversalUpdate = ({\n  input,\n  target: treeOrBranch,\n  path: [currentBranchKey, ...remainingBranch],\n  params,\n  via: nodeUpdate,\n}) => ({\n  ...treeOrBranch,\n\n  [currentBranchKey]:\n    remainingBranch.length > 0\n      ? traversalUpdate({\n          input,\n\n          target:\n            typeof treeOrBranch[currentBranchKey] === \"object\"\n              ? treeOrBranch[currentBranchKey]\n              : {\n                  ...((treeOrBranch[currentBranchKey] ?? null) !== null\n                    ? { __archivedLeaf__: treeOrBranch[currentBranchKey] }\n                    : {}),\n                },\n\n          path: remainingBranch,\n          via: nodeUpdate,\n        })\n      : nodeUpdate({\n          input,\n          lastKnownState: treeOrBranch[currentBranchKey],\n          params,\n        }),\n});\n\nconst fieldDefaultUpdate = ({\n  input,\n  lastKnownState,\n  params: { arrayDelimiter },\n}) => {\n  switch (typeof input) {\n    case \"boolean\":\n      return input;\n\n    case \"object\":\n      return Array.isArray(input) && typeof lastKnownState === \"string\"\n        ? input.join(arrayDelimiter ?? \",\")\n        : input;\n\n    case \"string\":\n      return Array.isArray(lastKnownState)\n        ? input.split(arrayDelimiter ?? \",\").map((string) => string.trim())\n        : input;\n\n    default: {\n      if ((input ?? null) === null) {\n        switch (typeof lastKnownState) {\n          case \"boolean\":\n            return !lastKnownState;\n\n          default:\n            return lastKnownState;\n        }\n      } else return input;\n    }\n  }\n};\n\nconst useForm = ({ stateKey: formStateKey }) => ({\n  formState: state[formStateKey],\n\n  formUpdate:\n    ({ path: fieldPath, via: fieldCustomUpdate, ...params }) =>\n    (fieldInput) =>\n      State.update((lastKnownState) =>\n        traversalUpdate({\n          input: fieldInput?.target?.value ?? fieldInput,\n          target: lastKnownState,\n          path: [formStateKey, ...fieldPath],\n          params,\n\n          via:\n            typeof fieldCustomUpdate === \"function\"\n              ? fieldCustomUpdate\n              : fieldDefaultUpdate,\n        })\n      ),\n});\n/* END_INCLUDE: \"shared/lib/form\" */\n/* INCLUDE: \"shared/lib/gui\" */\nconst Card = styled.div`\n  &:hover {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n\nconst CompactContainer = styled.div`\n  width: fit-content !important;\n  max-width: 100%;\n`;\n/* END_INCLUDE: \"shared/lib/gui\" */\n/* INCLUDE: \"shared/lib/uuid\" */\nconst uuid = () =>\n  [Date.now().toString(16)]\n    .concat(\n      Array.from(\n        { length: 4 },\n        () => Math.floor(Math.random() * 0xffffffff) & 0xffffffff\n      ).map((value) => value.toString(16))\n    )\n    .join(\"-\");\n\nconst uuidIndexed = (data) => {\n  const id = uuid();\n\n  return Object.fromEntries([[id, { ...data, id }]]);\n};\n/* END_INCLUDE: \"shared/lib/uuid\" */\n/* INCLUDE: \"shared/mocks\" */\nconst communities = {\n  \"zero-knowledge\": {\n    overviewId: 397,\n    eventsId: 401,\n\n    icon: \"https://ipfs.near.social/ipfs/bafkreiajwq6ep3n7veddozji2djv5vviyisabhycbweslvpwhsoyuzcwi4\",\n\n    cover:\n      \"https://ipfs.near.social/ipfs/bafkreihgxg5kwts2juldaeasveyuddkm6tcabmrat2aaq5u6uyljtyt7lu\",\n\n    title: \"Zero Knowledge\",\n    desc: \"Building a zero knowledge ecosystem on NEAR.\",\n  },\n\n  protocol: {\n    overviewId: 412,\n    eventsId: 413,\n\n    icon: \"https://ipfs.near.social/ipfs/bafkreidpitdafcnhkp4uyomacypdgqvxr35jtfnbxa5s6crby7qjk2nv5a\",\n\n    cover:\n      \"https://ipfs.near.social/ipfs/bafkreicg4svzfz5nvllomsahndgm7u62za4sib4mmbygxzhpcl4htqwr4a\",\n\n    title: \"Protocol\",\n    desc: \"Supporting the ongoing innovation of the NEAR Protocol.\",\n\n    integrations: {\n      github: {\n        kanban: {\n          boards: {\n            \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\": {\n              id: \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\",\n\n              columns: {\n                \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\": {\n                  id: \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\",\n                  description: \"Lorem ipsum\",\n                  labelSearchTerms: [\"S-draft\"],\n                  title: \"Draft\",\n                },\n              },\n\n              dataTypesIncluded: { Issue: false, PullRequest: true },\n              description: \"Latest NEAR Enhancement Proposals by status\",\n              repoURL: \"https://github.com/near/NEPs\",\n              title: \"NEAR Protocol NEPs\",\n            },\n          },\n        },\n      },\n    },\n  },\n\n  tooling: {\n    overviewId: 416,\n    eventsId: 417,\n\n    icon: \"https://ipfs.near.social/ipfs/bafkreie2eaj5czmpfe6pe53kojzcspgozebdsonffwvbxtpuipnwahybvi\",\n\n    cover:\n      \"https://ipfs.near.social/ipfs/bafkreiehzr7z2fhoqqmkt3z667wubccbch6sqtsnvd6msodyzpnf72cszy\",\n\n    title: \"Tooling\",\n    desc: \"Supporting the ongoing innovation of tooling.\",\n  },\n\n  \"contract-standards\": {\n    overviewId: 414,\n    eventsId: 415,\n\n    icon: \"https://ipfs.near.social/ipfs/bafkreiepgdnu7soc6xgbyd4adicbf3eyxiiwqawn6tguaix6aklfpir634\",\n\n    cover:\n      \"https://ipfs.near.social/ipfs/bafkreiaowjqxds24fwcliyriintjd4ucciprii2rdxjmxgi7f5dmzuscey\",\n\n    title: \"Contract Standards\",\n    desc: \"Coordinating the contribution to the NEAR dapp standards.\",\n  },\n};\n/* END_INCLUDE: \"shared/mocks\" */\n\nconst dataTypesLocked = {\n  Issue: true,\n  PullRequest: true,\n};\n\nconst boardConfigDefaults = {\n  id: uuid(),\n  columns: {},\n  dataTypesIncluded: { Issue: false, PullRequest: true },\n  description: \"\",\n  repoURL: \"\",\n  title: \"\",\n};\n\nconst GithubIntegrationSetupFrame = ({ label, pageURL }) => {\n  const communityGitHubKanbanBoards =\n    communities[label].integrations?.github?.kanban?.boards ?? {};\n\n  State.init({\n    boardConfig: null,\n\n    editingMode: \"form\",\n    isEditingAllowed: true, // According to user permission level\n    isEditorEnabled: false,\n\n    ...Storage.get(\n      \"state\",\n      `${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.components.community.CommunityHeader`\n    ),\n  });\n\n  const onEditorToggle = (forcedState) =>\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      isEditorEnabled: forcedState ?? !lastKnownState.isEditorEnabled,\n    }));\n\n  const onEditingModeChange = ({ target: { value } }) =>\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      editingMode: value,\n    }));\n\n  if (\n    state.boardConfig === null &&\n    Object.keys(communityGitHubKanbanBoards).length > 0\n  ) {\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      boardConfig: Object.values(communityGitHubKanbanBoards)[0],\n    }));\n  }\n\n  const boardsCreateNew = () =>\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      boardConfig: boardConfigDefaults,\n      isEditorEnabled: true,\n    }));\n\n  const { formState, formUpdate } = useForm({ stateKey: \"boardConfig\" });\n\n  const columnsCreateNew = ({ lastKnownState }) =>\n    Object.keys(lastKnownState).length < 6\n      ? {\n          ...lastKnownState,\n\n          ...uuidIndexed({\n            description: \"\",\n            labelSearchTerms: [],\n            title: \"New column\",\n          }),\n        }\n      : lastKnownState;\n\n  const columnsDeleteById =\n    (id) =>\n    ({ lastKnownState }) =>\n      Object.fromEntries(\n        Object.entries(lastKnownState).filter(([columnId]) => columnId !== id)\n      );\n\n  const form =\n    formState !== null ? (\n      <>\n        <div className=\"d-flex gap-3 flex-column flex-lg-row\">\n          <div className=\"input-group-text border-0 d-flex flex-column flex-1 flex-shrink-0\">\n            <span id={`${formState.id}-title`}>Title</span>\n\n            <input\n              aria-describedby={`${formState.id}-title`}\n              className=\"form-control\"\n              onChange={formUpdate({ path: [\"title\"] })}\n              placeholder=\"NEAR Protocol NEPs\"\n              type=\"text\"\n              value={formState.title}\n            />\n          </div>\n\n          <div\n            className={[\n              \"input-group-text border-0\",\n              \"d-flex flex-column justify-content-evenly flex-4 w-100\",\n            ].join(\" \")}\n          >\n            <span id={`${formState.id}-repoURL`}>GitHub repository URL</span>\n\n            <input\n              aria-describedby={`${formState.id}-repoURL`}\n              className=\"form-control\"\n              onChange={formUpdate({ path: [\"repoURL\"] })}\n              placeholder=\"https://github.com/example-org/example-repo\"\n              type=\"text\"\n              value={formState.repoURL}\n            />\n          </div>\n        </div>\n\n        <div className=\"d-flex gap-3 flex-column flex-lg-row\">\n          <CompactContainer className=\"d-flex gap-3 flex-column justify-content-start p-3 ps-0\">\n            <span\n              className=\"d-inline-flex gap-2\"\n              id={`${formState.id}-dataTypesIncluded`}\n            >\n              <i class=\"bi bi-database-fill\" />\n              <span>Tracked data</span>\n            </span>\n\n            {Object.entries(formState.dataTypesIncluded).map(\n              ([typeName, enabled]) =>\n                widget(\n                  \"components.atom.toggle\",\n                  {\n                    active: enabled,\n                    className: \"w-100\",\n                    disabled: dataTypesLocked[typeName],\n                    key: typeName,\n                    label: typeName,\n\n                    onSwitch: formUpdate({\n                      path: [\"dataTypesIncluded\", typeName],\n                    }),\n                  },\n\n                  typeName\n                )\n            )}\n          </CompactContainer>\n\n          <div className=\"input-group-text border-0 d-flex flex-column w-100\">\n            <span id={`${formState.id}-description`}>Description</span>\n\n            <textarea\n              aria-describedby={`${formState.id}-description`}\n              className=\"form-control h-75\"\n              onChange={formUpdate({ path: [\"description\"] })}\n              placeholder=\"Latest NEAR Enhancement Proposals by status.\"\n              type=\"text\"\n              value={formState.description}\n            />\n          </div>\n        </div>\n\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <span className=\"d-inline-flex gap-2 m-0\">\n            <i className=\"bi bi-list-task\" />\n            <span>Columns ( max. 6 )</span>\n          </span>\n        </div>\n\n        <div className=\"d-flex flex-column align-items-center gap-3\">\n          {Object.values(formState.columns).map(\n            ({ id, description, labelSearchTerms, title }) => (\n              <div\n                class=\"d-flex flex-column gap-3 rounded-2 p-3 w-100 bg-secondary bg-opacity-25\"\n                key={id}\n              >\n                <div class=\"d-flex gap-3\">\n                  <div\n                    className=\"d-flex flex-column flex-grow-1\"\n                    style={{ width: \"inherit\" }}\n                  >\n                    <span id={`${formState.id}-column-${id}-title`}>Title</span>\n\n                    <input\n                      aria-describedby={`${formState.id}-column-${id}-title`}\n                      className=\"form-control\"\n                      onChange={formUpdate({\n                        path: [\"columns\", id, \"title\"],\n                      })}\n                      placeholder=\"\ud83d\udc40 Review\"\n                      type=\"text\"\n                      value={title}\n                    />\n                  </div>\n\n                  <button\n                    class=\"btn btn-outline-danger\"\n                    onClick={formUpdate({\n                      path: [\"columns\"],\n                      via: columnsDeleteById(id),\n                    })}\n                    title=\"Delete column\"\n                  >\n                    <i class=\"bi bi-file-earmark-minus-fill\" />\n                  </button>\n                </div>\n\n                <div\n                  className=\"d-flex flex-column\"\n                  style={{ width: \"inherit\" }}\n                >\n                  <span id={`${formState.id}-column-${id}-description`}>\n                    Description\n                  </span>\n\n                  <input\n                    aria-describedby={`${formState.id}-column-${id}-description`}\n                    className=\"form-control\"\n                    onChange={formUpdate({\n                      path: [\"columns\", id, \"description\"],\n                    })}\n                    placeholder=\"NEPs that need a review by Subject Matter Experts.\"\n                    type=\"text\"\n                    value={description}\n                  />\n                </div>\n\n                <div\n                  className=\"d-flex flex-column\"\n                  style={{ width: \"inherit\" }}\n                >\n                  <span\n                    className=\"text-wrap\"\n                    id={`${formState.id}-column-${title}-searchTerms`}\n                  >\n                    Search terms for all the labels MUST be presented in\n                    included tickets, comma-separated\n                  </span>\n\n                  <input\n                    aria-describedby={`${formState.id}-column-${title}-searchTerms`}\n                    aria-label=\"Search terms for included labels\"\n                    className=\"form-control\"\n                    onChange={formUpdate({\n                      path: [\"columns\", id, \"labelSearchTerms\"],\n                    })}\n                    placeholder=\"WG-, draft, review, proposal, ...\"\n                    type=\"text\"\n                    value={labelSearchTerms.join(\", \")}\n                  />\n                </div>\n              </div>\n            )\n          )}\n        </div>\n      </>\n    ) : null;\n\n  return (\n    <div className=\"d-flex flex-column gap-4\">\n      {state.isEditorEnabled && formState !== null ? (\n        <div\n          className={[\n            \"d-flex flex-column gap-3\",\n            \"border border-2 border-primary rounded-2 p-3 w-100\",\n          ].join(\" \")}\n        >\n          <div className=\"d-flex align-items-center justify-content-between gap-3\">\n            <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n              <i className=\"bi bi-wrench-adjustable-circle-fill\" />\n              <span>Board configuration</span>\n            </h5>\n\n            {widget(\"components.atom.button-switch\", {\n              currentValue: state.editingMode,\n              key: \"editingMode\",\n              onChange: onEditingModeChange,\n\n              options: [\n                { label: \"Form\", value: \"form\" },\n                { label: \"JSON\", value: \"JSON\" },\n              ],\n\n              title: \"Editing mode selection\",\n            })}\n          </div>\n\n          {state.editingMode === \"form\" ? (\n            form\n          ) : (\n            <div className=\"d-flex flex-column flex-grow-1 border-0 bg-transparent w-100\">\n              <textarea\n                className=\"form-control\"\n                disabled\n                rows=\"12\"\n                type=\"text\"\n                value={JSON.stringify(formState, null, \"\\t\")}\n              />\n            </div>\n          )}\n\n          <div className=\"d-flex align-items-center justify-content-end gap-3\">\n            <button\n              className=\"btn btn-outline-secondary d-inline-flex gap-2 me-auto\"\n              disabled={Object.keys(formState.columns).length >= 6}\n              onClick={formUpdate({\n                path: [\"columns\"],\n                via: columnsCreateNew,\n              })}\n            >\n              <i class=\"bi bi-plus-lg\" />\n              <span>New column</span>\n            </button>\n\n            <button\n              className=\"btn btn-outline-danger d-inline-flex gap-2 align-items-center\"\n              onClick={() => onEditorToggle(false)}\n              style={{ width: \"fit-content\" }}\n            >\n              <span>Cancel</span>\n            </button>\n\n            <button\n              disabled={!formState.hasChanges}\n              className=\"btn btn-primary d-inline-flex gap-2 align-items-center\"\n              style={{ width: \"fit-content\" }}\n            >\n              <i className=\"bi bi-file-arrow-up-fill\" />\n              <span>Save</span>\n            </button>\n          </div>\n        </div>\n      ) : null}\n\n      {state.boardConfig !== null ? (\n        widget(\"entity.github-repo.board\", {\n          ...state.boardConfig,\n          editorTrigger: () => onEditorToggle(true),\n          isEditable: state.isEditingAllowed,\n          pageURL,\n        })\n      ) : (\n        <div\n          className=\"d-flex flex-column align-items-center justify-content-center gap-4\"\n          style={{ height: 384 }}\n        >\n          <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n            This community doesn't have GitHub integrations\n          </h5>\n\n          <button\n            className=\"btn btn-primary d-inline-flex gap-2\"\n            onClick={boardsCreateNew}\n          >\n            <i class=\"bi bi-kanban-fill\" />\n            <span>Create board</span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nreturn GithubIntegrationSetupFrame(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.feature.github.integration.kanban", "__row_index": 0}