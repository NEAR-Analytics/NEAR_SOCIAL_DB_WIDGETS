{"tx_hash": "7Lt3jyzuoNu7cVcsVSF7hHYHLVSdC2aGLEPPGBZZgFRN", "action_id_social": "EM9MXz1zGQPJxwHhqZ5SucQtvroAddHq3zbjre7L338j-0-widget", "block_id": 92266186, "block_timestamp": "2023-05-20T02:49:31.113Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.entity.github-repo.board", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\n/**\n * Reads a board config from DevHub contract storage.\n * Currently a mock.\n *\n * Boards are indexed by their ids.\n */\nconst boardConfigByBoardId = ({ boardId }) => {\n  return {\n    probablyUUIDv4: {\n      id: \"probablyUUIDv4\",\n      columns: [{ title: \"Draft\", labelFilters: [\"S-draft\"] }],\n      dataTypes: { Issue: true, PullRequest: true },\n      description: \"Latest NEAR Enhancement Proposals by status\",\n      repoURL: \"https://github.com/near/NEPs\",\n      title: \"NEAR Protocol NEPs\",\n    },\n  }[boardId];\n};\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n\nconst CompactContainer = styled.div`\n  width: fit-content !important;\n  max-width: 100%;\n`;\n\nconst FormCheckLabel = styled.label`\n  white-space: nowrap;\n`;\n/* END_INCLUDE: \"common.jsx\" */\n\nconst GithubRepoBoard = ({ dataTypes, columns, pageURL, repoURL, title }) => {\n  State.init({\n    pullRequestByColumn: {},\n    issueByColumn: {},\n  });\n\n  const dataToColumns = (data) =>\n    columns.reduce(\n      (registry, column) => ({\n        ...registry,\n\n        [column.title]: [\n          ...(registry[column.title] ?? []),\n\n          ...data.filter((pullRequest) =>\n            pullRequest.labels.some((label) =>\n              column?.labelFilters.some((searchTerm) =>\n                label.name.includes(searchTerm)\n              )\n            )\n          ),\n        ],\n      }),\n\n      {}\n    );\n\n  if (repoURL) {\n    if (dataTypes.PullRequest) {\n      const pullRequests = (\n        fetch(\n          `https://api.github.com/repos/${repoURL\n            .split(\"/\")\n            .slice(-2)\n            .join(\"/\")}/pulls`\n        ).body ?? []\n      ).map((pullRequest) => ({ ...pullRequest, type: \"PullRequest\" }));\n\n      State.update({\n        pullRequestByColumn: dataToColumns(pullRequests),\n      });\n    }\n\n    console.log(state.pullRequestByColumn);\n\n    if (dataTypes.Issue) {\n      const issues = (\n        fetch(\n          `https://api.github.com/repos/${repoURL\n            .split(\"/\")\n            .slice(-2)\n            .join(\"/\")}/issues`\n        ).body ?? []\n      ).map((issue) => ({ ...issue, type: \"Issue\" }));\n\n      State.update({\n        issueByColumn: dataToColumns(issues),\n      });\n    }\n\n    console.log(state.issueByColumn);\n  }\n\n  return (\n    <div className=\"d-flex flex-column gap-3\">\n      <div className=\"d-flex justify-content-between\">\n        <h3 class=\"m-0\">{title}</h3>\n\n        {true ? (\n          <a\n            className=\"card-link d-inline-flex\"\n            href={pageURL}\n            rel=\"noreferrer\"\n            role=\"button\"\n            target=\"_blank\"\n            title=\"Link to this board\"\n          >\n            <span className=\"hstack gap-3\">\n              <i className=\"bi bi-share\" />\n              <span>Link to this board</span>\n            </span>\n          </a>\n        ) : null}\n      </div>\n\n      <div className=\"row\">\n        {columns.map((column) => (\n          <div className=\"col-3\" key={column.title}>\n            <CompactContainer className=\"card\">\n              <CompactContainer className=\"card-body d-flex flex-column gap-3 border-secondary\">\n                <h6 className=\"card-title d-flex align-items-center gap-2\">\n                  {column.title}\n\n                  <span className=\"badge rounded-pill bg-secondary\">\n                    {(state.pullRequestByColumn[column.title] ?? []).length}\n                  </span>\n                </h6>\n\n                {(state.pullRequestByColumn[column.title] ?? []).map((data) =>\n                  widget(\n                    \"entity.github-repo.ticket\",\n                    { data, format: \"card\" },\n                    data.id\n                  )\n                )}\n              </CompactContainer>\n            </CompactContainer>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nreturn GithubRepoBoard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.entity.github-repo.board", "__row_index": 0}