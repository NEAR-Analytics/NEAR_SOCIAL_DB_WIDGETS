{"tx_hash": "DUthh2BSp7NW8fTosYBgJAW6PPM5Hv2WikReh5DpArzA", "action_id_social": "HG32v64jDMYwG4Vfw6AC3NAHeAsDTiR4FRDGKRE56jqn-0-widget", "block_id": 91651206, "block_timestamp": "2023-05-12T02:36:49.847Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.pages.community.GithubActivity", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst GithubActivityPage = ({ action, boardId, label }) => {\n  State.init({\n    newBoardConfig: {\n      id: \"probablyUUIDv4\",\n\n      columns: [\n        { title: \"DRAFT\", labelFilters: [\"S-draft\"] },\n        { title: \"REVIEW\", labelFilters: [\"S-review\"] },\n      ],\n\n      contentTypes: { Issue: false, PullRequest: true },\n      name: \"NEAR Protocol NEPs\",\n      repoURL: \"https://github.com/near/NEPs\",\n    },\n  });\n\n  /**\n   * Reads a board config from DevHub contract storage.\n   * Currently a mock.\n   *\n   * Boards are indexed by their ids.\n   */\n  const boardConfigByBoardId = ({ boardId }) => {\n    return {\n      probablyUUIDv4: {\n        id: \"probablyUUIDv4\",\n\n        columns: [\n          { title: \"DRAFT\", labelFilters: [\"S-draft\"] },\n          { title: \"REVIEW\", labelFilters: [\"S-review\"] },\n        ],\n\n        contentTypes: { Issue: false, PullRequest: true },\n        name: \"NEAR Protocol NEPs\",\n        repoURL: \"https://github.com/near/NEPs\",\n      },\n    }[boardId];\n  };\n\n  const TabContent = (\n    <div class=\"flex column gap-4\">\n      {action === \"new\" && (\n        <div>\n          <h4>New GitHub activity board</h4>\n\n          <div></div>\n        </div>\n      )}\n\n      {action === \"new\" &&\n        widget(\"entities.GithubRepo.Board\", state.newBoardConfig)}\n\n      {action === \"view\" &&\n        widget(\"entities.GithubRepo.Board\", {\n          ...boardConfigByBoardId(boardId),\n          linkedPage: \"GithubActivity\",\n        })}\n    </div>\n  );\n\n  return widget(\"components.community.Layout\", {\n    label,\n    tab: \"Custom GitHub board title\",\n    children: TabContent,\n  });\n};\n\nreturn GithubActivityPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.pages.community.GithubActivity", "__row_index": 0}