{"tx_hash": "C8SXFxXqyr7LhcDxaJdcFpAFZCjukTshAr8nLWtWe8M5", "action_id_social": "8qMvsJe6jrQFKYj6xPgrtKB3m9zdWsrgGtymBEWxFjX4-0-widget", "block_id": 93935445, "block_timestamp": "2023-06-11T03:22:34.166Z", "signer_id": "donating.near", "widget_name": "DonateDAO.main", "source_code": "// TO-DO\n// hookup to paymster & import abi\n// show balance of ERC20 of connected wallet\n// call in donate\n// NICE TO HAVE\n// - show transactionr reciept of donation\n// configure dropw down receiver\n// add zk account\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nlet networkId = Ethers.provider()._network.chainId;\n\n// const yourAddress = Ethers.provider().getSigner();\n// https://era.zksync.io/docs/dev/building-on-zksync/useful-address.html\nconst initalAmount = 1;\nState.init({\n  receiver: \"0xPlaceholder\",\n  networkId,\n  sender,\n  amount: initalAmount,\n  token: \"0x5DBAFaccAADa3E16213de291fA5e39c1996093D5\",\n  balance: 0,\n  tokenDecimals: \"18\",\n});\nif (\n  state.networkId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ networkId: chainIdData.chainId });\n      }\n    });\n}\n\nconsole.log(\"Network ID - \" + state.networkId); // not working\nconsole.log(\"Your ETH Address - \" + state.sender);\n\n// Support ZKSync\nif (state.chainId !== undefined && state.chainId !== 280) {\n  return (\n    <div>\n      <h3>Wrong Network - We currently support the ZKSync Era Testnet</h3>\n    </div>\n  );\n}\nconst getEVMAccountId = () => {\n  if (ethers !== undefined) {\n    return Ethers.send(\"eth_requestAccounts\", [])[0] ?? \"\";\n  }\n  return \"\";\n};\n// need to have the search result updated and selected in state\n\n// Charity helper functions\nfunction loadCharities() {\n  const res = fetch(\n    \"https://raw.githubusercontent.com/codingshot/donatedao-landing/main/data/charityList.json\"\n  );\n  return res.body && JSON.parse(res.body);\n}\nconst charityList = loadCharities();\nif (!charityList) {\n  return \"\u29d7 Loading Charities...\";\n}\n\nconst PAYMASTER_ADDRESS = \"0xaB23B553781757a8ebdFb11A9231825ff4EE4118\";\n// https://goerli.explorer.zksync.io/address/0xaB23B553781757a8ebdFb11A9231825ff4EE4118\nconst TOKEN_ADDRESS = \"0x5DBAFaccAADa3E16213de291fA5e39c1996093D5\";\n// https://goerli.explorer.zksync.io/address/0x5DBAFaccAADa3E16213de291fA5e39c1996093D5\nconst tokenDecimals = 18; // double check on contract\nconst erc20Abi = fetch(\n  \"https://gist.githubusercontent.com/veox/8800debbf56e24718f9f483e1e40c35c/raw/f853187315486225002ba56e5283c1dba0556e6f/erc20.abi.json\"\n);\nconst paymasterABI = fetch(\n  \"https://raw.githubusercontent.com/codingshot/donatedao-landing/main/data/paymaster-whitelist-abi.json\"\n); // updated with whitelist\n//   \"https://raw.githubusercontent.com/codingshot/zksync-paymaster/main/paymaster-abi.json\"\nif (!paymasterABI.ok) {\n  return \"Paymaster ABI Not ok\";\n}\nconst tokenIFace = new ethers.utils.Interface(erc20Abi.body);\n// get receiver\nconsole.log(\"Token Interface is:  -  \" + tokenIFace);\nconst getTokenBalance = () => {\n  const encodedData = tokenIFace.encodeFunctionData(\"balanceOf\", [\n    state.sender,\n  ]);\n\n  return Ethers.provider()\n    .call({\n      to: TOKEN_ADDRESS,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const senderBalanceHex = tokenIFace.decodeFunctionResult(\n        \"balanceOf\",\n        rawBalance\n      );\n\n      console.log(senderBalanceHex.toString());\n      const balanceBig = Big(senderBalanceHex.toString())\n        .div(Big(10).pow(tokenDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n      State.update({ balance: balanceBig });\n      console.log(\"Updated Balance: \" + state.balance);\n      return Big(senderBalanceHex.toString())\n        .div(Big(10).pow(tokenDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    });\n}; // how to update here\n//  const ifaceErc20 = new ethers.utils.Interface(state.erc20Abi);\n// const contract = new ethers.Contract(contractAddress, erc20Abi);\n\nconst ifacePaymaster = new ethers.utils.Interface(paymasterABI.body);\n\nconst donate = () => {\n  // add payment to charity logic here // this is where you hit paymaster\n  console.log(\"Add paymaster donate logic here\");\n  getTokenBalance();\n};\nconst handleMax = () => {\n  State.update({ amount: state.balance });\n  console.log(\"New Amount: \" + state.amount);\n}; // how to get max of selectedasset\n\nconst handleAmountChange = (e) => {\n  State.update({ amount: e.target.value });\n  console.log(\"Your ERC20 Amount: \" + state.amount);\n};\nconst handleReceiverChange = (e) => {\n  State.update({ receiver: e.target.value });\n  console.log(\"Charity Address: \" + state.receiver);\n};\n\nconst handleCharityChange = (e) => {\n  State.update({\n    receiver: charityList\n      .filter((charity) => charity.title === e.target.value)\n      .map((el) => el.address)[0],\n  });\n  console.log(\n    charityList\n      .filter((charity) => charity.title === e.target.value)\n      .map((el) => el.address)[0]\n  );\n}; // need to change this around\n\nconst Container = styled.div`\n    max-width: 95%;\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    border: 1px solid gray;\n    padding-top: 1rem;\n    border-radius: 0.5rem;\n    margin-top: 1rem;\n\n    * {\n        font-family: 'Inter custom',sans-serif;\n    }\n \n\n    background: white;\n    color: black;\n\n    .title {\n      margin-top: 8px;\n    }\n\n    .actionTabs {\n      border: 1px solid black;\n      height: 38px;\n\n      input:checked + label {\n        color: black;\n      }\n\n      label {\n        color: gray;\n        background: white !important;\n        border: 1px solid black !important;\n        height: 38px;\n        \n        &:hover {\n          color: black;\n        }\n      }\n    }\n\n    button.max {\n      border: 1px solid black;\n    }\n\n    button.action {\n      background-color: black;\n    }\n\n    .action {\n      background: black;\n      color: white;\n    }\n\n    .balance {\n      input {\n        height: 38px;\n        background: #f5f6fd;\n        color: black;\n        border: 1px solid black;\n      }\n\n    }\n\n    .assets {\n      select {\n        background: #f5f6fd;\n        color: black;\n      }\n    }\n`;\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${css}\n`,\n  });\n}\n// overlay\nState.init({\n  show: false,\n});\nconst handleOnMouseEnter = () => {\n  State.update({ show: true });\n};\nconst handleOnMouseLeave = () => {\n  State.update({ show: false });\n};\n\nconst overlay = (\n  <div\n    className=\"border m-3 p-3 rounded-4 bg-white shadow\"\n    style={{ maxWidth: \"24em\", zIndex: 1070 }}\n    onMouseEnter={handleOnMouseEnter}\n    onMouseLeave={handleOnMouseLeave}\n  >\n    This is custom ERC 20 Token Deploy on ZK Testnet\n  </div>\n);\n\nconst Theme = state.theme;\n\n// add conditional for charity // this should be emitted as an error from the smart contract\nreturn (\n  <Theme>\n    <Container>\n      <div className=\"d-flex gap-4 align-items-center mb-3 justify-content-center\">\n        <h1 className=\"title\">\ud83d\ude4f DonateDAO</h1>\n      </div>\n      <div className=\"border border-secondary border-bottom-0 border-light\" />\n      <div className=\"p-2\">\n        <div className=\"d-flex justify-content-between\">\n          <OverlayTrigger\n            show={state.show}\n            trigger={[\"hover\", \"focus\"]}\n            delay={{ show: 250, hide: 300 }}\n            placement=\"auto\"\n            overlay={overlay}\n          >\n            <span>\n              {\" \"}\n              <a\n                href={\n                  \"https://goerli.explorer.zksync.io/address/\" + state.token\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                MOCK USDC\n              </a>{\" \"}\n              Balance:\n              {state.balance}\n            </span>\n          </OverlayTrigger>\n        </div>\n        <div className=\"balance input-group\">\n          <input\n            style={{ maxWidth: \"100%\" }}\n            type=\"number\"\n            min=\".5\"\n            step=\"0.1\"\n            defaultValue={state.amount}\n            value={amount}\n            placeholder={state.amount}\n            onChange={handleAmountChange}\n          />\n          <button className=\"btn btn-light btn-sm max\" onClick={handleMax}>\n            max\n          </button>\n        </div>\n        <label>Charity Address</label>\n        <div className=\"charities\">\n          <select\n            className=\"form-select\"\n            aria-label=\"select asset\"\n            onChange={handleCharityChange}\n          >\n            <option selected disabled>\n              {\" \"}\n              Select a charity\n            </option>\n            {charityList &&\n              charityList.map((charity) => (\n                <option value={charity.title} selected={charity.selected}>\n                  {charity.title}\n                </option>\n              ))}\n            // add receiver logic here\n          </select>\n        </div>\n        <div className=\"balance input-group\">\n          <input\n            style={{ maxWidth: \"100%\" }}\n            type=\"string\"\n            defaultValue={props.amount}\n            value={receiver}\n            placeholder={state.receiver}\n            onChange={handleReceiverChange}\n          />\n        </div>\n      </div>\n      <div className=\"border border-secondary border-bottom-0 border-light\" />\n\n      <div className=\"border border-secondary border-bottom-0 border-light\" />\n      {!!state.sender ? (\n        <div className=\"p-4 d-grid gap-3\">\n          <button className=\"action btn btn-primary\" onClick={donate}>\n            Donate\n          </button>\n          {log && (\n            <div className=\"alert alert-success\" role=\"alert\">\n              <div className=\"text-truncate\" style={{ maxWidth: 300 }}>\n                {log}\n              </div>\n              <a href={explorerLink} className=\"alert-link\" target=\"_blank\">\n                Etherscan\n              </a>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className=\"row\">\n          <Web3Connect\n            className=\"btn btn-secondary\"\n            connectLabel=\"Connect To ZkSync\"\n          />\n          <button className=\" btn btn-primary\" onClick={donate}>\n            Donate\n          </button>\n        </div>\n      )}\n    </Container>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/donating.near/widget/DonateDAO.main", "__row_index": 10}