{"tx_hash": "AuAfdzWFJttaFmPwsafrp4tgTo7DRbcV78LSxFL6tNVi", "action_id_social": "bjHNYegNyZYquhNNvLuAY1mgN2eSZX6cB8bxe2X2qG2-0-widget", "block_id": 93922710, "block_timestamp": "2023-06-10T23:24:30.677Z", "signer_id": "donating.near", "widget_name": "DonateDAO.main", "source_code": "// TO-DO\n// hookup to paymster, show transactionr ecipet\n// show balance of USDC of connected wallet\n// put usdc address on ZKSync\n// check connect address instead of deposit\n// configure dropw down reciever\n// show the on chain mimum balance amount\n// add zk account\nif (state.chainId !== undefined && state.chainId !== 280) {\n  return <p>Switch to ZKSync Testnet</p>;\n} // not sure if this is working\n// https://era.zksync.io/docs/dev/building-on-zksync/useful-address.html\nState.init({\n  reciever: \"0xDoodoo\",\n}); // write now state reciever is in clipboard\n// need to have the search result updated and selected in state\n// Charity helper functions\nfunction loadCharities() {\n  const res = fetch(\n    \"https://raw.githubusercontent.com/codingshot/donatedao-landing/main/data/charityList.json\"\n  );\n  return res.body && JSON.parse(res.body);\n}\nconst charityList = loadCharities();\nif (!charityList) {\n  return \"\u29d7 Loading Charities...\";\n}\n\nconst PAYMASTER_ADDRESS = \"0xaB23B553781757a8ebdFb11A9231825ff4EE4118\";\nconst TOKEN_ADDRESS = \"0x5DBAFaccAADa3E16213de291fA5e39c1996093D5\"; // on zk sync testnet\nconst { action, amount, USDCbalance } = state;\nconst { assets } = deposit;\n// need to get USDC balance form on CHain\n\nconst getUSDCBalance = () => {\n  // add to query USDC balance on chain for ZK Testnet account, this is how we will set max\n  State.update({ USDCbalance: USDCbalance }); // not all the way correct\n};\n\nconst actionTitle = isDeposit ? \"Donate\" : \"Withdraw\";\n\nconst donate = () => {\n  // add payment to charity logic here\n};\n\nconst handleMax = () => {\n  State.update({ amount: USDCbalance });\n}; // how to get max of selectedasset\n\nconst handleAmountChange = (e) => {\n  State.update({ amount: e.target.value });\n};\nconst handleRecieverChange = (e) => {\n  State.update({ reciever: e.target.value });\n};\n\n// const handleCharityChange = (e) => {\n//   State.update({\n//     reciever: charityList?.find((a) => a.address === e.target.value),\n//   });\n// }; // need to change this around\n\n// Assuming you have a state variable called `state` which contains the `receiver` property\n\nconst handleCharityChange = (e) => {\n  // Find the charity object with the selected title\n  const selectedCharity = charityList.find(\n    (charity) => charity.title === e.target.value\n  );\n\n  if (selectedCharity) {\n    // Update the `receiver` state to the associated address\n    State.update({\n      reciever: selectedCharity.address,\n    });\n  }\n};\n\nconst Container = styled.div`\n    max-width: 90%;\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    border: 1px solid gray;\n    padding-top: 1rem;\n    border-radius: 0.5rem;\n    margin-top: 1rem;\n\n    * {\n        font-family: 'Inter custom',sans-serif;\n    }\n\n    background: white;\n    color: black;\n\n    .title {\n      margin-top: 8px;\n    }\n\n    .actionTabs {\n      border: 1px solid black;\n      height: 38px;\n\n      input:checked + label {\n        color: black;\n      }\n\n      label {\n        color: gray;\n        background: white !important;\n        border: 1px solid black !important;\n        height: 38px;\n        \n        &:hover {\n          color: black;\n        }\n      }\n    }\n\n    button.max {\n      border: 1px solid black;\n    }\n\n    button.action {\n      background-color: black;\n    }\n\n    .action {\n      background: black;\n      color: white;\n    }\n\n    .balance {\n      input {\n        height: 38px;\n        background: #f5f6fd;\n        color: black;\n        border: 1px solid black;\n      }\n\n    }\n\n    .assets {\n      select {\n        background: #f5f6fd;\n        color: black;\n      }\n    }\n`;\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst erc20Abi = fetch(\n  \"https://gist.githubusercontent.com/veox/8800debbf56e24718f9f483e1e40c35c/raw/f853187315486225002ba56e5283c1dba0556e6f/erc20.abi.json\"\n);\nconst usdcZKtestnet = \"0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4\";\nconst paymasterZKtestnet = \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\nconst paymasterContract = \"\";\nconst tokenDecimals = 18; // double check on contract\n// FETCH Paymaster ABI\n\n// see if API3 can be fetched here\n\nconst paymasterABI = fetch(\n  \"https://raw.githubusercontent.com/codingshot/zksync-paymaster/main/paymaster-abi.json\"\n);\nif (!paymasterABI.ok) {\n  return \"Loading\";\n}\n// add conditional for charity // this should be emitted as an error from the smart contract\nreturn (\n  <Theme>\n    <Container>\n      <div className=\"d-flex gap-4 align-items-center mb-3 justify-content-center\">\n        <h1 className=\"title\">\ud83d\ude4f DonateDAO</h1>\n      </div>\n      <div className=\"border border-secondary border-bottom-0 border-light\" />\n      <div className=\"p-2\">\n        <div className=\"d-flex justify-content-between\">\n          <span>\n            {\" \"}\n            USDC Balance:\n            {USDCbalance}\n          </span>\n        </div>\n        <div className=\"balance input-group\">\n          <input\n            style={{ maxWidth: \"100%\" }}\n            type=\"number\"\n            min=\"0\"\n            step=\"0.1\"\n            defaultValue={props.amount}\n            value={amount}\n            placeholder=\"0.00\"\n            onChange={handleAmountChange}\n          />\n          <button className=\"btn btn-light btn-sm max\" onClick={handleMax}>\n            max\n          </button>\n        </div>\n        <label>Charity Address</label>\n        <div className=\"charities\">\n          <select\n            className=\"form-select\"\n            aria-label=\"select asset\"\n            onChange={handleCharityChange(e)}\n          >\n            {charityList &&\n              charityList.map((charity) => (\n                <option value={charity.title} selected={charity.selected}>\n                  {charity.title}\n                </option>\n              ))}\n            // add reciever logic here\n          </select>\n        </div>\n        <div className=\"balance input-group\">\n          <input\n            style={{ maxWidth: \"100%\" }}\n            type=\"string\"\n            defaultValue={props.amount}\n            value={reciever}\n            placeholder={state.reciever}\n            onChange={handleRecieverChange}\n          />\n        </div>\n      </div>\n      <div className=\"border border-secondary border-bottom-0 border-light\" />\n\n      <div className=\"border border-secondary border-bottom-0 border-light\" />\n      {!!state.sender ? (\n        <div className=\"p-4 d-grid gap-3\">\n          <button\n            className=\"action btn btn-primary\"\n            onClick={donate}\n            disabled={isLoading}\n          >\n            {isLoading ? \"Loading...\" : actionTitle}\n          </button>\n          {log && (\n            <div className=\"alert alert-success\" role=\"alert\">\n              <div className=\"text-truncate\" style={{ maxWidth: 300 }}>\n                {log}\n              </div>\n              <a href={explorerLink} className=\"alert-link\" target=\"_blank\">\n                Etherscan\n              </a>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className=\"row\">\n          <Web3Connect\n            className=\"btn btn-secondary col-6\"\n            connectLabel=\"Connect To ZkSync\"\n          />\n          <button\n            className=\" btn btn-primary col-6\"\n            onClick={donate}\n            disabled={isLoading}\n          >\n            {chainId != 280 ? \"Connect to Donate\" : \"Donate\"}\n          </button>\n        </div>\n      )}\n    </Container>\n    <div>\n      <h1>Debug</h1>\n      <p>Input USDC Amount: {state.amount}</p>\n      <p>Input Reciever Address: {state.reciever}</p>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/donating.near/widget/DonateDAO.main", "__row_index": 9}