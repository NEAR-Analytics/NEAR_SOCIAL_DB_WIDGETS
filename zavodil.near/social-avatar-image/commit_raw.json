{"tx_hash": "9QmxJTQTuMiGuVydVCT74JC5upUgpa48JJBiWo2LiUfw", "action_id_social": "8RBcASBMzTa2Y6DiSnyHVCEKBv846KUmotxdrLjJEWNz-0-widget", "block_id": 80893745, "block_timestamp": "2022-12-18 01:37:30.895", "signer_id": "zavodil.near", "widget_name": "social-avatar-image", "source_code": "let appName = \"avtr\";\nlet ownerId = \"zavodil.near\";\nlet userId = context.accountId;\n\nlet options;\n\nconst defaultOptions = {\n  svgBackground: \"white\",\n  background: \"magenta\",\n  clothing: \"graphicShirt\",\n  clothingColor: \"black\",\n  hairColor: \"blonde\",\n  skin: \"pale\",\n  top: \"dreads01\",\n  accessories: \"round\",\n  clothingGraphic: \"pizza\",\n  clothingGraphicsColor: \"red\",\n  eyes: \"default\",\n  eyebrows: \"defaultNatural\",\n  mouth: \"default\",\n  facialHair: \"moustacheMagnum\",\n  facialHairColor: \"auburn\",\n  hatColor: \"heather\",\n  accessoriesColor: \"black\",\n  avatarLoaded: false,\n  pathLoaded: false,\n};\n\noptions = props.options ?? defaultOptions;\noptions.style = \"circle\";\n\nlet paths = props.paths;\n\nlet paths_valid =\n  Object.keys(paths.components ?? {}).length > 0 &&\n  Object.keys(paths.colors ?? {}).length > 0;\n\nconsole.log(\"preloaded paths\", paths_valid);\n\nif (!paths_valid && !options.pathLoaded) {\n  const _paths = Social.get(`${ownerId}/${appName}/**`, \"final\");\n  if (_paths) {\n    paths = _paths;\n    options.pathLoaded = true;\n  }\n}\n\nif (!paths) {\n  return \"Loading\";\n}\n\nconsole.log(paths);\n\nconst colors = paths.colors;\nconst components = paths.components;\n\nconst imgAvatar = styled.img`\n @media (max-width: 576px) {\n    margin-bottom: 1rem\n  }\n`;\n\nlet getColor = (type, option) => {\n  return colors[option].src;\n};\n\nlet getChildOrDefault = (obj, type, option) => {\n  if (typeof obj[type][option] != \"undefined\") {\n    return obj[type][option];\n  } else if ([\"facialHair\", \"accessories\"].includes(type) && option == null) {\n    return () => \"\";\n  } else {\n    console.log(type, obj, obj[type]);\n    return obj[type].default || obj[type][Object.keys(obj[type])[0]];\n  }\n};\n\nlet getTopType = (option) => {\n  if (option === \"bigHair\") {\n    return [components.top.bigHair.src, false, 0];\n  } else if (option === \"bob\") {\n    return [components.top.bob.src, false, 0];\n  } else if (option === \"bun\") {\n    return [components.top.bun.src, false, 1];\n  } else if (option === \"curly\") {\n    return [components.top.curly.src, false, 0];\n  } else if (option === \"curvy\") {\n    return [components.top.curvy.src, false, 0];\n  } else if (option === \"dreads\") {\n    return [components.top.dreads.src, false, 0];\n  } else if (option === \"frida\") {\n    return [components.top.frida.src, false, 0];\n  } else if (option === \"fro\") {\n    return [components.top.fro.src, false, 0];\n  } else if (option === \"froAndBand\") {\n    return [components.top.froAndBand.src, false, 0];\n  } else if (option === \"miaWallace\") {\n    return [components.top.miaWallace.src, false, 0];\n  } else if (option === \"longButNotTooLong\") {\n    return [components.top.longButNotTooLong.src, false, 0];\n  } else if (option === \"shavedSides\") {\n    return [components.top.shavedSides.src, false, 0];\n  } else if (option === \"straight01\") {\n    return [components.top.straight01.src, false, 0];\n  } else if (option === \"straight02\") {\n    return [components.top.straight02.src, false, 0];\n  } else if (option === \"straightAndStrand\") {\n    return [components.top.straightAndStrand.src, false, 0];\n  } else if (option === \"dreads01\") {\n    return [components.top.dreads01.src, false, 1];\n  } else if (option === \"dreads02\") {\n    return [components.top.dreads02.src, false, 1];\n  } else if (option === \"frizzle\") {\n    return [components.top.frizzle.src, false, 1];\n  } else if (option === \"shaggy\") {\n    return [components.top.shaggy.src, false, 2];\n  } else if (option === \"shaggyMullet\") {\n    return [components.top.shaggyMullet.src, false, 0];\n  } else if (option === \"shortCurly\") {\n    return [components.top.shortCurly.src, false, 1];\n  } else if (option === \"shortFlat\") {\n    return [components.top.shortFlat.src, false, 1];\n  } else if (option === \"shortRound\") {\n    return [components.top.shortRound.src, false, 1];\n  } else if (option === \"shortWaved\") {\n    return [components.top.shortWaved.src, false, 1];\n  } else if (option === \"sides\") {\n    return [components.top.sides.src, false, 1];\n  } else if (option === \"theCaesar\") {\n    return [components.top.theCaesar.src, false, 1];\n  } else if (option === \"theCaesarAndSidePart\") {\n    return [components.top.theCaesarAndSidePart.src, false, 1];\n  } else if (option === \"hat\") {\n    return [components.top.hat.src, true, 0];\n  } else if (option === \"winterHat01\") {\n    return [components.top.winterHat01.src, true, 2];\n  } else if (option === \"winterHat02\") {\n    return [components.top.winterHat02.src, true, 2];\n  } else if (option === \"winterHat03\") {\n    return [components.top.winterHat03.src, true, 2];\n  } else if (option === \"winterHat04\") {\n    return [components.top.winterHat04.src, true, 2];\n  } else if (option === \"hijab\") {\n    return [components.top.hijab.src, true, 1];\n  } else if (option === \"turban\") {\n    return [components.top.turban.src, true, 1];\n  } else if (option === \"eyepatch\") {\n    return [components.top.eyepatch.src, false, 1];\n  } else {\n    return [components.top.shortWaved.src, false, 1];\n  }\n};\n\nlet getShape = (type, option) => {\n  return getChildOrDefault(components, type, option).src;\n};\n\nlet createAvataaar = (options) => {\n  var _a;\n  let noseType = components.nose.default.src;\n  let skinType = components.skin.default.src;\n  let skinColor = getColor(\"skin\", options.skin);\n  let [topType, topTypeIsHat, topTypeZIndex] = getTopType(options.top);\n  let facialHairType = getShape(\"facialHair\", options.facialHair);\n  let facialHairColor = getColor(\"hair\", options.facialHairColor);\n  let clotheType = getShape(\"clothing\", options.clothing);\n\n  let clothingGraphic = getShape(\"clothingGraphic\", options.clothingGraphic);\n\n  let clotheColor = getColor(\"palette\", options.clothingColor);\n  let clothingGraphicsColor = getColor(\n    \"palette\",\n    options.clothingGraphicsColor\n  );\n\n  let eyeType = getShape(\"eyes\", options.eyes);\n  let eyebrowType = getShape(\"eyebrows\", options.eyebrows);\n  let mouthType = getShape(\"mouth\", options.mouth);\n  let accessoriesType = getShape(\"accessories\", options.accessories);\n  let accessoriesColor = getColor(\"palette\", options.accessoriesColor);\n  let hatColor = getColor(\"palette\", options.hatColor);\n  let hairColor = getColor(\"hair\", options.hairColor);\n\n  const group = (content, x, y) => {\n    return content.length > 0\n      ? `<g transform=\"translate(${x}, ${y})\">${content}</g>`\n      : \"\";\n  };\n\n  const top = group(\n    topType\n      .replace(\"%TOP_COLOR_1%\", hatColor)\n      .replace(\"%TOP_COLOR_2%\", hairColor),\n    7,\n    0\n  );\n\n  let content = `\n      ${group(skinType.replace(\"%SKIN_COLOR%\", skinColor), 40, 36)}\n      ${group(\n        clotheType\n          .replace(\"%CLOTHING_COLOR_1%\", clotheColor)\n          .replace(\"%CLOTHING_GRAPHICS%\", clothingGraphic)\n          .replaceAll(\"%CLOTHING_GRAPHICS_COLOR%\", clothingGraphicsColor),\n        8,\n        170\n      )}\n      ${group(mouthType, 86, 134)}\n      ${group(noseType, 112, 122)}\n      ${group(eyeType, 84, 90)}\n      ${group(eyebrowType, 84, 82)}\n      ${0 === topTypeZIndex ? top : \"\"}\n      ${\n        facialHairType\n          ? group(\n              facialHairType.replace(\"%FACIALHAIR_COLOR_1%\", facialHairColor),\n              56,\n              72\n            )\n          : \"\"\n      }\n      ${1 === topTypeZIndex ? top : \"\"}\n      ${\n        accessoriesType\n          ? group(\n              accessoriesType.replace(\n                \"%ACCESSORIES_COLOR_1%\",\n                accessoriesColor\n              ),\n              69,\n              85\n            )\n          : \"\"\n      }\n      ${2 === topTypeZIndex ? top : \"\"}\n    `;\n\n  if (options.style === \"circle\") {\n    // Create random id for the mask, solves bug in rerendering and cutting of half of the image on Firefox\n    let mask_id = Math.random().toString(36).substring(7);\n    content = `\n        ${\n          options.svgBackground\n            ? `<path fill=\"${\n                options.svgBackground == true\n                  ? \"#fff\"\n                  : colors[options.svgBackground].src\n              }\" d=\"M0 0h280v280H0z\"/>`\n            : \"\"\n        }\n        <path d=\"M260 160c0 66.274-53.726 120-120 120S20 226.274 20 160 73.726 40 140 40s120 53.726 120 120z\" fill=\"${\n          (_a = options.background) !== null && _a !== undefined // !== void 0\n            ? colors[_a].src\n            : colors.blue01.src\n        }\"/>\n        <mask id=\"${mask_id}\" maskUnits=\"userSpaceOnUse\" x=\"8\" y=\"0\" width=\"264\" height=\"280\">\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M272 0H8v160h12c0 66.274 53.726 120 120 120s120-53.726 120-120h12V0z\" fill=\"#fff\"/>\n        </mask>\n        <g mask=\"url(#${mask_id})\">\n          ${content}\n        </g>\n      `;\n  } else if (options.svgBackground) {\n    content = `\n      <path fill=\"${\n        options.svgBackground == true ? \"#fff\" : options.svgBackground\n      }\" d=\"M0 0h280v280H0z\"/>\n      ${content}\n    `;\n  }\n  options.background = undefined;\n  return `\n    <svg ${options.width ? `width=\"${options.width}\"` : \"\"} ${\n    options.height ? `height=\"${options.height}\"` : \"\"\n  } viewBox=\"0 0 280 280\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      ${content}\n    </svg>\n  `;\n};\n\nvar svg = createAvataaar(options);\nsvg = svg.replace(/\\n/g, \"\").replace(/\\s{2,}/g, \" \");\n\n// console.log(\"svg\", svg);\n\nconst buff = new Buffer(svg);\nconst base64data = buff.toString(\"base64\");\n\nreturn (\n  <imgAvatar\n    class=\"img-fluid\"\n    src={`data:image/svg+xml;base64,${base64data}`}\n    alt=\"\"\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/social-avatar-image"}