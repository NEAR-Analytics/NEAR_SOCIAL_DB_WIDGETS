{"tx_hash": "9MhcHk2agPvh9SN56yHCjb51YWjMRT9mQXekAgho8AGu", "action_id_social": "CDwzXocy3HHqhHAnsq6s1HkeKwmHomDzCc9VnXCdiG1A-0-widget", "block_id": 79555002, "block_timestamp": "2022-11-29 21:57:25.930", "signer_id": "zavodil.near", "widget_name": "MassFollowing", "source_code": "//MassFollowing\nconst userId = context.accountId;\nconst ownerId = \"zavodil.near\";\n\nif (!userId) {\n  return \"Please sign in with NEAR wallet to follow other accounts\";\n}\n\nconst accounts = Social.keys(`*/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nif (accounts === null) {\n  return \"Loading\";\n}\n\nconst followingData = Social.keys(`${userId}/graph/follow/*`, \"final\");\nif (followingData === null) {\n  return \"Loading\";\n}\n\nconst following = followingData[userId][\"graph\"][\"follow\"];\n\nlet followDev = prop.followDev ?? true;\n\nif (followDev) {\n  following[ownerId] = true;\n}\n\nState.init({\n  following,\n  followDev,\n});\n\nlet followingsAll = [];\nObject.keys(accounts).forEach((accountId) => {\n  Object.keys(accounts[accountId].graph.follow).forEach(\n    (followingAccountId) => {\n      followingsAll[followingAccountId] =\n        (followingsAll[followingAccountId] ?? 0) + 1;\n    }\n  );\n});\n\nlet followingTop = Object.keys(followingsAll).sort(\n  (a, b) => followingsAll[b] - followingsAll[a]\n);\n\nlet handleChange = (accountId) => {\n  let following = state.following;\n  following[accountId] = !following[accountId];\n  State.update({ following });\n};\n\nlet followDevChange = () => {\n  handleChange(ownerId);\n  State.update({ followDev: !state.followDev });\n};\n\nlet followingsBlocks = followingTop.map((accountId) => (\n  <li className=\"list-group-item\">\n    <div class=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        value={accountId}\n        disabled={accountId == userId}\n        id={`follow-${accountId}`}\n        name={`follow-${accountId}`}\n        onChange={() => handleChange(accountId)}\n        checked={state.following[accountId] ?? false}\n      />\n      <label className=\"form-check-label\" for={`follow-${accountId}`}>\n        <Widget\n          src=\"zavodil.near/widget/ProfileLine\"\n          props={{\n            accountId,\n          }}\n        />{\" \"}\n        <span className=\"badge rounded-pill bg-primary\">\n          {followingsAll[accountId]}\n        </span>\n      </label>\n    </div>\n  </li>\n));\n\nlet dataFollow = {};\nObject.keys(state.following).map((accountId) => {\n  let follow = !!state.following[accountId];\n  dataFollow[accountId] = follow ? \"\" : null;\n});\n\nlet dataGraph = Object.keys(state.following).map((accountId) => {\n  let follow = !!state.following[accountId];\n  return {\n    key: \"follow\",\n    value: {\n      type: follow ? \"unfollow\" : \"follow\",\n      accountId,\n    },\n  };\n});\n\nlet dataNotify = Object.keys(state.following).map((accountId) => {\n  let follow = !!state.following[accountId];\n  return {\n    key: accountId,\n    value: {\n      type: follow ? \"unfollow\" : \"follow\",\n    },\n  };\n});\n\nconst data = {\n  graph: {\n    follow: dataFollow,\n  },\n  index: {\n    graph: JSON.stringify(dataGraph),\n    notify: JSON.stringify(dataNotify),\n  },\n};\n\nreturn (\n  <>\n    <h1>Users by followers</h1>\n    <div className=\"mb-3\">\n      <CommitButton\n        disabled={context.loading}\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n        data={data}\n      >\n        {context.loading ? \"Loading\" : \"Mass Follow\"}\n      </CommitButton>\n    </div>\n\n    <ul className=\"list-group\">{followingsBlocks}</ul>\n\n    <div class=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        id={`follow-dev`}\n        onChange={() => followDevChange()}\n        checked={state.followDev}\n        name=\"follow-dev\"\n      />\n      <label className=\"form-check-label\" for=\"follow-dev\">\n        Follow widget author ({ownerId})\n      </label>\n    </div>\n  </>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/MassFollowing", "metadata.description": NaN, "metadata.image.ipfs_cid": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.social": NaN}