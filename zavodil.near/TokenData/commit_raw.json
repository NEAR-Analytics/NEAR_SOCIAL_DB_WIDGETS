{"tx_hash": "CaCWzKCb6Tj768Yba9pJqCgJx5dxs26QkZ9ePUyHRLx1", "action_id_social": "J3FKvjCE5ee8YyKxZpL1VTyu5nHNtw6B8ked9T2oMR76-0-widget", "block_id": 89495256, "block_timestamp": "2023-04-13 14:47:15.262", "signer_id": "zavodil.near", "widget_name": "TokenData", "source_code": "const tokenId = props.tokenId;\nconst network = props.network ?? \"NEAR\";\nconst accountId = context.accountId;\nconst debug = props.debug ?? false;\n\nif (!tokenId) return;\n\nlet res;\n\nswitch (network) {\n  case \"NEAR\": {\n    // FT METADATA\n    const metadata = Near.view(tokenId, \"ft_metadata\");\n    if (!metadata) return;\n\n    // FT BALANCE\n    const balance = Near.view(tokenId, \"ft_balance_of\", {\n      account_id: accountId,\n    });\n    if (!balance) return;\n\n    // REF PRICE\n    const refPricesResponse = fetch(\n      \"https://indexer.ref.finance/list-token-price\"\n    );\n    if (!refPricesResponse) return;\n    const refPrices = JSON.parse(refPricesResponse.body);\n    const refPrice = parseFloat(refPrices?.[tokenId]?.price);\n\n    res = {\n      balance,\n      balance_hr: new Big(balance)\n        .div(new Big(10).pow(metadata.decimals))\n        .toFixed(),\n      refPrice,\n      metadata,\n    };\n\n    break;\n  }\n  case \"ETH\": {\n    break;\n  }\n}\n\nif (res !== undefined && typeof props.onLoad === \"function\") {\n  props.onLoad(res);\n}\n\nreturn debug ? <>{JSON.stringify(res)}</> : <></>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/TokenData"}