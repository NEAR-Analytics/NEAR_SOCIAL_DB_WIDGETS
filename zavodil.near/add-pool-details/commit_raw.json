{"tx_hash": "ESvJ2zkmSFGmkaKrNAzgZ76kw52LRDXdBJVKayQhWFVK", "action_id_social": "5DQF2tyVxoqWbVvF2LM1EBzTsAYym5dP2fGuRQWNwaPF-0-widget", "block_id": 80506284, "block_timestamp": "2022-12-12 19:56:40.043", "signer_id": "zavodil.near", "widget_name": "add-pool-details", "source_code": "let accountId = context.accountId;\nif (!accountId) {\n  return \"Please login to add pool details\";\n}\n\nconst badgeOwners = Social.get(\n  `pool-details.near/badge/staking-pool-owner/holder/**/`,\n  \"final\"\n);\nif (!badgeOwners) {\n  return \"Loading\";\n}\n\nlet badges = [];\nObject.entries(badgeOwners).forEach((item) => {\n  badges[item[1]] = item[0];\n});\n\ninitState({\n  poolId: props.poolId ?? \"\",\n  field: \"description\",\n  fieldHint: \"\",\n  value: \"\",\n  ownerId: \"\",\n  fields: {},\n  social: {},\n  badgeOwner: \"\",\n});\n\nif (!!state.poolId && state.social == null) {\n  const social = Social.get(`pool-details.near/${state.poolId}/**/`, \"final\");\n\n  if (social && Object.keys(social).length > 0) {\n    State.update({\n      social,\n    });\n  }\n}\n\nconst updatePool = (poolId) => {\n  poolId = poolId.toLowerCase();\n  State.update({\n    poolId,\n    badgeOwner: badges[poolId] ?? \"\",\n    social: null,\n  });\n\n  if (poolId.indexOf(\".near\", poolId.length - 5) !== -1) {\n    Near.asyncView(poolId, \"get_owner_id\", {}).then((res) =>\n      State.update({ ownerId: res })\n    );\n\n    Near.asyncView(\"pool-details.near\", \"get_fields_by_pool\", {\n      pool_id: poolId,\n    }).then((res) => State.update({ fields: res }));\n  }\n};\n\nconst updateField = (field) => {\n  let fieldHint = \"\";\n  if (field == \"country_code\") {\n    fieldHint = (\n      <span>\n        List of valid{\" \"}\n        <a href={\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\"}>\n          country codes\n        </a>\n      </span>\n    );\n  } else if ([\"url\", \"logo\", \"discord\"].includes(field)) {\n    fieldHint = \"Full url with http:// or https://\";\n  } else if ([\"github\", \"telegram\", \"twitter\"].includes(field)) {\n    fieldHint = \"Just handler, without full url\";\n  } else if (field == \"other\") {\n    fieldHint = (\n      <span>\n        Use NEAR CLI to add any other value,{\" \"}\n        <a href={\"https://github.com/zavodil/near-pool-details\"}>\n          documnetation\n        </a>\n      </span>\n    );\n  }\n  State.update({ fieldHint, field });\n};\n\nconst onSetNearSocialBadge = () => {\n  const gas = 300 * 1000000000000;\n  let deposit = \"50000000000000000000000\";\n\n  Near.call(\n    \"pool-details.near\",\n    \"set_near_social_badge\",\n    { pool_id: state.poolId },\n    gas,\n    deposit\n  );\n};\n\nconst onSubmitClick = () => {\n  const gas = 300 * 1000000000000;\n\n  Near.call(\n    \"pool-details.near\",\n    \"update_field\",\n    { pool_id: state.poolId, name: state.field, value: state.value },\n    gas\n  );\n};\n\nconst fieldsStringified = `\n\\`\\`\\`json\n${JSON.stringify(state.fields || {}, undefined, 2)}\n\\`\\`\\`\n`;\nconst socialStringified = `\n\\`\\`\\`json\n${JSON.stringify(state.social || {}, undefined, 2)}\n\\`\\`\\`\n`;\n\nconst onExportClick = () => {\n  const gas = 300 * 1000000000000;\n  let deposit = \"50000000000000000000000\";\n  Near.call(\n    \"pool-details.near\",\n    \"export_to_near_social\",\n    { pool_id: state.poolId },\n    gas,\n    deposit\n  );\n};\n\nreturn (\n  <div class=\"mb-4\">\n    <h1>\n      Add Pool Details{\" \"}\n      <a href=\"/#/zavodil.near/widget/StakingPools\" target=\"_blank\">\n        <span className=\"badge bg-secondary fs-6 align-middle\">All Pools</span>\n      </a>\n    </h1>\n    <p>Add details about your whitelisted staking pool on NEAR blockchain.</p>\n    <p>\n      Data stored on a <span class=\"badge bg-secondary\">pool-details.near</span>{\" \"}\n      account.{\" \"}\n      <a href=\"https://github.com/zavodil/near-pool-details\">\n        Smart contract github.\n      </a>\n    </p>\n\n    <p>\n      Pool:{\" \"}\n      <input\n        value={state.poolId}\n        placeholder=\"zavodil.poolv1.near\"\n        onChange={(e) => updatePool(e.target.value)}\n      />\n    </p>\n    <p>\n      Field:\n      <select\n        class=\"form-select\"\n        aria-label=\"description\"\n        value={state.field}\n        onChange={(e) => updateField(e.target.value)}\n      >\n        <option value=\"name\">Project name</option>\n        <option value=\"description\">Description</option>\n        <option value=\"logo\">Logo url</option>\n        <option value=\"country_code\">Country code</option>\n        <option value=\"url\">Website URL</option>\n        <option value=\"twitter\">Twitter handler</option>\n        <option value=\"discord\">Discord</option>\n        <option value=\"github\">Github account</option>\n        <option value=\"telegram\">Telegram account</option>\n        <option value=\"email\">Email</option>\n        <option value=\"other\">Other</option>\n      </select>\n    </p>\n    {state.fieldHint && (\n      <div class=\"alert alert-warning\" role=\"alert\">\n        {state.fieldHint}.\n      </div>\n    )}\n    <p>\n      Value:\n      <input\n        disabled={state.field == \"other\"}\n        value={state.value}\n        placeholder=\"Value\"\n        onChange={(e) => State.update({ value: e.target.value })}\n      />\n    </p>\n\n    <div>\n      <button\n        disabled={\n          context.loading ||\n          !(state.value && state.field && state.poolId) ||\n          !state.ownerId ||\n          state.field == \"other\"\n        }\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n        onClick={onSubmitClick}\n      >\n        Submit\n      </button>\n\n      <button\n        disabled={context.loading || !state.ownerId}\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n        onClick={onExportClick}\n      >\n        Export pool data to NEAR.Social\n      </button>\n    </div>\n\n    {state.ownerId && (\n      <>\n        <div class=\"alert alert-success mt-3\" role=\"alert\">\n          Please sign transaction with account <strong>{state.ownerId}</strong>{\" \"}\n          to update pool <strong>{state.poolId}</strong>.\n        </div>\n\n        <div class=\"pt-4\">\n          <div>Current pool details:</div>\n          <Markdown text={fieldsStringified} />\n        </div>\n\n        <div class=\"mt-2\">\n          <div>Current Near.Social data:</div>\n          <Markdown text={socialStringified} />\n        </div>\n      </>\n    )}\n\n    {state.badgeOwner && (\n      <div class=\"mt-6\">\n        <div>\n          <span className=\"badge bg-secondary fs-6\">staking-pool-owner</span>{\" \"}\n          badge owner of <strong>{state.poolId}</strong>:\n          <Widget\n            src={\"zavodil.near/widget/ProfileLine\"}\n            props={{ accountId: state.badgeOwner }}\n          />\n        </div>\n      </div>\n    )}\n\n    {state.poolId && state.ownerId && !state.badgeOwner && (\n      <div class=\"mt-6 mb-3\">\n        <div>\n          <button\n            className={`btn ${\n              context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n            }`}\n            onClick={onSetNearSocialBadge}\n          >\n            Create Near Social Badge for {state.ownerId}\n          </button>\n        </div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": NaN, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/add-pool-details", "metadata.description": NaN, "metadata.linktree.website": NaN, "metadata.name": NaN, "metadata.tags.app": NaN, "metadata.tags.staking": NaN, "metadata.image.ipfs_cid": NaN}