{"tx_hash": "Do95n58GZ4jqfyCJ62Q1ufboEpSH5PnHyvoaFhHVFtpp", "action_id_social": "4bpbqE3V8UqVEdJUawxcpNL5jraTUmjx1sb9MgZ1qLCj-0-widget", "block_id": 78753989, "block_timestamp": "2022-11-19 00:37:43.974", "signer_id": "zavodil.near", "widget_name": "ContractPage", "source_code": "// ContractPage\nconst ownerId = \"zavodil.near\";\nconst appName = \"nametag\";\nconst profileWidgetOwner = \"mob.near\";\nconst accountId = props.contractId ?? context.accountId;\nconst shortMode = props.shortMode ?? false;\n\nconst basicProfile = props.profile ?? Social.getr(`${accountId}/profile`);\n\nconsole.log(basicProfile);\n\nconst tagsPattern = props.tagsPattern ?? `*/${appName}/${accountId}/tags/*`;\nconst tagsObject = Social.keys(tagsPattern, \"final\");\n\nconst tagClass = \"bg-success\";\nconst addPublicTagHtml = (\n  <div class={`me-1 badge ${tagClass}`}>\n    <a\n      href={`#/${ownerId}/widget/LabelEditor?contractId=${accountId}`}\n      class=\"text-white\"\n    >\n      + Add Public Tag\n    </a>\n  </div>\n);\n\nif (tagsObject === null) {\n  return \"Loading\";\n}\n\nconst tagsCount = {};\n\nconst processTagsObject = (obj) => {\n  Object.entries(obj).forEach((kv) => {\n    if (typeof kv[1] === \"object\") {\n      processTagsObject(kv[1]);\n    } else {\n      const tag = kv[0];\n      tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n    }\n  });\n};\n\nconst getTags = () => {\n  processTagsObject(tagsObject);\n  const tags = Object.entries(tagsCount);\n  tags.sort((a, b) => b[1] - a[1]);\n  return tags.map((t) => {\n    return {\n      name: t[0],\n      title: t[1] + (t[1] > 1 ? \" votes\" : \" vote\"),\n    };\n  });\n};\n\nlet hideBasicProfile = basicProfile === null || basicProfile === undefined;\n\nconst profile = {\n  name: basicProfile.name,\n  description: basicProfile.description,\n  image: basicProfile.image,\n  backgroundImage: basicProfile.backgroundImage,\n  linktree: basicProfile.linktree,\n  tags: basicProfile.tags,\n  publicTags: getTags(),\n};\n\nconst showEditButton =\n  !props.profile && accountId && accountId === context.accountId;\n\n//const name = profile.name;\nconst description = profile.description;\n//const image = profile.image;\nconst backgroundImage = profile.backgroundImage;\nconst tags = profile.tags ?? {};\nconst publicTags = profile.publicTags ?? {};\n\nconst name = props.profile.name ?? profile.name;\nconst image = props.profile.image ?? profile.image;\nconst url =\n  (image.ipfs_cid\n    ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\n    : image.url) || \"https://thewiki.io/static/media/sasha_anon.6ba19561.png\";\n\nconst linktree = props.profile.linktree ?? profile.linktree;\n\nif (hideBasicProfile || shortMode) {\n  return (\n    <div className=\"py-1 px-1\">\n      <div className=\"mx-auto\">\n        <div className=\"bg-white shadow rounded overflow-hidden\">\n          <div className=\"bg-light px-4 pb-4 \">\n            <div\n              className=\"d-md-flex justify-content-between\"\n              style={{ paddingTop: \"1rem\" }}\n            >\n              <div className=\"small\">\n                <i className=\"bi bi-person-fill text-secondary me-1\"></i>\n                {accountId}\n              </div>\n            </div>\n            {tags.length > 0 && (\n              <div>\n                {tags.map((tag) => (\n                  <span className=\"me-1 badge bg-secondary\">#{tag}</span>\n                ))}\n              </div>\n            )}\n            {publicTags.length > 0 && (\n              <div>\n                {publicTags.map((tag) => (\n                  <span className={`me-1 badge ${tagClass}`} title={tag.title}>\n                    #{tag.name}\n                  </span>\n                ))}\n                {addPublicTagHtml}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/*const linktree = Object.entries(profile.linktree ?? {});\nconst linktreeElements = {\n  website: {\n    prefix: \"https://\",\n    icon: \"bi-globe2\",\n  },\n  github: {\n    prefix: \"https://github.com/\",\n    icon: \"bi-github\",\n  },\n  twitter: {\n    prefix: \"https://twitter.com/\",\n    icon: \"bi-twitter\",\n  },\n  telegram: {\n    prefix: \"https://t.me/\",\n    icon: \"bi-telegram\",\n  },\n};\n\nconst linktreeObjects = linktree.map((o) => {\n  const key = o[0];\n  let value = o[1];\n  if (!value) {\n    return null;\n  }\n  const e = linktreeElements[key];\n  if (e.prefix) {\n    value = value && value.replace(e.prefix, \"\");\n  }\n  const icon = e.icon ? (\n    <i className={`bi ${e.icon ?? \"\"} text-secondary me-1`}></i>\n  ) : (\n    \"\"\n  );\n  return e.prefix ? (\n    <div>\n      <a href={`${e.prefix}${value}`}>\n        {icon}\n        {value}\n      </a>\n    </div>\n  ) : (\n    <div>\n      {key}: {icon}\n      {value}\n    </div>\n  );\n});\n*/\n\n/*return (\n  <div className=\"py-1 px-1\">\n    <div className=\"mx-auto\">\n      <div className=\"bg-white shadow rounded overflow-hidden\">\n        <div className=\"px-4 pt-0 pb-5 bg-dark position-relative\">\n          {backgroundImage && (\n            <Widget\n              src={`${profileWidgetOwner}/widget/Image`}\n              props={{\n                image: backgroundImage,\n                alt: \"profile background\",\n                className: \"position-absolute w-100 h-100\",\n                style: { objectFit: \"cover\", left: 0, top: 0 },\n                fallbackUrl:\n                  \"https://thewiki.io/static/media/sasha_anon.6ba19561.png\",\n              }}\n            />\n          )}\n          {showEditButton && (\n            <a\n              href={`#/${profileWidgetOwner}/widget/ProfileEditor`}\n              className=\"btn mt-4 btn-outline-light float-end position-relative\"\n              style={{ zIndex: 1 }}\n            >\n              Edit profile\n            </a>\n          )}\n          <div\n            className=\"profile-picture d-inline-block\"\n            style={{ transform: \"translateY(7rem)\" }}\n          >\n            <Widget\n              src={`${profileWidgetOwner}/widget/ProfileImage`}\n              props={{\n                profile,\n                accountId,\n                style: { width: \"10rem\", height: \"10rem\" },\n                className: \"mb-2\",\n                imageClassName:\n                  \"rounded-circle w-100 h-100 img-thumbnail d-block\",\n                thumbnail: false,\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"bg-light px-4 pb-4 \">\n          <div\n            className=\"d-md-flex justify-content-between\"\n            style={{ paddingTop: \"1rem\" }}\n          >\n            <div style={{ paddingTop: \"3rem\" }}>\n              <h4 className=\"mt-0 mb-0\">{name}</h4>\n              <p className=\"small\">\n                <i className=\"bi bi-person-fill text-secondary me-1\"></i>\n                {accountId}\n              </p>\n            </div>\n            <div style={{ minWidth: \"12rem\" }}>{linktreeObjects}</div>\n          </div>\n          {tags.length > 0 && (\n            <div>\n              {tags.map((tag) => (\n                <span className=\"me-1 mb-1 badge bg-secondary\">#{tag}</span>\n              ))}\n            </div>\n          )}\n          {publicTags.length > 0 && (\n            <div>\n              {publicTags.map((tag) => (\n                <span className={`me-1 badge ${tagClass}`} title={tag.title}>\n                  #{tag.name}\n                </span>\n              ))}\n              {addPublicTagHtml}\n            </div>\n          )}\n          {description && (\n            <>\n              <hr />\n              <div>\n                <Markdown text={description} />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n*/\n\nreturn (\n  <div className=\"profile\">\n    <div\n      className=\"profile-image float-start me-2\"\n      style={{ width: \"3em\", height: \"3em\" }}\n    >\n      <img\n        className=\"rounded w-100 h-100\"\n        style={{ objectFit: \"cover\" }}\n        src={url}\n        alt=\"profile image\"\n      />\n    </div>\n    <div className=\"profile-info d-inline-block\">\n      <div className=\"profile-links\">\n        <span className=\"profile-name\">{name || \"No-name profile\"}</span>\n        <div className=\"d-inline-block profile-account text-secondary\">\n          @{accountId}\n        </div>\n        {linktree.website && (\n          <div className=\"ms-1 d-inline-block\">\n            <a href={`https://${linktree.website}`}>\n              <i className=\"bi bi-globe2 text-secondary\"></i>\n            </a>\n          </div>\n        )}\n        {linktree.github && (\n          <div className=\"ms-1 d-inline-block\">\n            <a href={`https://github.com/${linktree.github}`}>\n              <i className=\"bi bi-github text-secondary\"></i>\n            </a>\n          </div>\n        )}\n        {linktree.twitter && (\n          <div className=\"ms-1 d-inline-block\">\n            <a href={`https://twitter.com/${linktree.twitter}`}>\n              <i className=\"bi bi-twitter text-secondary\"></i>\n            </a>\n          </div>\n        )}\n        {linktree.telegram && (\n          <div className=\"ms-1 d-inline-block\">\n            <a href={`https://t.me/${linktree.telegram}`}>\n              <i className=\"bi bi-telegram text-secondary\"></i>\n            </a>\n          </div>\n        )}\n      </div>\n\n      {publicTags.length > 0 && (\n        <span>\n          {publicTags.map((tag) => (\n            <span className={`me-1 badge ${tagClass}`} title={tag.title}>\n              #{tag.name}\n            </span>\n          ))}\n          {addPublicTagHtml}\n        </span>\n      )}\n    </div>\n    {showEditButton && (\n      <a\n        href={`#/${profileWidgetOwner}/widget/ProfileEditor`}\n        className=\"profile-edit btn btn-sm btn-outline-secondary border-0 align-top\"\n      >\n        Edit\n      </a>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/ContractPage"}