{"tx_hash": "7DwBhGkG6PR5mpRAPMaUFBJ45A2kswoJMkqfbhkCC6vz", "action_id_social": "3okKCMqL3C42KeYt99xH3ZfXyGxE8SDT8HzP8fARnX7P-0-widget", "block_id": 89817026, "block_timestamp": "2023-04-17 21:05:14.862", "signer_id": "zavodil.near", "widget_name": "swap", "source_code": "const NETWORK_NEAR = \"NEAR\";\nconst NETWORK_ETH = \"ETH\";\nconst NETWORK_ZKSYNC = \"ZKSYNC\";\nconst NETWORK_TODO = \"TODO\";\n\nState.init({\n  initialized: false,\n  inputAssetModalHidden: true,\n  outputAssetModalHidden: true,\n  inputAssetTokenId: \"NEAR\",\n  outputAssetTokenId:\n    \"dac17f958d2ee523a2206206994597c13d831ec7.factory.bridge.near\",\n  inputAssetAmount: 1,\n  outputAssetAmount: 1,\n  network: NETWORK_NEAR,\n  assets: [\n    \"NEAR\",\n    \"token.v2.ref-finance.near\",\n    \"dac17f958d2ee523a2206206994597c13d831ec7.factory.bridge.near\",\n    \"token.burrow.near\",\n  ],\n  slippagetolerance: \"0.5\",\n  reloadPools: false,\n  estimate: {},\n  loadRes: (value) => {\n    State.update({\n      estimate: value,\n      outputAssetAmount: value === null ? \"\" : value.estimate,\n    });\n  },\n});\n\nconst refReferralId = props.refReferralId ?? \"zavodil.near\";\n\nif (!state.initialized && ethers !== undefined) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      console.log(\"chainId\", chainIdData.chainId);\n      if (chainIdData.chainId === 324) {\n        State.update({\n          assets: [\n            \"0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4\", // USDC\n            \"0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91\", // WETH\n            \"0x7400793aAd94C8CA801aa036357d10F5Fd0ce08f\", // BNB\n          ],\n          coinGeckoTokenIds: {\n            \"0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4\":\n              \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91\":\n              \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n            \"0x7400793aAd94C8CA801aa036357d10F5Fd0ce08f\":\n              \"0x418d75f65a02b3d53b2418fb8e1fe493759c7605\",\n          },\n          inputAssetTokenId: \"0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4\",\n          outputAssetTokenId: \"0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91\",\n          network: NETWORK_ZKSYNC,\n        });\n      } else {\n        State.update({\n          assets: [\n            \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", // USDC\n            \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", // DAI\n            \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n            \"0xae7ab96520de3a18e5e111b5eaab095312d7fe84\",\n            \"0xf7B098298f7C69Fc14610bf71d5e02c60792894C\",\n          ],\n          inputAssetTokenId: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n          outputAssetTokenId: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n          network: NETWORK_ETH,\n        });\n      }\n\n      State.update({ initialized: true });\n    });\n} else {\n  State.update({ initialized: true });\n}\n\nconst css = `\n* {\n    font-family: 'Inter custom',sans-serif;\n}\n.swap-root{\n    min-height: 100%;\n}\n.swap-main-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100vh;\n    /*padding: 72px 0px 5rem;*/\n    -webkit-box-align: center;\n    align-items: center;\n}\n.swap-main-column{\n    padding: 68px 8px 0px;\n    max-width: 480px;\n    width: 100%;\n}\n.swap-page{\n    position: relative;\n    background: rgb(255, 255, 255);\n    border-radius: 16px;\n    border: 1px solid rgb(210, 217, 238);\n    padding: 8px;\n    z-index: 0;\n    transition: transform 250ms ease 0s;\n    -webkit-mask-image: -webkit-radial-gradient(white, black);\n}\n.asset-container-bottom {\n    border-bottom: 1px solid rgb(255, 255, 255);\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n    border-top-left-radius: 12px;\n    border-top-right-radius: 12px;\n}\n.asset-container-top {\n    border-radius: 12px;\n}\n.asset-container{\n    position: relative;\n    background-color: rgb(245, 246, 252);    \n    padding: 16px;\n    color: rgb(119, 128, 160);\n    font-size: 14px;\n    line-height: 20px;\n    font-weight: 500;\n}\n.asset-container::before {\n    box-sizing: border-box;\n    background-size: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    content: \"\";\n    border: 1px solid rgb(245, 246, 252);\n    color: rgb(119, 128, 160);\n    font-size: 14px;\n    line-height: 20px;\n    font-weight: 500;\n}\n.swap-currency-input {\n    display: flex;\n    flex-flow: column nowrap;\n    position: relative;\n    border-radius: 20px;\n    z-index: 1;\n    width: initial;\n    transition: height 1s ease 0s;\n    will-change: height;\n}\n.swap-currency-input-block {\n    min-height: 44px;\n    border-radius: 20px;\n    width: initial;\n}\n.swap-currency-input-top{\n    display: flex;\n    flex-flow: row nowrap;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n}\n.swap-currency-input-bottom{\n    -webkit-box-pack: end;\n    justify-content: flex-end;\n    min-height: 20px;\n    padding: 8px 0px 0px;\n    display: flex;\n    flex-flow: row nowrap;\n    -webkit-box-align: center;\n    align-items: center;\n    color: rgb(119, 128, 160);\n    font-size: 0.75rem;\n    line-height: 1rem;\n}\n.input-asset-amount {\n    filter: none;\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out 0s;\n    text-align: left;\n    font-size: 36px;\n    line-height: 44px;\n    font-variant: small-caps;\n    color: rgb(13, 17, 28);\n    width: 0px;\n    position: relative;\n    font-weight: 400;\n    outline: none;\n    border: none;\n    flex: 1 1 auto;\n    background-color: transparent;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: 0px;\n    appearance: textfield;\n}\n\n.input-asset-token{\n    -webkit-box-align: center;\n    align-items: center;\n    background-color: rgb(232, 236, 251);\n    opacity: 1;\n    box-shadow: none;\n    color: rgb(13, 17, 28);\n    cursor: pointer;\n    height: unset;\n    border-radius: 16px;\n    outline: none;\n    user-select: none;\n    border: none;\n    font-size: 24px;\n    font-weight: 400;\n    width: initial;\n    padding: 4px 8px 4px 4px;\n    gap: 8px;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    margin-left: 12px;\n    visibility: visible;\n    transform: perspective(1px) translateZ(0px);\n    text-decoration: none;\n    display: flex;\n    position: relative;\n    z-index: 1;\n    will-change: transform;\n    transition: transform 450ms ease 0s;\n    flex-wrap: nowrap;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    appearance: none;\n}\n.input-asset-token::before{\n    background-size: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    content: \"\";\n}\n.input-asset-token-menu{\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    width: 100%;\n    user-select: none;\n}\n.input-asset-token-name{\n    width: fit-content;\n    display: flex;\n    padding: 0px;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.input-asset-token-icon {\n    margin-right: 2px;\n    position: relative;\n    display: flex;\n}\n.input-asset-token-icon-img{\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: radial-gradient(white 60%, rgba(255, 255, 255, 0) calc(70% + 1px));\n    box-shadow: white 0px 0px 1px;\n}\n.input-asset-token-ticker {\n    margin: 0px 0.25rem;\n    font-size: 20px;\n    font-weight: 600;\n}\n.input-asset-token-expand {\n    margin: 0px 0.25rem 0px 8px;\n    height: 35%;\n}\n.input-asset-details-container{\n    -webkit-box-pack: end;\n    justify-content: flex-end;\n    min-height: 20px;\n    padding: 8px 0px 0px;\n    display: flex;\n    flex-flow: row nowrap;\n    -webkit-box-align: center;\n    align-items: center;\n    color: rgb(119, 128, 160);\n    font-size: 0.75rem;\n    line-height: 1rem;\n}\n.input-asset-details-row{\n   -webkit-box-pack: justify;\n    justify-content: space-between;\n    width: 100%;\n    display: flex;\n    padding: 0px;\n    -webkit-box-align: center;\n    align-items: center;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.input-asset-details-price-container{\n    filter: none;\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out 0s;\n}\n.input-asset-details-price{\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-weight: 400;\n    font-size: 14px;\n}\n.input-asset-details-balance-container{\n    height: 17px;\n    width: fit-content;\n    display: flex;\n    padding: 0px;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.input-asset-details-balance-text{\n    display: inline;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-weight: 400;\n    font-size: 14px;\n}\n.input-asset-details-balance-button{\n    background-color: transparent;\n    border: none;\n    color: rgb(251, 17, 142);\n    cursor: pointer;\n    font-size: 14px;\n    font-weight: 600;\n    opacity: 1;\n    padding: 4px 6px;\n    pointer-events: initial;\n    user-select: none;\n}\n.spacer-container{\n    border-radius: 12px;\n    height: 40px;\n    width: 40px;\n    position: relative;\n    margin: -18px auto;\n    background-color: rgb(232, 236, 251);\n    border: 4px solid rgb(255, 255, 255);\n    z-index: 2;\n}\n.spacer-block{\n    display: inline-flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n}\n.bottom-container{\n    display: grid;\n    grid-auto-rows: auto;\n    /*row-gap: 12px;*/\n}\n.swap-price-container{\n    padding: 0px;\n    border-top-left-radius: 0px;\n    border-top-right-radius: 0px;\n    border-bottom-left-radius: 12px;\n    border-bottom-right-radius: 12px;\n    background-color: rgb(245, 246, 252);    \n    color: rgb(119, 128, 160);\n    font-size: 14px;\n    line-height: 20px;\n    font-weight: 500; \n}\n.swap-price-container::before{\n    box-sizing: border-box;\n    background-size: 100%;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    content: \"\";\n    border-radius: inherit;\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgb(245, 246, 252);\n    border-image: initial;\n}\n.swap-price-block{\n    margin-top: 0px !important;\n    width: 100%;\n    -webkit-box-pack: center;\n    justify-content: center;\n    border-radius: inherit;\n    padding: 8px 12px;\n    min-height: 32px;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    min-height: 52px;\n}\n.swap-price-grid{\n    width: 100%;\n    /*margin-bottom: -8px;*/\n    display: grid;\n    grid-auto-rows: auto;\n    row-gap: 8px;\n}\n.swap-price-row{\n    padding: 0px;\n    -webkit-box-align: center;\n    align-items: center;\n    cursor: pointer;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    width: 100%;\n    display: flex;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.swap-price-details-container{\n    position: relative;\n    width: fit-content;\n    display: flex;\n    padding: 0px;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.swap-price-details-icon{\n    display: inline-block;\n    height: inherit;\n}\n.swap-price-details-svg{\n    margin-right: 4px;\n    color: rgb(152, 161, 192);\n}\n.swap-price-details-text{\n    filter: none;\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out 0s;\n}\n.swap-price-details-text-button{\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    grid-template-columns: 1fr auto;\n    gap: 0.25rem;\n    display: flex;\n    flex-flow: row wrap;\n    text-align: left;\n    padding: 8px 0px;\n    user-select: text;\n}\n.swap-price-details-rate{\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-weight: 400;\n    font-size: 14px;\n    color: rgb(13, 17, 28);\n}\n.swap-price-details-price{\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-weight: 500;\n    color: rgb(152, 161, 192);\n}\n.swap-gas-details-container{\n    width: fit-content;\n    display: flex;\n    padding: 0px;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.swap-gas-rate-container{\n    display: inline-block;\n    height: inherit;\n}\n.swap-gas-rate-wrapper\n    filter: none;\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out 0s;\n}\n.swap-gas-rate-block{\n    border-radius: 8px;\n    padding: 4px 6px;\n    height: 24px;\n    color: rgb(152, 161, 192);\n    background-color: rgb(245, 246, 252);\n    font-size: 14px;\n    font-weight: 500;\n    user-select: none;\n    width: fit-content;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: start;\n    justify-content: flex-start;\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n}\n.swap-gas-rate-svg{\n    margin-right: 4px;\n    height: 14px;\n}\n.swap-gas-rate-svg > * {\n  stroke: rgb(152, 161, 192);\n  }\n.swap-gas-rate-spacer{\n    /*width: 24px;*/\n    height: 24px;\n    transform: none;\n    transition: transform 0.1s linear 0s;\n}\n.swap-button-container{\n    margin-top: 12px;\n}\n.swap-button{\n    background-color: rgb(232, 236, 251);\n    color: rgb(119, 128, 160);    \n    box-shadow: none;\n    border: 1px solid transparent;\n    outline: none;    \n    pointer-events: none;\n    font-size: 20px;\n    font-weight: 600;\n    padding: 16px;\n    width: 100%;\n    text-align: center;\n    border-radius: 20px;\n    text-decoration: none;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    flex-wrap: nowrap;\n    -webkit-box-align: center;\n    align-items: center;\n    position: relative;\n    z-index: 1;\n    will-change: transform;\n    transition: transform 450ms ease 0s;\n    transform: perspective(1px) translateZ(0pxpx);\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;    \n    line-height: inherit;\n    /*\n    cursor: auto;\n    appearance: none;\n    user-select: none;\n    opacity: 0.5;*/\n}\n.swap-button-enabled {\n    background-color: rgb(251, 17, 142);\n    font-size: 20px;\n    padding: 16px;\n    color: rgb(245, 246, 252);\n    width: 100%;\n    font-weight: 500;\n    text-align: center;\n    border-radius: 20px;\n    outline: none;\n    border: 1px solid transparent;\n    text-decoration: none;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    flex-wrap: nowrap;\n    -webkit-box-align: center;\n    align-items: center;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    will-change: transform;\n    transition: transform 450ms ease 0s;\n    transform: perspective(1px) translateZ(0px);\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    appearance: none;\n    line-height: inherit;\n    user-select: none;\n}\n.swap-button-text{\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-size: 20px;\n    font-weight: 600;\n    user-select: none;\n}\n`;\n\nif (!css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${css}\n`,\n  });\n}\n\nconst Theme = state.theme;\n\nconst assetContainer = (\n  isInputAsset,\n  assetData,\n  amountName,\n  assetNameOnClick\n) => {\n  if (!assetData) return;\n  const useSpacer = !!isInputAsset;\n\n  const assetContainerClass = useSpacer\n    ? \"asset-container-top\"\n    : \"asset-container-bottom\";\n  return (\n    <>\n      <div\n        class={`${assetContainerClass} asset-container`}\n        r=\"sc-1es900k-1 hCwaNt\"\n      >\n        <div class=\"swap-currency-input\">\n          <div class=\"swap-currency-input-block\" r=\"sc-3zewi2-2 kbjgwk\">\n            <div class=\"swap-currency-input-top\" r=\"sc-3zewi2-4 eiTjnJ\">\n              <input\n                class=\"input-asset-amount\"\n                nputmode=\"decimal\"\n                autocomplete=\"off\"\n                autocorrect=\"off\"\n                type=\"text\"\n                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                placeholder=\"0\"\n                minlength=\"1\"\n                maxlength=\"79\"\n                spellcheck=\"false\"\n                value={state[amountName]}\n              />\n              <button class=\"input-asset-token\" onClick={assetNameOnClick}>\n                <span class=\"input-asset-token-menu\">\n                  <div class=\"input-asset-token-name\">\n                    <div class=\"input-asset-token-icon\">\n                      <img\n                        alt={`${assetData.metadata.name} logo`}\n                        src={assetData.metadata.icon}\n                        class=\"input-asset-token-icon-img\"\n                      />\n                    </div>\n                    <span class=\"input-asset-token-ticker\">\n                      {assetData.metadata.symbol}\n                    </span>\n                  </div>\n                  <svg\n                    width=\"12\"\n                    height=\"7\"\n                    viewBox=\"0 0 12 7\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    class=\"input-asset-token-expand\"\n                  >\n                    <path\n                      d=\"M0.97168 1L6.20532 6L11.439 1\"\n                      stroke=\"#AEAEAE\"\n                    ></path>\n                  </svg>\n                </span>\n              </button>\n            </div>\n            <div\n              class=\"input-asset-details-container\"\n              r=\"sc-3zewi2-5 sc-3zewi2-6 ckpAFE eTfjeW\"\n            >\n              <div\n                class=\"input-asset-details-row\"\n                r=\"sc-bczRLJ sc-nrd8cx-0 sc-nrd8cx-1 hJYFVB fhPvJh frnZMK\"\n              >\n                <div\n                  class=\"input-asset-details-price-container\"\n                  r=\"sc-u7b06n-1 eaouLI\"\n                >\n                  <div\n                    class=\"input-asset-details-price\"\n                    r=\"sc-sx9n2y-0 kandXm css-zhpkf8\"\n                  >\n                    <div>${assetData.price}</div>\n                  </div>\n                </div>\n                <div\n                  class=\"input-asset-details-balance-container\"\n                  r=\"sc-bczRLJ sc-nrd8cx-0 sc-nrd8cx-4 hJYFVB fhPvJh leSroW\"\n                >\n                  <div class=\"input-asset-details-balance-text\">\n                    Balance: {assetData.balance_hr}\n                  </div>\n                  {isInputAsset &&\n                    Number(state.inputAssetAmount) !==\n                      Number(assetData.balance_hr_full) && (\n                      <button\n                        class=\"input-asset-details-balance-button\"\n                        onClick={() =>\n                          State.update({\n                            [amountName]: assetData.balance_hr_full ?? 0,\n                          })\n                        }\n                      >\n                        Max\n                      </button>\n                    )}\n                </div>\n              </div>\n            </div>\n            {false && <div class=\"swap-currency-input-bottom\"></div>}\n          </div>\n        </div>\n      </div>\n      {useSpacer ? spacerContainer : <></>}\n    </>\n  );\n};\n\nconst rearrangeAssets = () => {\n  State.update({\n    inputAssetTokenId: state.outputAssetTokenId,\n    outputAssetTokenId: state.inputAssetTokenId,\n    inputAsset: undefined,\n    outputAsset: undefined,\n    inputAssetAmount: state.outputAssetAmount,\n    outputAssetAmount: state.inputAssetAmount,\n  });\n};\n\nconst spacerContainer = (\n  <div class=\"spacer-container\">\n    <div class=\"spacer-block\" onClick={rearrangeAssets}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#0D111C\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n        <polyline points=\"19 12 12 19 5 12\"></polyline>\n      </svg>\n    </div>\n  </div>\n);\n\nconst getRefTokenObject = (tokenId, assetData) => {\n  return {\n    id: tokenId,\n    decimals: assetData.metadata.decimals,\n    symbol: assetData.metadata.symbol,\n  };\n};\n\nconst callTx = () => {\n  console.log(\"C TX\");\n  const tx = [];\n\n  const nearDeposit = {\n    contractName: \"wrap.near\",\n    methodName: \"near_deposit\",\n    deposit: expandToken(state.inputAssetAmount, 24).toFixed(),\n    gas: expandToken(50, 12),\n  };\n  const nearWithdraw = {\n    contractName: \"wrap.near\",\n    methodName: \"near_withdraw\",\n    deposit: new Big(\"1\").toFixed(),\n    args: {\n      amount: expandToken(state.inputAssetAmount, 24).toFixed(),\n    },\n  };\n\n  if (state.estimate.pool === \"wrap\") {\n    if (state.tokenIn.id === \"NEAR\") {\n      tx.push(nearDeposit);\n    } else {\n      tx.push(nearWithdraw);\n    }\n\n    return Near.call(tx);\n  }\n\n  if (register === null) {\n    tx.push({\n      contractName:\n        state.outputAssetTokenId === \"NEAR\"\n          ? \"wrap.near\"\n          : state.outputAssetTokenId,\n      methodName: \"storage_deposit\",\n      deposit: expandToken(0.1, 24).toFixed(),\n      gas: expandToken(50, 12),\n      args: {\n        registration_only: true,\n        account_id: accountId,\n      },\n    });\n  }\n\n  if (state.inputAssetTokenId === \"NEAR\") {\n    tx.push(nearDeposit);\n  }\n\n  const minAmountOut = expandToken(\n    new Big(state.outputAssetAmount)\n      .mul(1 - Number(state.slippagetolerance) / 100)\n      .toFixed(state.outputAsset.metadata.decimals, 0),\n    state.outputAsset.metadata.decimals\n  ).toFixed();\n\n  tx.push({\n    methodName: \"ft_transfer_call\",\n    contractName:\n      state.inputAssetTokenId === \"NEAR\"\n        ? \"wrap.near\"\n        : state.inputAssetTokenId,\n    gas: expandToken(180, 12),\n    deposit: new Big(\"1\").toFixed(),\n    args: {\n      receiver_id: \"v2.ref-finance.near\",\n      amount: expandToken(\n        state.inputAssetAmount,\n        state.inputAsset.metadata.decimals\n      ).toFixed(0, 0),\n      msg: JSON.stringify({\n        referral_id: refReferralId,\n        actions: [\n          {\n            pool_id: Number(state.estimate.pool.id),\n            token_in:\n              state.inputAssetTokenId === \"NEAR\"\n                ? \"wrap.near\"\n                : state.inputAssetTokenId,\n            token_out:\n              state.outputAssetTokenId === \"NEAR\"\n                ? \"wrap.near\"\n                : state.outputAssetTokenId,\n            amount_in: expandToken(\n              state.inputAssetAmount,\n              state.inputAsset.metadata.decimals\n            ).toFixed(0, 0),\n            min_amount_out: minAmountOut,\n          },\n        ],\n      }),\n    },\n  });\n\n  if (state.outputAssetTokenId === \"NEAR\") {\n    tx.push({\n      contractName: \"wrap.near\",\n      methodName: \"near_withdraw\",\n      deposit: new Big(\"1\").toFixed(),\n      args: {\n        amount: minAmountOut,\n      },\n    });\n  }\n\n  Near.call(tx);\n};\n\nconst expandToken = (value, decimals) => {\n  return new Big(value).mul(new Big(10).pow(decimals));\n};\n\nconst canSwap =\n  Number(state.inputAsset.balance_hr_full) >= Number(state.inputAssetAmount) &&\n  Number(state.inputAssetAmount || 0) > 0 &&\n  Number(state.outputAssetAmount || 0) > 0;\n\nreturn (\n  <Theme>\n    {state.inputAsset && state.inputAssetTokenId && (\n      <Widget\n        src=\"zavodil.near/widget/AssetListModal\"\n        props={{\n          hidden: state.inputAssetModalHidden ?? true,\n          network: state.network,\n          assets: state.assets,\n          coinGeckoTokenIds: state.coinGeckoTokenIds,\n          selectedAssets: [state.inputAssetTokenId],\n          onClick: (tokenId) => {\n            State.update({\n              inputAssetModalHidden: true,\n              inputAssetTokenId: tokenId,\n              inputAsset: null,\n            });\n          },\n          onClose: () => State.update({ inputAssetModalHidden: true }),\n        }}\n      />\n    )}\n    {state.outputAsset && state.outputAssetTokenId && (\n      <Widget\n        src=\"zavodil.near/widget/AssetListModal\"\n        props={{\n          hidden: state.outputAssetModalHidden ?? true,\n          assets: state.assets,\n          coinGeckoTokenIds: state.coinGeckoTokenIds,\n          network: state.network,\n          selectedAssets: [state.outputAssetTokenId],\n          onClick: (tokenId) => {\n            State.update({\n              outputAssetModalHidden: true,\n              outputAssetTokenId: tokenId,\n              outputAsset: null,\n            });\n          },\n          onClose: () => State.update({ outputAssetModalHidden: true }),\n        }}\n      />\n    )}\n    {!state.inputAsset && state.inputAssetTokenId && (\n      <Widget\n        src=\"zavodil.near/widget/TokenData\"\n        props={{\n          tokenId: state.inputAssetTokenId,\n          coinGeckoTokenId: state?.coinGeckoTokenIds?.[state.inputAssetTokenId],\n          network: state.network,\n          onLoad: (inputAsset) => {\n            inputAsset.metadata.symbol =\n              inputAsset.metadata.symbol.toUpperCase();\n            State.update({ inputAsset });\n          },\n        }}\n      />\n    )}\n    {!state.outputAsset && state.outputAssetTokenId && (\n      <Widget\n        src=\"zavodil.near/widget/TokenData\"\n        props={{\n          tokenId: state.outputAssetTokenId,\n          coinGeckoTokenId:\n            state?.coinGeckoTokenIds?.[state.outputAssetTokenId],\n          network: state.network,\n          onLoad: (outputAsset) => {\n            outputAsset.metadata.symbol =\n              outputAsset.metadata.symbol.toUpperCase();\n            State.update({ outputAsset });\n          },\n        }}\n      />\n    )}\n\n    {state.network === NETWORK_NEAR &&\n      state.inputAsset &&\n      state.outputAsset && (\n        <Widget\n          src=\"weige.near/widget/ref-swap-getEstimate\"\n          props={{\n            loadRes: state.loadRes,\n            tokenIn: getRefTokenObject(\n              state.inputAssetTokenId,\n              state.inputAsset\n            ),\n            tokenOut: getRefTokenObject(\n              state.outputAssetTokenId,\n              state.outputAsset\n            ),\n            amountIn: state.inputAssetAmount ?? 0,\n            reloadPools: state.reloadPools,\n            setReloadPools: (value) =>\n              State.update({\n                reloadPools: value,\n              }),\n          }}\n        />\n      )}\n\n    {state.network === NETWORK_ETH && state.inputAsset && state.outputAsset && (\n      <>\n        <Widget\n          src=\"zavodil.near/widget/uni-v3-getEstimate\"\n          props={{\n            loadRes: state.loadRes,\n            tokenIn: state.inputAssetTokenId,\n            tokenOut: state.outputAssetTokenId,\n            tokenOutDecimals: state.outputAsset.metadata.decimals,\n            amountIn: expandToken(\n              state.inputAssetAmount,\n              state.inputAsset.metadata.decimals\n            ).toFixed(0),\n            reloadPools: state.reloadPools,\n            setReloadPools: (value) =>\n              State.update({\n                reloadPools: value,\n              }),\n          }}\n        />\n      </>\n    )}\n\n    {state.network === NETWORK_TODO &&\n      state.inputAsset &&\n      state.outputAsset /* TODO */ && (\n        <>\n          <Widget\n            src=\"zavodil.near/widget/uni-v3-getEstimate\"\n            props={{\n              loadRes: state.loadRes,\n              tokenIn: state.inputAssetTokenId,\n              tokenOut: state.outputAssetTokenId,\n              tokenOutDecimals: state.outputAsset.metadata.decimals,\n              amountIn: expandToken(\n                state.inputAssetAmount,\n                state.inputAsset.metadata.decimals\n              ).toFixed(0),\n              reloadPools: state.reloadPools,\n              setReloadPools: (value) =>\n                State.update({\n                  reloadPools: value,\n                }),\n            }}\n          />\n        </>\n      )}\n\n    <div class=\"swap-root\">\n      <div class=\"swap-main-container\">\n        <div class=\"swap-main-column\">\n          <div class=\"swap-page\">\n            <div class=\"top-container\">\n              {assetContainer(\n                true,\n                state.inputAsset,\n                \"inputAssetAmount\",\n                () => {\n                  State.update({ inputAssetModalHidden: false });\n                }\n              )}\n            </div>\n            <div class=\"bottom-container\" r=\"sc-1kykgp9-2 kqyzGE\">\n              <div>\n                {assetContainer(\n                  fasle,\n                  state.outputAsset,\n                  \"outputAssetAmount\",\n                  () => {\n                    State.update({ outputAssetModalHidden: false });\n                  }\n                )}\n                <div\n                  class=\"swap-price-container\"\n                  r=\"sc-1es900k-1 sc-1es900k-3 hCwaNt ezjjnS\"\n                >\n                  <div\n                    class=\"swap-price-block\"\n                    r=\"sc-bczRLJ sc-nrd8cx-0 sc-1pv2uhy-0 hJYFVB fhPvJh GBxDd\"\n                  >\n                    <div class=\"swap-price-grid\" r=\"sc-1kykgp9-2 hinRyL\">\n                      <div\n                        class=\"swap-price-row\"\n                        r=\"sc-bczRLJ sc-nrd8cx-0 sc-nrd8cx-1 sc-1pv2uhy-3 hJYFVB fhPvJh frnZMK bjShQM\"\n                      >\n                        <div\n                          class=\"swap-price-details-container\"\n                          r=\"sc-bczRLJ sc-nrd8cx-0 sc-nrd8cx-4 hJYFVB fhPvJh leSroW\"\n                        >\n                          <span>\n                            <div class=\"swap-price-details-icon\">\n                              <div>\n                                <svg\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                  width=\"24\"\n                                  height=\"24\"\n                                  viewBox=\"0 0 24 24\"\n                                  fill=\"none\"\n                                  stroke=\"#98A1C0\"\n                                  stroke-width=\"2\"\n                                  stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\"\n                                  class=\"swap-price-details-svg\"\n                                >\n                                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                                  <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n                                  <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n                                </svg>\n                              </div>\n                            </div>\n                          </span>\n                          <div class=\"swap-price-details-text\">\n                            <button class=\"swap-price-details-text-button\">\n                              <div class=\"swap-price-details-rate\">\n                                {Number(state.inputAssetAmount) === 0\n                                  ? \" \"\n                                  : `1 ${\n                                      state.inputAsset.metadata.symbol\n                                    } \u2248 ${new Big(state.outputAssetAmount ?? 0)\n                                      .div(state.inputAssetAmount ?? 1)\n                                      .toFixed(4, 0)}\n                                        ${state.outputAsset.metadata.symbol}`}\n                              </div>\n                              <div class=\"swap-price-details-price\">\n                                {Number(state.inputAssetAmount) === 0 ||\n                                Number(state?.outputAsset?.price) === 0\n                                  ? \"\"\n                                  : `($${new Big(state.outputAssetAmount ?? 0)\n                                      .div(state.inputAssetAmount ?? 1)\n                                      .times(state?.outputAsset?.price ?? 1)\n                                      .toFixed(4)})`}\n                              </div>\n                            </button>\n                          </div>\n                        </div>\n                        <div class=\"swap-gas-details-container\">\n                          <div class=\"swap-gas-rate-container\">\n                            <div>\n                              <div\n                                class=\"swap-gas-rate-wrapper\"\n                                r=\"sc-u7b06n-1 eaouLI\"\n                              >\n                                {state.network != NETWORK_TODO && (\n                                  <div class=\"swap-gas-rate-block\">\n                                    <svg\n                                      width=\"16\"\n                                      height=\"16\"\n                                      viewBox=\"0 0 16 16\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                      class=\"swap-gas-rate-svg\"\n                                    >\n                                      <path\n                                        d=\"M10.0047 9.26921H10.2714C11.0078 9.26921 11.6047 9.86617 11.6047 10.6025V12.1359C11.6047 12.7987 12.142 13.3359 12.8047 13.3359C13.4675 13.3359 14.0047 12.7995 14.0047 12.1367V5.22059C14.0047 4.86697 13.7758 4.56227 13.5258 4.31223L10.6714 1.33594M4.00472 2.00254H8.00472C8.7411 2.00254 9.33805 2.59949 9.33805 3.33587V14.0015H2.67139V3.33587C2.67139 2.59949 3.26834 2.00254 4.00472 2.00254ZM14.0047 5.33587C14.0047 6.07225 13.4078 6.66921 12.6714 6.66921C11.935 6.66921 11.3381 6.07225 11.3381 5.33587C11.3381 4.59949 11.935 4.00254 12.6714 4.00254C13.4078 4.00254 14.0047 4.59949 14.0047 5.33587Z\"\n                                        stroke=\"white\"\n                                      ></path>\n                                      <line\n                                        x1=\"4\"\n                                        y1=\"9.99414\"\n                                        x2=\"8\"\n                                        y2=\"9.99414\"\n                                        stroke=\"white\"\n                                      ></line>\n                                      <line\n                                        x1=\"4\"\n                                        y1=\"11.9941\"\n                                        x2=\"8\"\n                                        y2=\"11.9941\"\n                                        stroke=\"white\"\n                                      ></line>\n                                      <path\n                                        d=\"M4 8.16113H8\"\n                                        stroke=\"white\"\n                                      ></path>\n                                    </svg>\n                                    $5.45\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"swap-gas-rate-spacer\" r=\"svg\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"swap-button-container\">\n                <button\n                  class={canSwap ? \"swap-button-enabled\" : \"swap-button\"}\n                  onClick={() => {\n                    if (canSwap) {\n                      callTx();\n                    }\n                  }}\n                >\n                  <div class=\"swap-button-text\" r=\"css-yjtn9t\">\n                    Swap\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/swap"}