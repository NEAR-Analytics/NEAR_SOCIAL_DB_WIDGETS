{"tx_hash": "4HZAS9T2WjPwQYnh6i5dsjfEM6BcPwAJMoUEme1yivVD", "action_id_social": "FL4JtcDpnxrR4JuGi5NfCwzPLLjLcwkXsm6b6skCYEhA-1-widget", "block_id": 89673078, "block_timestamp": "2023-04-15 23:39:06.454", "signer_id": "27fe67b045fd51210271e15c0386c13c149ebcb5b58d11cf9bc4b7f15361f3f3", "widget_name": "widgetimage", "source_code": "/*\n\nINSTRUCTIONS\n\nWe're using a tag property to filter widgets on the page.\n\n--> Edit your default tag from \"guide\" to anything!\n\nClick `Render Preview` to check if any widgets have your tag.\n\nHere are a few common tags you can use: #dev, #page, #app\n\nUnder \"All Tutorials\" you should see widgets with the tag.\n\n*/\n\nconst tag = props.tag ?? \"page\";\n\n/*\n\nReview the following code if you are interested in tag filtering.\n\n- maps over widget data to create an array of keys,\n(consisting of accountId, widgetName, and blockHeight)\n- calls processData function to sort widgets by blockHeight\n- maps over sorted widget data to create a list of items to render\n- renderTag / renderItem functions are used for each tag / widget\n\nNo need to make any changes here.\n\n*/\n\nlet keys = `${accountId ?? \"*\"}/widget/*`;\n\nif (tag) {\n  const taggedWidgets = Social.keys(\n    `${accountId ?? \"*\"}/widget/*/metadata/tags/${tag}`,\n    \"final\"\n  );\n\n  if (taggedWidgets === null) {\n    return \"Loading tags\";\n  }\n\n  keys = Object.entries(taggedWidgets)\n    .map((kv) => Object.keys(kv[1].widget).map((w) => `${kv[0]}/widget/${w}`))\n    .flat();\n\n  if (!keys.length) {\n    return `No widgets found with tag #${tag}`;\n  }\n}\n\nconst data = Social.keys(keys, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data === null) {\n  return \"Loading...\";\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].widget).map((kv) => ({\n        accountId,\n        widgetName: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderTag = (tag, tagBadge) => (\n  <a href={makeLink(accountId, tag)}>{tagBadge}</a>\n);\n\nconst renderItem = (a) => {\n  return (\n    <a\n      href={`#/${a.accountId}/widget/${a.widgetName}`}\n      className=\"text-decoration-none\"\n      key={JSON.stringify(a)}\n    >\n      <Widget\n        src=\"mob.near/widget/WidgetImage\"\n        props={{\n          tooltip: true,\n          accountId: a.accountId,\n          widgetName: a.widgetName,\n        }}\n      />\n    </a>\n  );\n};\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\n/*\n\nHere are a few styled components for you.\n\nThese allow using CSS in your JavaScript!\n\nLearn more: https://styled-components.com\n\n*/\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-bottom: 48px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst H1 = styled.h1`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 39px;\n  color: #11181c;\n  margin: 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181c;\n  }\n\n  &[href] {\n    display: inline-flex;\n    gap: 0.25rem;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst Button = styled.a`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #FBFCFD;\n  border: 1px solid #D7DBDF;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181C !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ECEDEE;\n    text-decoration: none;\n    outline: none;\n  }\n`;\n\nconst Items = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n`;\n\nconst Item = styled.div``;\n\n/*\n\nLast, but certainly not least, is returning the display.\n\nFeel free to make any edits you like!\n\nbOS CHALLENGE INSTRUCTIONS\n\n1. Edit default tag and explore how to filter items on a page.\n2. Update <Widget src=\" ... \" /> to reference another widget.\n3. Curate featured components by adjusting src and templates.\n\nDon't forget to save!\n\n*/\n\nreturn (\n  <Wrapper>\n    <Header>\n      <Widget src=\"hack.near/widget/Customization\" />\n      <h3>All Tutorials</h3>\n      <Text>\n        Check This Out!!!: <b>#{tag}</b>\n      </Text>\n      <div className=\"d-flex flex-wrap gap-1 my-3\">\n        {state.allItems\n          .slice(0, props.limit ? parseInt(props.limit) : 999)\n          .map(renderItem)}\n      </div>\n    </Header>\n\n    <Items>\n      <Item>\n        <Widget\n          src=\"adminalpha.near/widget/ComponentCard\"\n          props={{ src: \"neversettleinterstellar.near/widget/GmIdHeader\" }}\n        />\n      </Item>\n      <Item>\n        <Widget\n          src=\"adminalpha.near/widget/ComponentCard\"\n          props={{ src: \"components-mailchain.near/widget/MailchainWidget\" }}\n        />\n      </Item>\n      <Item>\n        <Widget\n          src=\"adminalpha.near/widget/ComponentCard\"\n          props={{ src: \"mintbase.near/widget/nft-marketplace\" }}\n        />\n      </Item>\n      <Item>\n        <Widget\n          src=\"adminalpha.near/widget/ComponentCard\"\n          props={{ src: \"mintbase.near/widget/CollectionSelector\" }}\n        />\n      </Item>\n    </Items>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/27fe67b045fd51210271e15c0386c13c149ebcb5b58d11cf9bc4b7f15361f3f3/widget/widgetimage"}