{"tx_hash": "5Y5y5gt4bocNvyN5aPMjfyf4hHEFgmmaLEQ81fw5ivXx", "action_id_social": "CirNwWAfmp72vBVrZfB2ycHHXhLAwMPdSCmZi1pdjxWB-0-widget", "block_id": 94303005, "block_timestamp": "2023-06-16T10:06:26.860Z", "signer_id": "nearweekapp.near", "widget_name": "Heroes.ClaimData", "source_code": "State.init({\n  message: \"\",\n  timeUnit: null,\n  deadline: null,\n});\n\nconst { contract, whitelistContract, kyc_config } = props;\n\n//get_tokens\nconst tokens = Near.view(contract, \"get_tokens\", {\n  from_index: 0,\n});\n\nconst kycRequired =\n  typeof kyc_config !== \"string\" && \"KycRequired\" in kyc_config;\n\nfunction mapTokenMetadata(tokens) {\n  let tokenMetaData = {};\n  if (tokens.length > 0) {\n    for (const token of tokens) {\n      const metadataResponse = Near.view(token[0], \"ft_metadata\", {});\n      if (metadataResponse) {\n        tokenMetaData[token[0]] = {\n          symbol: metadataResponse.symbol,\n          decimals: metadataResponse.decimals,\n        };\n      }\n    }\n  }\n  return tokenMetaData;\n}\n\nconst isUserWhitelisted =\n  Near.view(props.whitelistContract, \"is_whitelisted\", {\n    account_id: context.accountId,\n  }) ?? false;\n\nconst tokenMap = mapTokenMetadata(tokens);\n\nconst tokenMap = {\n  \"a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.factory.bridge.near\": {\n    symbol: \"USDC.e\",\n    decimals: 6,\n  },\n  \"dac17f958d2ee523a2206206994597c13d831ec7.factory.bridge.near\": {\n    symbol: \"USDT.e\",\n    decimals: 6,\n  },\n  \"6b175474e89094c44da98b954eedeac495271d0f.factory.bridge.near\": {\n    symbol: \"DAI\",\n    decimals: 18,\n  },\n  \"wrap.near\": {\n    symbol: \"DAI\",\n    decimals: 24,\n  },\n};\n\nfunction convertToNanoseconds(duration, unit) {\n  const mapUnits = {\n    months: 24 * 60 * 30,\n    weeks: 24 * 60 * 7,\n    days: 24 * 60,\n    hours: 1 * 60,\n  };\n  return (Number(duration) * mapUnits[unit] * 60 * 1000 * 1000000).toString();\n}\n\nfunction dayToEpoch(days) {\n  const now = Date.now();\n  const xDay = Number(days) * 24 * 60 * 60 * 1000;\n  const nextDay = now + xDay;\n  const epochSeconds = Math.floor(nextDay * 1000000);\n\n  return epochSeconds.toString();\n}\n\nconst matchToken = (token) => tokenMap[token].symbol;\nconst convertAmount = (amount, token) =>\n  amount / Math.pow(10, tokenMap[token].decimals);\nconst amountToReadable = (amount) =>\n  amount\n    .toFixed(0)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nconst isDisabled =\n  (kycRequired && !isUserWhitelisted) ||\n  props.bountyClaimed ||\n  !context.accountId ||\n  !state.message ||\n  !state.deadline\n    ? \" disabled\"\n    : \"\";\n\nconst onChangeMessage = (message) => {\n  State.update({\n    message,\n  });\n};\n\nconst ShieldIcon = () => {\n  return (\n    <svg\n      width=\"36\"\n      height=\"36\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth={1.5}\n      stroke=\"#198754\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z\"\n      />\n    </svg>\n  );\n};\n\nconst TimeCommitment = () => {\n  const onChangeTimeUnit = (timeUnit) => {\n    State.update({\n      timeUnit,\n    });\n  };\n\n  const onChangeDeadline = (deadline) => {\n    if (/^\\+?([1-9]\\d*)$/.test(deadline)) {\n      State.update({\n        deadline,\n      });\n    } else {\n      State.update({\n        deadline: null,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <span class=\"\">Set time commitments</span>\n      <div class=\"input-group mb-3\">\n        <select\n          id=\"units\"\n          class=\"form-select\"\n          aria-label=\"Default select example\"\n          onChange={(e) => onChangeTimeUnit(e.target.value)}\n        >\n          <option value=\"\">-Unit-</option>\n          <option value=\"hours\">Hours</option>\n          <option value=\"days\">Days</option>\n          <option value=\"weeks\">Weeks</option>\n          <option value=\"months\">Months</option>\n        </select>\n        <input\n          class=\"form-control\"\n          min=\"1\"\n          type=\"number\"\n          disabled={!state.timeUnit}\n          onChange={(e) => onChangeDeadline(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst handleClick = () => {\n  Near.call([\n    {\n      contractName: contract,\n      methodName: \"bounty_claim\",\n      args: {\n        id: props.bountyId,\n        token: props.token,\n        deadline: convertToNanoseconds(state.deadline, state.timeUnit),\n        description: state.message,\n      },\n      gas: 300000000000000,\n      deposit: 1000000000000000000000000,\n    },\n  ]);\n};\n\nreturn (\n  <div css=\"min-width: 300px; max-width: 400px;\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"d-flex align-items-baseline\">\n          <span class=\"fw-bold\">\n            {props.token in tokenMap && matchToken(props.token)}{\" \"}\n          </span>\n          {props.token in tokenMap ? (\n            <span class=\"d-flex fw-bold fs-2 align-items-center\">\n              ${amountToReadable(convertAmount(props.amount, props.token))}\n              {kycRequired && <ShieldIcon />}\n            </span>\n          ) : (\n            \"0\"\n          )}\n        </div>\n        <h6 class=\"card-title\">{props.bountyTitle}</h6>\n        <p class=\"card-text\"></p>\n        {kycRequired && !isUserWhitelisted && !props.bountyCompleted ? (\n          <div>\n            {/*<span class=\"badge text-bg-dark p-2\">\n              <span class=\"fs-5\">KYC requied</span>\n            </span>*/}\n            <hr />\n            <div class=\"blockquote-footer figcaption\">\n              KYC is required, please head to\n              <a href=\"https://heroes.build\" target=\"_blank\">\n                https://heroes.build/\n              </a>{\" \"}\n              to pass KYC before claiming this bounty\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {!props.bountyCompleted ? (\n          <>\n            <div class=\"input-group mb-3\">\n              <span class=\"input-group-text\" id=\"message\">\n                -\n              </span>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                onChange={(e) => onChangeMessage(e.target.value)}\n                placeholder=\"Enter short message\"\n                aria-label=\"message\"\n                aria-describedby=\"message\"\n              />\n            </div>\n            <TimeCommitment />\n            <a\n              class={\"btn bg-warning float-end \" + isDisabled}\n              onClick={handleClick}\n            >\n              Claim\n            </a>\n            <p class=\"font-monospace small align-text-top\">\n              Bounty ID: {props.bountyId}\n            </p>\n          </>\n        ) : (\n          <>\n            <span class=\"badge text-bg-success p-2\">\n              <span class=\"fs-5\">Completed</span>\n            </span>{\" \"}\n            <hr />\n            <div class=\"blockquote-footer figcaption\">\n              Bounty completed and can't be claimed any more, check details on\n              <a href=\"https://heroes.build/bounties\" target=\"_blank\">\n                https://heroes.build/bounties\n              </a>{\" \"}\n            </div>\n          </>\n        )}\n      </div>\n      {!context.accountId && !props.bountyCompleted ? (\n        <div class=\"m-2\">\n          <p class=\"blockquote-footer text-end\">\n            Sign-in NEAR wallet to be able to interact\n          </p>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/Heroes.ClaimData", "__row_index": 1}