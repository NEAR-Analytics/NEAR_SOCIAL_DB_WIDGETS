{"tx_hash": "9Cif9MUiXRzZfL9xQjApQnHS9wwpT67kKzzaDckeSuha", "action_id_social": "DdCuGkBrfqmPAo9iSyE33ECTpXUz15ogekjpanrQeANY-0-widget", "block_id": 88885328, "block_timestamp": "2023-04-05 15:17:18.233", "signer_id": "nearweekapp.near", "widget_name": "NearWeekNews", "source_code": null, "metadata": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/NearWeekNews", "branch.draft.": "const data = fetch(\n  \"https://nearweek.com/api/dao-news?populate=deep&sort=createdAt:desc&pagination[pageSize]=5\",\n  {\n    //subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n      Authorization:\n        \"Bearer 15699f0723aa9fe9f655b1a94e450552476c08807f67b525b5a3c8011eecc8aee6d45923443620f17815b897858be058cd7bd89ddf23a28aabaecb178e7ebc55d380293beeb51a8ce87b40e1518ce4708e4d51a06b115f27fa64ab5cbee5a3511cec785d7ae6a155ecd05ac8196aadae3e9b8e9401b8df8d8b69904f7364f925\",\n    },\n  }\n);\n\nconst Wrapper = styled.div`\n  display: grid;\n  gap: 24px;\n`;\n\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181C;\n  margin: 0;\n`;\n\nconst Items = styled.ul`\n  list-style: disc;\n  padding-left: 16px;\n  margin: 0;\n  color: #687076;\n`;\n\nconst Item = styled.li`\n  width: 100%;\n  margin-bottom: 12px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  > * {\n    min-width: 0\n  }\n`;\n\nconst Text = styled.span`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n\n  &[href] {\n    &:hover,\n    &:focus {\n      outline: none;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ButtonLink = styled.a`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #FBFCFD;\n  border: 1px solid #D7DBDF;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181C !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ECEDEE;\n    text-decoration: none;\n    outline: none;\n  }\n`;\n\nconsole.log(data);\nconst news = data.body.data;\nconst nwSite = \"https://nearweek.com\";\n\nfunction dateToDays(date) {\n  const timeAgo = (diffSec) =>\n    diffSec < 60000\n      ? `${(diffSec / 1000) | 0}s`\n      : diffSec < 3600000\n      ? `${(diffSec / 60000) | 0}m`\n      : diffSec < 86400000\n      ? `${(diffSec / 3600000) | 0}h`\n      : `${(diffSec / 86400000) | 0}d`;\n\n  var d = new Date(date);\n  return timeAgo(Date.now() - d.getTime());\n}\n\nreturn (\n  <div>\n    {data !== null ? (\n      <Wrapper>\n        <H2>News</H2>\n        {news.map((item, i) => (\n          <>\n            <div class=\"d-flex\">\n              <img\n                class=\"rounded\"\n                width=\"60\"\n                height=\"60\"\n                src={nwSite + item.Thumbnail.url}\n                alt={news.Thumbnail.alternativeText}\n              />\n              <div class=\"align-text-bottom d-flex flex-wrap m-2\">\n                <Text as=\"a\" href={item.sourceUrl} target=\"_blank\" bold>\n                  {item.Title}\n                </Text>\n                <div class=\"clearfix\">\n                  <br />\n                  <Text small>{dateToDays(item.createdAt)} ago</Text>\n                </div>\n              </div>\n            </div>\n          </>\n        ))}\n\n        <ButtonLink href=\"https://nearweek.com\" target=\"_blank\">\n          View All News\n        </ButtonLink>\n      </Wrapper>\n    ) : (\n      <div>Loading ...</div>\n    )}\n  </div>\n);\n", "branch.draft.metadata.description": "News Widget from NEARWEEK", "branch.draft.metadata.image.ipfs_cid": "bafkreifvtjnch7bi3ismu76i3nslbv7aysjeec56ndfdr3hvummxa7mgaq", "branch.draft.metadata.linktree.website": "nearweek.com", "branch.draft.metadata.name": "NEARWEEK NEWS", "branch.draft.metadata.tags.app": "", "branch.draft.metadata.tags.coming-soon": "", "branch.draft.metadata.tags.homepage": "", "branch.draft.metadata.tags.widget": ""}