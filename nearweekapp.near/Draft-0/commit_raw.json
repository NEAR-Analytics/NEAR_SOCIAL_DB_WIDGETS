{"tx_hash": "7bL6vWMf4iET71HgEj6Zu7L51EyAKK69iGQEsQSY8pJS", "action_id_social": "5SSAyTjC6PKiwKHj87ujBpgSNHjYq4M13Hzt79RMkQ4Q-0-widget", "block_id": 87439367, "block_timestamp": "2023-03-16 18:03:12.065", "signer_id": "nearweekapp.near", "widget_name": "Draft-0", "source_code": "let accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nconst convertAmount = (amount, decimals) => {\n  const [whole, fractional] = amount.toString().split(\".\");\n  const wholePart = new BN(whole).mul(new BN(\"10\").pow(new BN(decimals)));\n  if (fractional === undefined) {\n    return wholePart.toString();\n  }\n  const fractionalPart = new BN(fractional).mul(\n    new BN(\"10\").pow(new BN(decimals - fractional.length))\n  );\n  return wholePart.add(fractionalPart).toString();\n};\n\nState.init({\n  recipient: accountId,\n  contract_name: \"nearweek-news-contribution.sputnik-dao.near\",\n});\n\nconst onChangeGas = (gas) => {\n  State.update({\n    gas,\n  });\n};\n\nconst onChangeAmount = (amount) => {\n  State.update({\n    amount,\n  });\n};\n\nconst onChangeContract = (contract_name) => {\n  State.update({\n    contract_name,\n  });\n};\n\nconst onChangeRecipient = (recipient) => {\n  State.update({\n    recipient,\n  });\n};\n\nconst onChangeDeposit = (deposit) => {\n  State.update({\n    deposit,\n  });\n};\n\nconst onChangeDescription = (description) => {\n  State.update({\n    description,\n  });\n};\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: state.contract_name,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: state.description.trim(),\n          kind: {\n            Transfer: {\n              token_id: \"\",\n              receiver_id: state.recipient,\n              amount: convertAmount(state.amount.toString(), 24) ?? 0,\n            },\n          },\n        },\n      },\n      gas: state.gas ?? 200000000000000,\n      deposit: state.deposit ?? 100000000000000000000000,\n    },\n  ]);\n};\n\nreturn (\n  <div className=\"mb-3\">\n    <h2>Create Payout Proposal</h2>\n    <div className=\" mb-2\">\n      DAO:\n      <input\n        type=\"text\"\n        placeholder={state.contract_name}\n        onChange={(e) => onChangeContract(e.target.value)}\n      />\n    </div>\n    <div className=\"mb-2\">\n      Description\n      <textarea\n        value={state.description}\n        type=\"text\"\n        rows={6}\n        className=\"form-control\"\n        placeholder=\"describe your proposal\"\n        onChange={(e) => onChangeDescription(e.target.value)}\n      />\n    </div>\n    <div className=\" mb-2\">\n      Payout Amount\n      <input\n        type=\"text\"\n        placeholder=\"0\"\n        onChange={(e) => onChangeAmount(e.target.value)}\n      />\n    </div>\n    <div className=\" mb-2\">\n      Payout Recipient\n      <input\n        type=\"text\"\n        placeholder={accountId}\n        onChange={(e) => onChangeRecipient(e.target.value)}\n      />\n    </div>\n    <div className=\" mb-2\">\n      Deposit\n      <input\n        type=\"text\"\n        placeholder=\"0.1\"\n        onChange={(e) => onChangeDeposit(e.target.value * 1e24)}\n      />\n      <p>\n        * You will pay a deposit of \u24c30.1 to add this proposal!, the deposit will\n        be refunded if proposal rejected or expired.\n      </p>\n    </div>\n    <button className=\"btn btn-primary mt-3\" onClick={handleProposal}>\n      Submit\n    </button>\n  </div>\n);\n", "branch": NaN, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/Draft-0", "metadata.description": "Payout proposals tool designed for the NEARWEEK agents, but can also be used by anyone else to create AstroDAO Payout proposal.", "metadata.image.ipfs_cid": "bafkreigkuqhorefkyey3jwat3sliqsl3hroksjmlx42fextbqikx3i6si4", "metadata.linktree.website": "nearweek.com", "metadata.name": "AstroDAO Easy Payout Proposal", "metadata.tags.image": NaN, "metadata.tags.near-analytics": NaN, "metadata.tags.near-social": NaN, "metadata.tags.post": NaN, "metadata.image.nft.contractId": NaN, "metadata.image.nft.tokenId": NaN, "metadata": NaN, "metadata.tags.canto-test": NaN, "metadata.image.url": NaN, "metadata.tags.awesome": NaN, "metadata.tags.font": NaN, "metadata.tags.icons": NaN, "metadata.tags.graph": NaN, "metadata.tags.list": NaN, "metadata.tags.rank": NaN, "metadata.tags.app": NaN, "branch.draft.": NaN, "metadata.tags.ethdenver2023": NaN, "metadata.tags.hackathon": NaN, "metadata.tags.widget": "", "metadata.tags.astrodao": "", "metadata.tags.dao": "", "metadata.tags.meta-pool": NaN, "metadata.tags.staking": NaN, "metadata.tags.validators": NaN, "metadata.tags.vote": NaN}