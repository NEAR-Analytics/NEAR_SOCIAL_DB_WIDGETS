{"tx_hash": "H6L6k3ahM4PnPmTYFQb2kV1KvhnUoHFe977aCxxbbnPZ", "action_id_social": "vYJZa7EoVv9K3jHLsY2tvwDJcXxH4JzdZNnsXg4A239-0-widget", "block_id": 85813793, "block_timestamp": "2023-02-22 19:45:19.842", "signer_id": "gov.near", "widget_name": "BuilderProfiles", "source_code": "const accountId = props.accountId;\nconst tag = props.tag;\n\nconst makeLink = (accountId, tag) => {\n  const args = [];\n  if (accountId) {\n    args.push(`accountId=${accountId}`);\n  }\n  if (tag) {\n    args.push(`tag=${tag}`);\n  }\n  return `#/gov.near/widget/BuilderProfiles${\n    args.length > 0 ? \"?\" : \"\"\n  }${args.join(\"&\")}`;\n};\n\nconst render = (content) => {\n  return (\n    <div className=\"px-2 mx-auto\">\n      {(accountId || tag) && (\n        <div className=\"mb-2\">\n          Filter:\n          {accountId && (\n            <a\n              href={makeLink(undefined, tag)}\n              className=\"btn btn-outline-primary\"\n            >\n              <Widget\n                src=\"bozon.near/widget/Developer\"\n                props={{ accountId, link: false }}\n              />\n              <i className=\"bi bi-x-square\"></i>\n            </a>\n          )}\n          {tag && (\n            <a\n              href={makeLink(accountId, undefined)}\n              className=\"btn btn-outline-primary\"\n            >\n              <span className=\"badge text-bg-secondary\">#{tag}</span>\n              <i className=\"bi bi-x-square\"></i>\n            </a>\n          )}\n        </div>\n      )}\n      {content}\n    </div>\n  );\n};\n\nlet keys = `${accountId ?? \"*\"}/profile/tags/*`;\n\nif (tag) {\n  const taggedProfiles = Social.keys(\n    `${accountId ?? \"*\"}/profile/tags/${tag}`,\n    \"final\"\n  );\n\n  if (taggedProfiles === null) {\n    return render(\"Loading tags\");\n  }\n\n  keys = Object.entries(taggedProfiles)\n    .map((kv) => Object.keys(kv[1].profile).map((b) => `${kv[0]}/profile/${b}`))\n    .flat();\n}\n\nconst data = Social.keys(keys, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data === null) {\n  return render(\"Loading profiles\");\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].profile).map((kv) => ({\n        accountId,\n        name: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderTag = (tag, tagBadge) => (\n  <a href={makeLink(accountId, tag)}>{tagBadge}</a>\n);\n\nconst renderItem = (a) => {\n  return (\n    <a\n      href={`#/bozon.near/widget/Developer?accountId=${a.accountId}`}\n      className=\"text-decoration-none\"\n      key={JSON.stringify(a)}\n    >\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId: a.accountId,\n          name: a.name,\n          blockHeight: a.blockHeight,\n          renderTag,\n          filterLink: makeLink(a.accountId, tag),\n        }}\n      />\n    </a>\n  );\n};\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\nreturn render(\n  <div className=\"d-flex flex-wrap gap-1 my-3\">\n    {state.allItems\n      .slice(0, props.limit ? parseInt(props.limit) : 999)\n      .map(renderItem)}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gov.near/widget/BuilderProfiles"}