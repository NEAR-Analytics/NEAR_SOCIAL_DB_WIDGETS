{"tx_hash": "FQDStxbtsCCPzzzpa5wZLKotWKvNMzj1UpkA9RCCmJHs", "action_id_social": "HJ75aGxeagBX54Rfm1Hzps5kSTPYiW36eygHepFVhv5g-0-widget", "block_id": 81310393, "block_timestamp": "2022-12-23 21:21:34.952", "signer_id": "gov.near", "widget_name": "Task", "source_code": "const ownerId = \"gov.near\";\n\nconst task_id = props.task.id ? parseInt(props.task.id) : 0;\nconst task = props.task ?? Near.view(ownerId, \"get_task\", { task_id });\n\nfunction readableDate(timestamp) {\n  var a = new Date(timestamp);\n  return a.toDateString() + \" \" + a.toLocaleTimeString();\n}\n\nconst timestamp = readableDate(\n  task.timestamp ? task.timestamp / 1000000 : Date.now()\n);\n\nconst onLike = () => {\n  Near.call(ownerId, \"like\", {\n    post_type: \"Task\",\n    post_id: task_id,\n  });\n};\n\nconst submissionsUnordered =\n  Near.view(ownerId, \"get_submissions\", {\n    task_id,\n  }) ?? [];\nconst submissions = props.isPreview ? [] : submissionsUnordered.reverse();\n\nconst commentsUnordered =\n  Near.view(ownerId, \"get_comments\", {\n    post_type: \"Task\",\n    post_id: task_id,\n  }) ?? [];\nconst comments = props.isPreview ? [] : commentsUnordered.reverse();\n\nconst containsLike = props.isPreview\n  ? false\n  : task.likes.find((l) => l.author_id == context.accountId);\nconst likeBtnClass = containsLike ? \"bi bi-heart-fill\" : \"bi bi-heart\";\nconst containsComment = props.isPreview\n  ? false\n  : comments.find((c) => c.author_id == context.accountId);\nconst commentBtnClass = containsComment ? \"bi bi-chat-fill\" : \"bi bi-chat\";\n\nconst buttonsFooter = props.isPreview ? null : (\n  <div class=\"row\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <a\n          class=\"card-link\"\n          data-bs-toggle=\"collapse\"\n          href={`#collapseSubmissionEditor${task_id}`}\n          role=\"button\"\n          aria-expanded=\"false\"\n          aria-controls={`collapseSubmissionEditor${task_id}`}\n        >\n          <div class=\"bi bi-rocket\"> Submit</div>\n        </a>\n      </div>\n      <div class=\"col-2\" onClick={onLike}>\n        <a class={likeBtnClass} role=\"button\">\n          {\" \"}\n          Like ({task.likes.length ?? 0})\n        </a>\n      </div>\n      <div class=\"col-3\">\n        <a\n          class=\"card-link\"\n          data-bs-toggle=\"collapse\"\n          href={`#collapseCommentEditorTask${task_id}`}\n          role=\"button\"\n          aria-expanded=\"false\"\n          aria-controls={`collapseCommentEditorTask${task_id}`}\n        >\n          <i class={commentBtnClass}> </i> Comment ({comments.length ?? 0})\n        </a>\n      </div>\n    </div>\n    <div class=\"collapse\" id={`collapseSubmissionEditor${task_id}`}>\n      <Widget src={`${ownerId}/widget/SubmissionEditor`} props={{ task_id }} />\n    </div>\n    <div class=\"collapse\" id={`collapseCommentEditorTask${task_id}`}>\n      <Widget\n        src={`${ownerId}/widget/CommentEditor`}\n        props={{ comment: { post_type: \"Task\", post_id: task_id } }}\n      />\n    </div>\n  </div>\n);\n\nconst submissionsList = props.isPreview ? null : (\n  <div class=\"row\">\n    <div>\n      {submissions\n        ? submissions.map((submission) => {\n            return (\n              <Widget\n                src={`${ownerId}/widget/Submission`}\n                props={{ submission }}\n              />\n            );\n          })\n        : \"\"}\n    </div>\n  </div>\n);\n\nconst commentsList =\n  props.isPreview || comments.length == 0 ? null : (\n    <div class=\"row\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <a\n            class=\"card-link\"\n            data-bs-toggle=\"collapse\"\n            href={`#collapseCommentsListTask${task_id}`}\n            role=\"button\"\n            aria-expanded=\"false\"\n            aria-controls={`collapseCommentsListTask${task_id}`}\n          >\n            <i class=\"bi bi-arrows-angle-expand\"> </i> Expand Comments\n          </a>\n        </div>\n      </div>\n      <div class=\"collapse\" id={`collapseCommentsListTask${task_id}`}>\n        {comments\n          ? comments.map((comment) => {\n              return (\n                <Widget src={`${ownerId}/widget/Comment`} props={{ comment }} />\n              );\n            })\n          : \"\"}\n      </div>\n    </div>\n  );\n\nconst Card = styled.div`\n  &:hover {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n\nreturn (\n  <Card className=\"card my-2 border-primary\">\n    <div className=\"card-header\">\n      <small class=\"text-muted\">\n        <div class=\"row justify-content-between\">\n          <div class=\"col-4\">\n            <Widget\n              src={`gov.near/widget/ProjectLine`}\n              props={{ accountId: task.author_id }}\n            />\n          </div>\n          <div class=\"col-4\">\n            <div class=\"d-flex justify-content-end\">{timestamp}</div>\n          </div>\n        </div>\n      </small>\n    </div>\n    <div className=\"card-body\">\n      <h5 class=\"card-title\">\n        <div className=\"row justify-content-between\">\n          <div class=\"col-9\">\n            <i class=\"bi bi-lightbulb\"> </i>Task: {task.name}\n          </div>\n        </div>\n      </h5>\n      <Markdown class=\"card-text\" text={task.description}></Markdown>\n      {buttonsFooter}\n      {submissionsList}\n      {commentsList}\n    </div>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gov.near/widget/Task"}