{"tx_hash": "DZA8wxeDRA3SQTKKVit6pWUavmw8KbK8Ki8Ejw7foyPV", "action_id_social": "GdXhKd11Y9bYYedXGbrsfJhq6Jt4oN9bxjJAox2wiRuK-0-widget", "block_id": 94132486, "block_timestamp": "2023-06-13T19:34:33.287Z", "signer_id": "cristianvlz.near", "widget_name": "Colledge", "source_code": "// FETCH LIDO ABI\n\nconst lidoContract = \"0xae7ab96520de3a18e5e111b5eaab095312d7fe84\";\nconst tokenDecimals = 18;\n\nconst lidoAbi = fetch(\n  \"https://raw.githubusercontent.com/lidofinance/lido-subgraph/master/abis/Lido.json\"\n);\nif (!lidoAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(lidoAbi.body);\n\n// FETCH LIDO STAKING APR\n\nif (state.lidoArp === undefined) {\n  const apr = fetch(\n    \"https://api.allorigins.win/get?url=https://stake.lido.fi/api/sma-steth-apr\"\n  );\n  if (!apr) return;\n  State.update({ lidoArp: JSON.parse(apr?.body?.contents) ?? \"...\" });\n}\n\n// HELPER FUNCTIONS\n\nconst getStakedBalance = (receiver) => {\n  const encodedData = iface.encodeFunctionData(\"balanceOf\", [receiver]);\n\n  return Ethers.provider()\n    .call({\n      to: lidoContract,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = iface.decodeFunctionResult(\n        \"balanceOf\",\n        rawBalance\n      );\n\n      return Big(receiverBalanceHex.toString())\n        .div(Big(10).pow(tokenDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    });\n};\n\nconst submitEthers = (strEther, _referral) => {\n  if (!strEther) {\n    return console.log(\"Amount is missing\");\n  }\n  const erc20 = new ethers.Contract(\n    lidoContract,\n    lidoAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  let amount = ethers.utils.parseUnits(strEther, tokenDecimals).toHexString();\n\n  erc20.submit(lidoContract, { value: amount }).then((transactionHash) => {\n    console.log(\"transactionHash is \" + transactionHash);\n  });\n};\n\n// DETECT SENDER\n\nif (state.sender === undefined) {\n  State.update({ sender: Ethers.send(\"eth_requestAccounts\", [])[0] });\n}\n\nif (!state.sender) return \"Please login first\";\n\n// FETCH SENDER BALANCE\n\nif (state.balance === undefined) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// FETCH SENDER STETH BALANCE\n\nif (state.stakedBalance === undefined) {\n  getStakedBalance(state.sender).then((stakedBalance) => {\n    State.update({ stakedBalance });\n  });\n}\n\n// FETCH TX COST\n\nif (state.txCost === undefined) {\n  const gasEstimate = ethers.BigNumber.from(1875000);\n  const gasPrice = ethers.BigNumber.from(1500000000);\n\n  const gasCostInWei = gasEstimate.mul(gasPrice);\n  const gasCostInEth = ethers.utils.formatEther(gasCostInWei);\n\n  let responseGql = fetch(\n    \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `{\n          bundle(id: \"1\" ) {\n            ethPrice\n          }\n        }`,\n      }),\n    }\n  );\n\n  if (!responseGql) return \"\";\n\n  const ethPriceInUsd = responseGql.body.data.bundle.ethPrice;\n\n  const txCost = Number(gasCostInEth) * Number(ethPriceInUsd);\n\n  State.update({ txCost: `$${txCost.toFixed(2)}` });\n}\n\n// FETCH CSS\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n\n    .customSubHeader {\n      text-align: center;\n      padding: 4px;\n    }\n\n    .img-fluid  {\n      width: 30%    \n    }\n\n    .CentrarContenido {\n      text-align: center;\n      padding: 20px;\n  }\n\n  button.LidoStakeFormSubmitContainer {\n    background-color: black!important;\n  }\n\n  a.LidoStakeFormSubmitContainer {\n    background-color: black!important;\n    width: 100% !important;\n    margin-top;10px !important;\n  }\n\n  .LidoForm {\n    background: #3c3c3b; \n     }\n`,\n  });\n}\nconst Theme = state.theme;\n\n// OUTPUT UI\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 1) {\n  return (\n    <Theme>\n      <div class=\"LidoContainer\">\n        <div class=\"CentrarContenido\">\n          <img\n            class=\"img-fluid\"\n            src={\n              \"https://www.colledge.social/pluginfile.php/1/theme_edumy/footerlogo1/1681760484/LogoFondoOscuro.svg\"\n            }\n          />\n        </div>\n        <div class=\"Header\">Cambiar a red Ethereum Mainnet</div>\n        <div class=\"SubHeader\"></div>\n      </div>\n    </Theme>\n  );\n}\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"CentrarContenido\">\n        <img\n          class=\"img-fluid\"\n          src={\n            \"https://www.colledge.social/pluginfile.php/1/theme_edumy/footerlogo1/1681760484/LogoFondoOscuro.svg\"\n          }\n        />\n      </div>\n      <div class=\"Header\">Generar certificados</div>\n      <div class=\"SubHeader\"></div>\n\n      <div\n        class=\"LidoForm\"\n        style={{\n          backgroundImage: `url(\"https://raw.githubusercontent.com/somos-colledge/website-colledge/32782c96838fe7ed0f2bc7ecf27ae2630de9f013/Ilustracion_Instruct.svg\")`,\n          backgroundSize: \"300px 100px\",\n          backgroundPosition: \"140% 42%\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <div class=\"LidoFormTopContainer\">\n          <div class=\"LidoFormTopContainerLeft\">\n            <div class=\"LidoFormTopContainerLeftContent1\">\n              <div class=\"LidoFormTopContainerLeftContent1Container\">\n                <span>Usuario</span>\n                <div class=\"LidoFormTopContainerLeftContent1Circle\" />\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerLeftContent2\">\n              <div class=\"LidoFormTopContainerLeftContent1\">\n                <div class=\"LidoFormTopContainerLeftContent1Text\">\n                  <span>\n                    {state.sender.substring(0, 6)}...\n                    {state.sender.substring(\n                      state.sender.length - 4,\n                      state.sender.length\n                    )}{\" \"}\n                  </span>\n                </div>\n              </div>{\" \"}\n            </div>\n          </div>\n        </div>\n        <div class=\"LidoSplitter\" />\n      </div>\n      <div class=\"LidoStakeForm\">\n        <div class=\"LidoStakeFormInputContainer\">\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={state.strEther}\n              onChange={(e) => State.update({ strEther: e.target.value })}\n              placeholder=\"Email\"\n            />\n          </span>\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={state.strNombre}\n              onChange={(e) => State.update({ strNombre: e.target.value })}\n              placeholder=\"Nombre\"\n            />\n          </span>\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              type=\"date\"\n              value={state.strFecha}\n              onChange={(e) => State.update({ strFecha: e.target.value })}\n              placeholder=\"Fecha\"\n            />\n          </span>\n        </div>\n\n        <div class=\"LidoStakeForm\">\n          <div class=\"LidoStakeFormInputContainer\">\n            <span class=\"LidoStakeFormInputContainerSpan2\">\n              <input\n                class=\"LidoStakeFormInputContainerSpan2Input\"\n                value={state.strNombreCurso}\n                onChange={(e) =>\n                  State.update({ strNombreCurso: e.target.value })\n                }\n                placeholder=\"Nombre de Curso\"\n              />\n            </span>\n            <span class=\"LidoStakeFormInputContainerSpan2\">\n              <input\n                class=\"LidoStakeFormInputContainerSpan2Input\"\n                value={state.strNombreAlumno}\n                onChange={(e) =>\n                  State.update({ strNombreAlumno: e.target.value })\n                }\n                placeholder=\"Nombre de Alumno\"\n              />\n            </span>\n          </div>\n        </div>\n\n        <div class=\"LidoFooterContainer\">\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Correo: </div>\n            <div class=\"LidoFooterRawRight\">\n              {state.strEther ?? \"correo\"}{\" \"}\n            </div>{\" \"}\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Nombre del certificado:</div>\n            <div class=\"LidoFooterRawRight\">{state.strNombre ?? \"nombre\"} </div>\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Fecha del certificado:</div>\n            <div class=\"LidoFooterRawRight\">{state.strFecha ?? \"fecha\"} </div>\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Nombre del curso:</div>\n            <div class=\"LidoFooterRawRight\">\n              {state.strNombreCurso ?? \"nombreCurso\"}{\" \"}\n            </div>\n          </div>\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">Nombre del alumno:</div>\n            <div class=\"LidoFooterRawRight\">\n              {state.strNombreAlumno ?? \"nombreAlumno\"}{\" \"}\n            </div>\n          </div>\n        </div>\n        <a\n          href=\"https://www.colledge.social/mod/page/view.php?id=2429&uuid=1889-2-e3879b-c1992l\"\n          target=\"_blank\"\n        >\n          {\" \"}\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => submitEthers(state.strEther, state.sender)}\n          >\n            <span>Solicitar certificado</span>{\" \"}\n          </button>\n        </a>\n      </div>\n    </div>\n\n    <div class=\"LidoContainer\" style={{ marginTop: 70 }}>\n      <div\n        class=\"LidoForm\"\n        style={{\n          backgroundImage: `url(\"https://raw.githubusercontent.com/somos-colledge/website-colledge/c357a6b67a8bef546399d72ef6a3b430d2075ff2/Academia.svg\")`,\n          backgroundSize: \"300px 100px\",\n          backgroundPosition: \"127% 50%\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <div class=\"LidoFormTopContainer\">\n          <div class=\"LidoFormTopContainerLeft\">\n            <div class=\"LidoFormTopContainerLeftContent1\">\n              <div class=\"LidoFormTopContainerLeftContent1Container\">\n                <span>Usuario</span>\n                <div class=\"LidoFormTopContainerLeftContent1Circle\" />\n              </div>\n            </div>\n            <div class=\"LidoFormTopContainerLeftContent2\">\n              <div class=\"LidoFormTopContainerLeftContent1\">\n                <div class=\"LidoFormTopContainerLeftContent1Text\">\n                  <span>\n                    {state.sender.substring(0, 6)}...\n                    {state.sender.substring(\n                      state.sender.length - 4,\n                      state.sender.length\n                    )}{\" \"}\n                  </span>\n                </div>\n              </div>{\" \"}\n            </div>\n          </div>\n        </div>\n        <div class=\"LidoSplitter\" />\n      </div>\n      <div class=\"LidoStakeForm\">\n        <div class=\"LidoStakeFormInputContainer\">\n          <span class=\"LidoStakeFormInputContainerSpan2\">\n            <input\n              class=\"LidoStakeFormInputContainerSpan2Input\"\n              value={state.strUrl}\n              onChange={(e) => State.update({ strUrl: e.target.value })}\n              placeholder=\"Url del certificado\"\n            />\n          </span>\n        </div>\n\n        <div class=\"LidoFooterContainer\">\n          <div class=\"LidoFooterRaw\">\n            <div class=\"LidoFooterRawLeft\">URL: </div>\n            <div class=\"LidoFooterRawRight\">{state.strUrl ?? \"url\"} </div>{\" \"}\n          </div>\n        </div>\n        <a\n          href=\"https://www.colledge.social/mod/page/view.php?id=2429&uuid=1889-2-e3879b-c1992l\"\n          target=\"_blank\"\n        >\n          {\" \"}\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => submitEthers(state.strUrl, state.sender)}\n          >\n            <span>Validar certificado</span>{\" \"}\n          </button>\n        </a>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": {"tags": {"ethdenver2023": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/cristianvlz.near/widget/Colledge", "__row_index": 2}